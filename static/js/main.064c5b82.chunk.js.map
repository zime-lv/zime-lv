{"version":3,"sources":["translations/i18n.js","components/language-selector/LanguageSelector.js","utils/config.js","components/card/Card.js","components/dropzone/Dropzone.js","components/accountRegistration/AccountRegistration.js","components/transfer/Balance.js","components/transfer/Transfer.js","components/transfer/TransferToSelf.js","components/transfer/TransferToPerson.js","components/transfer/TransferToBusiness.js","components/summary/Summary.js","utils/sockets.js","pages/authorized/Authorized.js","components/loading/Loading.js","index.js"],"names":["i18n","use","Backend","initReactI18next","init","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","id","className","data-width","onChange","e","lng","target","value","changeLanguage","language","code","map","el","key","on","valueToSelect","document","getElementById","config","args","defaults","title","navigation","undefined","footer","onNavigationClick","props","Object","assign","Footer","Header","Title","Nav","variant","defaultActiveKey","navigationdefaultActiveKey","item","Item","Link","href","link","onClick","style","color","name","Body","React","Children","children","child","cloneElement","styles","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","activeStyle","acceptStyle","rejectStyle","data","accountPhotoPath","useState","setFiles","onDrop","useCallback","acceptedFiles","console","log","sendData","req","uuid","room","userRoom","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useMemo","Figure","Image","width","height","alt","src","Caption","t","useTranslation","schema","yup","personalID","required","terms","validationSchema","onSubmit","initialValues","handleSubmit","handleChange","values","handleBlur","errors","touched","isValid","Form","noValidate","Group","controlId","Label","Text","i18nKey","Dropzone","Control","as","custom","InputGroup","Prepend","type","placeholder","aria-describedby","isInvalid","Feedback","Check","label","feedback","Button","userData","format","available","acc_curr","acc_cred","acc_save","fontSize","onTypeChange","transferCard","setTransferCard","useEffect","TransferToSelf","TransferToPerson","TransferToBusiness","fromAccount","toAccount","amount","validateForm","toPersonalID","rows","businessID","purposeID","number","currency","Intl","NumberFormat","notation","minimumFractionDigits","AccountRegistration","Balance","Transfer","transferType","onTransferTypeChange","dev","uri","ENDPOINT","window","location","hostname","socket","openSocket","connect","secure","reconnect","length","emit","useSocket","onDataReceived","SuranadiraSocket","connected","setConnected","tmrConnected","setTmrConnected","options","setLanguage","setTransferType","setUserData","setAccountPhotoPath","status","Math","random","joinRoom","tmr","setInterval","clearInterval","authorizedData","JSON","parse","to","LanguageSelector","exact","path","component","Summary","ReactDOM","render","fallback"],"mappings":"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","file":"static/js/main.064c5b82.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-xhr-backend\";\r\n// import LanguageDetector from \"i18next-browser-languagedetector\";\r\n// not like to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  // .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: \"lv\",\r\n    debug: false,\r\n    ns: [\"LogIn\", \"SignUp\"],\r\n    defaultNS: \"LogIn\",\r\n    interpolation: {\r\n      escapeValue: false // not needed for react as it escapes by default\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: \"languageChanged loaded\",\r\n      bindStore: \"added removed\",\r\n      nsMode: \"default\"\r\n    }\r\n  });\r\n\r\nexport default i18n;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport i18n from \"../../translations/i18n\";\r\n// import { withNamespaces } from \"react-i18next\";\r\n\r\nexport default () => {\r\n  const changeLanguage = lng => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n  const languages = [\r\n    { id: 1, language: \"Latviešu\", code: \"lv\" },\r\n    { id: 2, language: \"English\", code: \"en\" }\r\n  ];\r\n  const handleLanguageSelect = e => {\r\n    changeLanguage(e.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <select\r\n        id=\"languageSelector\"\r\n        className=\"selectpicker\"\r\n        data-width=\"fit\"\r\n        onChange={handleLanguageSelect}\r\n      >\r\n        {languages.map(el => (\r\n          <option key={el.id} value={el.code}>\r\n            {el.language}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction selectElement(id, valueToSelect) {\r\n  let element = document.getElementById(id);\r\n  element.value = valueToSelect;\r\n}\r\n\r\n// catch the event and make changes accordingly\r\ni18n.on(\"languageChanged\", function(lng) {\r\n  selectElement(\"languageSelector\", lng);\r\n});\r\n","const dev = {\r\n  uri: {\r\n    ENDPOINT: \"http://localhost:9000\"\r\n    // ENDPOINT: \"http://192.168.2.100:9000\"\r\n  }\r\n};\r\n\r\nconst staging = {\r\n  uri: {\r\n    ENDPOINT: \"https://zimecms2.suranadira.com\"\r\n  }\r\n};\r\n\r\nconst prod = {\r\n  uri: {\r\n    ENDPOINT: \"https://zimecms.suranadira.com\"\r\n  }\r\n};\r\n\r\nconst hostname = window && window.location && window.location.hostname;\r\n\r\nlet config;\r\nswitch (hostname) {\r\n  case \"localhost\":\r\n    config = dev;\r\n    break;\r\n  case \"dev2.suranadira.com\":\r\n    config = staging;\r\n    break;\r\n  case \"chat.suranadira.com\":\r\n    config = prod;\r\n    break;\r\n  default:\r\n    config = dev;\r\n    break;\r\n}\r\n\r\nexport default {\r\n  ...config\r\n};\r\n","import \"./Card.css\";\r\nimport React, { cloneElement } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n// import { Container, Row, Col, Button } from \"react-bootstrap\";\r\n// import Button from \"react-bootstrap/Button\";\r\n\r\nexport default args => {\r\n  let defaults = {\r\n    title: \"Untitled\",\r\n    navigation: undefined,\r\n    footer: undefined,\r\n    onNavigationClick: () => {}\r\n  };\r\n  let props = Object.assign(defaults, args);\r\n\r\n  let key = 0;\r\n\r\n  let footer = props.footer ? <Card.Footer>{props.footer}</Card.Footer> : \"\";\r\n\r\n  return (\r\n    <Card>\r\n      {/* <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" /> */}\r\n      <Card.Header>\r\n        <Card.Title>{props.title}</Card.Title>\r\n        <Nav variant=\"tabs\" defaultActiveKey={props.navigationdefaultActiveKey}>\r\n          {props.navigation &&\r\n            props.navigation.map((item, key) => (\r\n              <Nav.Item key={key}>\r\n                <Nav.Link\r\n                  href={item.link}\r\n                  onClick={() => props.onNavigationClick(item.link)}\r\n                  style={{ color: \"black\" }}\r\n                >\r\n                  {item.name}\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            ))}\r\n        </Nav>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        {React.Children.map(args.children, child => {\r\n          if (typeof child !== \"object\") {\r\n            return child;\r\n          } else {\r\n            key++;\r\n            return cloneElement(child, {\r\n              styles: null,\r\n              key: key\r\n            });\r\n          }\r\n        })}\r\n      </Card.Body>\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useCallback, useMemo, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nimport { Figure } from \"react-bootstrap\";\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  padding: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fafafa\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\"\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\"\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\"\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\"\r\n};\r\n\r\nexport default data => {\r\n  data = data.data;\r\n  let accountPhotoPath = data.accountPhotoPath;\r\n  if (accountPhotoPath !== null) {\r\n    baseStyle.padding = 0;\r\n    baseStyle.borderStyle = \"none\"; // \"solid\";\r\n  }\r\n  const [setFiles] = useState(null);\r\n  // const [thisData] = useState(data);\r\n  // console.log(\"THIS DATA =====\");\r\n\r\n  // console.log(data);\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    // Do something with the files\r\n    console.log(acceptedFiles);\r\n    setFiles(acceptedFiles);\r\n    // console.log(data.language);\r\n    data.sendData({\r\n      req: \"upload file\",\r\n      uuid: \"STA\",\r\n      room: data.userRoom,\r\n      data: acceptedFiles\r\n    });\r\n    // data.sendData(\"test\");\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject\r\n  } = useDropzone({\r\n    accept: \"image/*\",\r\n    onDrop\r\n  });\r\n\r\n  // const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n  // const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n  //   onDrop\r\n  // });\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {})\r\n    }),\r\n    [isDragActive, isDragAccept, isDragReject]\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (files === null) return;\r\n  //   // data.sendData(\"upload file\", \"STA\", data.userRoom, files);\r\n  //   // console.log(\"THIS DATA =====\");\r\n  //   // console.log(data);\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [files]);\r\n\r\n  if (accountPhotoPath === null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div {...getRootProps({ style })}>\r\n          <input {...getInputProps()} />\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    accountPhotoPath = \"http://localhost:9000/\" + accountPhotoPath;\r\n    return (\r\n      <div className=\"container\">\r\n        <div {...getRootProps({ style })}>\r\n          <input {...getInputProps()} />\r\n          {/*<img src={accountPhotoPath} width=\"100%\" />*/}\r\n          <Figure>\r\n            <Figure.Image\r\n              width={171}\r\n              height={180}\r\n              alt=\"171x180\"\r\n              src={accountPhotoPath}\r\n            />\r\n            <Figure.Caption>\r\n              Nulla vitae elit libero, a pharetra augue mollis interdum.\r\n            </Figure.Caption>\r\n          </Figure>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport Card from \"../card\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Dropzone from \"../dropzone\";\r\n\r\nexport default data => {\r\n  data = data.data;\r\n  const { t } = useTranslation(\"AccountRegistration\");\r\n\r\n  const schema = yup.object({\r\n    personalID: yup.string().required(),\r\n    terms: yup.bool().required()\r\n  });\r\n\r\n  return (\r\n    <Card title={t(\"Register account\")}>\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={console.log}\r\n        initialValues={{\r\n          personalID: \"\"\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isValid,\r\n          errors\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"validationCustom01\">\r\n              <Form.Label>{t(\"Photo ID\")}</Form.Label>\r\n              <Form.Text>\r\n                <Trans i18nKey=\"SignUp:Photo of me holding my passport\">\r\n                  Photo of me holding my passport. The personal identification\r\n                  number must be clearly legible.\r\n                </Trans>\r\n              </Form.Text>\r\n              <br />\r\n\r\n              <Dropzone data={data} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n              <Form.Label>{t(\"Country\")}</Form.Label>\r\n              <Form.Control as=\"select\" custom>\r\n                <option>Latvija</option>\r\n                <option>Deutschland</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"validationFormikUsername\">\r\n              <Form.Label>{t(\"Personal ID\")}</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder={t(\"XXXXXX-XXXXX\")}\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"personalID\"\r\n                  value={values.personalID}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.personalID}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.personalID}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Check\r\n                required\r\n                name=\"terms\"\r\n                label=\"Agree to terms and conditions\"\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.terms}\r\n                feedback={errors.terms}\r\n                id=\"validationFormik0\"\r\n              />\r\n            </Form.Group>\r\n            <Button type=\"submit\">{t(\"Register\")}</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Card from \"../card\";\r\n\r\nexport default args => {\r\n  // let data = args.data;\r\n  const userData = args.data.userData;\r\n  let format = args.format;\r\n  const { t } = useTranslation(\"Transfer\");\r\n  // let footer = <small className=\"text-muted\">Last updated 3 mins ago</small>;\r\n\r\n  const available =\r\n    userData !== null\r\n      ? format(userData.acc_curr + userData.acc_cred + userData.acc_save)\r\n      : null;\r\n  let acc_curr = userData !== null ? format(userData.acc_curr) : null;\r\n  let acc_cred = userData !== null ? format(userData.acc_cred) : null;\r\n  let acc_save = userData !== null ? format(userData.acc_save) : null;\r\n  return (\r\n    <Card title={t(\"Balance\")}>\r\n      <Form noValidate>\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Available\")}</Form.Label>\r\n          <Form.Text>\r\n            <div style={{ fontSize: \"3em\" }}>{available}</div>\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              <div style={{}}>{t(\"Current account\")}</div>\r\n              <span id=\"acc_curr\" className=\"badge badge-light badge-pill\">\r\n                {acc_curr}\r\n              </span>\r\n            </li>\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              <div style={{}}>{t(\"Credit account\")}</div>\r\n              <span id=\"acc_cred\" className=\"badge badge-light badge-pill\">\r\n                {acc_cred}\r\n              </span>\r\n            </li>\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              <div style={{}}>{t(\"Savings account\")}</div>\r\n              <span id=\"acc_save\" className=\"badge badge-light badge-pill\">\r\n                {acc_save}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </Form.Group>\r\n        <Button type=\"submit\">{t(\"Transfer\")}</Button>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TransferToSelf, TransferToPerson, TransferToBusiness } from \"./index\";\r\n\r\nconst navigation = [\r\n  {\r\n    name: \"U2S\",\r\n    link: \"#u2s\"\r\n  },\r\n  {\r\n    name: \"U2U\",\r\n    link: \"#u2u\"\r\n  },\r\n  {\r\n    name: \"U2B\",\r\n    link: \"#u2b\"\r\n  }\r\n];\r\n\r\nexport default args => {\r\n  const data = args.data;\r\n  const format = args.format;\r\n  const type = args.type;\r\n  const onTypeChange = args.onTypeChange;\r\n\r\n  const [transferCard, setTransferCard] = useState(null);\r\n\r\n  const onNavigationClick = id => {\r\n    onTypeChange(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (type === null) return;\r\n\r\n    // setTransferCard()\r\n    switch (type) {\r\n      case \"#u2s\": // User to self\r\n        setTransferCard(\r\n          <TransferToSelf\r\n            data={data}\r\n            format={format}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      case \"#u2u\": // User to user\r\n        setTransferCard(\r\n          <TransferToPerson\r\n            data={data}\r\n            format={format}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      case \"#u2b\": // User to business\r\n        setTransferCard(\r\n          <TransferToBusiness\r\n            data={data}\r\n            format={format}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [data, format, navigation, type]);\r\n\r\n  return <>{transferCard}</>;\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\n// import { withFormik } from \"formik\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\n\r\nexport default args => {\r\n  // let data = args.data;\r\n  const format = args.format;\r\n  const navigation = args.navigation;\r\n  const navigationdefaultActiveKey = args.navigationdefaultActiveKey;\r\n  let userData = args.data.userData;\r\n  const onNavigationClick = args.onNavigationClick;\r\n  const { t } = useTranslation(\"Transfer\");\r\n\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toAccount: yup.string().required(t(\"To Account is required\")),\r\n    amount: yup.string().required(t(\"Amount is required\"))\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      title={t(\"Transfer\")}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={console.log}\r\n        initialValues={{\r\n          fromAccount: \"\",\r\n          toAccount: \"\",\r\n          amount: \"\"\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isValid,\r\n          validateForm,\r\n          errors\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"validationFromAccount\">\r\n              <Form.Label>{t(\"From account\")}</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                custom\r\n                name=\"fromAccount\"\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n              >\r\n                <option value=\"\">{t(\"Choose...\")}</option>\r\n                <option value=\"1\">\r\n                  {t(\"Current account\")}\r\n                  {acc_curr}\r\n                </option>\r\n                <option value=\"2\">\r\n                  {t(\"Credit account\")}\r\n                  {acc_cred}\r\n                </option>\r\n                <option value=\"3\">\r\n                  {t(\"Savings account\")}\r\n                  {acc_save}\r\n                </option>\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.fromAccount}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"validationToAccount\">\r\n              <Form.Label>{t(\"To account\")}</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                custom\r\n                name=\"toAccount\"\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.toAccount && touched.toAccount}\r\n              >\r\n                <option value=\"\">{t(\"Choose...\")}</option>\r\n                <option value=\"1\">\r\n                  {t(\"Current account\")}\r\n                  {acc_curr}\r\n                </option>\r\n                <option value=\"2\">\r\n                  {t(\"Credit account\")}\r\n                  {acc_cred}\r\n                </option>\r\n                <option value=\"3\">\r\n                  {t(\"Savings account\")}\r\n                  {acc_save}\r\n                </option>\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.toAccount}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"validationFormikAmount\">\r\n              <Form.Label>{t(\"Amount\")}</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">Z</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  // type=\"number\"\r\n                  placeholder={format(0, \"\")}\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"amount\"\r\n                  value={values.amount}\r\n                  onChange={handleChange}\r\n                  // onBlur={handleChange}\r\n                  isInvalid={!!errors.amount && touched.amount}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.amount}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            <Button type=\"submit\">{t(\"Transfer\")}</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\n\r\nexport default args => {\r\n  // let data = args.data;\r\n  let format = args.format;\r\n  let navigation = args.navigation;\r\n  let navigationdefaultActiveKey = args.navigationdefaultActiveKey;\r\n  let userData = args.data.userData;\r\n  let onNavigationClick = args.onNavigationClick;\r\n  const { t } = useTranslation(\"Transfer\");\r\n\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toPersonalID: yup\r\n      .string()\r\n      .required(t(\"Recipients Personal ID is required\")),\r\n    amount: yup.string().required(t(\"Amount is required\"))\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      title={t(\"Transfer to account\")}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={console.log}\r\n        initialValues={{\r\n          fromAccount: \"\",\r\n          toPersonalID: \"\",\r\n          amount: \"\"\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isValid,\r\n          errors\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"validationFromAccount\">\r\n              <Form.Label>{t(\"From account\")}</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                custom\r\n                name=\"fromAccount\"\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n              >\r\n                <option value=\"\">{t(\"Choose...\")}</option>\r\n                <option value=\"1\">\r\n                  {t(\"Current account\")}\r\n                  {acc_curr}\r\n                </option>\r\n                <option value=\"2\">\r\n                  {t(\"Credit account\")}\r\n                  {acc_cred}\r\n                </option>\r\n                <option value=\"3\">\r\n                  {t(\"Savings account\")}\r\n                  {acc_save}\r\n                </option>\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.fromAccount}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"validationFormikToPersonalID\">\r\n              <Form.Label>{t(\"To Personal ID\")}</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"XXXXXX-XXXXX\"\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"toPersonalID\"\r\n                  value={values.toPersonalID}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.toPersonalID && touched.toPersonalID}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.toPersonalID}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>{t(\"Description\")}</Form.Label>\r\n              <Form.Control as=\"textarea\" rows=\"3\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"validationFormikAmount\">\r\n              <Form.Label>{t(\"Amount\")}</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">Z</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  // type=\"number\"\r\n                  placeholder={format(0, \"\")}\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"amount\"\r\n                  value={values.amount}\r\n                  onChange={handleChange}\r\n                  // onBlur={handleChange}\r\n                  isInvalid={!!errors.amount && touched.amount}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.amount}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            <Button type=\"submit\">{t(\"Next\")}</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\n\r\nexport default args => {\r\n  // let data = args.data;\r\n  let format = args.format;\r\n  let navigation = args.navigation;\r\n  let navigationdefaultActiveKey = args.navigationdefaultActiveKey;\r\n  let userData = args.data.userData;\r\n  let onNavigationClick = args.onNavigationClick;\r\n  const { t } = useTranslation(\"Transfer\");\r\n\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    businessID: yup.string().required(t(\"Recipients Business ID is required\")),\r\n    purposeID: yup.string().required(t(\"Purpose ID is required\")),\r\n    amount: yup.string().required(t(\"Amount is required\"))\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      title={t(\"Transfer to account\")}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={console.log}\r\n        initialValues={{\r\n          fromAccount: \"\",\r\n          businessID: \"\",\r\n          purposeID: \"\",\r\n          amount: \"\"\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isValid,\r\n          errors\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"validationFromAccount\">\r\n              <Form.Label>{t(\"From account\")}</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                custom\r\n                name=\"fromAccount\"\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n              >\r\n                <option value=\"\">{t(\"Choose...\")}</option>\r\n                <option value=\"1\">\r\n                  {t(\"Current account\")}\r\n                  {acc_curr}\r\n                </option>\r\n                <option value=\"2\">\r\n                  {t(\"Credit account\")}\r\n                  {acc_cred}\r\n                </option>\r\n                <option value=\"3\">\r\n                  {t(\"Savings account\")}\r\n                  {acc_save}\r\n                </option>\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.fromAccount}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n              <Form.Label>{t(\"To Business ID\")}</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"businessID\"\r\n                  value={values.businessID}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.businessID && touched.businessID}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.businessID}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n              <Form.Label>{t(\"To Purpose ID\")}</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"purposeID\"\r\n                  value={values.purposeID}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.purposeID && touched.purposeID}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.purposeID}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>{t(\"Komment\")}</Form.Label>\r\n              <Form.Control as=\"textarea\" rows=\"3\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"validationFormikAmount\">\r\n              <Form.Label>{t(\"Amount\")}</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">Z</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder={format(0, \"\")}\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"amount\"\r\n                  value={values.amount}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.amount && touched.amount}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.amount}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            <Button type=\"submit\">{t(\"Next\")}</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport AccountRegistration from \"../accountRegistration\";\r\n\r\nimport Card from \"../card\";\r\nimport { Balance, Transfer } from \"../transfer\";\r\n\r\nexport default data => {\r\n  /**\r\n   * Format number\r\n   * @param {number} number\r\n   */\r\n  const format = (number, currency = \"Z\") => {\r\n    return (\r\n      new Intl.NumberFormat(data.language, {\r\n        notation: \"standard\",\r\n        minimumFractionDigits: 2\r\n      }).format(number) +\r\n      \" \" +\r\n      currency\r\n    );\r\n  };\r\n\r\n  // const onTransferTypeChange = id => {\r\n  //   console.log(\"setTransferType: \" + id);\r\n  //   // setTransferType(id);\r\n  //   onTransferTypeChange(id);\r\n  // };\r\n\r\n  const { t } = useTranslation(\"LogIn\");\r\n  return (\r\n    <>\r\n      <h3>{t(\"Summary\")}</h3>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <AccountRegistration data={data} />\r\n          </div>\r\n\r\n          <div className=\"col-sm\">\r\n            <Balance data={data} format={format} />\r\n\r\n            <Transfer\r\n              data={data}\r\n              format={format}\r\n              type={data.transferType}\r\n              onTypeChange={data.onTransferTypeChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-sm\">\r\n            <Card title={t(\"Tell us what you think\")}>\r\n              <Trans i18nKey=\"Summary:Please take a moment to let us know what you think\">\r\n                Please take a moment to let us know what you think about the\r\n                redesigned display of information on this page. Thanks!\r\n              </Trans>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport config from \"./config\";\r\nimport openSocket from \"socket.io-client\";\r\nlet socket = openSocket.connect(config.uri.ENDPOINT, {\r\n  secure: true,\r\n  reconnect: true\r\n});\r\n\r\n// Send a chat message\r\nexport const sendData = ({ req, uuid, room, data }) => {\r\n  // No data - do not send\r\n  if (req.length === 0) return;\r\n\r\n  socket.emit(`onDataReceived`, {\r\n    req: req,\r\n    uuid: uuid,\r\n    room: room,\r\n    data: data\r\n  });\r\n};\r\n\r\n// Join a chat room\r\nexport const joinRoom = (data, uuid, room) => {\r\n  console.log(\"joinRoom\");\r\n\r\n  socket.emit(`join`, {\r\n    data: data,\r\n    uuid: uuid,\r\n    room: room,\r\n    req: \"join room\"\r\n  });\r\n};\r\n\r\n// Leave the chat room\r\nexport const leaveRoom = (data, uuid, room) => {\r\n  socket.emit(`leave`, {\r\n    char: data,\r\n    uuid: uuid,\r\n    room: room\r\n  });\r\n};\r\n\r\n// export const useSocket = (uuid, onDataReceived) => {\r\n//   // Listen for a chat message\r\n//   const ZimeSocket = (onDataReceived, uuid) => {\r\n//     socket.on(`onDataReceived`, data => {\r\n//       console.log(data);\r\n//       onDataReceived(data.char, data.uuid === uuid ? \"self\" : uuid);\r\n//       // console.log(data);\r\n//     });\r\n//     // socket.on(\"onDataReceived\", (id, data) => {\r\n//     //   // send a private message to the socket with the given id\r\n//     //   console.log(id, data);\r\n//     // });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     ZimeSocket(onDataReceived, uuid);\r\n//     // eslint-disable-next-line\r\n//   }, [uuid]);\r\n// };\r\n\r\nexport const useSocket = (uuid, onDataReceived) => {\r\n  // Listen for a data from server\r\n  const SuranadiraSocket = (onDataReceived, uuid) => {\r\n    socket.on(`onDataReceived`, data => {\r\n      onDataReceived(data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    SuranadiraSocket(onDataReceived, uuid);\r\n    // eslint-disable-next-line\r\n  }, [uuid]);\r\n};\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Authorized.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../../translations/i18n\";\r\n\r\nimport LanguageSelector from \"../../components/language-selector\";\r\nimport Summary from \"../../components/summary\";\r\n// import Balance from \"../../components/balance\";\r\n\r\nimport { useSocket, sendData, joinRoom } from \"../../utils/sockets\";\r\n\r\nexport default () => {\r\n  const userDataFetchInterval = 30000; // Test: 5000 | 30000;\r\n  const { t } = useTranslation(\"Authorized\");\r\n  const [uuid] = useState(\"STA\");\r\n  const [userRoom] = useState(\"room1\");\r\n  const [connected, setConnected] = useState(false);\r\n  const [tmrConnected, setTmrConnected] = useState(null);\r\n  const [language, setLanguage] = useState(i18n.options.fallbackLng[0]);\r\n  const [transferType, setTransferType] = useState(\"#u2s\");\r\n  // const [userData, setUserData] = useState({\r\n  //   acc_curr: null,\r\n  //   acc_cred: null,\r\n  //   acc_save: null\r\n  // });\r\n  const [userData, setUserData] = useState(null);\r\n  const [accountPhotoPath, setAccountPhotoPath] = useState(null);\r\n  /**\r\n   * Call external hook\r\n   */\r\n  useSocket(uuid, data => {\r\n    console.log(`Received: `);\r\n    console.log(data);\r\n    if (data.req === \"join room\" && data.status === \"success\") {\r\n      setConnected(true);\r\n      sendData({ req: \"get user\", uuid: \"STA\", room: userRoom });\r\n    } else if (data.req === \"get user\" && data.status === \"ready\") {\r\n      // setUserData(JSON.parse(data.data));\r\n      setUserData(data.data);\r\n    } else if (data.req === \"upload file\" && data.status === \"ready\") {\r\n      setAccountPhotoPath(data.data + \"?r=\" + Math.random());\r\n    }\r\n  });\r\n\r\n  // const send = data => {\r\n  //   // sendData();\r\n  //   console.log(data);\r\n  // };\r\n\r\n  // Hook for new user room\r\n  useEffect(() => {\r\n    joinRoom(\"hello\", uuid, userRoom);\r\n    // eslint-disable-next-line\r\n  }, [userRoom]);\r\n\r\n  useEffect(() => {\r\n    if (connected) {\r\n      let tmr = setInterval(() => {\r\n        sendData({ req: \"get user\", uuid: \"STA\", room: userRoom });\r\n      }, userDataFetchInterval);\r\n      setTmrConnected(tmr);\r\n    } else {\r\n      clearInterval(tmrConnected);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [connected]);\r\n\r\n  // const getLanguage = () => {\r\n  //   return (\r\n  //     i18n.language ||\r\n  //     (typeof window !== \"undefined\" && window.localStorage.i18nextLng) ||\r\n  //     \"en\"\r\n  //   );\r\n  // };\r\n\r\n  i18n.on(\"languageChanged\", function(lng) {\r\n    setLanguage(lng);\r\n  });\r\n\r\n  const onTransferTypeChange = id => {\r\n    console.log(\"setTransferType: \" + id);\r\n    setTransferType(id);\r\n  };\r\n\r\n  const authorizedData = {\r\n    language: language,\r\n    userData: JSON.parse(userData),\r\n    accountPhotoPath: accountPhotoPath,\r\n    userRoom: userRoom,\r\n    sendData: sendData,\r\n    transferType: transferType,\r\n    onTransferTypeChange: onTransferTypeChange\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        {/* Header */}\r\n        <nav\r\n          className=\"navbar navbar-expand-lg navbar-light  \"\r\n          style={{ backgroundColor: \"#fefefe\" }}\r\n        >\r\n          <div className=\"container\">\r\n            <Link className=\"navbar-brand\" to={\"/sign-in\"}>\r\n              {t(\"Logo\")}\r\n            </Link>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to={\"/summary\"}>\r\n                    {t(\"Summary\")}\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to={\"/logout\"}>\r\n                    {t(\"Logout\")}\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <div className=\"nav-link\">\r\n                    <LanguageSelector />\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        {/* Separator between header and body */}\r\n        <div style={{ height: \"20px\" }}></div>\r\n\r\n        {/* Footer */}\r\n\r\n        <div className=\"auth-wrapper\">\r\n          <div className=\"auth-inner\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={() => Summary(authorizedData)} />\r\n              <Route\r\n                path=\"/summary\"\r\n                component={() => Summary(authorizedData)}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Loading.css\";\r\nimport React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"lds-hourglass\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./normalize.css\";\r\nimport \"./index.css\";\r\n// import Home from \"./pages/home\";\r\nimport Authorized from \"./pages/authorized\";\r\nimport Loading from \"./components/loading\";\r\n\r\nReactDOM.render(\r\n  <Suspense fallback={<Loading />}>\r\n    <Authorized />\r\n  </Suspense>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// ReactDOM.render(<Authorized />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}