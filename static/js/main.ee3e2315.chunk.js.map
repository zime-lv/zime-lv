{"version":3,"sources":["components/locale lazy /^/.*$/ groupOptions: {} namespace object","translations/i18n.js","utils/config.js","utils/state.js","components/card/Card.js","utils/useTimeout.js","components/submitButton/SubmitButton.js","components/errorBoundary/ErrorBoundary.js","components/modalMessage/ModalMessage.js","components/accountRegistration/AccountRegistration.js","components/pagination/Pagination.js","components/transactions/Transactions.js","components/shareholder/Shareholder.js","components/shares/Shares.js","components/transfer/Balance.js","components/transfer/TransferToSelf.js","components/tanInput/TanInput.js","components/transfer/TransferToPerson.js","components/transfer/TransferToBusiness.js","components/businessRegistration/businessRegistration.js","components/purposeRegistration/PurposeRegistration.js","components/shareholderRegistration/shareholderRegistration.js","components/myBusiness/MyBusiness.js","components/userEditor/UserEditor.js","components/currencies/Currencies.js","components/currencyRegistration/CurrencyRegistration.js","components/idleTimer/IdleTimer.js","utils/useInterval.js","utils/useEventListener.js","components/login/LogIn.js","components/pages/summary/Summary.js","components/currencyContainer/CurrencyContainer.js","components/transfer/Transfer.js","components/contact/Contact.js","utils/sockets.js","components/signup/SignUp.js","components/overlay/Overlay.js","components/alertContainer/AlertContainer.js","components/alert/Alert.js","components/language-selector/LanguageSelector.js","components/pages/main/Main.js","components/auth/Auth.js","components/validateEmail/ValidateEmail.js","components/changePassword/ChangePassword.js","components/logout/Logout.js","components/passwordReset/passwordReset.js","components/pages/underConstruction/UnderConstruction.js","components/underConstruction/UnderConstruction.js","components/pages/notConnected/NotConnected.js","components/notConnected/NotConnected.js","utils/userResponseHandler.js","Dispatcher.js","utils/requestHandler.js","utils/userErrorHandler.js","utils/systemErrorHandler.js","utils/systemResponseHandler.js","components/loading/Loading.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","defaultNS","keySeparator","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","config","dev","uri","ENDPOINT","window","location","hostname","useStickyState","defaultValue","key","useState","stickyValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","args","defaults","title","navigation","undefined","footer","header","body","headerContent","onNavigationClick","props","assign","Footer","Header","className","length","Title","Nav","variant","defaultActiveKey","navigationdefaultActiveKey","item","Item","Link","href","link","onClick","style","color","name","Body","React","Children","children","child","cloneElement","styles","useTimeout","callback","delay","savedCallback","useRef","current","setTimeout","clearTimeout","caption","request","namespace","visible","marginTop","timeout","onSubmit","barrelGetters","barrelSetters","setError","setRequest","setInfo","barrelFunctions","showMessage","requestExpired","Button","type","block","disabled","Spinner","as","animation","size","role","aria-hidden","hidden","ErrorBoundary","state","hasError","error","errorInfo","console","log","this","Component","centered","message","onHide","file","backdrop","useTranslation","ExternalFile","lazy","Modal","aria-labelledby","closeButton","Navbar","borderRadius","background","backgroundColor","boxShadow","Brand","src","width","height","maxHeight","overflowY","signedIn","accountNumber","userData","accountPhotoPath","language","userBirthYear","userBirthMonth","userBirthDay","userBirthDateError","userTimezone","setUserBirthYear","setUserBirthMonth","setUserBirthDay","setUserBirthDateError","setUserTimezone","getReviser","getWorkplace","sendRequest","formatDate","userAgreementShow","setUserAgreementShow","privacyPolicyShow","setPrivacyPolicyShow","schema","yup","timezone","required","birthYear","birthMonth","birthDay","timezones_sorted","timezones","composeDate","year","month","day","newDate","dateString","match","datepart","split","parseInt","leapYear","isValidDate","yearNow","Date","getFullYear","Alert","Heading","Trans","i18nKey","ModalMessage","show","component","handleSubmit","handleChange","values","handleBlur","touched","errors","isValid","validateForm","setFieldValue","Form","noValidate","Row","Group","Col","controlId","Label","Control","custom","onChange","target","isInvalid","Array","from","Feedback","monthName","toLocaleString","monthNumber","toString","padStart","dayNumber","element","Offset","Name","paddingBottom","KeyboardArrowRight","onMouseDown","SubmitButton","validationSchema","data","birthDate","reviser","workplace","email","sendAccountRegistrationRequest","initialValues","countItems","itemsPerPage","active","align","pages","Math","ceil","getPages","items","number","push","Pagination","Ellipsis","textAlign","display","padding","margin","First","Prev","Next","Last","getJSX","transactions","countTransactions","activePageTransactions","transactionsPerPage","responseProps","getTransactions","showRequestStatus","getRequestStatus","format","formatPerCent","cnt","ListGroup","transaction","keyTransactions","business_title","conv_amount","created","sender_firstname","sender_lastname","purpose_id","purpose_title","recipient_id","roles","share","share_per_cent","from_account","to_account","i_am_recipient","t_from_account","t_to_account","roles_available","arrRoles","shares_available","action","float","ArrowRightAlt","Badge","pill","purpose","shareholder","rangeControl","sharePerCent","businessTitle","purposeTitle","businessOwnerFirstname","businessOwnerLastname","sharesCreated","purposeShareholders","setPurposeShareholders","userQuery","setUserQuery","delayedQuery","_","debounce","q","sendQuery","onClose","shareholder_id","ps","sharesLabelId","Toast","minWidth","firstname","lastname","Settings","fontSize","min","max","step","shares","countShares","activePageShares","sharesPerPage","getShares","keyShares","owner_firstname","owner_lastname","shares_created","shares_roles","shares_share","Shareholder","accordionView","setAccountType","setRedirectTo","setAccordionView","setResponseProps","getAccountData","userDataParsed","onAccountTypeSelected","available","acc_curr","acc_cred","acc_save","toggleView","view","newView","Accordion","Toggle","Card","eventKey","cursor","Collapse","Text","Transactions","Shares","accountType","currencyAbbr","transferFromAccount","transferToAccount","transferAmount","setTransferFromAccount","setTransferToAccount","setTransferAmount","parseLocaleNumber","refAmount","createRef","fromAccount","toAccount","amount","matches","RegExp","InputGroup","Prepend","placeholder","aria-describedby","ref","uid","Intl","NumberFormat","notation","minimumFractionDigits","useGrouping","transferToSelf","tanRequired","tanInputTAN","setTanRequired","setTanInputTAN","refTAN","tan","transferToUID","transferDescription","setTransferRequest","setTransferToUID","setTransferDescription","refPersonalID","refDescription","toPersonalID","TanInput","rows","description","transferType","transferToPerson","transferToPurpose","setTransferToPurpose","refPurposeID","purposeID","currency","transferToBusiness","businessRegistrationAddTitle","businessRegistrationAddDescription","setBusinessRegistrationAddTitle","setBusinessRegistrationAddDescription","barrelEventHandlers","onBusinessRegistration","refBusinessTitle","refBusinessDescription","trim","businessDescription","optional","requestInsert","requestUpdate","businessID","category","subcategory","subcategory2","keywords","barrels","purposeRegistrationTitle","businessPurposes","purposeRegistrationDescription","purposeRegistrationCategory","purposeRegistrationSubcategory","purposeRegistrationSubcategory2","purposeRegistrationKeywords","setPurposeRegistrationTitle","setBusinessPurposes","setPurposeRegistrationDescription","setPurposeRegistrationCategory","setPurposeRegistrationSubcategory","setPurposeRegistrationSubcategory2","setPurposeRegistrationKeywords","onPurposeRegistration","refPurposeTitle","refPurposeDescription","refPurposeCategory","refPurposeSubcategory","refPurposeSubcategory2","refPurposeKeywords","purposeDescription","purposeCategory","purposeSubcategory","purposeSubcategory2","purposeKeywords","RegisterPurpose","shareholderRoles","typeError","personalID","userBusinesses","countBusinesses","businessesPerPage","activePageBusinesses","userBusinessesLoaded","activeBusiness","activeBusinessID","countBusinessPurposes","businessPurposesPerPage","activePageBusinessPurposes","activeBusinesPurpose","activePurposeProperty","activePurposeData","setActiveBusiness","setActiveBusinesPurpose","setActivePurposeProperty","setActiveBusinessID","setActivePageBusinessPurposes","setActivePurposeData","setClearRefs","getBusinesses","getBusinessPurposes","getPurposeShareholders","menuItems","purposes","cntPurposes","countShareholders","business","keyBusiness","keyPurpose","business_id","TogglePurpose","whiteSpace","Edit","stopPropagation","Tab","Pane","bg","Add","keyShareholder","bp","status","purpose_status","Check","label","checked","jsx","date","businessSince","ToggleBusiness","Store","Container","sm","Content","border","PurposeRegistration","mode","userEditorEditFirstname","userEditorFirstname","userEditorEditLastname","userEditorLastname","userEditorEditEmail","userEditorEmail","userEditorEditPassword","userEditorPassword","userEditorPasswordVisible","userEditorSubmitButtonVisible","setUserEditorEditFirstname","setUserEditorFirstname","setUserEditorEditLastname","setUserEditorLastname","setUserEditorEmail","setUserEditorEditEmail","setUserEditorEditPassword","setUserEditorPassword","setUserEditorPasswordVisible","setUserEditorSubmitButtonVisible","refFirstName","refLastName","refEmail","refPassword","togglePassword","yupObject","firstName","lastName","password","Close","Append","VisibilityOff","Visibility","sendUserRegistrationRequest","currencies","settings","countCurrencies","activePageCurrencies","currenciesPerPage","setCurrencyAbbr","getCurrencies","formatExchangeRate","onCurrencySelected","currency_id","onPageSelect","Table","responsive","striped","bordered","hover","keyCurrency","abbr","rate","region","includes","paddingLeft","aria-label","inline","curr_abbr","curr_title","curr_region","curr_rate","currencyCode","currencyName","currencyRegion","currencyNewRate","setCurrencyCode","setCurrencyName","setCurrencyRegion","setCurrencyNewRate","refAbbr","refTitle","refRegion","refRate","timestamp","stage2","stage3","onTick","onTimerReset","onTimeout","events","session","onSessionTimeout","seconds","setSeconds","modalMessageShow","setModalMessageShow","setInterval","clearInterval","useInterval","eventHandler","i","addEventListener","removeEventListener","useEventListener","currTime","timeFormatted","minute","second","modalMessage","fontWeight","OverlayTrigger","placement","overlay","Tooltip","AvTimer","ip","logInEmail","logInPassword","setLoggingIn","setUpdateInterval","setLogInEmail","setLogInPassword","getUri","fluid","sendUserLogInRequest","sessionTimeout","useLocation","paddingRight","PowerSettingsNew","IdleTimer","collapseOnSelect","expand","pathname","aria-controls","pageBody","exact","path","Balance","AccountRegistration","UserEditor","accordionViewCurrency","setAccordionViewCurrency","Currencies","CurrencyRegistration","CurrencyContainer","MyBusiness","onTransferTypeChange","transferCard","setTransferCard","TransferToSelf","TransferToPerson","TransferToBusiness","Transfer","contactSubject","contactMessage","setContactSubject","setContactMessage","refSubject","refMessage","subject","sender","Contact","socket","openSocket","connect","secure","reconnect","sendData","emit","signUpFirstName","signUpLastName","signUpEmail","signUpPassword","setSignUpFirstName","setSignUpLastName","setSignUpEmail","setSignUpPassword","passwordVisible","setPasswordVisible","validateEmail","dismissible","info","onAlertClose","errorStrings","infoStrings","msgError","msg","msgInfo","changeLanguage","lng","selectLanguage","serverResponseReceived","instance","dailyAllowanceDispatched","externalRequest","updateInterval","cartContent","validateTokenEmail","passwordResetTokenValidated","validateTokenPasswordReset","connected","isExternalRequest","clearRefs","setRequestTimedOut","setDailyAllowanceDispatched","setSignedIn","setIsExternalRequest","getIP","processUserResponse","getCart","getCartPurposes","sendEmailValidationRequest","sendPasswordResetRequest","getContainerClass","getRedirect","onRedirect","onSessionStart","onSessionEnd","customer","cart","wrapperClass","innerClass","appClass","Summary","Login","SignUp","cartPurposes","Cart","priceTotal","priceReal","price","product_found","find","products","product","Auth","validationTokenEmail","validationTokenEmailResent","setValidateTokenEmail","getUrlParam","token","ValidateEmail","passwordResetTokenEmail","ChangePassword","setLanguage","onLogOut","tempError","tempInfo","tempLanguage","Logout","passwordResetEmail","setValidateTokenPasswordReset","setPasswordResetEmail","PasswordReset","LanguageSelector","marginLeft","marginRight","Build","UnderConstruction","PowerOff","NotConnected","loggingIn","transferRequest","lastInsertId","setSession","setSettings","setCurrencies","setTransactions","setShares","setCountCurrencies","setCountTransactions","setCountShares","setConnected","setUserData","setCartContent","setCurrencyRate","setLastInsertId","setAccountNumber","setUserSequence","setUID","setUserBusinesses","setCountBusinesses","setUserBusinessesLoaded","setCartPurposes","setCountBusinessPurposes","setAccountPhotoPath","setPasswordResetTokenValidated","setPasswordResetTokenEmail","setValidationTokenEmail","setValidationTokenEmailResent","getTransactionById","sortObjectArray","getObjectArrayElementIndex","deleteObjectArrayElement","showTanInput","responseFound","onResponse","res","reqData","tempRP","saveResponseProps","results","sequence","content","queryCnt","insertId","tags","resent","affectedRows","currency_abbr","isNaN","currency_rate","count_businesses","count_purposes","index","splice","temp","now","count_currencies","count_transaction_positions","count_shares","isLocalhost","setDebug","loggingOut","setLoggingOut","pageLoading","setPageLoading","setServerResponseReceived","requestTimedOut","setInstance","uuidv4","setSessionTimeout","reconnecting","setReconnecting","setIP","setExternalRequest","currencyRate","setActivePageCurrencies","setActivePageTransactions","setActivePageShares","setCurrenciesPerPage","setTransactionsPerPage","setSharesPerPage","userSequence","setBusinessesPerPage","setActivePageBusinesses","setBusinessPurposesPerPage","redirectTo","options","setTransferType","processRequest","requestFound","onRequest","dt","fullyear","getMonth","getDate","slice","initial","toUpperCase","icode","charCodeAt","scode","tcode","requestHandler","context","errorFound","onError","userErrorHandler","userResponseHandler","processSystemResponse","systemErrorHandler","hideMessage","systemResponseHandler","getArrayObject","array","property","obj","param","queryString","search","URLSearchParams","get","sort","a","b","properties","indexOf","arr","filter","strLoading","strNotFound","finalStatus","retIntl","maximumFractionDigits","parseFloat","substr","ts","hour","isUTC","locales","diff","getTimezoneOffset","moment","add","toDate","DateTimeFormat","to","fetch","method","headers","json","catch","page","limit","newPage","selected","stringNumber","locale","parts_local","formatToParts","group","decimal","forEach","replace","on","onSignUp","onTransferSuccess","onTransfer","startSession","endSession","onSessionReset","responseData","setResponseData","useSocket","latency","reason","attemptNumber","useSystemSocket","clear","root","document","getElementById","construction","ReactDOM","render","fallback","Dispatcher"],"mappings":"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","file":"static/js/main.ee3e2315.chunk.js","sourcesContent":["var map = {\n\t\"./document.css\": [\n\t\t270,\n\t\t7,\n\t\t7\n\t],\n\t\"./en/PrivacyPolicy\": [\n\t\t194,\n\t\t9,\n\t\t0\n\t],\n\t\"./en/PrivacyPolicy.js\": [\n\t\t194,\n\t\t9,\n\t\t0\n\t],\n\t\"./en/UserAgreement\": [\n\t\t195,\n\t\t9,\n\t\t1\n\t],\n\t\"./en/UserAgreement.js\": [\n\t\t195,\n\t\t9,\n\t\t1\n\t],\n\t\"./lv/PrivacyPolicy\": [\n\t\t196,\n\t\t9,\n\t\t2\n\t],\n\t\"./lv/PrivacyPolicy.js\": [\n\t\t196,\n\t\t9,\n\t\t2\n\t],\n\t\"./lv/UserAgreement\": [\n\t\t197,\n\t\t9,\n\t\t3\n\t],\n\t\"./lv/UserAgreement.js\": [\n\t\t197,\n\t\t9,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 222;\nmodule.exports = webpackAsyncContext;","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n// not like to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    // lng: \"lv\",\r\n    // ns: [\"LogIn\", \"SignUp\"],\r\n    defaultNS: \"Default\",\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: \"languageChanged loaded\",\r\n      bindStore: \"added removed\",\r\n      nsMode: \"default\",\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","const dev = {\r\n  uri: {\r\n    ENDPOINT: \"http://localhost:9000\",\r\n    // ENDPOINT: \"http://192.168.2.100:9000\"\r\n  },\r\n};\r\n\r\nconst dev2 = {\r\n  uri: {\r\n    ENDPOINT: \"http://192.168.2.100:5000\",\r\n  },\r\n};\r\n\r\nconst staging = {\r\n  uri: {\r\n    ENDPOINT: \"https://dev.zime.lv\",\r\n  },\r\n};\r\n\r\nconst prod = {\r\n  uri: {\r\n    ENDPOINT: \"https://zime.lv\",\r\n  },\r\n};\r\n\r\nconst hostname = window && window.location && window.location.hostname;\r\n\r\nlet config;\r\nswitch (hostname) {\r\n  case \"localhost\":\r\n    config = dev;\r\n    break;\r\n  case \"192.168.2.100\":\r\n    config = dev2;\r\n    break;\r\n  case \"dev.zime.lv\":\r\n    config = staging;\r\n    break;\r\n  case \"zime.lv\":\r\n    config = prod;\r\n    break;\r\n  default:\r\n    config = dev;\r\n    break;\r\n}\r\n\r\nexport default {\r\n  ...config,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nexport const useStickyState = (defaultValue, key) => {\r\n  const [value, setValue] = useState(() => {\r\n    const stickyValue = window.localStorage.getItem(key);\r\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n  return [value, setValue];\r\n};\r\n","import \"./Card.css\";\r\nimport React, { cloneElement } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n// import { Container, Row, Col, Button } from \"react-bootstrap\";\r\n// import Button from \"react-bootstrap/Button\";\r\n\r\nexport default (args) => {\r\n  let defaults = {\r\n    title: \"Untitled\",\r\n    navigation: undefined,\r\n    footer: undefined,\r\n    header: true,\r\n    body: true,\r\n    headerContent: null,\r\n    onNavigationClick: () => {},\r\n  };\r\n  let props = Object.assign(defaults, args);\r\n\r\n  let key = 0;\r\n\r\n  let footer = props.footer ? <Card.Footer>{props.footer}</Card.Footer> : \"\";\r\n\r\n  return (\r\n    <Card>\r\n      {/* <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" /> */}\r\n      {props.header && (\r\n        <Card.Header className=\"custom-card\">\r\n          {props.headerContent !== null ? (\r\n            props.headerContent\r\n          ) : (\r\n            <>\r\n              {props.title.length > 0 && <Card.Title>{props.title}</Card.Title>}\r\n              <Nav\r\n                variant=\"tabs\"\r\n                defaultActiveKey={props.navigationdefaultActiveKey}\r\n              >\r\n                {props.navigation &&\r\n                  props.navigation.map((item, key) => (\r\n                    <Nav.Item key={key}>\r\n                      <Nav.Link\r\n                        className=\"custom-card\"\r\n                        href={item.link}\r\n                        onClick={() => props.onNavigationClick(item.link)}\r\n                        style={{ color: \"black\" }}\r\n                      >\r\n                        {item.name}\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  ))}\r\n              </Nav>\r\n            </>\r\n          )}\r\n        </Card.Header>\r\n      )}\r\n\r\n      {props.body && (\r\n        <Card.Body className=\"custom-card\">\r\n          {React.Children.map(args.children, (child) => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                styles: null,\r\n                key: key,\r\n              });\r\n            }\r\n          })}\r\n        </Card.Body>\r\n      )}\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useTimeout = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setTimeout(tick, delay);\r\n      return () => clearTimeout(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    caption: \"Submit\",\r\n    request: null,\r\n    namespace: \"Button\",\r\n    visible: true,\r\n    marginTop: 0,\r\n    timeout: 15000, // milliseconds\r\n    onSubmit: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { request } = props.barrelGetters;\r\n  const { setRequest, setError, setInfo } = props.barrelSetters;\r\n  const { showMessage } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const [requestExpired, setRequestExpired] = useState(false);\r\n\r\n  // useTimeout(() => {\r\n  //   if (request !== props.request) return;\r\n  //   // console.log(\"useTimeout\");\r\n\r\n  //   // Your custom logic here\r\n  //   // setSeconds(seconds - 1);\r\n  //   setRequestExpired(true);\r\n  //   setRequest(null);\r\n  //   showMessage(\"REQUEST_EXPIRED\", \"error\");\r\n  // }, props.timeout);\r\n\r\n  // useEffect(() => {\r\n  //   if (requestExpired)\r\n  // }, [requestExpired]);\r\n\r\n  const onSubmit = () => {\r\n    setError(null);\r\n    setInfo(null);\r\n    props.onSubmit();\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return !props.visible ? (\r\n      <></>\r\n    ) : (\r\n      <Button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        block\r\n        disabled={request === props.request && !requestExpired}\r\n        style={{ marginTop: props.marginTop + \"px\" }}\r\n      >\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={request !== props.request || requestExpired}\r\n        />\r\n        &nbsp;\r\n        {props.caption}\r\n        &nbsp;\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","import React from \"react\";\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n    console.log(\"Error boundary:\", error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      //   return <h1>Something went wrong.</h1>;\r\n      return <></>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Modal, Navbar, Nav } from \"react-bootstrap\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ModalMessage\",\r\n    centered: true,\r\n    message: \"\",\r\n    title: null,\r\n    footer: null,\r\n    // bodyStyle: { padding: \"1rem\" },\r\n    onHide: () => {},\r\n    size: \"sm\",\r\n    file: null,\r\n    backdrop: true, // \"static\"\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const ExternalFile =\r\n    props.file !== null\r\n      ? React.lazy(() => import(`../locale/${props.file}`))\r\n      : \"\";\r\n\r\n  // async function loadExternalFile() {\r\n  //   await React.preloadLazy(ExternalFile);\r\n  // }\r\n\r\n  // loadExternalFile();\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size={props.size}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered={props.centered}\r\n        backdrop={props.backdrop}\r\n      >\r\n        {props.title !== null && (\r\n          <Modal.Header closeButton>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src=\"gfx/zlogo_light.png\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                  {props.title}\r\n                </Modal.Title>\r\n              </Nav>\r\n            </Navbar>\r\n          </Modal.Header>\r\n        )}\r\n        <Modal.Body\r\n          style={{ maxHeight: \"calc(100vh - 210px)\", overflowY: \"auto\" }}\r\n        >\r\n          {props.message !== \"\" ? (\r\n            props.message\r\n          ) : (\r\n            <ErrorBoundary>\r\n              <ExternalFile />\r\n            </ErrorBoundary>\r\n          )}\r\n        </Modal.Body>\r\n        {props.footer !== null && (\r\n          <Modal.Footer>\r\n            <Button block onClick={props.onHide}>\r\n              {t(\"Close\")}\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","// System CSS\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// System imports\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, InputGroup, Alert, Col } from \"react-bootstrap\";\r\n// import { Redirect } from \"react-router-dom\";\r\n// import ChevronRight from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\r\nimport moment from \"moment-timezone\";\r\n// import DatePicker from \"react-datepicker\";\r\nimport { Today } from \"@material-ui/icons\";\r\n// import { Today } from \"@material-ui/icons\";\r\n// import DatePicker from \"react-date-picker\";\r\n// import MomentUtils from \"@date-io/moment\";\r\n// import { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n// import { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport _ from \"lodash\";\r\n\r\n// User imports\r\nimport Card from \"../card\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useStickyState } from \"../../utils/state\";\r\nimport Dropzone from \"../dropzone\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport ModalMessage from \"../modalMessage\";\r\n// import { useStickyState } from \"../../utils/state\";\r\nimport timezones from \"./timezones.en.json\";\r\n\r\n// const UserAgreement = React.lazy(() => import(\"../locale/en/UserAgreement\"));\r\n\r\nexport default (args) => {\r\n  // console.log(\"ACCOUNT REGISTRATION ARGS:\", args);\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"get user sequence\", // \"register account\",\r\n    namespace: \"AccountRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    signedIn,\r\n    accountNumber,\r\n    accountPhotoPath,\r\n    userData,\r\n    language,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    debug,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    formatDate,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [userAgreementShow, setUserAgreementShow] = useStickyState(\r\n    false,\r\n    \"userAgreementShow\"\r\n  );\r\n  const [privacyPolicyShow, setPrivacyPolicyShow] = useStickyState(\r\n    false,\r\n    \"privacyPolicyShow\"\r\n  );\r\n\r\n  const [offsetList, setOffsetList] = useStickyState(null, \"offsetList\");\r\n  const [calenarVisible, setCalenarVisible] = useState(false);\r\n  // const [birthDateError, setBirthDateError] = useState(\"\");\r\n  // const [birthDate, setBirthDate] = useState(\"\");\r\n\r\n  // const [birthYear, setBirthYear] = useState(\"\");\r\n  // const [birthMonth, setBirthMonth] = useState(\"\");\r\n  // const [birthDay, setBirthDay] = useState(\"\");\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    // dropzoneHook: yup.string().required(t(\"Photo ID is required\")),\r\n    // dropzoneHook: yup.string().optional(),\r\n    // terms: yup.array().required(t(\"Terms is required\")),\r\n    timezone: yup.string().required(t(\"Timezone at birth is required\")),\r\n    birthYear: yup.number().required(t(\"Year is required\")),\r\n    birthMonth: yup.number().required(t(\"Month is required\")),\r\n    birthDay: yup.number().required(t(\"Day is required\")),\r\n    // birthDateHook: yup.string().required(t(\"Birth date is required\")).length(5),\r\n    // birthDate: yup\r\n    //   .string()\r\n    //   .required(t(\"Date of birth is required\"))\r\n    //   // .max(new Date(), t(\"Date of birth must be today or earlier\"))\r\n    //   // .string()\r\n    //   .matches(new RegExp(t(\"Date Regex\")), t(\"Wrong date format\")),\r\n\r\n    // .test({\r\n    //   name: \"regex\",\r\n    //   exclusive: true,\r\n    //   params: {},\r\n    //   message: t(\"Date must be valid\"),\r\n    //   test: (value) => {\r\n    //     if (typeof value === \"undefined\") return false;\r\n\r\n    //     // return Date.parse(value);\r\n    //     return value !== \"error\";\r\n\r\n    //     console.log(\"TEST\");\r\n\r\n    //     // Test regex\r\n    //     // if (!RegExp(t(\"Date Regex\")).test(value)) return false;\r\n\r\n    //     let date2en;\r\n    //     try {\r\n    //       date2en = formatDate(\r\n    //         value,\r\n    //         { month: \"numeric\", day: \"numeric\", year: \"numeric\" },\r\n    //         false,\r\n    //         \"en-US\"\r\n    //       );\r\n    //     } catch (error) {\r\n    //       console.log(\"error\", error);\r\n    //       return false;\r\n    //     }\r\n\r\n    //     // // console.log(\"date2en\", date2en);\r\n    //     // console.log(\"date2en\", date2en);\r\n\r\n    //     // // console.log(\"IS DATE\", _.isDate(new Date(date2en)));\r\n    //     // console.log(\"IS DATE\", _.isDate(new Date(date2en)));\r\n\r\n    //     return true;\r\n    //   },\r\n    // }),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  /**\r\n   * Send account registration request\r\n   * @param {object} data\r\n   */\r\n  const sendAccountRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.email = userData.email;\r\n\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    delete data.birthYear;\r\n    delete data.birthMonth;\r\n    delete data.birthDay;\r\n\r\n    const newDate = composeDate(userBirthYear, userBirthMonth, userBirthDay);\r\n    data.birthDate = newDate;\r\n\r\n    if (newDate !== \"\") {\r\n      // console.log(data);\r\n      if (sendAccountRegistrationRequest(data)) {\r\n        // Account registration request was submitted\r\n      }\r\n    }\r\n  };\r\n\r\n  // const timezones = 1;\r\n  // const timezones_sorted = timezones.sort((a, b) =>\r\n  //   (a.Offset + 12) % 24 > (b.Offset + 12) % 24\r\n  //     ? 1\r\n  //     : (a.Offset + 12) % 24 === (b.Offset + 12) % 24\r\n  //     ? a.Name > b.Name\r\n  //       ? 1\r\n  //       : -1\r\n  //     : -1\r\n  // );\r\n\r\n  const timezones_sorted = timezones;\r\n\r\n  const isValidDate = (dateString) => {\r\n    let dateformat = /^(0?[1-9]|1[0-2])[\\/](0?[1-9]|[1-2][0-9]|3[01])[\\/]\\d{4}$/;\r\n\r\n    // Match the date format through regular expression\r\n    if (dateString.match(dateformat)) {\r\n      let operator = dateString.split(\"/\");\r\n\r\n      // Extract the string into month, date and year\r\n      let datepart = [];\r\n      if (operator.length > 1) {\r\n        datepart = dateString.split(\"/\");\r\n      }\r\n      let month = parseInt(datepart[0]);\r\n      let day = parseInt(datepart[1]);\r\n      let year = parseInt(datepart[2]);\r\n\r\n      // Create list of days of a month\r\n      let ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n      if (month == 1 || month > 2) {\r\n        if (day > ListofDays[month - 1]) {\r\n          ///This check is for Confirming that the date is not out of its range\r\n          return false;\r\n        }\r\n      } else if (month == 2) {\r\n        let leapYear = false;\r\n        if ((!(year % 4) && year % 100) || !(year % 400)) {\r\n          leapYear = true;\r\n        }\r\n        if (leapYear == false && day >= 29) {\r\n          return false;\r\n        } else if (leapYear == true && day > 29) {\r\n          // console.log(\"Invalid date format!\");\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      // console.log(\"Invalid date format!\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const composeDate = (year, month, day) => {\r\n    // console.log(year, month, day);\r\n    const newDate = `${month}/${day}/${year}`;\r\n    // const newDate = `${year}-${month}-${day}`;\r\n    if (isValidDate(newDate)) {\r\n      // setBirthDateComposed(newDate);\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        // console.log(\"ok\");\r\n        setUserBirthDateError(\"\");\r\n        // setBirthDate(newDate);\r\n\r\n        // return \"ok\";\r\n        return newDate;\r\n      } else {\r\n        // console.log(\"incomplete\");\r\n        setUserBirthDateError(\"\");\r\n        // return \"incomplete\";\r\n        return \"\";\r\n      }\r\n    } else {\r\n      // setBirthDateComposed(\"error\");\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        // console.log(\"error\");\r\n        setUserBirthDateError(t(\"Date must be valid\"));\r\n        // return \"error\";\r\n        return \"\";\r\n      } else {\r\n        // console.log(\"incomplete\");\r\n        setUserBirthDateError(\"\");\r\n        // return \"incomplete\";\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  let timeZoneID = 0;\r\n  let prevTimeZoneID = 0;\r\n  const yearNow = new Date().getFullYear();\r\n\r\n  const AccountRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    setFieldValue,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridYear\">\r\n          <Form.Label>{t(\"Date of birth\")}</Form.Label>\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthYear\"\r\n            value={values.birthYear}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthYear(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthYear && touched.birthYear}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Year\")}\r\n            </option>\r\n            {Array.from(Array(120).keys()).map((key) => {\r\n              let year = yearNow - key;\r\n\r\n              return (\r\n                <option key={key} value={year}>\r\n                  {year}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthYear}\r\n          </Form.Control.Feedback>\r\n          <div className=\"invalid-feedback-custom\">{userBirthDateError}</div>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridMonth\">\r\n          <Form.Label>&nbsp;</Form.Label>\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthMonth\"\r\n            value={values.birthMonth}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthMonth(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthMonth && touched.birthMonth}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Month\")}\r\n            </option>\r\n            {Array.from(Array(12).keys()).map((key) => {\r\n              let date = new Date(`${key + 1}/1/1970`);\r\n              let monthName = date.toLocaleString(language, { month: \"long\" });\r\n              let monthNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={monthNumber}>\r\n                  {monthNumber} - {monthName}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthMonth}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridDay\">\r\n          <Form.Label>&nbsp;</Form.Label>\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthDay\"\r\n            value={values.birthDay}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthDay(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthDay && touched.birthDay}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Day\")}\r\n            </option>\r\n            {Array.from(Array(31).keys()).map((key) => {\r\n              let dayNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={dayNumber}>\r\n                  {dayNumber}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthDay}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Group controlId=\"validationFormikTimezone\">\r\n        <Form.Label>{t(\"Timezone at birth\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          custom\r\n          name=\"timezone\"\r\n          value={values.timezone}\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n            setUserTimezone(e.target.value);\r\n          }}\r\n          isInvalid={!!errors.timezone && touched.timezone}\r\n        >\r\n          <option value=\"\">{t(\"Choose...\")}</option>\r\n          {timezones_sorted.map((element, key) => (\r\n            <option\r\n              key={key}\r\n              value={`${(((element.Offset + 12) % 24) + 1)\r\n                .toString()\r\n                .padStart(2, \"0\")} - ${element.Name}`}\r\n            >\r\n              {element.Name}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.timezone}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <div style={{ paddingBottom: \"10px\" }}>\r\n        {t(\"Agree to terms and conditions\")}\r\n      </div>\r\n\r\n      <Trans i18nKey=\"AccountRegistration:The User Agreement and the Privacy Policy\">\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setUserAgreementShow(true)}>\r\n          User Agreement\r\n        </a>\r\n\r\n        <br />\r\n\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setPrivacyPolicyShow(true)}>\r\n          Privacy Policy\r\n        </a>\r\n      </Trans>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  if (signedIn === false)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"User not logged in\")}</Alert.Heading>\r\n          <p>\r\n            <Trans i18nKey=\"AccountRegistration:Please log in first\">\r\n              Please log in first.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  if (!debug && accountNumber !== null)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"Account successfully registered\")}</Alert.Heading>\r\n          <p>\r\n            <Trans\r\n              i18nKey=\"AccountRegistration:Account with your personal ID successfully registered\"\r\n              accountNumber={accountNumber}\r\n            >\r\n              Account with the personal ID\r\n              <strong>{{ accountNumber }}</strong>\r\n              successfully registered.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        show={userAgreementShow}\r\n        file={`${language}/UserAgreement`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"User Agreement\")}\r\n        footer=\"\"\r\n        onHide={() => setUserAgreementShow(false)}\r\n      />\r\n\r\n      <ModalMessage\r\n        show={privacyPolicyShow}\r\n        file={`${language}/PrivacyPolicy`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"Privacy Policy\")}\r\n        footer=\"\"\r\n        onHide={() => setPrivacyPolicyShow(false)}\r\n      />\r\n\r\n      <Card title={t(\"Open account\")}>\r\n        <Formik\r\n          component={AccountRegistrationForm}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            // personalID: \"\",\r\n            // terms: \"\",\r\n            // dropzoneHook: accountPhotoPath,\r\n            timezone: userTimezone,\r\n            // birthDate: \"\",\r\n            birthYear: userBirthYear,\r\n            birthMonth: userBirthMonth,\r\n            birthDay: userBirthDay,\r\n            // birthDateHook: \"\",\r\n          }}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Pagination\",\r\n    size: \"md\",\r\n    countItems: 0,\r\n    itemsPerPage: 5,\r\n    active: 0, // active page\r\n    onClick: () => {},\r\n    align: \"center\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const pages = Math.ceil(props.countItems / props.itemsPerPage);\r\n\r\n  if (pages < 2) return <></>;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  const onClick = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = props.active > 1 ? props.active - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          props.active < Math.ceil(props.countItems / props.itemsPerPage)\r\n            ? props.active + 1\r\n            : Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // getBusinesses(number);\r\n    props.onClick(number);\r\n  };\r\n\r\n  const getPages = () => {\r\n    let items = [];\r\n    for (let number = 1; number <= pages; number++) {\r\n      if (\r\n        number === 1 ||\r\n        number === pages ||\r\n        (number >= props.active - 1 && number <= props.active + 1)\r\n      ) {\r\n        items.push(\r\n          <Pagination.Item\r\n            key={number}\r\n            active={number === props.active}\r\n            onClick={() => onClick(number)}\r\n          >\r\n            {number}\r\n          </Pagination.Item>\r\n        );\r\n      } else if (number === 2 || number === pages - 1) {\r\n        items.push(<Pagination.Ellipsis key={number} disabled />);\r\n      }\r\n    }\r\n    return items;\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const { align } = props;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: `${align}`,\r\n          // backgroundColor: \"red\",\r\n        }}\r\n      >\r\n        <span style={{ display: \"inline-block\" }}>\r\n          <Pagination size={props.size} style={{ padding: 0, margin: 0 }}>\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.First onClick={() => props.onClick(\"First\")} />\r\n                <Pagination.Prev onClick={() => props.onClick(\"Prev\")} />\r\n              </>\r\n            )}\r\n\r\n            {getPages()}\r\n\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.Next onClick={() => props.onClick(\"Next\")} />\r\n                <Pagination.Last onClick={() => props.onClick(\"Last\")} />\r\n              </>\r\n            )}\r\n          </Pagination>\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport {\r\n  // Form,\r\n  // InputGroup,\r\n  // Button,\r\n  // Table,\r\n  ListGroup,\r\n  Badge,\r\n} from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { ArrowRightAlt } from \"@material-ui/icons\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    request: \"get transactions\",\r\n    namespace: \"Transactions\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    transactions,\r\n    countTransactions,\r\n    activePageTransactions,\r\n    transactionsPerPage,\r\n    accountNumber,\r\n    responseProps,\r\n  } = props.barrelGetters;\r\n  // const { setActivePageTransactions } = props.barrelSetters;\r\n  const {\r\n    // getReviser,\r\n    // getWorkplace,\r\n    // sendRequest,\r\n    getTransactions,\r\n    // getArrayObject,\r\n    getRequestStatus,\r\n    showRequestStatus,\r\n    format,\r\n    formatDate,\r\n    formatPerCent,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageTransactions > 1 ? activePageTransactions - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageTransactions <\r\n          Math.ceil(countTransactions / transactionsPerPage)\r\n            ? activePageTransactions + 1\r\n            : Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getTransactions(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <ListGroup variant=\"flush\">\r\n        {transactions !== null &&\r\n          transactions.map((transaction, keyTransactions) => {\r\n            cnt++;\r\n\r\n            const {\r\n              // business_description,\r\n              // business_id,\r\n              // business_image,\r\n              // business_link,\r\n              // business_status,\r\n              business_title,\r\n              // comment,\r\n              conv_amount,\r\n              created,\r\n              // currency,\r\n              // exchange_rate,\r\n              sender_firstname,\r\n              sender_lastname,\r\n              // recipient_firstname,\r\n              // recipient_lastname,\r\n              // purpose_description,\r\n              purpose_id,\r\n              // purpose_image,\r\n              // purpose_link,\r\n              // purpose_status,\r\n              purpose_title,\r\n              recipient_id,\r\n              roles,\r\n              share,\r\n              share_per_cent,\r\n              // sender_id,\r\n              // sender_status,\r\n              // recipient_status,\r\n              from_account,\r\n              to_account,\r\n              type,\r\n            } = transaction;\r\n\r\n            // const i_am_sender = sender_id === accountNumber;\r\n            const i_am_recipient = recipient_id === accountNumber;\r\n            const t_from_account = t(from_account);\r\n            const t_to_account = t(to_account);\r\n\r\n            const roles_available =\r\n              roles !== null && roles !== \"-\" && typeof roles !== \"undefined\";\r\n            const arrRoles = roles_available ? roles.split(\",\") : [];\r\n\r\n            const shares_available =\r\n              typeof share !== \"undefined\" && share !== null && share !== \"-\";\r\n\r\n            if (type === \"transfer U2S\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {sender_firstname} {sender_lastname}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <Trans\r\n                    i18nKey=\"Transactions:fromAccountToAccount\"\r\n                    t_from_account={t_from_account}\r\n                    t_to_account={t_to_account}\r\n                  >\r\n                    {{ t_from_account }}{\" \"}\r\n                    <ArrowRightAlt style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                    {{ t_to_account }}\r\n                  </Trans>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {sender_firstname} {sender_lastname}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer V2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {t(\"Daily allowance\")}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2B\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {purpose_id}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  {business_title} &middot; {purpose_title}\r\n                  <br />\r\n                  {sender_firstname} {sender_lastname}\r\n                  {roles_available && (\r\n                    <>\r\n                      <br />\r\n                      {arrRoles.map((role, key) => {\r\n                        return (\r\n                          <span key={key}>\r\n                            {\" \"}\r\n                            <Badge pill variant=\"secondary\">\r\n                              {role}\r\n                            </Badge>\r\n                          </span>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  )}{\" \"}\r\n                  {shares_available && (\r\n                    <>\r\n                      <br />\r\n                      {share} {t(\"shares\")} ({formatPerCent(share_per_cent)})\r\n                    </>\r\n                  )}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n\r\n              // TODO: check if this works\r\n            } else {\r\n              console.log(\"Unknown transfer type:\", type);\r\n\r\n              return <></>;\r\n            }\r\n          })}\r\n      </ListGroup>\r\n\r\n      {showRequestStatus(\r\n        \"get transactions / SELECT transactions\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No transactions\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <br />\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countTransactions}\r\n        itemsPerPage={transactionsPerPage}\r\n        active={activePageTransactions}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Toast, Badge } from \"react-bootstrap\";\r\nimport { Settings } from \"@material-ui/icons\";\r\nimport _ from \"lodash\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Shareholder\",\r\n    request: \"change share\",\r\n    purpose: null,\r\n    shareholder: null,\r\n    closeButton: true,\r\n    rangeControl: true,\r\n    sharePerCent: null,\r\n    businessTitle: null,\r\n    purposeTitle: null,\r\n    businessOwnerFirstname: null,\r\n    businessOwnerLastname: null,\r\n    sharesCreated: null,\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { purposeShareholders } = props.barrelGetters;\r\n  const { setPurposeShareholders } = props.barrelSetters;\r\n  const { sendRequest, formatPerCent, formatDate } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const [userQuery, setUserQuery] = useState(props.share);\r\n  const delayedQuery = useRef(_.debounce((q) => sendQuery(q), 2000)).current;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const onChange = (e) => {\r\n    setUserQuery(e.target.value);\r\n    delayedQuery(e.target.value);\r\n  };\r\n\r\n  const onClose = () => {\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    return sendRequest({ req: \"remove shareholder\", data });\r\n  };\r\n\r\n  const sendQuery = (delayedQuery) => {\r\n    const ps = purposeShareholders;\r\n    ps[props.id].share = delayedQuery;\r\n    setPurposeShareholders(JSON.stringify(ps));\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    data.share = delayedQuery;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const sharesLabelId = `sharesLabel${props.key}`;\r\n    return (\r\n      <Toast key={props.key} onClose={onClose} style={{ minWidth: \"100%\" }}>\r\n        <Toast.Header closeButton={props.closeButton}>\r\n          <strong className=\"mr-auto\">\r\n            {props.firstname} {props.lastname}{\" \"}\r\n            <small>\r\n              <Settings\r\n                hidden={true}\r\n                fontSize=\"small\"\r\n                style={{ color: \"var(--dark)\" }}\r\n              />\r\n            </small>\r\n          </strong>\r\n          <small>\r\n            <span id={sharesLabelId}>{userQuery}</span> {t(\"shares\")}\r\n          </small>\r\n        </Toast.Header>\r\n        <Toast.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formRoles\">\r\n              <div>\r\n                {props.roles.map((role, key) => {\r\n                  return (\r\n                    <span key={key}>\r\n                      <Badge pill variant=\"secondary\">\r\n                        {role}\r\n                      </Badge>{\" \"}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Form.Group>\r\n\r\n            {props.rangeControl && (\r\n              <Form.Group controlId=\"formBasicRange\">\r\n                <Form.Control\r\n                  type=\"range\"\r\n                  custom\r\n                  variant=\"light\"\r\n                  // value={share}\r\n                  defaultValue={userQuery}\r\n                  // value={userQuery}\r\n                  min={1}\r\n                  max={1000}\r\n                  step={1}\r\n                  // ref={this.input}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            )}\r\n          </Form>\r\n          <span>\r\n            {props.sharePerCent !== null && formatPerCent(props.sharePerCent)}{\" \"}\r\n            {props.businessTitle !== null && props.businessTitle}{\" \"}\r\n            {props.businessTitle !== null && props.purposeTitle !== null && (\r\n              <> &middot; </>\r\n            )}\r\n            {props.purposeTitle !== null && props.purposeTitle}{\" \"}\r\n          </span>\r\n          {props.sharesCreated !== null && (\r\n            <>\r\n              <br />\r\n              {formatDate(props.sharesCreated, {\r\n                month: \"long\",\r\n                day: \"numeric\",\r\n                year: \"numeric\",\r\n              })}\r\n            </>\r\n          )}{\" \"}\r\n          {(props.businessOwnerFirstname !== null ||\r\n            props.businessOwnerLastname !== null) && <br />}\r\n          {props.businessOwnerFirstname !== null &&\r\n            props.businessOwnerFirstname}{\" \"}\r\n          {props.businessOwnerLastname !== null && props.businessOwnerLastname}{\" \"}\r\n        </Toast.Body>\r\n      </Toast>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Form, InputGroup, Button, Table, ListGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n// import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\nimport Shareholder from \"../shareholder\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    request: \"get shares\",\r\n    namespace: \"Shares\",\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    shares,\r\n    countShares,\r\n    activePageShares,\r\n    sharesPerPage,\r\n    // accountNumber,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  // const {  } = props.barrelSetters;\r\n  const {\r\n    getShares,\r\n    getRequestStatus,\r\n    showRequestStatus,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onPageSelect = (number) => {\r\n    console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageShares > 1 ? activePageShares - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageShares < Math.ceil(countShares / sharesPerPage)\r\n            ? activePageShares + 1\r\n            : Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getShares(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <>\r\n      {shares !== null &&\r\n        shares.map((share, keyShares) => {\r\n          cnt++;\r\n\r\n          const {\r\n            // business_description,\r\n            // business_id,\r\n            // business_image,\r\n            // business_link,\r\n            // business_status,\r\n            business_title,\r\n            owner_firstname,\r\n            owner_lastname,\r\n            // owner_status,\r\n            // owner_uid,\r\n            // purpose_description,\r\n            purpose_id,\r\n            // purpose_image,\r\n            // purpose_link,\r\n            // purpose_status,\r\n            purpose_title,\r\n            shareholder_id,\r\n            shares_created,\r\n            // shares_description,\r\n            share_per_cent,\r\n            shares_roles,\r\n            shares_share,\r\n            // shares_status,\r\n            // shares_title,\r\n          } = share;\r\n\r\n          const arrRoles = shares_roles !== null ? shares_roles.split(\",\") : [];\r\n          // const content = `${owner_firstname} ${owner_lastname} / ${formatDate(\r\n          //   shares_created\r\n          // )}`;\r\n\r\n          // console.log(\"keyShares:\", keyShares);\r\n\r\n          return (\r\n            <Shareholder\r\n              {...args}\r\n              key={keyShares}\r\n              id={keyShares}\r\n              shareholder={shareholder_id}\r\n              purpose={purpose_id}\r\n              firstname={userData.firstname}\r\n              lastname={userData.lastname}\r\n              share={shares_share}\r\n              roles={arrRoles}\r\n              closeButton={false}\r\n              rangeControl={false}\r\n              sharePerCent={share_per_cent}\r\n              businessOwnerFirstname={owner_firstname}\r\n              businessOwnerLastname={owner_lastname}\r\n              businessTitle={business_title}\r\n              purposeTitle={purpose_title}\r\n              sharesCreated={shares_created}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {showRequestStatus(\r\n        \"get shares / SELECT shares\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No shares\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"md\"\r\n        countItems={countShares}\r\n        itemsPerPage={sharesPerPage}\r\n        active={activePageShares}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Badge, Accordion, Card } from \"react-bootstrap\";\r\n// import { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\n// import { Redirect } from \"react-router-dom\";\r\n// import Octicon, { ChevronRight } from \"@primer/octicons-react\";\r\n// import AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\n\r\n// import ZCard from \"../card\";\r\nimport Transactions from \"../transactions\";\r\nimport Shares from \"../shares\";\r\n\r\nexport default (args) => {\r\n  // let defaults = {};\r\n  // const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    accordionView,\r\n    // currencyAbbr,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setAccountType,\r\n    setRedirectTo,\r\n    setAccordionView,\r\n    // setDeleteResponseProp,\r\n    setResponseProps,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    getAccountData,\r\n    getTransactions,\r\n    getShares,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userData = props.data.userData;\r\n  // let format = props.format;\r\n  const { t } = useTranslation(\"Balance\");\r\n  // const [redirect, setRedirect] = useState(false);\r\n\r\n  // console.log(\"BALANCE DATA:\", props);\r\n  // console.log(\"BALANCE userData\", userData);\r\n  // const userDataParsed = JSON.parse(userData);\r\n  const userDataParsed = userData;\r\n\r\n  // let footer = <small className=\"text-muted\">Last updated 3 mins ago</small>;\r\n\r\n  /**\r\n   *\r\n   * @param {*} type\r\n   */\r\n  const onAccountTypeSelected = (type) => {\r\n    setAccountType(type);\r\n    setRedirectTo(\"/transfer\");\r\n  };\r\n\r\n  const available =\r\n    userDataParsed !== null\r\n      ? format(\r\n          userDataParsed.acc_curr +\r\n            userDataParsed.acc_cred +\r\n            userDataParsed.acc_save\r\n        )\r\n      : null;\r\n  let acc_curr =\r\n    userDataParsed !== null ? format(userDataParsed.acc_curr) : null;\r\n  let acc_cred =\r\n    userDataParsed !== null ? format(userDataParsed.acc_cred) : null;\r\n  let acc_save =\r\n    userDataParsed !== null ? format(userDataParsed.acc_save) : null;\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n   *\r\n   * @param {*} view\r\n   */\r\n  const toggleView = (view) => {\r\n    const newView = accordionView !== view ? view : null;\r\n\r\n    setResponseProps(null);\r\n    setAccordionView(newView);\r\n\r\n    if (newView !== null) {\r\n      switch (view) {\r\n        case \"balance\":\r\n          getAccountData();\r\n          break;\r\n\r\n        case \"transactions\":\r\n          getTransactions(1);\r\n          break;\r\n\r\n        case \"shares\":\r\n          // setDeleteResponseProp(\"get shares\");\r\n          getShares(1);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Accordion defaultActiveKey={accordionView}>\r\n        {/**\r\n         * Account number\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"accountNumber\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"accountNumber\")}\r\n          >\r\n            {t(\"Account number\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"accountNumber\">\r\n            <Card.Body>\r\n              <Card.Text>{accountNumber}</Card.Text>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        {/**\r\n         * Balance\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"balance\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n              // backgroundColor: \"#e8f6f3\",\r\n            }}\r\n            onClick={() => toggleView(\"balance\")}\r\n          >\r\n            {t(\"Balance\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"balance\">\r\n            <Card.Body>\r\n              <Form noValidate>\r\n                <Form.Group>\r\n                  <Form.Label>{t(\"Available\")}</Form.Label>\r\n\r\n                  <Form.Text>\r\n                    <div style={{ fontSize: \"3em\" }}>{available}</div>\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Current account\")}</div>\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_curr\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_curr}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Credit account\")}</div>\r\n\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_cred\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_cred}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Savings account\")}</div>\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_save\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_save}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        {/**\r\n         * Transactions\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"transactions\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"transactions\")}\r\n          >\r\n            {t(\"Transactions\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"transactions\">\r\n            <Card.Body>\r\n              <Transactions {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        {/**\r\n         * Shares\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"shares\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"shares\")}\r\n          >\r\n            {t(\"Shares\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"shares\">\r\n            <Card.Body>\r\n              <Shares {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"transfer U2S\",\r\n    namespace: \"Transfer\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    accountType,\r\n    language,\r\n    currencyAbbr,\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userData = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setTransferAmount(refAmount.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [fromAccountSaved, setFromAccountSaved] = useStickyState(\r\n  //   \"\",\r\n  //   \"fromAccountSaved\"\r\n  // );\r\n  // const [toAccountSaved, setToAccountSaved] = useStickyState(\r\n  //   \"\",\r\n  //   \"toAccountSaved\"\r\n  // );\r\n  // const [amountSaved, setAmountSaved] = useStickyState(\"\", \"amountSaved\");\r\n\r\n  // useEffect(() => {\r\n  //   if (accountNumber === null) return;\r\n\r\n  //   setFromAccountSaved(\"\");\r\n  //   setToAccountSaved(\"\");\r\n  //   setAmountSaved(\"\");\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [accountNumber]);\r\n\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toAccount: yup.string().required(t(\"To Account is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} Form data\r\n   */\r\n  const transferToSelf = (data) => {\r\n    // console.log(\"TRANSFER U2S DATA:\", data);\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // console.log(\"BEFORE SEND\");\r\n\r\n    // onTransfer({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n\r\n    // setFromAccountSaved(\"\");\r\n    // setToAccountSaved(\"\");\r\n    // setAmountSaved(\"\");\r\n\r\n    setTransferAmount(\"\");\r\n\r\n    // console.log(\"AFTER SEND\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToSelf(data);\r\n  };\r\n\r\n  const TransferToSelfForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * To account\r\n         */}\r\n        <Form.Group controlId=\"validationToAccount\">\r\n          <Form.Label>{t(\"To account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"toAccount\"\r\n            value={values.toAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferToAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.toAccount && touched.toAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option value=\"acc_curr\" hidden={accountType === \"acc_curr\"}>\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option value=\"acc_cred\" hidden={accountType === \"acc_cred\"}>\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option value=\"acc_save\" hidden={accountType === \"acc_save\"}>\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.toAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setTransferAmount(e.target.value);\r\n              }}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"transfer U2S\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={TransferToSelfForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        fromAccount: transferFromAccount,\r\n        toAccount: transferToAccount,\r\n        amount: transferAmount,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\nimport ModalMessage from \"../modalMessage\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"TanInput\",\r\n    request: \"submit tan\",\r\n    show: false,\r\n    size: \"lg\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { tanRequired, userData, tanInputTAN } = props.barrelGetters;\r\n  const { setTanRequired, setTanInputTAN } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refTAN = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (refTAN.current !== null && tanInputTAN !== refTAN.current.value)\r\n        setTanInputTAN(refTAN.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    tan: yup.string().required(t(\"TAN is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    setTanRequired(false);\r\n    data.email = userData.email;\r\n    setTanInputTAN(\"\");\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div>\r\n        {t(\"A transaction number has been sent to your email account.\")}\r\n      </div>\r\n      <br />\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFormikTAN\">\r\n          <Form.Label>{t(\"TAN\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"tan\"\r\n              ref={refTAN}\r\n              value={values.tan}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.tan && touched.tan}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.tan}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  const message = (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        tan: tanInputTAN,\r\n      }}\r\n    />\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        message={message}\r\n        show={tanRequired}\r\n        size={props.size}\r\n        centered={true}\r\n        onHide={() => setTanRequired(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport TanInput from \"../tanInput\";\r\n\r\n/**\r\n * Component: TransferToPerson\r\n */\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2U\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const [transferDescriptionTemp, setTransferDescriptionTemp] = useStickyState(\r\n    \"\",\r\n    \"transferDescriptionTemp\"\r\n  );\r\n\r\n  const refPersonalID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setTransferToUID(refPersonalID.current.value);\r\n      setTransferDescription(refDescription.current.value);\r\n      setTransferAmount(refAmount.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toPersonalID: yup\r\n      .string()\r\n      .required(t(\"Recipients Personal ID is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Personal ID Regex\")),\r\n        t(\"Wrong Personal ID format\")\r\n      ),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToPerson = (data) => {\r\n    // console.log(\"TRANSFER U2U DATA:\", data);\r\n    data.transferType = props.request;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  // return <>test</>;\r\n\r\n  const onSubmit = (data) => {\r\n    transferToPerson(data);\r\n  };\r\n\r\n  const TransferToPersonForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Recipients Personal ID\r\n         */}\r\n        <Form.Group controlId=\"validationFormikToPersonalID\">\r\n          <Form.Label>{t(\"To Personal ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={t(\"XXXXXX-XXXXX\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"toPersonalID\"\r\n              ref={refPersonalID}\r\n              value={values.toPersonalID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.toPersonalID && touched.toPersonalID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.toPersonalID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Transfer Description\r\n         */}\r\n        <Form.Group controlId=\"validationFormikDescription\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Button: Next */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToPersonForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          toPersonalID: transferToUID,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport TanInput from \"../tanInput\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2B\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setTransferToPurpose(refPurposeID.current.value);\r\n      setTransferDescription(refDescription.current.value);\r\n      setTransferAmount(refAmount.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    // businessTitle: yup\r\n    //   .string()\r\n    //   .required(t(\"Recipients Business ID is required\")),\r\n    purposeID: yup.string().required(t(\"Purpose ID is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToBusiness = (data) => {\r\n    data.transferType = props.request;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.currency = currencyAbbr;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // data.amount = parseFloat(data.amount);\r\n    // data.amount = Number(data.amount.replace(/[^0-9.-]+/g, \"\"));\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToBusiness(data);\r\n  };\r\n\r\n  const TransferToBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      {/* From account */}\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Business ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"businessTitle\"\r\n              value={values.businessTitle}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.businessTitle}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n        */}\r\n\r\n        {/* To purpose */}\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Purpose ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"PXXXXXXXXXXXXXXXXXXXXXXX\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"purposeID\"\r\n              ref={refPurposeID}\r\n              value={values.purposeID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.purposeID && touched.purposeID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.purposeID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Field: Description */}\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/* Amount */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"string\" // do NOT change to number!!\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          purposeID: transferToPurpose,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"BusinessRegistration\",\r\n    request: \"register business\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  const { onBusinessRegistration } = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refBusinessTitle = React.createRef();\r\n  const refBusinessDescription = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refBusinessTitle.current !== null &&\r\n        businessRegistrationAddTitle !== refBusinessTitle.current.value\r\n      )\r\n        setBusinessRegistrationAddTitle(refBusinessTitle.current.value);\r\n\r\n      if (\r\n        refBusinessDescription.current !== null &&\r\n        businessRegistrationAddDescription !==\r\n          refBusinessDescription.current.value\r\n      )\r\n        setBusinessRegistrationAddDescription(\r\n          refBusinessDescription.current.value\r\n        );\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [addOwnerAsShareholder, setAddOwnerAsShareholder] = useStickyState(\r\n  //   false,\r\n  //   \"addOwnerAsShareholder\"\r\n  // );\r\n\r\n  const schema = yup.object({\r\n    businessTitle: yup\r\n      .string()\r\n      .required(t(\"Business title is a required field\"))\r\n      .min(3, t(\"Business title too short\"))\r\n      .max(70, t(\"Business title too long\"))\r\n      .trim(),\r\n    businessDescription: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * On business registration\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n\r\n    // console.log(\"REGISTER BUSINESS DATA:\", data);\r\n\r\n    // onBusinessRegistration({ req: \"register business\", data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Business Title (Business ID) */}\r\n      <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n        <Form.Label>{t(\"Business Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"businessTitle\"\r\n            ref={refBusinessTitle}\r\n            value={values.businessTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.businessTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/* Business Description */}\r\n      <Form.Group controlId=\"businessDescription\">\r\n        <Form.Label>{t(\"Business Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"businessDescription\"\r\n          ref={refBusinessDescription}\r\n          value={values.businessDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={RegisterBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          businessTitle: businessRegistrationAddTitle,\r\n          businessDescription: businessRegistrationAddDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"PurposeRegistration\",\r\n    requestInsert: \"register purpose\",\r\n    requestUpdate: \"update purpose property\",\r\n    businessID: null,\r\n    purposeID: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    subcategory: \"\",\r\n    subcategory2: \"\",\r\n    keywords: \"\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"PURPOSE REGISTRATION PROPS:\", props);\r\n\r\n  const barrels = props;\r\n  const { businessID, purposeID, id } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    language,\r\n    businessPurposes,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    purposeRegistrationCategory,\r\n    purposeRegistrationSubcategory,\r\n    purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    setBusinessPurposes,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationCategory,\r\n    setPurposeRegistrationSubcategory,\r\n    setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n  } = barrels.barrelSetters;\r\n  const { getReviser, getWorkplace } = barrels.barrelFunctions;\r\n  const { onPurposeRegistration } = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeTitle = React.createRef();\r\n  const refPurposeDescription = React.createRef();\r\n  const refPurposeCategory = React.createRef();\r\n  const refPurposeSubcategory = React.createRef();\r\n  const refPurposeSubcategory2 = React.createRef();\r\n  const refPurposeKeywords = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refPurposeTitle.current !== null &&\r\n        purposeRegistrationTitle !== refPurposeTitle.current.value\r\n      )\r\n        setPurposeRegistrationTitle(refPurposeTitle.current.value);\r\n\r\n      if (\r\n        refPurposeDescription.current !== null &&\r\n        purposeRegistrationDescription !== refPurposeDescription.current.value\r\n      )\r\n        setPurposeRegistrationDescription(refPurposeDescription.current.value);\r\n\r\n      if (\r\n        refPurposeCategory.current !== null &&\r\n        purposeRegistrationCategory !== refPurposeCategory.current.value\r\n      )\r\n        setPurposeRegistrationCategory(refPurposeCategory.current.value);\r\n\r\n      if (\r\n        refPurposeSubcategory.current !== null &&\r\n        purposeRegistrationSubcategory !== refPurposeSubcategory.current.value\r\n      )\r\n        setPurposeRegistrationSubcategory(refPurposeSubcategory.current.value);\r\n\r\n      if (\r\n        refPurposeSubcategory2.current !== null &&\r\n        purposeRegistrationSubcategory2 !== refPurposeSubcategory2.current.value\r\n      )\r\n        setPurposeRegistrationSubcategory2(\r\n          refPurposeSubcategory2.current.value\r\n        );\r\n\r\n      if (\r\n        refPurposeKeywords.current !== null &&\r\n        purposeRegistrationKeywords !== refPurposeKeywords.current.value\r\n      )\r\n        setPurposeRegistrationKeywords(refPurposeKeywords.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const schema = yup.object({\r\n    purposeTitle: yup\r\n      .string()\r\n      .required(t(\"Purpose title is a required field\"))\r\n      .min(3, t(\"Purpose title too short\"))\r\n      .max(70, t(\"Purpose title too long\"))\r\n      .trim(),\r\n    purposeDescription: yup.string().optional(),\r\n    purposeCategory: yup\r\n      .string()\r\n      .required(t(\"Purpose category is a required field\"))\r\n      .max(70, t(\"Purpose category too long\"))\r\n      .trim(),\r\n    purposeSubcategory: yup.string().optional(),\r\n    purposeSubcategory2: yup.string().optional(),\r\n    purposeKeywords: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const RegisterPurpose = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.businessID = businessID;\r\n    data.id = id;\r\n    data.purposeID = purposeID;\r\n    data.uid = accountNumber;\r\n    data.language = language;\r\n\r\n    // console.log(\"REGISTER PURPOSE DATA:\", data);\r\n\r\n    onPurposeRegistration({\r\n      req: props.purposeID === null ? props.requestInsert : props.requestUpdate,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    RegisterPurpose(data);\r\n  };\r\n\r\n  const RegisterPurposeForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/*\r\n       * Purpose Title (Purpose ID)\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeID\">\r\n        <Form.Label>{t(\"Purpose Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"purposeTitle\"\r\n            ref={refPurposeTitle}\r\n            value={values.purposeTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeTitle && touched.purposeTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Description\r\n       */}\r\n      <Form.Group controlId=\"purposeDescription\">\r\n        <Form.Label>{t(\"Purpose Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"purposeDescription\"\r\n          ref={refPurposeDescription}\r\n          value={values.purposeDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Category\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeCategory\">\r\n        <Form.Label>{t(\"Purpose Category\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"purposeCategory\"\r\n            ref={refPurposeCategory}\r\n            value={values.purposeCategory}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeCategory && touched.purposeCategory}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeCategory}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Subcategory 1\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeSubcategory\">\r\n        <Form.Label>{t(\"Purpose Subcategory\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeSubcategory\"\r\n            ref={refPurposeSubcategory}\r\n            value={values.purposeSubcategory}\r\n            onChange={handleChange}\r\n            isInvalid={\r\n              !!errors.purposeSubcategory && touched.purposeSubcategory\r\n            }\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeSubcategory}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Subcategory 2\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeSubcategory2\">\r\n        <Form.Label>{t(\"Purpose Subcategory 2\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeSubcategory2\"\r\n            ref={refPurposeSubcategory2}\r\n            value={values.purposeSubcategory2}\r\n            onChange={handleChange}\r\n            isInvalid={\r\n              !!errors.purposeSubcategory2 && touched.purposeSubcategory2\r\n            }\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeSubcategory2}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Keywords\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeKeywords\">\r\n        <Form.Label>{t(\"Purpose Keywords\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeKeywords\"\r\n            ref={refPurposeKeywords}\r\n            value={values.purposeKeywords}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeKeywords && touched.purposeKeywords}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeKeywords}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Submit button\r\n       */}\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(props.purposeID === null ? \"Submit\" : \"Save\")}\r\n        request={\r\n          props.purposeID === null ? props.requestInsert : props.requestUpdate\r\n        }\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterPurposeForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        purposeTitle: purposeRegistrationTitle,\r\n        purposeDescription: purposeRegistrationDescription,\r\n        purposeCategory: purposeRegistrationCategory,\r\n        purposeSubcategory: purposeRegistrationSubcategory,\r\n        purposeSubcategory2: purposeRegistrationSubcategory2,\r\n        purposeKeywords: purposeRegistrationKeywords,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"register shareholder\",\r\n    namespace: \"ShareholderRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const barrels = props;\r\n  const { purposeID } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber } = barrels.barrelGetters;\r\n  // const {} = barrels.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n  } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const thisRef = createRef();\r\n\r\n  const schema = yup.object({\r\n    // personalID: yup\r\n    //   .string()\r\n    //   .required(t(\"Personal ID is required\"))\r\n    //   .matches(\r\n    //     new RegExp(t(\"Personal ID Regex\")),\r\n    //     t(\"Wrong Personal ID format\")\r\n    //   ),\r\n    shareholderRoles: yup.string().optional(),\r\n    shares: yup\r\n      .number()\r\n      .typeError(t(\"Shares must be a number\"))\r\n      .required(t(\"Shares is required\"))\r\n      .min(1, t(\"Shares too few\"))\r\n      .max(1000, t(\"Shares too many\")),\r\n  });\r\n\r\n  /**\r\n   * Send shareholder registration request\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.purposeID = purposeID;\r\n\r\n    // console.log(\"REGISTER SHAREHOLDER DATA:\", data);\r\n\r\n    // onShareholderRegistration({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterShareholderForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* id=\"shareholderRegistrationForm\" */}\r\n      <Toast style={{ minWidth: \"100%\" }}>\r\n        {/*\r\n        <Toast.Header closeButton={false}>\r\n          <strong className=\"mr-auto\">{t(\"Add Shareholder\")}</strong>\r\n        </Toast.Header>\r\n        */}\r\n        <Toast.Body>\r\n          <Form.Group controlId=\"validationFormikShareholderPersonalID\">\r\n            <Form.Label>{t(\"Shareholder Personal ID\")}</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={t(\"XXXXXX-XXXXX\")}\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"personalID\"\r\n                value={values.personalID}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.personalID && touched.personalID}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.personalID}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          {/* Shareholder Roles */}\r\n          <Form.Group controlId=\"validationFormikShareholderRoles\">\r\n            <Form.Label>{t(\"Shareholder Roles\")}</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"shareholderRoles\"\r\n                value={values.shareholderRoles}\r\n                onChange={handleChange}\r\n                isInvalid={\r\n                  !!errors.shareholderRoles && touched.shareholderRoles\r\n                }\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.shareholderRoles}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          {/* Shares */}\r\n          <Form.Group controlId=\"validationFormikShareholderRoles\">\r\n            <Form.Label>{t(\"Shares\")}</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type=\"number\"\r\n                min={1}\r\n                max={1000}\r\n                step={1}\r\n                placeholder=\"\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"shares\"\r\n                value={values.shares}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.shares && touched.shares}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.shares}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Toast.Body>\r\n      </Toast>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterShareholderForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        personalID: \"\",\r\n        shares: 1,\r\n        shareholderRoles: \"\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Card,\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  // Nav,\r\n  Form,\r\n  // Toast,\r\n  // Badge,\r\n  // Container,\r\n  // Button,\r\n} from \"react-bootstrap\";\r\n// import { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import Octicon, { Plus, PlusSmall, Gear } from \"@primer/octicons-react\";\r\nimport { Add, Extension, Store, Edit, Close } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Dropzone from \"../dropzone\";\r\nimport BusinessRegistration from \"../businessRegistration\";\r\nimport PurposeRegistration from \"../purposeRegistration\";\r\nimport PurposeProperty from \"../purposeProperty\";\r\nimport ShareholderRegistration from \"../shareholderRegistration\";\r\n// import shareholderRegistration from \"../shareholderRegistration\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"MyBusiness\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    userBusinesses,\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes,\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    purposeShareholders,\r\n    // purposeID,\r\n    activePurposeData,\r\n    language,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRedirectTo,\r\n    setResponseProps,\r\n    setBusinessPurposes,\r\n    setActiveBusiness,\r\n    setActiveBusinesPurpose,\r\n    setActiveBusinessID,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePageBusinessPurposes,\r\n    setActivePurposeData,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationCategory,\r\n    setPurposeRegistrationSubcategory,\r\n    setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    sendRequest,\r\n    showRequestStatus,\r\n    formatDate,\r\n  } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // useEffect(() => {\r\n  //   // getBusinesses();\r\n  //   // getBusinesses();\r\n  //   // eslint-disable-next-line\r\n  // }, []);\r\n\r\n  /**\r\n   * Toggle business (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const ToggleBusiness = ({ eventKey, businessID }) => {\r\n    if (activeBusiness === eventKey) {\r\n      setActiveBusiness(null);\r\n      setActivePageBusinessPurposes(null);\r\n    } else {\r\n      setResponseProps(null);\r\n      getBusinessPurposes(businessID, eventKey, 1);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Toggle purpose (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const TogglePurpose = ({ eventKey, purposeID }) => {\r\n    setResponseProps(null);\r\n    getPurposeShareholders(purposeID, eventKey);\r\n  };\r\n\r\n  /**\r\n   * Create:\r\n   * - business menu\r\n   * - business purposes menu\r\n   */\r\n  let menuItems = [];\r\n  let purposes = [];\r\n  let cntBusinesses = 0;\r\n  let cntPurposes = 0;\r\n  let countShareholders = 0;\r\n  userBusinesses !== null &&\r\n    Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n      cntBusinesses++;\r\n      menuItems[keyBusiness] = [];\r\n      purposes[keyBusiness] = [];\r\n      businessPurposes !== null &&\r\n        Object.keys(businessPurposes).map((purpose, keyPurpose) => {\r\n          cntPurposes++;\r\n          if (\r\n            businessPurposes[purpose].business_id ===\r\n            userBusinesses[business].business_id\r\n          ) {\r\n            menuItems[keyBusiness][keyPurpose] = (\r\n              <ListGroup.Item\r\n                action\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n                style={{ cursor: \"default\" }}\r\n                onClick={() =>\r\n                  TogglePurpose({\r\n                    eventKey: keyPurpose,\r\n                    purposeID: businessPurposes[purpose].purpose_id,\r\n                  })\r\n                }\r\n              >\r\n                <span style={{ whiteSpace: \"nowrap\", cursor: \"pointer\" }}>\r\n                  {businessPurposes[purpose].title}\r\n                </span>\r\n\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={(e) => {\r\n                      setPurposeRegistrationTitle(\r\n                        businessPurposes[purpose].title !== null\r\n                          ? businessPurposes[purpose].title\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationDescription(\r\n                        businessPurposes[purpose].description !== null\r\n                          ? businessPurposes[purpose].description\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationCategory(\r\n                        businessPurposes[purpose].category !== null\r\n                          ? businessPurposes[purpose].category\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationSubcategory(\r\n                        businessPurposes[purpose].subcategory !== null\r\n                          ? businessPurposes[purpose].subcategory\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationSubcategory2(\r\n                        businessPurposes[purpose].subcategory2 !== null\r\n                          ? businessPurposes[purpose].subcategory2\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationKeywords(\r\n                        businessPurposes[purpose].keywords !== null\r\n                          ? businessPurposes[purpose].keywords\r\n                          : \"\"\r\n                      );\r\n\r\n                      setActivePurposeData(\r\n                        JSON.stringify(businessPurposes[purpose])\r\n                      );\r\n                      setActiveBusinesPurpose(\"addPurpose\");\r\n                      e.stopPropagation();\r\n                    }}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </ListGroup.Item>\r\n            );\r\n\r\n            purposes[keyBusiness][keyPurpose] = (\r\n              <Tab.Pane\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n              >\r\n                <Accordion\r\n                  defaultActiveKey={\r\n                    activePurposeProperty !== null\r\n                      ? activePurposeProperty\r\n                      : \"shareholders\"\r\n                  }\r\n                >\r\n                  {/* Purpose shareholders */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"shareholders\"\r\n                      onClick={() => setActivePurposeProperty(\"shareholders\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Shareholders\")}\r\n                      </span>\r\n                      <span style={{ float: \"right\" }}>\r\n                        <Add\r\n                          onClick={(e) => {\r\n                            setActivePurposeProperty(\"addShareholder\");\r\n                            e.stopPropagation();\r\n                          }}\r\n                          fontSize=\"small\"\r\n                          style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                        />\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    {/* Toggle: Add shareholder */}\r\n                    <Accordion.Collapse eventKey=\"addShareholder\">\r\n                      <Card.Body>\r\n                        <ShareholderRegistration\r\n                          {...args}\r\n                          purposeID={businessPurposes[purpose].purpose_id}\r\n                        />\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n\r\n                    {/* Toggle: Shareholders list */}\r\n                    <Accordion.Collapse eventKey=\"shareholders\">\r\n                      <Card.Body>\r\n                        {typeof purposeShareholders !== \"undefined\" &&\r\n                          purposeShareholders !== null &&\r\n                          Object.keys(purposeShareholders).map(\r\n                            (shareholder, keyShareholder) => {\r\n                              if (\r\n                                purposeShareholders[shareholder].purpose_id ===\r\n                                businessPurposes[purpose].purpose_id\r\n                              ) {\r\n                                const { purpose_id } = purposeShareholders[\r\n                                  shareholder\r\n                                ];\r\n                                const {\r\n                                  shareholder_id,\r\n                                  firstname,\r\n                                  lastname,\r\n                                  // email,\r\n                                  roles,\r\n                                  share,\r\n                                } = purposeShareholders[shareholder];\r\n\r\n                                countShareholders++;\r\n\r\n                                const arrRoles =\r\n                                  roles !== null ? roles.split(\",\") : [];\r\n\r\n                                return (\r\n                                  <Shareholder\r\n                                    {...args}\r\n                                    key={keyShareholder}\r\n                                    id={keyShareholder}\r\n                                    shareholder={shareholder_id}\r\n                                    purpose={purpose_id}\r\n                                    firstname={firstname}\r\n                                    lastname={lastname}\r\n                                    share={share}\r\n                                    roles={arrRoles}\r\n                                  />\r\n                                );\r\n                              } else {\r\n                                return \"\"; // TODO: check if this works\r\n                              }\r\n                            }\r\n                          )}\r\n\r\n                        {showRequestStatus(\r\n                          \"get purpose shareholders / SELECT shares\",\r\n                          countShareholders,\r\n                          t(\"Loading shareholders...\"),\r\n                          t(\"No shareholders\"),\r\n                          \"finished\"\r\n                        )}\r\n\r\n                        {/* End shareholders list */}\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Product status */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      eventKey=\"productStatus\"\r\n                      onClick={() => setActivePurposeProperty(\"productStatus\")}\r\n                    >\r\n                      {t(\"Product Status\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"productStatus\">\r\n                      <Card.Body\r\n                        onClick={(e) => {\r\n                          // console.log(\"Click\", e);\r\n\r\n                          const bp = businessPurposes;\r\n                          bp[purpose].status =\r\n                            businessPurposes[purpose].status === 0 ? 1 : 0;\r\n                          setBusinessPurposes(JSON.stringify(bp));\r\n\r\n                          let data = {};\r\n                          // data.business_id =\r\n                          //   businessPurposes[purpose].business_id;\r\n                          // data.language = language;\r\n                          data.purpose_id =\r\n                            businessPurposes[purpose].purpose_id;\r\n                          // data.purpose_title = businessPurposes[purpose].title;\r\n                          data.purpose_status =\r\n                            businessPurposes[purpose].status;\r\n                          return sendRequest({\r\n                            req: \"change purpose status\",\r\n                            data,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Form>\r\n                          {typeof purposeShareholders === \"undefined\" ||\r\n                            (purposeShareholders === null && (\r\n                              <Form.Text>\r\n                                {t(\r\n                                  \"To publish, please add at least one shareholder\"\r\n                                )}\r\n                                <br />\r\n                                <br />\r\n                              </Form.Text>\r\n                            ))}\r\n\r\n                          {typeof purposeShareholders !== \"undefined\" &&\r\n                            purposeShareholders !== null && (\r\n                              <Form.Check\r\n                                type=\"switch\"\r\n                                custom\r\n                                disabled={\r\n                                  typeof purposeShareholders === \"undefined\" ||\r\n                                  purposeShareholders === null\r\n                                }\r\n                                label={t(\r\n                                  businessPurposes[purpose].status === 0\r\n                                    ? \"Not published\"\r\n                                    : \"Published\"\r\n                                )}\r\n                                checked={businessPurposes[purpose].status === 1}\r\n                                onChange={(e) => {\r\n                                  console.log(e);\r\n                                }}\r\n                              />\r\n                            )}\r\n                        </Form>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose ID */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      eventKey=\"purpose_id\"\r\n                      onClick={() => setActivePurposeProperty(\"purpose_id\")}\r\n                    >\r\n                      {t(\"Purpose ID\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"purpose_id\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].purpose_id}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose title */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"title\"\r\n                      onClick={() => setActivePurposeProperty(\"title\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Title\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"title\">\r\n                      <Card.Body>\r\n                        <Card.Text>{businessPurposes[purpose].title}</Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose description\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"description\"\r\n                      onClick={() => setActivePurposeProperty(\"description\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Description\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"description\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].description}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose category\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"category\"\r\n                      onClick={() => setActivePurposeProperty(\"category\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Category\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"category\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].category}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose subcategory\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"subcategory\"\r\n                      onClick={() => setActivePurposeProperty(\"subcategory\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Subcategory\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"subcategory\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].subcategory}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose subcategory 2\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"subcategory2\"\r\n                      onClick={() => setActivePurposeProperty(\"subcategory2\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Subcategory 2\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"subcategory2\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].subcategory2}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Keywords\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"keywords\"\r\n                      onClick={() => setActivePurposeProperty(\"keywords\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Keywords\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"keywords\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].keywords}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* End of purpose properties */}\r\n                </Accordion>\r\n              </Tab.Pane>\r\n            );\r\n          }\r\n          countShareholders = 0;\r\n          return true;\r\n        });\r\n\r\n      return true;\r\n    });\r\n\r\n  const jsx = (\r\n    <>\r\n      <Accordion\r\n        defaultActiveKey={\r\n          activeBusiness !== null || !userBusinessesLoaded\r\n            ? activeBusiness\r\n            : \"myBusinesses\"\r\n        }\r\n      >\r\n        {/* Add business location top */}\r\n\r\n        {/* List user businesses */}\r\n        {userBusinesses !== null &&\r\n          Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n            const date = new Date(userBusinesses[business].created);\r\n            // const businessSince = new Intl.DateTimeFormat(language).format(\r\n            //   date\r\n            // );\r\n            const businessSince = formatDate(date, {\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n              year: \"numeric\",\r\n            });\r\n\r\n            // keyBusiness[3] = userBusinesses[business].business_id;\r\n            return (\r\n              <Card key={keyBusiness}>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey={keyBusiness}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    ToggleBusiness({\r\n                      eventKey: keyBusiness,\r\n                      businessID: userBusinesses[business].business_id,\r\n                    })\r\n                  }\r\n                >\r\n                  <Store style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                  {userBusinesses[business].title}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={keyBusiness}>\r\n                  <Card.Body>\r\n                    <Tab.Container\r\n                      id=\"left-tabs-example\"\r\n                      defaultActiveKey={\r\n                        activeBusinesPurpose !== null\r\n                          ? activeBusinesPurpose\r\n                          : \"aboutBusiness\"\r\n                      }\r\n                    >\r\n                      <Row>\r\n                        {/* Layout: Left side - Menu */}\r\n                        <Col sm={5}>\r\n                          <ListGroup variant=\"flush\">\r\n                            {/* Menu item: About business */}\r\n                            <ListGroup.Item\r\n                              action\r\n                              eventKey=\"aboutBusiness\"\r\n                              style={{ cursor: \"default\" }}\r\n                              onClick={(e) => {\r\n                                setActivePurposeData(null);\r\n                                setActiveBusinesPurpose(null);\r\n                                e.stopPropagation();\r\n                              }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  whiteSpace: \"nowrap\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              >\r\n                                {t(\"About\")}\r\n                              </span>\r\n                              <span style={{ float: \"right\" }}>\r\n                                <Add\r\n                                  onClick={(e) => {\r\n                                    // console.log(\"CLICK\");\r\n\r\n                                    // setPurposeID(null);\r\n                                    setClearRefs(true);\r\n                                    setActivePurposeData(null);\r\n                                    setActiveBusinesPurpose(\"addPurpose\");\r\n                                    e.stopPropagation();\r\n                                  }}\r\n                                  fontSize=\"small\"\r\n                                  style={{\r\n                                    color: \"var(--dark)\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                />\r\n                              </span>\r\n                            </ListGroup.Item>\r\n\r\n                            {/* Menu items: Registered purposes */}\r\n                            {menuItems[keyBusiness]}\r\n\r\n                            {/* old add purpose */}\r\n                          </ListGroup>\r\n                          {countBusinessPurposes !== null && (\r\n                            <>\r\n                              <br />\r\n                              <Pagination\r\n                                {...args}\r\n                                size=\"sm\"\r\n                                countItems={countBusinessPurposes}\r\n                                itemsPerPage={businessPurposesPerPage}\r\n                                active={activePageBusinessPurposes}\r\n                                onClick={(number) =>\r\n                                  getBusinessPurposes(\r\n                                    activeBusinessID,\r\n                                    0,\r\n                                    number\r\n                                  )\r\n                                }\r\n                              />\r\n                            </>\r\n                          )}\r\n\r\n                          {showRequestStatus(\r\n                            \"get business purposes / SELECT purposes\",\r\n                            cntPurposes,\r\n                            t(\"Loading purposes...\"),\r\n                            t(\"No purposes\"),\r\n                            \"finished\"\r\n                          )}\r\n                        </Col>\r\n\r\n                        {/* Layout: Right side - Content */}\r\n                        <Col sm={7}>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"aboutBusiness\">\r\n                              <Accordion defaultActiveKey=\"businessID\">\r\n                                {/* Business logo */}\r\n\r\n                                {/*\r\n                              <Card>\r\n                                <Accordion.Toggle\r\n                                  as={Card.Header}\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  eventKey=\"businessLogo\"\r\n                                >\r\n                                  [LOGO]\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"businessLogo\">\r\n                                  <Card border=\"light\">\r\n                                    <Card.Body>\r\n                                      <Dropzone data={args} />\r\n                                    </Card.Body>\r\n                                  </Card>\r\n                                </Accordion.Collapse>\r\n                              </Card>\r\n                              */}\r\n\r\n                                {/* Business ID */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessID\"\r\n                                  >\r\n                                    {t(\"Business ID\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessID\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          {userBusinesses[business].business_id}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business description */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessDescription\"\r\n                                  >\r\n                                    {t(\"Business Description\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessDescription\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          {userBusinesses[business]\r\n                                            .description !== \"\" ? (\r\n                                            userBusinesses[business].description\r\n                                          ) : (\r\n                                            <span className=\"text-center text-muted\">\r\n                                              {t(\"No description\")}\r\n                                            </span>\r\n                                          )}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business Creation Date */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessCreationDate\"\r\n                                  >\r\n                                    {t(\"Business Created\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessCreationDate\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>{businessSince}</Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n\r\n                            {/* Start Business purposes */}\r\n                            {purposes[keyBusiness]}\r\n                            {/* End Business purposes */}\r\n\r\n                            {/*\r\n                             * Add new purpose / update existing purpose\r\n                             */}\r\n                            <Tab.Pane eventKey=\"addPurpose\">\r\n                              <Accordion defaultActiveKey=\"newPurpose\">\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    eventKey=\"newPurpose\"\r\n                                    style={{ cursor: \"default\" }}\r\n                                  >\r\n                                    {t(\r\n                                      activePurposeData === null\r\n                                        ? \"New Purpose\"\r\n                                        : \"Edit Purpose\"\r\n                                    )}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"newPurpose\">\r\n                                    <Card.Body>\r\n                                      <PurposeRegistration\r\n                                        {...args}\r\n                                        businessID={\r\n                                          userBusinesses[business].business_id\r\n                                        }\r\n                                        id={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.id\r\n                                            : null\r\n                                        }\r\n                                        purposeID={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.purpose_id\r\n                                            : null\r\n                                        }\r\n                                        title={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.title\r\n                                            : \"\"\r\n                                        }\r\n                                        description={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.description\r\n                                            : \"\"\r\n                                        }\r\n                                        category={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.category\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory2={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory2\r\n                                            : \"\"\r\n                                        }\r\n                                        keywords={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.keywords\r\n                                            : \"\"\r\n                                        }\r\n                                      />\r\n                                    </Card.Body>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>\r\n                        </Col>\r\n                      </Row>\r\n                    </Tab.Container>\r\n                    {/* pagination prev */}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            );\r\n            // console.log(\"BUSINESS:\", userBusinesses[business]);\r\n          })}\r\n\r\n        {/* add business location bottom */}\r\n\r\n        {/* Add business */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"addBusiness\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() =>\r\n              setActiveBusiness(\r\n                activeBusiness !== \"addBusiness\" ? \"addBusiness\" : null\r\n              )\r\n            }\r\n          >\r\n            <span>\r\n              <Add fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              &nbsp;\r\n              {t(\"Add Business\")}\r\n            </span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"addBusiness\">\r\n            <Card.Body>\r\n              <BusinessRegistration {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      {userBusinesses !== null && (\r\n        <>\r\n          <br />\r\n\r\n          <Pagination\r\n            {...args}\r\n            size=\"md\"\r\n            countItems={countBusinesses}\r\n            itemsPerPage={businessesPerPage}\r\n            active={activePageBusinesses}\r\n            onClick={(number) => getBusinesses(number)}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","import \"./UserEditor.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup, Form, InputGroup } from \"react-bootstrap\";\r\nimport {\r\n  Visibility,\r\n  VisibilityOff,\r\n  Close,\r\n  Edit,\r\n  // Done,\r\n} from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"UserEditor\",\r\n    request: \"update user\",\r\n    mode: \"label\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"USER EDITOR PROPS:\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    // currencies,\r\n    // currencyAbbr,\r\n    // language,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getReviser, getWorkplace } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refFirstName.current !== null &&\r\n        userEditorFirstname !== refFirstName.current.value\r\n      )\r\n        setUserEditorFirstname(refFirstName.current.value);\r\n\r\n      if (\r\n        refLastName.current !== null &&\r\n        userEditorLastname !== refLastName.current.value\r\n      )\r\n        setUserEditorLastname(refLastName.current.value);\r\n\r\n      if (\r\n        refEmail.current !== null &&\r\n        userEditorEmail !== refEmail.current.value\r\n      )\r\n        setUserEditorEmail(refEmail.current.value);\r\n\r\n      if (\r\n        refPassword.current !== null &&\r\n        userEditorPassword !== refPassword.current.value\r\n      )\r\n        setUserEditorPassword(refPassword.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userEditorEditFirstname ||\r\n      userEditorEditLastname ||\r\n      userEditorEditEmail ||\r\n      userEditorEditPassword\r\n    ) {\r\n      setUserEditorSubmitButtonVisible(true);\r\n    } else {\r\n      setUserEditorSubmitButtonVisible(false);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [\r\n    userEditorEditFirstname,\r\n    userEditorEditLastname,\r\n    userEditorEditEmail,\r\n    userEditorEditPassword,\r\n  ]);\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  const togglePassword = () => {\r\n    setUserEditorPasswordVisible(!userEditorPasswordVisible);\r\n  };\r\n\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    // data.language = language;\r\n    // data.email = userData.email;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.personalID = accountNumber;\r\n    if (!userEditorEditFirstname) data.firstname = null;\r\n    if (!userEditorEditLastname) data.lastname = null;\r\n    if (!userEditorEditEmail) data.email = userData.email;\r\n    if (!userEditorEditPassword) data.password = null;\r\n\r\n    // console.log(\"onSubmit:\", data);\r\n\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const yupObject = {\r\n    firstName: userEditorEditFirstname\r\n      ? yup.string().required(t(\"First name is required\"))\r\n      : yup.string().optional(),\r\n    lastName: userEditorEditLastname\r\n      ? yup.string().required(t(\"Last name is required\"))\r\n      : yup.string().optional(),\r\n    email: userEditorEditEmail\r\n      ? yup\r\n          .string()\r\n          .email(t(\"Invalid email address\"))\r\n          .required(t(\"Email is required\"))\r\n      : yup.string().optional(),\r\n    password: userEditorEditPassword\r\n      ? yup\r\n          .string()\r\n          .required(t(\"No password provided\"))\r\n          .min(8, t(\"Password is too short\"))\r\n          // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n          .matches(\r\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n            t(\"Password is too weak\")\r\n          )\r\n      : yup.string().optional(),\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object(yupObject);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (userData === null) return <></>;\r\n\r\n  /**\r\n   * Destructuring\r\n   */\r\n  const { mode } = props;\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    email,\r\n    // language,\r\n    // currency_name,\r\n    // currency_abbr,\r\n  } = userData;\r\n  // const currency = `${currency_name} (${currency_abbr})`;\r\n\r\n  const UserEditorForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Card title={t(\"Profile\")}>\r\n        {/* First name */}\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"First name\")}</Form.Label>\r\n            {!userEditorEditFirstname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditFirstname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{firstname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditFirstname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditFirstname && (\r\n              <Form.Group controlId=\"validationFormikFirstName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter first name\")}\r\n                    name=\"firstName\"\r\n                    ref={refFirstName}\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.firstName && touched.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Last name */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Last name\")}</Form.Label>\r\n            {!userEditorEditLastname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditLastname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{lastname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditLastname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditLastname && (\r\n              <Form.Group controlId=\"validationFormikLastName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter last name\")}\r\n                    name=\"lastName\"\r\n                    ref={refLastName}\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.lastName && touched.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Email */}\r\n          {false && accountNumber !== null && (\r\n            <ListGroup.Item as=\"div\" action>\r\n              <Form.Label>{t(\"Email address\")}</Form.Label>\r\n              {!userEditorEditEmail ? (\r\n                <>\r\n                  <span style={{ float: \"right\" }}>\r\n                    <Edit\r\n                      onClick={() => setUserEditorEditEmail(true)}\r\n                      fontSize=\"small\"\r\n                      style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                    />\r\n                  </span>\r\n                  <br />\r\n                  <small>{email}</small>\r\n                </>\r\n              ) : (\r\n                <span style={{ float: \"right\" }}>\r\n                  <Close\r\n                    onClick={() => setUserEditorEditEmail(false)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              )}\r\n\r\n              {userEditorEditEmail && (\r\n                <Form.Group controlId=\"validationFormikEmail\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      placeholder={t(\"Enter email\")}\r\n                      name=\"email\"\r\n                      value={values.email}\r\n                      ref={refEmail}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.email && touched.email}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.email}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              )}\r\n            </ListGroup.Item>\r\n          )}\r\n\r\n          {/* Password */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Password\")}</Form.Label>\r\n            {!userEditorEditPassword ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditPassword(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditPassword(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditPassword && (\r\n              <>\r\n                {/* New password */}\r\n                <Form.Group controlId=\"validationFormikPassword\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      type={userEditorPasswordVisible ? \"text\" : \"password\"}\r\n                      placeholder={t(\"Enter new password\")}\r\n                      name=\"password\"\r\n                      ref={refPassword}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.password && touched.password}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <InputGroup.Text\r\n                        id=\"inputGroupAppend\"\r\n                        onClick={togglePassword}\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        {userEditorPasswordVisible ? (\r\n                          <VisibilityOff\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        ) : (\r\n                          <Visibility\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        )}\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.password}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              </>\r\n            )}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n\r\n        <Form.Group controlId=\"validationSubmitButton\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            visible={userEditorSubmitButtonVisible}\r\n            marginTop={20}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n      </Card>\r\n    </Form>\r\n  );\r\n\r\n  const jsx =\r\n    mode === \"label\" ? (\r\n      <span style={{ whiteSpace: \"nowrap\" }}>\r\n        {firstname} {lastname}\r\n      </span>\r\n    ) : (\r\n      <Formik\r\n        component={UserEditorForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          // firstName: userData.firstname,\r\n          // lastName: userData.lastname,\r\n          // email: userData.email,\r\n          // password: \"\",\r\n          firstName: userEditorFirstname,\r\n          lastName: userEditorLastname,\r\n          email: userEditorEmail,\r\n          password: userEditorPassword,\r\n        }}\r\n      />\r\n    );\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import settings from \"../../settings.json\";\r\n// import Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    request: \"get currencies\", // \"register currency\",\r\n    namespace: \"Currencies\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencies,\r\n    settings,\r\n    countCurrencies,\r\n    activePageCurrencies,\r\n    currenciesPerPage,\r\n    currencyAbbr,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  const { setCurrencyAbbr, setResponseProps } = props.barrelSetters;\r\n  const {\r\n    // getReviser,\r\n    // getWorkplace,\r\n    sendRequest,\r\n    // getRequestStatus,\r\n    showRequestStatus,\r\n    getCurrencies,\r\n    formatExchangeRate,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onCurrencySelected = (e) => {\r\n    setCurrencyAbbr(e.target.id);\r\n    sendRequest({\r\n      req: \"register user currency\",\r\n      data: { email: userData.email, currency_id: e.target.id },\r\n    });\r\n  };\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    setResponseProps(null);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageCurrencies > 1 ? activePageCurrencies - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageCurrencies < Math.ceil(countCurrencies / currenciesPerPage)\r\n            ? activePageCurrencies + 1\r\n            : Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getCurrencies(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrenciesForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Table responsive striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Currency\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Abbr\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Region\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Rate\")}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currencies !== null &&\r\n            currencies.map((currency, keyCurrency) => {\r\n              cnt++;\r\n              // console.log(\"CURRENCY\", currency);\r\n\r\n              const { name, abbr, rate, region } = currency;\r\n\r\n              if (\r\n                typeof settings[\"currencies\"] === \"undefined\" ||\r\n                settings[\"currencies\"] === null ||\r\n                settings[\"currencies\"].length === 0 ||\r\n                settings[\"currencies\"].includes(abbr)\r\n              ) {\r\n                // valid currency - continue\r\n              } else {\r\n                return \"\"; // invalid currency\r\n              }\r\n\r\n              return (\r\n                <tr key={keyCurrency}>\r\n                  <td style={{ textAlign: \"left\", paddingLeft: \"1rem\" }}>\r\n                    <Form.Check\r\n                      id={abbr}\r\n                      type=\"radio\"\r\n                      checked={currencyAbbr === abbr}\r\n                      aria-label=\"option 1\"\r\n                      label={name}\r\n                      custom\r\n                      inline\r\n                      onChange={onCurrencySelected}\r\n                      name=\"selected-currency\"\r\n                    />\r\n                  </td>\r\n                  <td style={{ textAlign: \"center\" }}>{abbr}</td>\r\n                  <td style={{ textAlign: \"left\" }}>{region}</td>\r\n                  <td style={{ textAlign: \"right\" }}>\r\n                    {formatExchangeRate(rate)}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {showRequestStatus(\r\n        \"get currencies / SELECT currencies\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No currencies\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countCurrencies}\r\n        itemsPerPage={currenciesPerPage}\r\n        active={activePageCurrencies}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  // onSubmit={onSubmit}\r\n  return (\r\n    <Formik\r\n      component={CurrenciesForm}\r\n      initialValues={{\r\n        curr_abbr: \"\",\r\n        curr_title: \"\",\r\n        curr_region: \"\",\r\n        curr_rate: 1.0,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"CurrencyRegistration\",\r\n    request: \"register currency\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    formatExchangeRate,\r\n    // getCurrencies,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([\"CurrencyRegistration\"]);\r\n\r\n  const refAbbr = React.createRef();\r\n  const refTitle = React.createRef();\r\n  const refRegion = React.createRef();\r\n  const refRate = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (refAbbr.current !== null && currencyCode !== refAbbr.current.value)\r\n        setCurrencyCode(refAbbr.current.value);\r\n\r\n      if (refTitle.current !== null && currencyName !== refTitle.current.value)\r\n        setCurrencyName(refTitle.current.value);\r\n\r\n      if (\r\n        refRegion.current !== null &&\r\n        currencyRegion !== refRegion.current.value\r\n      )\r\n        setCurrencyRegion(refRegion.current.value);\r\n\r\n      if (refRate.current !== null && currencyNewRate !== refRate.current.value)\r\n        setCurrencyNewRate(refRate.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    curr_abbr: yup\r\n      .string()\r\n      .required(t(\"Currency abbreviation is required\"))\r\n      .min(3, t(\"Currency abbreviation is too short\"))\r\n      .max(5, t(\"Currency abbreviation is too long\")),\r\n    curr_title: yup\r\n      .string()\r\n      .required(t(\"Currency name is required\"))\r\n      .min(3, t(\"Currency name is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency name is too long\")), // must be at most 70 characters\r\n    curr_region: yup\r\n      .string()\r\n      .required(t(\"Currency region is required\"))\r\n      .min(3, t(\"Currency region is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency region is too long\")), // must be at most 70 characters\r\n    curr_rate: yup\r\n      .string()\r\n      .required(t(\"Exchange rate is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Exchange Rate Regex\")),\r\n        t(\"Wrong exchange rate format\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrencyRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/* Currency abbreviation */}\r\n        <Form.Group controlId=\"validationFormikCurrAbbr\">\r\n          <Form.Label>{t(\"Abbreviation\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_abbr\"\r\n              ref={refAbbr}\r\n              value={values.curr_abbr}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_abbr && touched.curr_abbr}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_abbr}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency name */}\r\n        <Form.Group controlId=\"validationFormikCurrName\">\r\n          <Form.Label>{t(\"Currency Name\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_title\"\r\n              ref={refTitle}\r\n              value={values.curr_title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_title && touched.curr_title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_title}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency region */}\r\n        <Form.Group controlId=\"validationFormikCurrRegion\">\r\n          <Form.Label>{t(\"Currency Region\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_region\"\r\n              ref={refRegion}\r\n              value={values.curr_region}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_region && touched.curr_region}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_region}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Initial exchange rate */}\r\n        <Form.Group controlId=\"validationFormikCurrRate\">\r\n          <Form.Label>{t(\"Initial Exchange Rate\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={formatExchangeRate(1)}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_rate\"\r\n              value={values.curr_rate}\r\n              ref={refRate}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_rate && touched.curr_rate}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_rate}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={CurrencyRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        curr_abbr: currencyCode,\r\n        curr_title: currencyName,\r\n        curr_region: currencyRegion,\r\n        curr_rate: currencyNewRate,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AvTimer } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n//  let time = new Date().toLocaleString();\r\nimport { useInterval } from \"../../utils/useInterval\";\r\nimport { useEventListener } from \"../../utils/useEventListener\";\r\n\r\nimport ModalMessage from \"../modalMessage\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Constants\r\n     ============================================================================ */\r\n  const minute = 60; // seconds, for testing purposes > 60\r\n\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"IdleTimer\",\r\n    timeout: 5 * minute,\r\n    timestamp: null,\r\n    stage2: 60, // show seconds (vs minutes) in stage 2\r\n    stage3: 20, // show modal message on stage 3\r\n    onTick: () => {},\r\n    onTimerReset: () => {},\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { session } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { formatDate } = props.barrelFunctions;\r\n  const { onSessionTimeout } = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const [seconds, setSeconds] = useState(props.timeout);\r\n  const [modalMessageShow, setModalMessageShow] = React.useState(false);\r\n\r\n  useInterval(() => {\r\n    // Your custom logic here\r\n\r\n    setSeconds(seconds - 1);\r\n    props.onTick(seconds);\r\n  }, 1000);\r\n\r\n  useEventListener(() => {\r\n    setSeconds(props.timeout);\r\n    props.onTimerReset();\r\n  }, [\"mousedown\", \"click\", \"scroll\", \"keypress\"]); // \"click\",\r\n\r\n  useEffect(() => {\r\n    if (seconds === props.timeout) setModalMessageShow(false);\r\n    if (seconds === props.stage3) setModalMessageShow(true);\r\n    if (seconds === 0) onSessionTimeout();\r\n\r\n    // eslint-disable-next-line\r\n  }, [seconds]);\r\n\r\n  // useEffect(() => {\r\n  //   setSeconds(props.timeout);\r\n  //   props.onTimerReset();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [session]);\r\n\r\n  const getJSX = () => {\r\n    let currTime;\r\n    if (seconds > props.stage2) currTime = Math.ceil(seconds / minute);\r\n    else currTime = seconds;\r\n\r\n    const timeFormatted = formatDate(new Date(1970, 1, 1, 0, 0, currTime), {\r\n      minute: \"numeric\",\r\n      second: \"numeric\",\r\n    });\r\n\r\n    const onSessionContinue = () => {\r\n      // console.log(\"onSessionContinue\");\r\n      setSeconds(props.timeout);\r\n      setModalMessageShow(false);\r\n    };\r\n\r\n    const modalMessage = (\r\n      <>\r\n        <Trans\r\n          i18nKey=\"IdleTimer:Automatic logout\"\r\n          timeFormatted={timeFormatted}\r\n        >\r\n          <div className=\"text-center\">Automatic logout in</div>\r\n          <div\r\n            className=\"text-center\"\r\n            style={{ fontSize: \"4em\", fontWeight: \"bold\", color: \"#A93226\" }}\r\n          >\r\n            {{ timeFormatted }}\r\n          </div>\r\n          <div className=\"text-center\">\r\n            Do you want to continue the session?\r\n          </div>\r\n        </Trans>\r\n        <br />\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Continue now\")}\r\n          request=\"continue session\"\r\n          onSubmit={onSessionContinue}\r\n          namespace={props.namespace}\r\n        />\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <ModalMessage\r\n          show={modalMessageShow}\r\n          message={modalMessage}\r\n          onHide={() => setModalMessageShow(false)}\r\n        />\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip>\r\n              {seconds > props.stage2 ? (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Minutes to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  minutes.\r\n                </Trans>\r\n              ) : (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Seconds to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  seconds.\r\n                </Trans>\r\n              )}\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <div style={{ whiteSpace: \"nowrap\", cursor: \"default\" }}>\r\n            <AvTimer style={{ color: \"var(--dark)\" }} />\r\n            &nbsp;\r\n            {seconds > props.stage2 ? (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:minutes\" currTime={currTime}>\r\n                    {{ currTime }} minutes\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:min\" currTime={currTime}>\r\n                    {{ currTime }} min\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:seconds\" currTime={currTime}>\r\n                    {{ currTime }} seconds\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:sec\" currTime={currTime}>\r\n                    <span>{{ currTime }}</span> sec\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </OverlayTrigger>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useEventListener = (callback, events) => {\r\n  let defaults = {\r\n    namespace: \"EventListener\",\r\n\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, { events: events });\r\n\r\n  useEffect(() => {\r\n    const eventHandler = (e) => {\r\n      callback(e);\r\n    };\r\n\r\n    for (let i in props.events) {\r\n      window.addEventListener(props.events[i], eventHandler);\r\n    }\r\n\r\n    return () => {\r\n      for (let i in props.events) {\r\n        window.removeEventListener(props.events[i], eventHandler);\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  // Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Spinner,\r\n} from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Alert from \"../alert\";\r\n// import LanguageSelector from \"../language-selector\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"ALERT DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { ip, logInEmail, logInPassword } = props.barrelGetters;\r\n  const {\r\n    setLoggingIn,\r\n    setUpdateInterval,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    getUri,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"LogIn\");\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (refEmail.current !== null && logInEmail !== refEmail.current.value)\r\n        setLogInEmail(refEmail.current.value);\r\n\r\n      if (\r\n        refPassword.current !== null &&\r\n        logInPassword !== refPassword.current.value\r\n      )\r\n        setLogInPassword(refPassword.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup.string().required(t(\"No password provided\")),\r\n  });\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserLogInRequest = (data) => {\r\n    // data.pw = data.password;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.ip = ip;\r\n    data.uri = getUri();\r\n    sendRequest({ req: \"sign in user\", data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    setUpdateInterval(-1);\r\n    setLoggingIn(true);\r\n    sendUserLogInRequest(data);\r\n  };\r\n\r\n  const UserLogInForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Sign In\")}</h3>\r\n\r\n      {/**\r\n       * Email\r\n       */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Password\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"Password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            ref={refPassword}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Submit button\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"sign in user\"\r\n          namespace=\"LogIn\"\r\n        />\r\n      </Form.Group>\r\n\r\n      <Container fluid=\"md\">\r\n        <Row>\r\n          {/**\r\n           * Register\r\n           */}\r\n          <Col>\r\n            <p className=\"other-options text-left\">\r\n              <Trans i18nKey=\"LogIn:Not yet registered\">\r\n                Not yet <a href=\"/sign-up\">registered?</a>\r\n              </Trans>\r\n            </p>\r\n          </Col>\r\n\r\n          {/**\r\n           * Forgot password\r\n           */}\r\n          <Col>\r\n            <p className=\"other-options text-right\">\r\n              <Trans i18nKey=\"LogIn:Forgot password\">\r\n                Forgot <a href=\"/reset\">password?</a>\r\n              </Trans>\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={UserLogInForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          email: logInEmail,\r\n          password: logInPassword,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Button,\r\n  // Breadcrumb,\r\n  // NavDropdown,\r\n  // Alert,\r\n} from \"react-bootstrap\";\r\n// import Octicon, { SignOut } from \"@primer/octicons-react\";\r\nimport { PowerSettingsNew } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../../settings.json\";\r\nimport AccountRegistration from \"../../accountRegistration\";\r\n// import BusinessRegistration from \"../../businessRegistration\";\r\nimport { Balance, Transfer } from \"../../transfer\";\r\nimport MyBusiness from \"../../myBusiness\";\r\nimport UserEditor from \"../../userEditor\";\r\nimport CurrencyContainer from \"../../currencyContainer\";\r\nimport IdleTimer from \"../../idleTimer\";\r\nimport Login from \"../../login\";\r\nimport Contact from \"../../contact\";\r\n\r\n/**\r\n * Component: Summary\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"Summary\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    settings,\r\n    signedIn,\r\n    accountNumber,\r\n    sessionTimeout,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getBusinesses, sendRequest } = props.barrelFunctions;\r\n  const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (signedIn === false) {\r\n    // setRedirectTo(\"/sign-out\");\r\n    return <>User not logged in</>;\r\n  }\r\n\r\n  const location = useLocation();\r\n\r\n  const navigation = (\r\n    <>\r\n      <Container\r\n        fluid\r\n        style={{\r\n          paddingRight: \"0\",\r\n          paddingLeft: \"0\",\r\n        }}\r\n      >\r\n        <Row>\r\n          {/*\r\n           * Top Menu\r\n           */}\r\n          <Col>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                // background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"var(--light)\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src={\r\n                    settings !== null && typeof settings[\"logo\"] !== \"undefined\"\r\n                      ? settings[\"logo\"]\r\n                      : \"gfx/zlogo_light.png\"\r\n                  }\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link eventKey=\"profile\" href=\"/profile\">\r\n                  <UserEditor {...args} />\r\n                </Nav.Link>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link eventKey=\"sign-out\" href=\"/sign-out\">\r\n                  <span style={{ whiteSpace: \"nowrap\" }}>\r\n                    <span>\r\n                      <PowerSettingsNew style={{ color: \"var(--dark)\" }} />\r\n                    </span>\r\n\r\n                    <span className=\"d-none d-sm-inline\">\r\n                      &nbsp;\r\n                      {t(\"Sign out\")}\r\n                    </span>\r\n                  </span>\r\n                </Nav.Link>\r\n              </Nav>\r\n              {true && (\r\n                <Nav>\r\n                  <Nav.Item>\r\n                    <IdleTimer timeout={sessionTimeout} {...args} />\r\n                  </Nav.Item>\r\n                </Nav>\r\n              )}\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <div style={{ height: \"7px\" }}></div>\r\n            <Navbar\r\n              collapseOnSelect\r\n              expand=\"sm\"\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"dark\"\r\n              variant=\"dark\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                backgroundColor: \"var(--dark)\",\r\n                boxShadow: \"none\",\r\n              }}\r\n            >\r\n              <Nav>\r\n                <Nav.Link\r\n                  className=\"nav-link-2\"\r\n                  eventKey=\"balance\"\r\n                  href=\"/balance\"\r\n                  style={{\r\n                    fontWeight:\r\n                      location.pathname === \"/balance\" ? \"bold\" : \"normal\",\r\n                  }}\r\n                >\r\n                  {t(\"Balance\")}\r\n                </Nav.Link>\r\n              </Nav>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                  {accountNumber !== null && (\r\n                    <>\r\n                      <Nav.Link\r\n                        className=\"nav-link-2\"\r\n                        eventKey=\"transfer\"\r\n                        href=\"/transfer\"\r\n                        style={{\r\n                          fontWeight:\r\n                            location.pathname === \"/transfer\"\r\n                              ? \"bold\"\r\n                              : \"normal\",\r\n                        }}\r\n                      >\r\n                        {t(\"Transfer\")}\r\n                      </Nav.Link>\r\n                      <Nav.Link\r\n                        className=\"nav-link-2\"\r\n                        eventKey=\"my-business\"\r\n                        onClick={() => getBusinesses(1)}\r\n                        href=\"#\"\r\n                        style={{\r\n                          fontWeight:\r\n                            location.pathname === \"/my-business\"\r\n                              ? \"bold\"\r\n                              : \"normal\",\r\n                        }}\r\n                      >\r\n                        {t(\"Business\")}\r\n                      </Nav.Link>\r\n\r\n                      {/**\r\n                       * Currency\r\n                       */}\r\n                      {settings !== null &&\r\n                        typeof settings[\"currencies\"] !== \"undefined\" &&\r\n                        (settings[\"currencies\"] === null ||\r\n                          settings[\"currencies\"].length === 0 ||\r\n                          settings[\"currencies\"].length > 1) && (\r\n                          <Nav.Link\r\n                            className=\"nav-link-2\"\r\n                            eventKey=\"currency\"\r\n                            href=\"/currency\"\r\n                            style={{\r\n                              fontWeight:\r\n                                location.pathname === \"/currency\"\r\n                                  ? \"bold\"\r\n                                  : \"normal\",\r\n                            }}\r\n                          >\r\n                            {t(\"Currency\")}\r\n                          </Nav.Link>\r\n                        )}\r\n                    </>\r\n                  )}\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n\r\n  const pageBody = (\r\n    <Router>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/summary\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/account-registration\"\r\n          component={() => {\r\n            return AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/profile\"\r\n          component={() => {\r\n            return UserEditor({ ...args, mode: \"profile\" });\r\n          }}\r\n        />\r\n        {settings !== null &&\r\n          typeof settings[\"currencies\"] !== \"undefined\" &&\r\n          (settings[\"currencies\"] === null ||\r\n            settings[\"currencies\"].length === 0 ||\r\n            settings[\"currencies\"].length > 1) && (\r\n            <Route\r\n              exact\r\n              path=\"/currency\"\r\n              component={() => {\r\n                return CurrencyContainer({ ...args });\r\n              }}\r\n            />\r\n          )}\r\n\r\n        <Route\r\n          exact\r\n          path=\"/my-business\"\r\n          component={() => {\r\n            return MyBusiness(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/balance\"\r\n          component={() => {\r\n            return Balance(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/transfer\"\r\n          component={() => {\r\n            return Transfer(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/contact\"\r\n          component={() => {\r\n            return Contact(args);\r\n          }}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n\r\n      {/* Content */}\r\n      {/*<h3>{t(\"Summary\")}</h3>*/}\r\n\r\n      <Container fluid=\"md\">\r\n        <Row>\r\n          <Col>\r\n            {navigation}\r\n            <div style={{ height: \"7px\" }}></div>\r\n          </Col>\r\n        </Row>\r\n        {/*\r\n        <Row>{viewAccountRegistration}</Row>\r\n        */}\r\n        <Row>\r\n          <Col>{pageBody}</Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../settings.json\";\r\n// import Card from \"../card\";\r\nimport Currencies from \"../currencies\";\r\nimport CurrencyRegistration from \"../currencyRegistration\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    accordionViewCurrency,\r\n    activePageCurrencies,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setAccordionViewCurrency,\r\n    setRedirectTo,\r\n    setResponseProps,\r\n  } = props.barrelSetters;\r\n  const { getCurrencies } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const ToggleCurrencies = () => {\r\n    if (accordionViewCurrency !== \"currencies\") {\r\n      setResponseProps(null);\r\n      setAccordionViewCurrency(\"currencies\");\r\n      getCurrencies(activePageCurrencies);\r\n    } else {\r\n      setAccordionViewCurrency(null);\r\n    }\r\n  };\r\n\r\n  const ToggleCurrencyRegistration = () => {\r\n    setAccordionViewCurrency(\r\n      accordionViewCurrency !== \"currencyRegistration\"\r\n        ? \"currencyRegistration\"\r\n        : null\r\n    );\r\n  };\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  if (\r\n    typeof settings[\"currencies\"] !== \"undefined\" &&\r\n    settings[\"currencies\"] !== null &&\r\n    settings[\"currencies\"].length < 2\r\n  ) {\r\n    return <></>; // currency creation is disabled\r\n  } else {\r\n    return (\r\n      <>\r\n        <Accordion defaultActiveKey={accordionViewCurrency}>\r\n          <Card>\r\n            <Accordion.Toggle\r\n              as={Card.Header}\r\n              eventKey=\"currencies\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={ToggleCurrencies}\r\n            >\r\n              {t(\"Currencies\")}\r\n            </Accordion.Toggle>\r\n\r\n            <Accordion.Collapse eventKey=\"currencies\">\r\n              <Card.Body>\r\n                <Currencies {...args} />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n\r\n          {typeof settings[\"currencyCreationAllowed\"] !== \"undefined\" &&\r\n            settings[\"currencyCreationAllowed\"] && (\r\n              <Card>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey=\"currencyRegistration\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={ToggleCurrencyRegistration}\r\n                >\r\n                  {t(\"Currency Registration\")}\r\n                </Accordion.Toggle>\r\n\r\n                <Accordion.Collapse eventKey=\"currencyRegistration\">\r\n                  <Card.Body>\r\n                    <CurrencyRegistration {...args} />\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            )}\r\n        </Accordion>\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { TransferToSelf, TransferToPerson, TransferToBusiness } from \"./index\";\r\n// import { Alert } from \"react-bootstrap\";\r\n\r\n// const navigation = [\r\n//   {\r\n//     name: \"U2S\",\r\n//     link: \"#u2s\",\r\n//   },\r\n//   {\r\n//     name: \"U2U\",\r\n//     link: \"#u2u\",\r\n//   },\r\n//   {\r\n//     name: \"U2B\",\r\n//     link: \"#u2b\",\r\n//   },\r\n// ];\r\n\r\n/**\r\n * Component: Transfer\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber, transferType } = props.barrelGetters;\r\n  const { setRedirectTo } = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  const { onTransferTypeChange } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"Transfer\");\r\n\r\n  const data = props.data;\r\n  const type = transferType;\r\n  // const onTypeChange = args.onTypeChange;\r\n\r\n  // console.log(\"TRANSFER DATA TYPE:\", type);\r\n\r\n  const [transferCard, setTransferCard] = useState(null);\r\n\r\n  const onNavigationClick = (id) => {\r\n    onTransferTypeChange(id);\r\n  };\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"U2S\"),\r\n      link: \"#u2s\",\r\n    },\r\n    {\r\n      name: t(\"U2U\"),\r\n      link: \"#u2u\",\r\n    },\r\n    {\r\n      name: t(\"U2B\"),\r\n      link: \"#u2b\",\r\n    },\r\n  ];\r\n\r\n  // console.log(\"TRANSFER DATA\", data);\r\n  // const title = t(\"Transfer to account\");\r\n\r\n  useEffect(() => {\r\n    if (type === null) return;\r\n\r\n    // setTransferCard()\r\n    switch (type) {\r\n      case \"#u2s\": // User to self\r\n        setTransferCard(\r\n          <TransferToSelf\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      case \"#u2u\": // User to user\r\n        setTransferCard(\r\n          <TransferToPerson\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      case \"#u2b\": // User to business\r\n        setTransferCard(\r\n          <TransferToBusiness\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [data, format, type]);\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  // return (\r\n  //   <>\r\n  //     <Alert variant=\"warning\">\r\n  //       <Alert.Heading>{t(\"Account not yet registered\")}</Alert.Heading>\r\n  //       <p>\r\n  //         <Trans i18nKey=\"Balance:Please set up your account first.\">\r\n  //           Please set up your account first. Use this{\" \"}\r\n  //           <a href=\"/account-registration\">link</a>.\r\n  //         </Trans>\r\n  //       </p>\r\n  //     </Alert>\r\n  //   </>\r\n  // );\r\n\r\n  return <>{transferCard}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Contact\", request: \"send message\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    language,\r\n    accountNumber,\r\n    contactSubject,\r\n    contactMessage,\r\n  } = props.barrelGetters;\r\n  const { setContactSubject, setContactMessage } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refSubject = React.createRef();\r\n  const refMessage = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // console.log(\"ON UNMOUNT:\", refSubject.current.value);\r\n      if (\r\n        refSubject.current !== null &&\r\n        contactSubject !== refSubject.current.value\r\n      )\r\n        setContactSubject(refSubject.current.value);\r\n\r\n      if (\r\n        refMessage.current !== null &&\r\n        contactMessage !== refMessage.current.value\r\n      )\r\n        setContactMessage(refMessage.current.value);\r\n      // console.log(\"CONTACT UNMOUNTS\");\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    subject: yup.string().required(t(\"Subject is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.sender = accountNumber;\r\n    data.language = language;\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  // const navigation = [\r\n  //   {\r\n  //     name: t(\"U2S\"),\r\n  //     link: \"#u2s\",\r\n  //   },\r\n  // ];\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card header={false}>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * Subject\r\n         */}\r\n        <Form.Group controlId=\"validationFormikSubject\">\r\n          <Form.Label>{t(\"Subject\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={t(\"Enter message subject\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"subject\"\r\n              ref={refSubject}\r\n              value={values.subject}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setContactSubject(e.target.value);\r\n              }}\r\n              isInvalid={!!errors.subject && touched.subject}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.subject}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Message\r\n         */}\r\n        <Form.Group controlId=\"validationFormikMessage\">\r\n          <Form.Label>{t(\"Message\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter message\")}\r\n            name=\"message\"\r\n            value={values.message}\r\n            ref={refMessage}\r\n            onChange={handleChange}\r\n            as=\"textarea\"\r\n            rows=\"10\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        subject: contactSubject,\r\n        message: contactMessage,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport config from \"./config\";\r\nimport openSocket from \"socket.io-client\";\r\n// import { useTimeout } from \"./useTimeout\";\r\n\r\nlet socket = openSocket.connect(config.uri.ENDPOINT, {\r\n  secure: true,\r\n  reconnect: true,\r\n});\r\n\r\n/**\r\n * Send request to the server\r\n * @param {*} param0\r\n */\r\nexport const sendData = (data, debug = false) => {\r\n  if (debug) console.log(`request: ${data.req}`, data);\r\n\r\n  // No data - do not send\r\n  // if (req.length === 0) return false;\r\n\r\n  // useTimeout(() => {\r\n  //   console.log(\"Socket timeout\");\r\n  // }, 3000);\r\n\r\n  socket.emit(`onDataReceived`, data);\r\n  return true;\r\n};\r\n\r\n// Start a session\r\nexport const startSession = (data, session, debug = false) => {\r\n  // console.log(\"startSession\");\r\n  if (debug) console.log(`request: start session`, data, session);\r\n\r\n  socket.emit(`start session`, {\r\n    data: data,\r\n    session: session,\r\n    req: \"start session\",\r\n  });\r\n};\r\n\r\n// End the session\r\nexport const endSession = (data, session, debug = false) => {\r\n  if (debug) console.log(`request: end session`, data, session);\r\n  socket.emit(`end session`, {\r\n    // char: data,\r\n    data: data,\r\n    // uid: uid,\r\n    session: session,\r\n    req: \"end session\",\r\n  });\r\n};\r\n\r\n// Custom hook: useSocket\r\nexport const useSocket = (callback) => {\r\n  const [responseData, setResponseData] = useState(null);\r\n\r\n  socket.on(`onDataReceived`, (data) => {\r\n    setResponseData(data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (responseData === null) return;\r\n\r\n    callback(responseData);\r\n    // eslint-disable-next-line\r\n  }, [responseData]);\r\n};\r\n\r\nexport const useSystemSocket = (callback, instance) => {\r\n  useEffect(() => {\r\n    // socket.on(\"onDataReceived\", (data) => {\r\n    //   callback(data);\r\n    // });\r\n\r\n    /**\r\n     * System error listeners\r\n     */\r\n    socket.on(\"connect_error\", () => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_error\",\r\n          context: {},\r\n          error: { code: \"none\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"connect_timeout\", (timeout) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_timeout\",\r\n          context: {},\r\n          error: { code: \"connect_timeout\", timeout },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_error\",\r\n          context: {},\r\n          error: { code: error.type, error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_failed\", () => {\r\n      // This should never occur\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_failed\",\r\n          context: {},\r\n          error: { code: \"reconnect_failed\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"error\",\r\n          context: {},\r\n          error: { code: \"error\", error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    /**\r\n     * System status listeners\r\n     */\r\n    socket.on(\"ping\", () => {\r\n      // callback({ data: \"ping\" }, true);\r\n    });\r\n    socket.on(\"pong\", (latency) => {\r\n      // callback({ data: \"pong\", latency }, true);\r\n    });\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n      if (reason === \"io server disconnect\") {\r\n        // the disconnection was initiated by the server, you need to reconnect manually\r\n        socket.connect();\r\n      } else {\r\n        // else the socket will automatically try to reconnect\r\n      }\r\n      // Reasons:\r\n      // - \"transport close\": Server was stopped\r\n      callback({ req: \"disconnect\", status: \"success\", reason }, true);\r\n    });\r\n    socket.on(\"reconnect\", (attemptNumber) => {\r\n      // Successfully reconnected on attempt: attemptNumber\r\n      callback({ req: \"reconnect\", status: \"success\", attemptNumber }, true);\r\n    });\r\n    socket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnect attempt\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnecting\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnecting\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n  }, [instance]);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"register user\", namespace: \"SignUp\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    language,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n  } = props.barrelSetters;\r\n  const { getReviser, getWorkplace, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refFirstName.current !== null &&\r\n        signUpFirstName !== refFirstName.current.value\r\n      )\r\n        setSignUpFirstName(refFirstName.current.value);\r\n\r\n      if (\r\n        refLastName.current !== null &&\r\n        signUpLastName !== refLastName.current.value\r\n      )\r\n        setSignUpLastName(refLastName.current.value);\r\n\r\n      if (refEmail.current !== null && signUpEmail !== refEmail.current.value)\r\n        setSignUpEmail(refEmail.current.value);\r\n\r\n      if (\r\n        refPassword.current !== null &&\r\n        signUpPassword !== refPassword.current.value\r\n      )\r\n        setSignUpPassword(refPassword.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    firstName: yup.string().required(t(\"First name is required\")),\r\n    lastName: yup.string().required(t(\"Last name is required\")),\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.language = language;\r\n    data.validateEmail = true;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const UserRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Sign Up\")}</h3>\r\n\r\n      {/**\r\n       * First name\r\n       */}\r\n      <Form.Group controlId=\"validationFormikFirstName\">\r\n        <Form.Label>{t(\"First name\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter first name\")}\r\n            name=\"firstName\"\r\n            ref={refFirstName}\r\n            value={values.firstName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.firstName && touched.firstName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.firstName}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Last name\r\n       */}\r\n      <Form.Group controlId=\"validationFormikLastName\">\r\n        <Form.Label>{t(\"Last name\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter last name\")}\r\n            name=\"lastName\"\r\n            ref={refLastName}\r\n            value={values.lastName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.lastName && touched.lastName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.lastName}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Email\r\n       */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Password\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"Password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            ref={refPassword}\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Submit button\r\n       */}\r\n      <Form.Group controlId=\"validationSubmitButton\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Login link\r\n       */}\r\n      <p className=\"other-options text-right\">\r\n        <Trans i18nKey=\"SignUp:Already registered\">\r\n          Already registered <a href=\"/sign-in\">sign in?</a>\r\n        </Trans>\r\n      </p>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={UserRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        firstName: signUpFirstName,\r\n        lastName: signUpLastName,\r\n        email: signUpEmail,\r\n        password: signUpPassword,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Overlay.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { cloneElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Overlay\",\r\n    visible: false,\r\n    variant: \"info\",\r\n    dismissible: false,\r\n    onClose: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"dismissible:\", props.dismissible);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  useTimeout(\r\n    () => {\r\n      props.onClose();\r\n    },\r\n    !props.dismissible ? 5000 : -1 // millisec till overlay closes, -1 never\r\n  );\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      let className = \"custom-overlay\";\r\n\r\n      /**\r\n       * Implement property: dismissible\r\n       */\r\n      if (props.dismissible) {\r\n        className += \" alert-dismissible\";\r\n      }\r\n\r\n      /**\r\n       * Implement property: variant\r\n       */\r\n      switch (props.variant) {\r\n        case \"danger\":\r\n          className += \" alert-danger\";\r\n          break;\r\n\r\n        default:\r\n          className += \" alert-info\";\r\n          break;\r\n      }\r\n      let key = 0;\r\n      return (\r\n        <div className={className}>\r\n          {props.dismissible && (\r\n            <button type=\"button\" className=\"close\" onMouseDown={props.onClose}>\r\n              <span aria-hidden=\"true\">×</span>\r\n              <span className=\"sr-only\">Close alert</span>\r\n            </button>\r\n          )}\r\n          {React.Children.map(args.children, (child) => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                ...args,\r\n                styles: null,\r\n                key: key,\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./AlertContainer.css\";\r\n\r\n/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React, { cloneElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = { namespace: \"AlertContainer\", visible: false }; // TODO: adjust namespace\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      return (\r\n        <div className=\"alert-container\">\r\n          {React.Children.map(args.children, (child) => child)}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Overlay from \"../overlay\";\r\nimport AlertContainer from \"../alertContainer\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args.data);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onAlertClose: onClose } = props.barrelEventHandlers;\r\n\r\n  // let t;\r\n  const errorStrings = useTranslation(\"Errors\").t;\r\n  const infoStrings = useTranslation(\"Infos\").t;\r\n\r\n  if (error !== null && info !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <>\r\n        <AlertContainer visible={true}>\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"danger\"\r\n            onClose={() => onClose(\"error\")}\r\n            dismissible={error.dismissible}\r\n          >\r\n            {msgError}\r\n          </Overlay>\r\n\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"info\"\r\n            onClose={() => onClose(\"info\")}\r\n            dismissible={info.dismissible}\r\n          >\r\n            {msgInfo}\r\n          </Overlay>\r\n        </AlertContainer>\r\n      </>\r\n    );\r\n  } else if (error !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        <Overlay\r\n          visible={true}\r\n          variant=\"danger\"\r\n          onClose={() => onClose(\"error\")}\r\n          dismissible={error.dismissible}\r\n        >\r\n          {msgError}\r\n        </Overlay>\r\n      </AlertContainer>\r\n    );\r\n  } else if (info !== null) {\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        <Overlay\r\n          visible={true}\r\n          variant=\"info\"\r\n          onClose={() => onClose(\"info\")}\r\n          dismissible={info.dismissible}\r\n        >\r\n          {msgInfo}\r\n        </Overlay>\r\n      </AlertContainer>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../../translations/i18n\";\r\n// import { withNamespaces } from \"react-i18next\";\r\nimport { Form, Badge } from \"react-bootstrap\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { userData } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"LanguageSelector\");\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n  const languages = [\r\n    { id: 1, language: \"Latviešu\", code: \"lv\" },\r\n    { id: 2, language: \"English\", code: \"en\" },\r\n  ];\r\n  const handleLanguageSelect = (e) => {\r\n    changeLanguage(e.target.value);\r\n  };\r\n  const selectLanguage = (language) => {\r\n    changeLanguage(language);\r\n\r\n    if (userData !== null) {\r\n      sendRequest({\r\n        req: \"register user language\",\r\n        data: { email: userData.email, language },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (1) {\r\n    return (\r\n      <>\r\n        <div style={{ height: \"7px\" }}></div>\r\n        <Badge\r\n          pill\r\n          variant=\"light\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            selectLanguage(\"en\");\r\n          }}\r\n        >\r\n          en\r\n        </Badge>{\" \"}\r\n        <Badge\r\n          pill\r\n          variant=\"light\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            selectLanguage(\"lv\");\r\n          }}\r\n        >\r\n          lv\r\n        </Badge>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <Form.Control\r\n        as=\"select\"\r\n        id=\"languageSelector\"\r\n        onChange={handleLanguageSelect}\r\n        custom\r\n      >\r\n        <option key=\"0\" value={props.language}>\r\n          {t(\"Language\")}\r\n        </option>\r\n        {languages.map((el) => (\r\n          <option key={el.id} value={el.code}>\r\n            {el.language}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    );\r\n  }\r\n};\r\n\r\n// function selectElement(id, valueToSelect) {\r\n//   let element = document.getElementById(id);\r\n//   if (!element) return;\r\n//   element.value = valueToSelect;\r\n// }\r\n\r\n// // catch the event and make changes accordingly\r\n// i18n.on(\"languageChanged\", function (lng) {\r\n//   selectElement(\"languageSelector\", lng);\r\n// });\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n// import { Overlay } from \"react-bootstrap\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n// import moment from \"moment\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Summary from \"../summary\";\r\nimport {\r\n  useSocket,\r\n  sendData,\r\n  startSession,\r\n  endSession,\r\n} from \"../../../utils/sockets\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\nimport { useInterval } from \"../../../utils/useInterval\";\r\nimport Login from \"../../login\";\r\nimport Logout from \"../../logout\";\r\nimport SignUp from \"../../signup\";\r\nimport PasswordReset from \"../../passwordReset\";\r\n\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport ValidateEmail from \"../../validateEmail\";\r\nimport ChangePassword from \"../../changePassword\";\r\nimport Auth from \"../../auth\";\r\n// import UnderConstruction from \"../../underConstruction\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\nimport { useTimeout } from \"../../../utils/useTimeout\";\r\nimport Overlay from \"../../overlay\";\r\n\r\n/**\r\n * Component: Main\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const {\r\n    session,\r\n    instance,\r\n    debug,\r\n    serverResponseReceived,\r\n    // secureSession,\r\n    signedIn,\r\n    userData,\r\n    dailyAllowanceDispatched,\r\n    accountNumber,\r\n    updateInterval,\r\n    externalRequest,\r\n    cartContent,\r\n    validateTokenEmail,\r\n    passwordResetTokenValidated,\r\n    validateTokenPasswordReset,\r\n    connected,\r\n    // deleteResponseProp,\r\n    isExternalRequest,\r\n    clearRefs,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRequestTimedOut,\r\n    setUpdateInterval,\r\n    setDailyAllowanceDispatched,\r\n    // setSessionTimeoutApplied,\r\n    // setSecureSession,\r\n    setSignedIn,\r\n    setRedirectTo,\r\n    setRequest,\r\n    setIsExternalRequest,\r\n    setUserEditorFirstname,\r\n    setUserEditorLastname,\r\n    setUserEditorEmail,\r\n    setUserEditorPassword,\r\n    //\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n    //\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationCategory,\r\n    setPurposeRegistrationSubcategory,\r\n    setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n    //\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const {\r\n    processUserResponse,\r\n    getIP,\r\n    getCart,\r\n    getCartPurposes,\r\n    // updateLastSeenUser,\r\n    getAccountData,\r\n    sendRequest,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    getContainerClass,\r\n    getRedirect,\r\n    showMessage,\r\n  } = props.barrelFunctions;\r\n  const {\r\n    onRedirect,\r\n    onSessionStart,\r\n    onSessionEnd,\r\n  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  // useSocket((data) => {\r\n  //   processUserResponse({\r\n  //     args: data,\r\n  //     barrels: barrels,\r\n  //   });\r\n  // });\r\n\r\n  // useInterval(() => {\r\n  //   updateLastSeenUser();\r\n  //   setSessionTimeoutApplied(false);\r\n  //   // console.log(\"setSessionTimeoutApplied(false)\");\r\n  // }, updateInterval);\r\n\r\n  /** \r\n   * Effect hooks\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On mount / on unmount\r\n   */\r\n  useEffect(() => {\r\n    getIP();\r\n\r\n    getCart();\r\n\r\n    return () => {\r\n      // on unmount\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * On session ID change\r\n   */\r\n  useEffect(() => {\r\n    if (session === null) return;\r\n\r\n    onSessionStart();\r\n\r\n    // eslint-disable-next-line\r\n  }, [session]);\r\n\r\n  /**\r\n   * On connected\r\n   */\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n  }, [connected]);\r\n\r\n  /**\r\n   * On request timeout\r\n   */\r\n  useTimeout(\r\n    () => {\r\n      setRequestTimedOut(true);\r\n      setRequest(null);\r\n      showMessage(\"REQUEST_EXPIRED\", \"info\");\r\n    },\r\n    serverResponseReceived === false ? 7000 : -1 // 7 sec till socket request timeout\r\n  );\r\n\r\n  /**\r\n   * Map user data to user editor vars\r\n   */\r\n  useEffect(() => {\r\n    if (userData === null) return;\r\n    setUserEditorFirstname(userData.firstname);\r\n    setUserEditorLastname(userData.lastname);\r\n    setUserEditorEmail(userData.email);\r\n    setUserEditorPassword(\"\");\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(userData)]);\r\n\r\n  /**\r\n   * On signed in status change\r\n   */\r\n  useEffect(() => {\r\n    if (!signedIn) return;\r\n\r\n    setUpdateInterval(-1);\r\n\r\n    // Dispatch daily allowance\r\n    if (accountNumber !== null && !dailyAllowanceDispatched) {\r\n      getAccountData();\r\n      sendRequest({\r\n        req: \"dispatch daily allowance\",\r\n        data: { uid: accountNumber },\r\n      });\r\n      setDailyAllowanceDispatched(true);\r\n    }\r\n\r\n    /**\r\n     * Handle external request\r\n     */\r\n    // let redirectTarget;\r\n    if (accountNumber !== null) {\r\n      if (isExternalRequest) {\r\n        // redirectTarget = \"/auth\";\r\n        setIsExternalRequest(false);\r\n        onRedirect(\"/auth\");\r\n      } else {\r\n        // Dispatch daily allowance\r\n        // if (!dailyAllowanceDispatched) {\r\n        //   sendRequest({\r\n        //     req: \"dispatch daily allowance\",\r\n        //     data: { uid: accountNumber },\r\n        //   });\r\n        //   setDailyAllowanceDispatched(true);\r\n        // }\r\n        // redirectTarget = \"/summary\";\r\n        // onRedirect(\"/account-registration\");\r\n      }\r\n    } else {\r\n      // redirectTarget = \"/account-registration\";\r\n      onRedirect(\"/account-registration\");\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [signedIn]);\r\n\r\n  /**\r\n   * On account number change\r\n   */\r\n  useEffect(() => {\r\n    if (accountNumber === null) return;\r\n\r\n    // eslint-disable-next-line\r\n  }, [accountNumber]);\r\n\r\n  /**\r\n   * Clear refs\r\n   */\r\n  useEffect(() => {\r\n    if (clearRefs === false) return;\r\n    setPurposeRegistrationTitle(\"\");\r\n    setPurposeRegistrationDescription(\"\");\r\n    setPurposeRegistrationCategory(\"\");\r\n    setPurposeRegistrationSubcategory(\"\");\r\n    setPurposeRegistrationSubcategory2(\"\");\r\n    setPurposeRegistrationKeywords(\"\");\r\n\r\n    //\r\n    setCurrencyCode(\"\");\r\n    setCurrencyName(\"\");\r\n    setCurrencyRegion(\"\");\r\n    setCurrencyNewRate(\"\");\r\n\r\n    setClearRefs(false);\r\n\r\n    // eslint-disable-next-line\r\n  }, [clearRefs]);\r\n\r\n  /**\r\n   * On external request\r\n   */\r\n  useEffect(() => {\r\n    if (externalRequest === null) return;\r\n\r\n    const data = {\r\n      customer: accountNumber,\r\n      cart: externalRequest.cart,\r\n    };\r\n\r\n    sendRequest({ req: \"get cart\", data: data });\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(externalRequest)]);\r\n\r\n  /**\r\n   * On cart content change\r\n   */\r\n  useEffect(() => {\r\n    if (cartContent === null) return;\r\n\r\n    getCartPurposes();\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(cartContent)]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenEmail === null) return;\r\n\r\n    sendEmailValidationRequest(JSON.parse(validateTokenEmail));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenEmail]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (passwordResetTokenValidated === null) return;\r\n\r\n    onRedirect(\"/password\");\r\n\r\n    // eslint-disable-next-line\r\n  }, [passwordResetTokenValidated]);\r\n\r\n  /**\r\n   * On password reset validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenPasswordReset === null) return;\r\n\r\n    sendPasswordResetRequest(JSON.parse(validateTokenPasswordReset));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenPasswordReset]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  const [show, setShow] = React.useState(true);\r\n  const target = React.useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          <Alert data={barrels} />\r\n\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              {false && (\r\n                <div>\r\n                  <Alert data={barrels} />\r\n                </div>\r\n              )}\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(barrels) : Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign in\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-in\"\r\n                  component={() => {\r\n                    return Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign up\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-up\"\r\n                  component={() => {\r\n                    return SignUp(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign up\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/auth\"\r\n                  component={() => (signedIn ? Auth(barrels) : Login(barrels))}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Validate mail\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/validate-email\"\r\n                  component={() => {\r\n                    return ValidateEmail(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Change password\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/password\"\r\n                  component={() => {\r\n                    return ChangePassword(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: User profile\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/profile\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(barrels) : Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Currency\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/currency\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(barrels) : Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign out\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-out\"\r\n                  component={() => {\r\n                    return Logout(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Password reset\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/reset\"\r\n                  component={() => {\r\n                    return PasswordReset(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Account registration\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/account-registration\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Business registration\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/business-registration\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: My business\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/my-business\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Balance\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/balance\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Transfer\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/transfer\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Contact\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/contact\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Summary\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/summary\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span style={{ width: \"40%\" }}>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n\r\n                <span\r\n                  className=\"text-muted\"\r\n                  style={{\r\n                    float: \"left\",\r\n                    marginLeft: \"18px\",\r\n                    width: \"30%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                >\r\n                  {signedIn && window.location.pathname != \"/contact\" && (\r\n                    <small>&nbsp;</small>\r\n                  )}\r\n                </span>\r\n\r\n                <span\r\n                  className=\"text-muted\"\r\n                  style={{\r\n                    float: \"right\",\r\n                    marginRight: \"18px\",\r\n                    width: \"30%\",\r\n                    textAlign: \"right\",\r\n                    // backgroundColor: \"red\",\r\n                  }}\r\n                >\r\n                  {signedIn && window.location.pathname != \"/contact\" && (\r\n                    <small>\r\n                      <a href=\"/contact\">{t(\"Contact\")}</a>\r\n                    </small>\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Checkout\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    externalRequest,\r\n    accountNumber,\r\n    cartContent,\r\n    cartPurposes,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest, format } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const Cart = () => {\r\n    let priceTotal = 0;\r\n    let priceReal = 0;\r\n\r\n    return (\r\n      <>\r\n        {cartContent !== null &&\r\n          cartContent.map((element, key) => {\r\n            priceTotal += element.price * element.amount;\r\n            let product_found = \"N\";\r\n\r\n            if (cartPurposes !== null) {\r\n              let product = cartPurposes.find(\r\n                (products) => products.purpose_id === element.product\r\n              );\r\n\r\n              if (typeof product !== \"undefined\") {\r\n                product_found = \"Y\";\r\n                priceReal += element.price * element.amount;\r\n              }\r\n              // console.log(\"product:\", product);\r\n            }\r\n\r\n            //   if (typeof product !== \"undefined\") {\r\n            //     product_found = product.title;\r\n            //   }\r\n            // }\r\n            return (\r\n              <div key={key}>\r\n                <div>product: {element.product}</div>\r\n                <div>price: {element.price}</div>\r\n                <div>amount: {element.amount}</div>\r\n                <div>found: {product_found}</div>\r\n                <br />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        <div>Total: {format(priceTotal)}</div>\r\n        <div>Real: {format(priceReal)}</div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const cart = typeof externalRequest.cart ? externalRequest.cart : \"\";\r\n    // <div>External request: {JSON.stringify(externalRequest)}</div>\r\n    return (\r\n      <Card title={t(\"Checkout\")}>\r\n        <div>\r\n          <Cart />\r\n        </div>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Spinner, Form } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ValidateEmail\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    validateTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    language,\r\n  } = props.barrelGetters;\r\n  const { setValidateTokenEmail } = props.barrelSetters;\r\n  const { getUrlParam, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Hooks\r\n    ============================================================================ */\r\n\r\n  // setToken(getUrlParam(\"token\"));\r\n  // setEmail(getUrlParam(\"email\"));\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenEmail(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (data) => {\r\n    // const vte = JSON.parse(validateTokenEmail);\r\n    // if (vte === null) return;\r\n    // const { token, email } = vte;\r\n    // console.log(data, validationTokenEmail);\r\n    sendRequest({\r\n      req: \"resend validate email token\",\r\n      data: {\r\n        token: validationTokenEmail.token,\r\n        email: validationTokenEmail.email,\r\n        language,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const queryString = window.location.search;\r\n    // const urlParams = new URLSearchParams(queryString);\r\n\r\n    return token === null ? (\r\n      <>\r\n        <h4>{t(\"A verification link has been sent to your email account.\")}</h4>\r\n        <hr />\r\n        <p>\r\n          {t(\r\n            \"Please click on the link that has just been sent to your email account\"\r\n          )}\r\n        </p>\r\n        {validationTokenEmailResent < 5 && (\r\n          <>\r\n            <br />\r\n            <h5>{t(\"Didn't receive email?\")}</h5>\r\n\r\n            <SubmitButton\r\n              {...args}\r\n              caption={t(\"Submit\")}\r\n              visible={true}\r\n              marginTop={20}\r\n              request={\"resend validate email token\"}\r\n              namespace={props.namespace}\r\n              onSubmit={handleSubmit}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    ) : (\r\n      <div className=\"text-center\">\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"border\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={false}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ChangePassword\",\r\n    request: \"change password\",\r\n    email: null,\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([\r\n    passwordResetTokenValidated === true ? \"SignUp\" : \"ChangePassword\",\r\n  ]); // adjust namespace\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.email = passwordResetTokenEmail;\r\n    // console.log(data);\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ChangePasswordForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Password */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"New password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  if (passwordResetTokenValidated === true) {\r\n    // if (true) {\r\n    return (\r\n      <Formik\r\n        component={ChangePasswordForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          password: \"\",\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    // if (passwordResetTokenValidated === false)\r\n    return <>{t(\"Awaiting validation\")}</>;\r\n    // } else {\r\n    //   // null\r\n    //   return <>How did you land here???</>;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(\"Logout\");\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info, language } = props.barrelGetters;\r\n  const { setLanguage, setInfo, setError } = props.barrelSetters;\r\n  const { showMessage } = props.barrelFunctions;\r\n  const { onLogOut, onSessionStart } = props.barrelEventHandlers;\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Save vars\r\n     */\r\n    const tempError = error;\r\n    const tempInfo = info;\r\n    const tempLanguage = language;\r\n    // const tempSessionTimeoutApplied = sessionTimeoutApplied;\r\n\r\n    /**\r\n     * Log out\r\n     */\r\n    onLogOut();\r\n\r\n    /**\r\n     * Restore vars\r\n     */\r\n    setLanguage(tempLanguage);\r\n    // setSessionTimeoutApplied(tempSessionTimeoutApplied);\r\n    // onSessionStart();\r\n    // onSessionReset();\r\n\r\n    // console.log(\"tempInfo: \", tempInfo);\r\n\r\n    // if (tempError !== null) {\r\n    //   showMessage(tempError, \"error\");\r\n    // } else {\r\n    //   if (tempInfo !== null) {\r\n    //     showMessage(tempInfo, \"info\");\r\n    //   }\r\n    // }\r\n\r\n    if (tempError !== null) {\r\n      // showMessage(tempError, \"error\");\r\n      setError(JSON.stringify(tempError));\r\n    } else {\r\n      setError(null);\r\n    }\r\n\r\n    if (tempInfo !== null) {\r\n      // showMessage(tempInfo, \"info\");\r\n      setInfo(JSON.stringify(tempInfo));\r\n    } else {\r\n      setInfo(null);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, []); // JSON.stringify(error), JSON.stringify(info) - logOut\r\n\r\n  return (\r\n    <>\r\n      <h4>{t(\"See you soon\")}</h4>\r\n      <hr />\r\n\r\n      <br />\r\n      <p className=\"text-center\">\r\n        <a href=\"/\">{t(\"Sign in\")}</a>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n  * Default export\r\n  ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ResetPassword\", request: \"reset password\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { language, passwordResetEmail } = props.barrelGetters;\r\n  const {\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetEmail,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getUrlParam } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  const refEmail = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refEmail.current !== null &&\r\n        passwordResetEmail !== refEmail.current.value\r\n      )\r\n        setPasswordResetEmail(refEmail.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenPasswordReset(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n    * Event listeners\r\n    ============================================================================ */\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    data.language = language;\r\n    sendRequest({\r\n      req: props.request,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n  });\r\n\r\n  const passwordResetForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Reset password\")}</h3>\r\n\r\n      {/* Email */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            ref={refEmail}\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n\r\n  // return (\r\n  //   <Formik\r\n  //     component={passwordResetForm}\r\n  //     validationSchema={schema}\r\n  //     onSubmit={onSubmit}\r\n  //     initialValues={{\r\n  //       email: \"\",\r\n  //     }}\r\n  //   />\r\n  // );\r\n\r\n  return token === null ? (\r\n    <Formik\r\n      component={passwordResetForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        email: passwordResetEmail,\r\n      }}\r\n    />\r\n  ) : (\r\n    <div className=\"text-center\">\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n        hidden={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport UnderConstruction from \"../../underConstruction\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n\r\n/**\r\n * Component: Main\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass, getRedirect } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const signedIn = false;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              <div>\r\n                <Alert data={barrels} />\r\n              </div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return UnderConstruction(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Build } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"UnderConstruction\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <Build style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"We are constructing\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport NotConnected from \"../../notConnected\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n\r\n/**\r\n * Component: Main\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass, getRedirect } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const signedIn = false;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              <div>\r\n                <Alert data={barrels} />\r\n              </div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return NotConnected(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { PowerOff } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"NotConnected\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <PowerOff style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"Not connected\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"RESPONSE HANDLER: \", props, barrels);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    debug,\r\n    // requestTS,\r\n    session,\r\n    sessionTimeout,\r\n    settings,\r\n    loggingIn,\r\n    isExternalRequest,\r\n    signedIn,\r\n    instance,\r\n    responseProps,\r\n    currencies,\r\n    transactions,\r\n    transferRequest,\r\n    shares,\r\n    // transactionsPerPage,\r\n    // sharesPerPage,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    // uid,\r\n    userBusinesses,\r\n    cartPurposes,\r\n    businessPurposes,\r\n    purposeShareholders,\r\n    activeBusinesPurpose,\r\n    lastInsertId,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setSession,\r\n    // setSessionTimeoutApplied,\r\n    setResponseProps,\r\n    setSettings,\r\n    setLoggingIn,\r\n    setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setConnected,\r\n    // setLanguage,\r\n    setUserData,\r\n    setSignedIn,\r\n    setIsExternalRequest,\r\n    setCartContent,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    // setTransferSuccess,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setCartPurposes,\r\n    setBusinessPurposes,\r\n    setCountBusinessPurposes,\r\n    setPurposeShareholders,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidateTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setActivePurposeData,\r\n    setTanRequired,\r\n    // setRedirect,\r\n    setClearRefs,\r\n  } = barrels.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    // processUserResponse,\r\n    getBusinesses,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    showMessage,\r\n    changeLanguage,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    // endSession,\r\n    // updateLastSeenUser,\r\n    showTanInput,\r\n    // updateTimestamp,\r\n    // hideMessage,\r\n  } = barrels.barrelFunctions;\r\n  const {\r\n    // onTransferSuccess,\r\n    onRedirect,\r\n    onSessionTimeout,\r\n    onSessionEnd,\r\n    // onLogOut,\r\n  } = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug) console.log(`response: ${req} (${props.status})`, props, barrels);\r\n\r\n  /**\r\n   * Save response properties\r\n   * @param {string} req\r\n   * @param {string} name\r\n   * @param {string} status\r\n   */\r\n  const saveResponseProps = ({ req, name, status }) => {\r\n    const res = typeof name !== \"undefined\" ? `${req} / ${name}` : req;\r\n    if (responseProps === null) {\r\n      setResponseProps(JSON.stringify([{ res, status }]));\r\n    } else {\r\n      const tempRP = deleteObjectArrayElement(responseProps, \"res\", res);\r\n      setResponseProps(JSON.stringify([...tempRP, { res, status }]));\r\n    }\r\n  };\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (instance === props.reqData.instance &&\r\n        res === \"*\" &&\r\n        status === props.status &&\r\n        name === props.name) ||\r\n      (instance === props.reqData.instance &&\r\n        res === props.req &&\r\n        status === props.status) ||\r\n      (instance === props.reqData.instance && res === \"unknown\")\r\n    ) {\r\n      saveResponseProps({ req, name: props.name, status: props.status });\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n    if (typeof props.token !== \"undefined\") {\r\n      console.log(\"Renewing session...\");\r\n\r\n      onSessionEnd();\r\n      setSession(props.token);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Start session (success)\r\n   */\r\n  onResponse([\"start session\", \"success\"], () => {\r\n    if (signedIn) {\r\n      sendRequest({ req: \"validate session\", data: {} });\r\n    }\r\n    setConnected(true);\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * End session (success)\r\n   */\r\n  onResponse([\"end session\", \"success\"], () => {\r\n    // console.log(\"ON END SESSION\");\r\n\r\n    setConnected(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM users\") {\r\n      setUserSequence(props.results.sequence);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"success\"], () => {\r\n    // register user\r\n    sendRequest({ req: \"register account\", data: props.reqData });\r\n  });\r\n\r\n  onResponse([\"get tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n    setTanRequired(true);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get cart\", \"continue\"], () => {\r\n    if (props.name === \"SELECT carts\") {\r\n      setCartContent(props.results.content);\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"pending\"], () => {\r\n    // setTanRequired(false);\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"finished\"], () => {\r\n    if (props.name === \"UPDATE tans\") {\r\n      if (props.queryCnt > 0) {\r\n        // setTanRequired(true);\r\n        return false;\r\n      } else {\r\n        // setTanRequired(false);\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n\r\n    sendRequest({ req: transferRequest.transferType, data: transferRequest });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (pending)\r\n   */\r\n  onResponse([\"register user\", \"pending\"], () => {\r\n    // Might show some user feedback\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register user\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO users\") {\r\n      if (props.results.insertId > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    } else if (props.name === \"INSERT INTO validation_tokens\") {\r\n      // const { token, email } = props.tags;\r\n      // setValidateTokenEmail(\r\n      //   JSON.stringify({\r\n      //     token,\r\n      //     email,\r\n      //   })\r\n      // );\r\n      setValidationTokenEmail({\r\n        token: props.tags.token,\r\n        email: props.tags.email,\r\n      });\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (success)\r\n   */\r\n  onResponse([\"register user\", \"success\"], () => {\r\n    // console.log(\"REGISTER USER PROPS:\", props);\r\n    const noEmailValidation = false;\r\n\r\n    if (noEmailValidation) {\r\n      setSignedIn(true);\r\n      setSession(props.email); // TODO: Might restore\r\n      onRedirect(\"/account-registration\");\r\n      sendRequest({ req: \"get user\", data: { email: props.email } }); // to not require a log in\r\n      return false;\r\n    } else {\r\n      onRedirect(\"/validate-email\");\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"continue\"], () => {\r\n    if (props.name === \"SELECT validation_tokens\") {\r\n      setValidationTokenEmailResent(props.results.resent);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"continue\"], () => {\r\n    if (props.name === \"UPDATE validation tokens\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        // onRedirect(\"/sign-in\");\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (props.name === \"UPDATE users\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        onRedirect(\"/sign-in\");\r\n        return true;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"success\"], () => {\r\n    setValidateTokenEmail(null); // email validation token not needed any more + prevent the unnecessary resend\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"validate password reset token\", \"continue\"], () => {\r\n  //   if (props.name === \"UPDATE validation tokens\") {\r\n  //     if (props.results.affectedRows > 0) {\r\n  //       // onRedirect(\"/password\");\r\n  //       setPasswordResetTokenValidated(true);\r\n  //       return true;\r\n  //     } else {\r\n  //       // No row was inserted - an error was returned\r\n  //       return true;\r\n  //     }\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"validate password reset token\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(true);\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get URI settings (continue)\r\n   */\r\n  onResponse([\"get uri settings\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM uri_settings\") {\r\n      const results = JSON.parse(props.results.settings);\r\n\r\n      // console.log(\"results.settings\", results);\r\n\r\n      setSettings(JSON.stringify(results));\r\n\r\n      // Force single currency\r\n      if (\r\n        typeof results[\"currency\"] !== \"undefined\" &&\r\n        results[\"currency\"] !== null\r\n      ) {\r\n        const abbr = results[\"currency\"];\r\n        // setCurrencyAbbr(abbr);\r\n        sendRequest({\r\n          req: \"register user currency\",\r\n          data: { email: userData.email, currency_id: abbr },\r\n        });\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user currency (success)\r\n   */\r\n  onResponse([\"register user currency\", \"success\"], () => {\r\n    setCurrencyAbbr(props.reqData.currency_id);\r\n    // return false;\r\n  });\r\n\r\n  /**\r\n   * Sign in user (continue)\r\n   */\r\n  onResponse([\"sign in user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      /**\r\n       * Validated user\r\n       */\r\n      if (props.results.status === 1) {\r\n        setUserData(JSON.stringify(props.results));\r\n        setAccountNumber(props.results.uid);\r\n        // setSession(props.results.email); // TODO: Might restore\r\n        setCurrencyAbbr(props.results.currency_abbr);\r\n        setCurrencyRate(\r\n          isNaN(props.results.currency_rate) ? 1 : props.results.currency_rate\r\n        );\r\n\r\n        changeLanguage(props.results.language);\r\n\r\n        return false;\r\n\r\n        /**\r\n         * Not yet validated user\r\n         */\r\n      } else if (props.results.status === 0) {\r\n        onRedirect(\"/validate-email\");\r\n        return true;\r\n\r\n        /**\r\n         * Suspended user\r\n         */\r\n      } else if (props.results.status === 2) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_SUSPENDED\", \"error\");\r\n        return true;\r\n\r\n        /**\r\n         * Deleted user\r\n         */\r\n      } else if (props.results.status === 3) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_DELETED\", \"error\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Sign in user (finished)\r\n   */\r\n  onResponse([\"sign in user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt > 0) {\r\n        return false;\r\n      } else {\r\n        showMessage(\"INVALID_SIGN_IN\", \"error\");\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"sign in user\", \"success\"], () => {\r\n    setSignedIn(true);\r\n    setLoggingIn(false);\r\n    onSessionEnd();\r\n    setSession(props.token);\r\n\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"update last seen user\", \"success\"], () => {\r\n  //   // onSessionEnd();\r\n  //   // setSession(props.token); // TODO: Might restore\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Update user (success)\r\n   */\r\n  onResponse([\"update user\", \"success\"], () => {\r\n    sendRequest({ req: \"get user\", data: { email: userData.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user (continue)\r\n   */\r\n  onResponse([\"get user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUserData(JSON.stringify(props.results));\r\n      setUID(props.results.uid);\r\n      setAccountNumber(props.results.uid);\r\n      if (accountNumber === null && props.results.uid !== null) {\r\n        setRedirectTo(\"/summary\");\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user (finished)\r\n   */\r\n  onResponse([\"get user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 1) {\r\n        // exactly one user found - all is good\r\n        return false;\r\n      } else if (props.queryCnt === 0) {\r\n        // Something wrong with (accessing) the user data\r\n        // Probable causes:\r\n        // - user was deleted from the DB\r\n        // - user status was set to >= 2\r\n        // - multiple users with the same email address, most improbable (db constraint)\r\n        // - user changed the email address or password\r\n        setRedirectTo(\"/sign-out\");\r\n        // showMessage(\"INVALID_DATA\", \"error\");\r\n        return true;\r\n      }\r\n      return true;\r\n    }\r\n    // if (props.rowNum === 1) {\r\n    //   return true;\r\n    // } else {\r\n    //   // Something wrong with (accessing) the user data\r\n    //   // Probable causes:\r\n    //   // - user was deleted from the DB\r\n    //   // - user status was set to >= 2\r\n    //   // - multiple users with the same email address, most improbable (db constraint)\r\n    //   // - user changed the email address or password\r\n    //   // onLogOut();\r\n    //   setRedirectTo(\"/sign-out\");\r\n    //   // showMessage(\"INVALID_DATA\", \"error\");\r\n    //   return true;\r\n    // }\r\n  });\r\n\r\n  onResponse([\"get user\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (continue)\r\n   */\r\n  onResponse([\"get user businesses\", \"continue\"], () => {\r\n    if (props.name === \"SELECT businesses\") {\r\n      const business = props.results;\r\n      const { business_id } = business;\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([business]));\r\n        getBusinessPurposes(business_id, 0, 1);\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, business]));\r\n      }\r\n    } else if (props.name === \"COUNT businesses\") {\r\n      setCountBusinesses(props.results.count_businesses);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (finished)\r\n   */\r\n  onResponse([\"get user businesses\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    setUserBusinessesLoaded(true);\r\n    setRedirectTo(\"/my-business\");\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get user businesses\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (continue)\r\n   */\r\n  onResponse([\"get cart purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (cartPurposes === null) {\r\n        setCartPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setCartPurposes(JSON.stringify([...cartPurposes, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      // setCartPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (success)\r\n   */\r\n  onResponse([\"get cart purposes\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (continue)\r\n   */\r\n  onResponse([\"get business purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (businessPurposes === null) {\r\n        setBusinessPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setBusinessPurposes(\r\n          JSON.stringify([...businessPurposes, props.results])\r\n        );\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      setCountBusinessPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (finished)\r\n   */\r\n  onResponse([\"get business purposes\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (continue)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"continue\"], () => {\r\n    if (props.name === \"SELECT shares\") {\r\n      if (purposeShareholders === null) {\r\n        setPurposeShareholders(JSON.stringify([props.results]));\r\n      } else {\r\n        setPurposeShareholders(\r\n          JSON.stringify([...purposeShareholders, props.results])\r\n        );\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (finished)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user business by id (continue)\r\n   */\r\n  // onResponse([\"get business by id\", \"continue\"], () => {\r\n  //   if (userBusinesses === null) {\r\n  //     setUserBusinesses(JSON.stringify([props.results]));\r\n  //   } else {\r\n  //     setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"get business by id\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.name === \"SELECT businesses\") {\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([props.results]));\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business by id (finished)\r\n   */\r\n  onResponse([\"get business by id\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.queryCnt > 0) {\r\n      // getting business was successful - query returned results\r\n      return false;\r\n    } else {\r\n      console.log(\"Error getting business by id\");\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get business by id\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (continue)\r\n   */\r\n  onResponse([\"get purpose by id\", \"continue\"], () => {\r\n    /**\r\n     * Replace the purpose if it is already there\r\n     */\r\n    const index = getObjectArrayElementIndex(\r\n      businessPurposes,\r\n      \"purpose_id\",\r\n      props.results.purpose_id\r\n    );\r\n    if (index > -1) {\r\n      businessPurposes.splice(index, 1);\r\n      let temp = [...businessPurposes, props.results];\r\n      temp = sortObjectArray(temp, \"title\");\r\n      setBusinessPurposes(JSON.stringify(temp));\r\n      setActivePurposeData(JSON.stringify(props.results));\r\n\r\n      /**\r\n       * ... otherwise add the purpose\r\n       */\r\n    } else {\r\n      if (props.name === \"SELECT purposes\") {\r\n        if (businessPurposes === null) {\r\n          setBusinessPurposes(JSON.stringify([props.results]));\r\n        } else {\r\n          setBusinessPurposes(\r\n            JSON.stringify([...businessPurposes, props.results])\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (finished)\r\n   */\r\n  onResponse([\"get purpose by id\", \"finished\"], () => {\r\n    if (props.queryCnt < 1) {\r\n      // Something went wrong\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (success)\r\n   */\r\n  onResponse([\"get purpose by id\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (continue)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"continue\"], () => {\r\n    if (purposeShareholders === null) {\r\n      setPurposeShareholders(JSON.stringify([props.results]));\r\n    } else {\r\n      setPurposeShareholders(\r\n        JSON.stringify([...purposeShareholders, props.results])\r\n      );\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (finished)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Upload file (ready)\r\n   */\r\n  onResponse([\"upload file\", \"continue\"], () => {\r\n    // console.log(\"UPLOAD FILE =========== \");\r\n\r\n    // if (props.name === \"SELECT 1\") {\r\n    // setAccountPhotoPath(props + \"?r=\" + Math.random());\r\n    setAccountPhotoPath(Date.now()); // ok\r\n    return false;\r\n    // }\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"finished\"], () => {\r\n    if (props.name === \"SELECT 1\") {\r\n      if (props.queryCnt === 0) {\r\n        // something went wrong\r\n        // setAccountPhotoPath(\"ok\");\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"continue\"], () => {\r\n    if (props.results.affectedRows < 1) {\r\n      // error registering account\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"INVALID_DATA\", \"error\");\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"success\"], () => {\r\n    // getAccountData();\r\n    sendRequest({ req: \"get user\", data: { email: props.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (continue)\r\n   */\r\n  onResponse([\"get account data\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUID(props.results.uid);\r\n      setUserData(JSON.stringify(props.results));\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (finished)\r\n   */\r\n  onResponse([\"get account data\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 0) {\r\n        // Account not reachable\r\n        // - user session timed out\r\n        showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get account data\", \"success\"], () => {\r\n    if (userData === null) return true;\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2S\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (continue)\r\n   */\r\n  onResponse([\"transfer U2S\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (success)\r\n   */\r\n  onResponse([\"transfer U2S\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2U\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (continue)\r\n   */\r\n  onResponse([\"transfer U2U\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (success)\r\n   */\r\n  onResponse([\"transfer U2U\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2B\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (continue)\r\n   */\r\n  onResponse([\"transfer U2B\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (success)\r\n   */\r\n  onResponse([\"transfer U2B\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register business\r\n   ============================================================================================*/\r\n  onResponse([\"register business\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    if (props.name === \"INSERT INTO businesses\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register business\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    // <ModalConfirm\r\n    //   title=\"Add Shareholders\"\r\n    //   message=\"Do you want to add yourself as a shareholder?\"\r\n    // />;\r\n\r\n    sendRequest({\r\n      req: \"get business by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    // getBusinesses();\r\n    return false;\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"register currency\", \"continue\"], () => {\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    if (props.results.insertId > 0) {\r\n      setLastInsertId(props.results.insertId);\r\n\r\n      return false;\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register currency\", \"success\"], () => {\r\n    showMessage(\"REGISTER_CURRENCY_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get currency by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (continue)\r\n   */\r\n  onResponse([\"get currencies\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT currencies\") {\r\n      setCountCurrencies(props.results.count_currencies);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (finished)\r\n   */\r\n  onResponse([\"get currencies\", \"finished\"], () => {\r\n    setRedirectTo(\"/currency\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (continue)\r\n   */\r\n  onResponse([\"get currency by id\", \"continue\"], () => {\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get currency by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transactions (continue)\r\n   */\r\n  onResponse([\"get transactions\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT transactions\") {\r\n      if (transactions === null) {\r\n        setTransactions(JSON.stringify([props.results]));\r\n      } else {\r\n        setTransactions(JSON.stringify([...transactions, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT transactions\") {\r\n      setCountTransactions(props.results.count_transaction_positions);\r\n      // } else if (props.name === \"VALIDATE SESSION\") {\r\n      //   if (typeof props.token !== \"undefined\") {\r\n      //     console.log(\"RESET SESSION\");\r\n      //     onSessionEnd();\r\n      //     // setSession(props.newToken);\r\n      //     setSession(props.token);\r\n      //   }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get transactions (finished)\r\n   */\r\n  onResponse([\"get transactions\", \"finished\"], () => {\r\n    setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get shares (continue)\r\n   */\r\n  onResponse([\"get shares\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT shares\") {\r\n      if (shares === null) {\r\n        setShares(JSON.stringify([props.results]));\r\n      } else {\r\n        setShares(JSON.stringify([...shares, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT shares\") {\r\n      setCountShares(props.results.count_shares);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shares (finished)\r\n   */\r\n  onResponse([\"get shares\", \"finished\"], () => {\r\n    // setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transaction by id (continue)\r\n   */\r\n  onResponse([\"get transaction by id\", \"continue\"], () => {\r\n    if (transactions === null) {\r\n      setTransactions(JSON.stringify([props.results]));\r\n    } else {\r\n      setTransactions(JSON.stringify([...transactions, props.results]));\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get transaction by id\", \"finished\"], () => {\r\n    getAccountData();\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"send message\", \"success\"], () => {\r\n    showMessage(\"SEND_MESSAGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"continue\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get purpose by id\",\r\n    //   data: { id: props.results.insertId },\r\n    // });\r\n    if (props.name === \"INSERT INTO purposes\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"success\"], () => {\r\n    showMessage(\"REGISTER_PURPOSE_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: lastInsertId, language: language },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"update purpose property\", \"success\"], () => {\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: props.reqData.id, language: language },\r\n    });\r\n    // getBusinessPurposes(props.reqData.business_id, 0, 1);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"continue\"], () => {\r\n    if (props.results.insertId > 0) {\r\n      // showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\");\r\n\r\n      // return sendRequest({\r\n      //   req: \"get shareholder by id\",\r\n      //   data: { id: props.results.insertId },\r\n      // });\r\n      setLastInsertId(props.results.insertId);\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"change share\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    // getPurposeShareholders(activeBusinesPurpose);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"remove shareholder\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"reset password\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"change password\", \"success\"], () => {\r\n    // TOTO: If NO_ROWS_CHANGE - probably the currently saved password was submitted\r\n    setPasswordResetTokenValidated(null);\r\n    setPasswordResetTokenEmail(null);\r\n    onRedirect(\"/sign-in\");\r\n    showMessage(\"PASSWORD_CHANGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"unknown\"], () => {\r\n  //   if (\r\n  //     status === \"pending\" ||\r\n  //     status === \"continue\" ||\r\n  //     status === \"finished\" ||\r\n  //     status === \"success\"\r\n  //   ) {\r\n  //     return false;\r\n  //   } else {\r\n  //     showMessage(`${req}: ${status}`, \"info\");\r\n  //     return true;\r\n  //   }\r\n  // });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport i18n from \"./translations/i18n\";\r\nimport config from \"./utils/config\";\r\nimport { useStickyState } from \"./utils/state\";\r\nimport Main from \"./components/pages/main\";\r\nimport UnderConstruction from \"./components/pages/underConstruction\";\r\nimport NotConnected from \"./components/pages/notConnected\";\r\n\r\nimport {\r\n  useSocket,\r\n  useSystemSocket,\r\n  sendData,\r\n  startSession,\r\n  endSession,\r\n} from \"./utils/sockets\";\r\nimport { useInterval } from \"./utils/useInterval\";\r\nimport { useTimeout } from \"./utils/useTimeout\";\r\nimport requestHandler from \"./utils/requestHandler\";\r\nimport userErrorHandler from \"./utils/userErrorHandler\";\r\nimport userResponseHandler from \"./utils/userResponseHandler\";\r\nimport systemErrorHandler from \"./utils/systemErrorHandler\";\r\nimport systemResponseHandler from \"./utils/systemResponseHandler\";\r\n// import {\r\n//   useSocket,\r\n//   sendData,\r\n//   startSession,\r\n//   endSession,\r\n// } from \"../../../utils/sockets\";\r\n// import functions from \"./barrelFunctions\";\r\n\r\n/**\r\n * Component: Dispatcher\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Dispatcher\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const isLocalhost =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\";\r\n\r\n  /** \r\n   * Hooks\r\n   ============================================================================ */\r\n  const [debug, setDebug] = useState(isLocalhost);\r\n  const [loggingOut, setLoggingOut] = useState(false);\r\n  const [loggingIn, setLoggingIn] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(true);\r\n  const [request, setRequest] = useStickyState(null, \"request\");\r\n  const [serverResponseReceived, setServerResponseReceived] = useStickyState(\r\n    null,\r\n    \"serverResponseReceived\"\r\n  );\r\n  const [requestTimedOut, setRequestTimedOut] = useStickyState(\r\n    false,\r\n    \"requestTimedOut\"\r\n  );\r\n  const [instance, setInstance] = useState(Date.now());\r\n  const [session, setSession] = useStickyState(uuidv4(), \"session\");\r\n  const [settings, setSettings] = useStickyState(null, \"settings\");\r\n  const [responseProps, setResponseProps] = useStickyState(\r\n    null,\r\n    \"responseProps\"\r\n  );\r\n  const [sessionTimeout, setSessionTimeout] = useStickyState(\r\n    (!debug ? 5 : 120) * 60, // 30 | 5 * 60\r\n    \"sessionTimeout\"\r\n  );\r\n  const [connected, setConnected] = useStickyState(false, \"connected\");\r\n  const [reconnecting, setReconnecting] = useStickyState(false, \"reconnecting\");\r\n  const [ip, setIP] = useStickyState(\"\", \"ip\");\r\n  const [signedIn, setSignedIn] = useStickyState(false, \"signedIn\");\r\n  const [\r\n    dailyAllowanceDispatched,\r\n    setDailyAllowanceDispatched,\r\n  ] = useStickyState(false, \"dailyAllowanceDispatched\");\r\n  const [isExternalRequest, setIsExternalRequest] = useStickyState(\r\n    false,\r\n    \"isExternalRequest\"\r\n  );\r\n  const [externalRequest, setExternalRequest] = useStickyState(\r\n    null,\r\n    \"externalRequest\"\r\n  );\r\n  const [cartContent, setCartContent] = useStickyState(null, \"cartContent\");\r\n  const [updateInterval, setUpdateInterval] = useStickyState(\r\n    -1,\r\n    \"updateInterval\"\r\n  );\r\n  const [currencyAbbr, setCurrencyAbbr] = useStickyState(\"Z\", \"currencyAbbr\");\r\n  const [currencyRate, setCurrencyRate] = useState(1);\r\n  const [currencies, setCurrencies] = useStickyState(null, \"currencies\");\r\n  const [transactions, setTransactions] = useStickyState(null, \"transactions\");\r\n  const [shares, setShares] = useStickyState(null, \"shares\");\r\n  const [accordionView, setAccordionView] = useStickyState(\r\n    \"balance\",\r\n    \"accordionView\"\r\n  );\r\n  const [accordionViewCurrency, setAccordionViewCurrency] = useStickyState(\r\n    null,\r\n    \"accordionViewCurrency\"\r\n  );\r\n  const [countCurrencies, setCountCurrencies] = useStickyState(\r\n    null,\r\n    \"countCurrencies\"\r\n  );\r\n  const [countTransactions, setCountTransactions] = useStickyState(\r\n    null,\r\n    \"countTransactions\"\r\n  );\r\n  const [countShares, setCountShares] = useStickyState(null, \"countShares\");\r\n  const [activePageCurrencies, setActivePageCurrencies] = useStickyState(\r\n    1,\r\n    \"activePageCurrencies\"\r\n  );\r\n  const [activePageTransactions, setActivePageTransactions] = useStickyState(\r\n    1,\r\n    \"activePageTransactions\"\r\n  );\r\n  const [activePageShares, setActivePageShares] = useStickyState(\r\n    1,\r\n    \"activePageShares\"\r\n  );\r\n  const [currenciesPerPage, setCurrenciesPerPage] = useStickyState(\r\n    5,\r\n    \"currenciesPerPage\"\r\n  );\r\n  const [transactionsPerPage, setTransactionsPerPage] = useStickyState(\r\n    5,\r\n    \"transactionsPerPage\"\r\n  );\r\n  const [sharesPerPage, setSharesPerPage] = useStickyState(5, \"sharesPerPage\");\r\n  const [userData, setUserData] = useStickyState(null, \"userData\");\r\n  const [uid, setUID] = useStickyState(null, \"uid\");\r\n  const [accountNumber, setAccountNumber] = useStickyState(\r\n    null,\r\n    \"accountNumber\"\r\n  );\r\n  const [userSequence, setUserSequence] = useStickyState(null, \"userSequence\");\r\n  const [accountType, setAccountType] = useStickyState(null, \"accountType\");\r\n  const [userBusinesses, setUserBusinesses] = useStickyState(\r\n    null,\r\n    \"userBusinesses\"\r\n  );\r\n  const [countBusinesses, setCountBusinesses] = useStickyState(\r\n    null,\r\n    \"countBusinesses\"\r\n  );\r\n  const [businessesPerPage, setBusinessesPerPage] = useStickyState(\r\n    1,\r\n    \"businessesPerPage\"\r\n  );\r\n  const [activePageBusinesses, setActivePageBusinesses] = useStickyState(\r\n    1,\r\n    \"activePageBusinesses\"\r\n  );\r\n  const [userBusinessesLoaded, setUserBusinessesLoaded] = useStickyState(\r\n    false,\r\n    \"userBusinessesLoaded\"\r\n  );\r\n  const [activeBusiness, setActiveBusiness] = useStickyState(\r\n    null,\r\n    \"activeBusiness\"\r\n  );\r\n  const [activeBusinessID, setActiveBusinessID] = useStickyState(\r\n    null,\r\n    \"activeBusinessID\"\r\n  );\r\n\r\n  const [businessPurposes, setBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"businessPurposes\"\r\n  );\r\n\r\n  const [cartPurposes, setCartPurposes] = useStickyState(null, \"cartPurposes\");\r\n\r\n  const [countBusinessPurposes, setCountBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"countBusinessPurposes\"\r\n  );\r\n  const [businessPurposesPerPage, setBusinessPurposesPerPage] = useStickyState(\r\n    5,\r\n    \"businessPurposesPerPage\"\r\n  );\r\n  const [\r\n    activePageBusinessPurposes,\r\n    setActivePageBusinessPurposes,\r\n  ] = useStickyState(1, \"activePageBusinessPurposes\");\r\n\r\n  const [activeBusinesPurpose, setActiveBusinesPurpose] = useStickyState(\r\n    null,\r\n    \"activeBusinesPurpose\"\r\n  );\r\n\r\n  const [activePurposeData, setActivePurposeData] = useStickyState(\r\n    null,\r\n    \"activePurposeData\"\r\n  );\r\n\r\n  const [activePurposeProperty, setActivePurposeProperty] = useStickyState(\r\n    null,\r\n    \"activePurposeProperty\"\r\n  );\r\n\r\n  const [purposeShareholders, setPurposeShareholders] = useStickyState(\r\n    null,\r\n    \"purposeShareholders\"\r\n  );\r\n\r\n  const [clearRefs, setClearRefs] = useStickyState(false, \"clearRefs\");\r\n\r\n  /**\r\n   * Log in\r\n   */\r\n  const [logInEmail, setLogInEmail] = useStickyState(\"\", \"logInEmail\");\r\n  const [logInPassword, setLogInPassword] = useStickyState(\"\", \"logInPassword\");\r\n\r\n  /**\r\n   * Sign Up\r\n   */\r\n  const [signUpFirstName, setSignUpFirstName] = useStickyState(\r\n    \"\",\r\n    \"signUpFirstName\"\r\n  );\r\n  const [signUpLastName, setSignUpLastName] = useStickyState(\r\n    \"\",\r\n    \"signUpLastName\"\r\n  );\r\n  const [signUpEmail, setSignUpEmail] = useStickyState(\"\", \"signUpEmail\");\r\n  const [signUpPassword, setSignUpPassword] = useStickyState(\r\n    \"\",\r\n    \"signUpPassword\"\r\n  );\r\n\r\n  /**\r\n   * Business registration\r\n   */\r\n  const [\r\n    businessRegistrationAddTitle,\r\n    setBusinessRegistrationAddTitle,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddTitle\");\r\n  const [\r\n    businessRegistrationAddDescription,\r\n    setBusinessRegistrationAddDescription,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddDescription\");\r\n\r\n  /**\r\n   * Purpose registration\r\n   */\r\n  const [\r\n    purposeRegistrationTitle,\r\n    setPurposeRegistrationTitle,\r\n  ] = useStickyState(\"\", \"purposeRegistrationTitle\");\r\n  const [\r\n    purposeRegistrationDescription,\r\n    setPurposeRegistrationDescription,\r\n  ] = useStickyState(\"\", \"purposeRegistrationDescription\");\r\n  const [\r\n    purposeRegistrationCategory,\r\n    setPurposeRegistrationCategory,\r\n  ] = useStickyState(\"\", \"purposeRegistrationCategory\");\r\n  const [\r\n    purposeRegistrationSubcategory,\r\n    setPurposeRegistrationSubcategory,\r\n  ] = useStickyState(\"\", \"purposeRegistrationSubcategory\");\r\n  const [\r\n    purposeRegistrationSubcategory2,\r\n    setPurposeRegistrationSubcategory2,\r\n  ] = useStickyState(\"\", \"purposeRegistrationSubcategory2\");\r\n  const [\r\n    purposeRegistrationKeywords,\r\n    setPurposeRegistrationKeywords,\r\n  ] = useStickyState(\"\", \"purposeRegistrationKeywords\");\r\n\r\n  /**\r\n   * User editor\r\n   */\r\n  const [userEditorEditFirstname, setUserEditorEditFirstname] = useStickyState(\r\n    false,\r\n    \"userEditorEditFirstname\"\r\n  );\r\n  const [userEditorFirstname, setUserEditorFirstname] = useStickyState(\r\n    \"\",\r\n    \"userEditorFirstname\"\r\n  );\r\n  const [userEditorEditLastname, setUserEditorEditLastname] = useStickyState(\r\n    false,\r\n    \"userEditorEditLastname\"\r\n  );\r\n  const [userEditorLastname, setUserEditorLastname] = useStickyState(\r\n    \"\",\r\n    \"userEditorLastname\"\r\n  );\r\n  const [userEditorEditEmail, setUserEditorEditEmail] = useStickyState(\r\n    false,\r\n    \"userEditorEditEmail\"\r\n  );\r\n  const [userEditorEmail, setUserEditorEmail] = useStickyState(\r\n    \"\",\r\n    \"userEditorEmail\"\r\n  );\r\n  const [userEditorEditPassword, setUserEditorEditPassword] = useStickyState(\r\n    false,\r\n    \"userEditorEditPassword\"\r\n  );\r\n  const [userEditorPassword, setUserEditorPassword] = useStickyState(\r\n    \"\",\r\n    \"userEditorPassword\"\r\n  );\r\n  const [\r\n    userEditorPasswordVisible,\r\n    setUserEditorPasswordVisible,\r\n  ] = useStickyState(false, \"userEditorPasswordVisible\");\r\n  const [\r\n    userEditorSubmitButtonVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  ] = useStickyState(false, \"userEditorSubmitButtonVisible\");\r\n\r\n  /**\r\n   * Password reset\r\n   */\r\n  const [passwordResetEmail, setPasswordResetEmail] = useStickyState(\r\n    \"\",\r\n    \"passwordResetEmail\"\r\n  );\r\n\r\n  /**\r\n   * TAN input\r\n   */\r\n  const [tanInputTAN, setTanInputTAN] = useStickyState(\"\", \"tanInputTAN\");\r\n\r\n  /**\r\n   * Misc\r\n   */\r\n\r\n  // const [businessLoaded, setBusinessLoaded] = useState(null);\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [redirectTo, setRedirectTo] = useState(null);\r\n  const [lastInsertId, setLastInsertId] = useState(null);\r\n  // const [responseData, setResponseData] = useState(null);\r\n\r\n  const [validateTokenEmail, setValidateTokenEmail] = useState(null);\r\n  const [validateTokenPasswordReset, setValidateTokenPasswordReset] = useState(\r\n    null\r\n  );\r\n\r\n  const [\r\n    passwordResetTokenValidated,\r\n    setPasswordResetTokenValidated,\r\n  ] = useState(null);\r\n  const [passwordResetTokenEmail, setPasswordResetTokenEmail] = useState(null);\r\n\r\n  // const [tmrConnected] = useState(null);\r\n  const [validationTokenEmail, setValidationTokenEmail] = useStickyState(\r\n    null,\r\n    \"validationTokenEmail\"\r\n  ); //\r\n  const [\r\n    validationTokenEmailResent,\r\n    setValidationTokenEmailResent,\r\n  ] = useStickyState(0, \"validationTokenEmailResent\"); //\r\n  const [language, setLanguage] = useStickyState(\r\n    i18n.options.fallbackLng[0],\r\n    \"language\"\r\n  ); //\r\n  const [transferType, setTransferType] = useStickyState(\r\n    \"#u2s\",\r\n    \"transferType\"\r\n  );\r\n  const [transferRequest, setTransferRequest] = useStickyState(\r\n    null,\r\n    \"transferRequest\"\r\n  );\r\n  const [transferFromAccount, setTransferFromAccount] = useStickyState(\r\n    \"\",\r\n    \"transferFromAccount\"\r\n  );\r\n  const [transferToAccount, setTransferToAccount] = useStickyState(\r\n    \"\",\r\n    \"transferToAccount\"\r\n  );\r\n  const [transferAmount, setTransferAmount] = useStickyState(\r\n    \"\",\r\n    \"transferAmount\"\r\n  );\r\n  const [transferToUID, setTransferToUID] = useStickyState(\"\", \"transferToUID\");\r\n  const [transferToPurpose, setTransferToPurpose] = useStickyState(\r\n    \"\",\r\n    \"transferToPurpose\"\r\n  );\r\n  const [transferDescription, setTransferDescription] = useStickyState(\r\n    \"\",\r\n    \"transferDescription\"\r\n  );\r\n  const [contactSubject, setContactSubject] = useStickyState(\r\n    \"\",\r\n    \"contactSubject\"\r\n  );\r\n  const [contactMessage, setContactMessage] = useStickyState(\r\n    \"\",\r\n    \"contactMessage\"\r\n  );\r\n  const [userBirthYear, setUserBirthYear] = useStickyState(\"\", \"userBirthYear\");\r\n  const [userBirthMonth, setUserBirthMonth] = useStickyState(\r\n    \"\",\r\n    \"userBirthMonth\"\r\n  );\r\n  const [userBirthDay, setUserBirthDay] = useStickyState(\"\", \"userBirthDay\");\r\n  const [userBirthDateError, setUserBirthDateError] = useState(\r\n    \"\",\r\n    \"userBirthDateError\"\r\n  );\r\n  const [userTimezone, setUserTimezone] = useStickyState(\"\", \"userTimezone\");\r\n\r\n  const [currencyCode, setCurrencyCode] = useStickyState(\"\", \"currencyCode\");\r\n  const [currencyName, setCurrencyName] = useStickyState(\"\", \"currencyName\");\r\n  const [currencyRegion, setCurrencyRegion] = useStickyState(\r\n    \"\",\r\n    \"currencyRegion\"\r\n  );\r\n  const [currencyNewRate, setCurrencyNewRate] = useStickyState(\r\n    1.0,\r\n    \"currencyNewRate\"\r\n  );\r\n\r\n  const [tanRequired, setTanRequired] = useStickyState(false, \"tanRequired\");\r\n  // const [transferSuccess, setTransferSuccess] = useStickyState(\r\n  //   false,\r\n  //   \"transferSuccess\"\r\n  // );\r\n  const [accountPhotoPath, setAccountPhotoPath] = useState(\"\");\r\n  const [error, setError] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  const [info, setInfo] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  // const [alertVisible, setAlertVisible] = useState(false);\r\n\r\n  // const gotEvent = useEventListener();\r\n  // console.log(gotEvent);\r\n\r\n  /**\r\n   * Barrel: Getters\r\n   */\r\n  const barrelGetters = {\r\n    debug,\r\n    // instance,\r\n    loggingOut,\r\n    loggingIn,\r\n    // timestamp,\r\n    // startTimestamp,\r\n    pageLoading,\r\n    request,\r\n    serverResponseReceived,\r\n    requestTimedOut,\r\n    // requestTS,\r\n    instance,\r\n    responseProps: JSON.parse(responseProps),\r\n    // deleteResponseProp,\r\n    // lastRequest,\r\n    session,\r\n    // secureSession,\r\n    sessionTimeout,\r\n    // sessionTimeoutApplied,\r\n    settings: JSON.parse(settings),\r\n    ip,\r\n    updateInterval,\r\n    currencies: JSON.parse(currencies),\r\n    transactions: JSON.parse(transactions),\r\n    shares: JSON.parse(shares),\r\n    accordionView,\r\n    accordionViewCurrency,\r\n    countCurrencies,\r\n    countTransactions,\r\n    countShares,\r\n    activePageCurrencies,\r\n    activePageTransactions,\r\n    activePageShares,\r\n    currenciesPerPage,\r\n    transactionsPerPage,\r\n    sharesPerPage,\r\n    userData: JSON.parse(userData),\r\n    // redirect,\r\n    redirectTo,\r\n    lastInsertId,\r\n    connected,\r\n    reconnecting,\r\n    signedIn,\r\n    dailyAllowanceDispatched,\r\n    isExternalRequest,\r\n    externalRequest: JSON.parse(externalRequest),\r\n    cartContent: JSON.parse(cartContent),\r\n    currencyAbbr,\r\n    currencyRate,\r\n    // currencyStatus,\r\n    accountNumber,\r\n    userSequence,\r\n    accountType,\r\n    uid,\r\n    userBusinesses: JSON.parse(userBusinesses),\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes: JSON.parse(businessPurposes),\r\n    cartPurposes: JSON.parse(cartPurposes),\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    // purposeID,\r\n    activePurposeData: JSON.parse(activePurposeData),\r\n    purposeShareholders: JSON.parse(purposeShareholders),\r\n    clearRefs,\r\n    logInEmail,\r\n    logInPassword,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    purposeRegistrationCategory,\r\n    purposeRegistrationSubcategory,\r\n    purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n    passwordResetEmail,\r\n    tanInputTAN,\r\n    // businessLoaded,\r\n    tanRequired,\r\n    // tmrConnected,\r\n    validateTokenEmail,\r\n    validateTokenPasswordReset,\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    transferRequest: JSON.parse(transferRequest),\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    contactSubject,\r\n    contactMessage,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n    language,\r\n    transferType,\r\n    // transferSuccess,\r\n    accountPhotoPath,\r\n    error: JSON.parse(error),\r\n    info: JSON.parse(info),\r\n    // alertVisible,\r\n  };\r\n\r\n  /**\r\n   * Barrel: Setters\r\n   */\r\n  const barrelSetters = {\r\n    setDebug,\r\n    setLoggingOut,\r\n    setLoggingIn,\r\n    // setTimestamp,\r\n    // setStartTimestamp,\r\n    setPageLoading,\r\n    setRequest,\r\n    setServerResponseReceived,\r\n    setRequestTimedOut,\r\n    // setRequestTS,\r\n    setInstance,\r\n    setResponseProps,\r\n    // setDeleteResponseProp,\r\n    // setLastRequest,\r\n    setSession,\r\n    // setSecureSession,\r\n    setSessionTimeout,\r\n    // setSessionTimeoutApplied,\r\n    setSettings,\r\n    setIP,\r\n    setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setAccordionView,\r\n    setAccordionViewCurrency,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setActivePageCurrencies,\r\n    setActivePageTransactions,\r\n    setActivePageShares,\r\n    setCurrenciesPerPage,\r\n    setTransactionsPerPage,\r\n    setSharesPerPage,\r\n    setConnected,\r\n    setReconnecting,\r\n    setLanguage,\r\n    setUserData,\r\n    // sendRequest,\r\n    setSignedIn,\r\n    setDailyAllowanceDispatched,\r\n    setIsExternalRequest,\r\n    setExternalRequest,\r\n    setCartContent,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setAccountType,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setBusinessesPerPage,\r\n    setActivePageBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setActiveBusiness,\r\n    setActiveBusinessID,\r\n    setBusinessPurposes,\r\n    setCartPurposes,\r\n    setCountBusinessPurposes,\r\n    setBusinessPurposesPerPage,\r\n    setActivePageBusinessPurposes,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePurposeData,\r\n    setPurposeShareholders,\r\n    setClearRefs,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationCategory,\r\n    setPurposeRegistrationSubcategory,\r\n    setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n    setPasswordResetEmail,\r\n    setTanInputTAN,\r\n    setError,\r\n    setInfo,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setValidateTokenEmail,\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setContactSubject,\r\n    setContactMessage,\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n    setTanRequired,\r\n    // setTransferSuccess,\r\n    // setRedirect,\r\n    // showMessage,\r\n  };\r\n\r\n  /** \r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Sends requests to the server\r\n   * @param {string} request Request name\r\n   * @param {object} data Request data\r\n   */\r\n  const sendRequest = ({ req, data = null }) => {\r\n    if (processRequest({ req, data, session, uid: \"STA\", barrels })) {\r\n      // request processed successfully\r\n      setServerResponseReceived(false);\r\n      return true;\r\n    } else {\r\n      console.log(\"THIS SHOULD NEVER BE REACHED\");\r\n      return sendData({ req, uid: \"STA\", session, data }, debug);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Processes user request\r\n   * @param {*} param0\r\n   */\r\n  const processRequest = ({ req, data, session, uid, barrels }) => {\r\n    data.instance = instance;\r\n\r\n    // if (req !== \"update last seen user\") {\r\n    setRequest(req);\r\n    // }\r\n\r\n    return requestHandler({\r\n      req,\r\n      data,\r\n      session,\r\n      uid,\r\n      barrels,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Processes server response\r\n   *\r\n   * Chooses a handler depending on response status:\r\n   * Error or other (success | continue | finished | pending etc.)\r\n   *\r\n   * @param {*} param0\r\n   */\r\n  const processUserResponse = ({ args, barrels }) => {\r\n    return args.status === \"error\"\r\n      ? userErrorHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        })\r\n      : userResponseHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  const processSystemResponse = ({ args, barrels }) => {\r\n    // console.log(\"SYSTEM RESPONSE DATA:\", args);\r\n    return args.status === \"error\"\r\n      ? systemErrorHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        })\r\n      : systemResponseHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  /**\r\n   * Shows a messgae (error or info)\r\n   *\r\n   * @param {string} msg, Messgae text\r\n   * @param {string} type, Message type (\"error\" | \"info\")\r\n   */\r\n  const showMessage = (msg, type = \"error\", dismissible = true) => {\r\n    type === \"error\"\r\n      ? setError(JSON.stringify({ msg, dismissible }))\r\n      : setInfo(JSON.stringify({ msg, dismissible }));\r\n  };\r\n\r\n  /**\r\n   * Hides the message\r\n   */\r\n  const hideMessage = (type = null) => {\r\n    if (type === \"error\") {\r\n      setError(null);\r\n    } else if (type === \"info\") {\r\n      setInfo(null);\r\n    } else {\r\n      setError(null);\r\n      setInfo(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the object-element of an array\r\n   * @param {object array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const getArrayObject = (array, property, value) => {\r\n    if (array === null) return null;\r\n    return array.find((o) => o[property] === value);\r\n  };\r\n\r\n  /**\r\n   * Returns the current processing status of the request\r\n   * @param {string} req\r\n   */\r\n  const getRequestStatus = (req) => {\r\n    const obj = getArrayObject(barrelGetters.responseProps, \"res\", req);\r\n    if (obj === null) return \"undefined\";\r\n    return typeof obj !== \"undefined\" ? obj.status : \"undefined\";\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {*} status\r\n   * @param {*} cnt\r\n   * @param {*} strLoading\r\n   * @param {*} strNotFound\r\n   */\r\n  const showRequestStatus = (\r\n    req,\r\n    cnt,\r\n    strLoading,\r\n    strNotFound,\r\n    finalStatus = \"success\"\r\n  ) => {\r\n    const status = getRequestStatus(req);\r\n    if (status === \"undefined\") return \"\";\r\n\r\n    // if (status === \"undefined\" || status !== finalStatus) {\r\n    if (status === \"undefined\" || status !== finalStatus) {\r\n      return <p className=\"text-center text-muted\">{strLoading}</p>;\r\n    } else if (status === finalStatus && cnt === 0) {\r\n      return <p className=\"text-center text-muted\">{strNotFound}</p>;\r\n    } else {\r\n      // const tempRP = deleteObjectArrayElement(\r\n      //   barrelGetters.responseProps,\r\n      //   \"res\",\r\n      //   req\r\n      // );\r\n      // // setResponseProps(JSON.stringify([...tempRP]));\r\n      // setResponseProps(JSON.stringify(tempRP));\r\n      // if (deleteResponseProp !== req) {\r\n      //   // setDeleteResponseProp(req);\r\n      // }\r\n      // if (responseProps !== null) {\r\n      //   setResponseProps(null);\r\n      // }\r\n      // setDeleteResponseProp(req);\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Changes the website language\r\n   */\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n    setLanguage(lng);\r\n  };\r\n\r\n  const roundTo = (n, digits) => {\r\n    var negative = false;\r\n    if (digits === undefined) {\r\n      digits = 0;\r\n    }\r\n    if (n < 0) {\r\n      negative = true;\r\n      n = n * -1;\r\n    }\r\n    var multiplicator = Math.pow(10, digits);\r\n    n = parseFloat((n * multiplicator).toFixed(11));\r\n    n = (Math.round(n) / multiplicator).toFixed(2);\r\n    if (negative) {\r\n      n = (n * -1).toFixed(2);\r\n    }\r\n    return n;\r\n  };\r\n\r\n  /**\r\n   * Format number\r\n   * @param {number} number\r\n   */\r\n  const format = (number, currency = currencyAbbr, useGrouping = true) => {\r\n    // const retEN = new Intl.NumberFormat(\"en\", {\r\n    //   notation: \"standard\",\r\n    //   minimumFractionDigits: 2,\r\n    //   useGrouping: useGrouping,\r\n    // }).format(number * currencyRate);\r\n\r\n    // const retEN = roundTo(number, 2);\r\n    // const retEN = number;\r\n\r\n    const retIntl = new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      useGrouping: useGrouping,\r\n    }).format(number * currencyRate);\r\n\r\n    if (parseFloat(number) !== 0 && number.toString().substr(0, 4) === \"0.00\")\r\n      return t(\"micro amount\");\r\n\r\n    return retIntl + \" \" + currency;\r\n  };\r\n  //\r\n\r\n  /**\r\n   * Format per cent\r\n   * @param {number} number\r\n   */\r\n  const formatPerCent = (number) => {\r\n    return (\r\n      new Intl.NumberFormat(language, {\r\n        notation: \"standard\",\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2,\r\n      }).format(number) + \"%\"\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   * @param {number} number\r\n   */\r\n  const formatExchangeRate = (number) => {\r\n    return new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 5,\r\n      maximumFractionDigits: 5,\r\n    }).format(number);\r\n  };\r\n\r\n  const parseLocaleNumber = (stringNumber, locale) => {\r\n    let num = 123456.789,\r\n      fmt_local = new Intl.NumberFormat(locale, {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n      }),\r\n      parts_local = fmt_local.formatToParts(num),\r\n      group = \"\",\r\n      decimal = \"\",\r\n      currency = \"\";\r\n\r\n    // separators\r\n    parts_local.forEach(function (i) {\r\n      switch (i.type) {\r\n        case \"group\":\r\n          group = i.value;\r\n          break;\r\n        case \"decimal\":\r\n          decimal = i.value;\r\n          break;\r\n        case \"currency\":\r\n          currency = i.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return parseFloat(\r\n      stringNumber\r\n        .replace(new RegExp(\"\\\\\" + group, \"g\"), \"\")\r\n        .replace(new RegExp(\"\\\\\" + decimal), \".\")\r\n        .replace(new RegExp(\"\\\\\" + currency, \"g\"), \"\")\r\n    );\r\n  };\r\n\r\n  const formatDate = (\r\n    ts,\r\n    options = {\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    },\r\n    isUTC = true,\r\n    locales = language\r\n  ) => {\r\n    let date = new Date(ts); // .toISOString()\r\n    if (isUTC) {\r\n      const diff = date.getTimezoneOffset();\r\n      date = moment(date).add(-diff, \"m\").toDate();\r\n    }\r\n    return new Intl.DateTimeFormat(locales, options).format(date);\r\n  };\r\n\r\n  /**\r\n   * Retrieves an URL parameter\r\n   */\r\n  const getUrlParam = (param) => {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    return urlParams.get(param);\r\n  };\r\n\r\n  // /**\r\n  //  * Clear local storage (URL param ?reset)\r\n  //  */\r\n  // if (getUrlParam(\"reset\") !== null) {\r\n  //   console.log(\"Reset\");\r\n\r\n  //   window.localStorage.clear();\r\n  //   console.log(\"Local storage cleared\");\r\n  // }\r\n\r\n  const sendEmailValidationRequest = ({ token, email }) => {\r\n    // console.log(\"sendEmailValidationRequest:\", token, email);\r\n\r\n    sendRequest({\r\n      req: \"validate email token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  const sendPasswordResetRequest = ({ token, email }) => {\r\n    // console.log(\"sendEmailValidationRequest:\", token, email);\r\n    setPasswordResetTokenEmail(email);\r\n    sendRequest({\r\n      req: \"validate password reset token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  const getUri = () => {\r\n    // return `${window.location.protocol}//${window.location.hostname}`;\r\n    return `${window.location.hostname}`;\r\n  };\r\n\r\n  const getIP = () => {\r\n    if (debug) return;\r\n    fetch(`${config.uri.ENDPOINT}/ip`, {\r\n      method: \"post\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((results) => results.json())\r\n      .then((data) => {\r\n        setIP(typeof data.ip === \"string\" ? data.ip : \"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  const getCart = () => {\r\n    const cart = getUrlParam(\"cart\");\r\n\r\n    // console.log(business, cart);\r\n\r\n    if (cart !== null) {\r\n      setExternalRequest(JSON.stringify({ cart }));\r\n      if (!signedIn) setIsExternalRequest(true);\r\n    }\r\n  };\r\n\r\n  const getCartPurposes = () => {\r\n    if (cartContent === null) return;\r\n\r\n    let cartPurposes = [];\r\n\r\n    barrelGetters.cartContent.map((element) => {\r\n      cartPurposes.push(element.product);\r\n    });\r\n\r\n    // purposes: '\"' + cartPurposes.join('\",\"') + '\"',\r\n\r\n    setCartPurposes(null);\r\n\r\n    sendRequest({\r\n      req: \"get cart purposes\",\r\n      data: {\r\n        purposes: JSON.stringify(cartPurposes),\r\n        language: language,\r\n        page: 1,\r\n        limit: 5,\r\n      },\r\n    });\r\n  };\r\n\r\n  const getCurrencies = (newPage) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: { page: newPage, limit: currenciesPerPage },\r\n    });\r\n    setActivePageCurrencies(newPage);\r\n  };\r\n\r\n  const getTransactions = (newPage) => {\r\n    setTransactions(null);\r\n    sendRequest({\r\n      req: \"get transactions\",\r\n      data: {\r\n        page: newPage,\r\n        limit: transactionsPerPage,\r\n        uid: accountNumber,\r\n        language: language,\r\n      },\r\n    });\r\n    setActivePageTransactions(newPage);\r\n  };\r\n\r\n  const getShares = (newPage) => {\r\n    setShares(null);\r\n    sendRequest({\r\n      req: \"get shares\",\r\n      data: {\r\n        page: newPage,\r\n        limit: sharesPerPage,\r\n        uid: accountNumber,\r\n        language: language,\r\n      },\r\n    });\r\n    setActivePageShares(newPage);\r\n  };\r\n\r\n  const getBusinesses = (newPage = 1) => {\r\n    setUserBusinesses(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(1);\r\n    setActiveBusinessID(null);\r\n    sendRequest({\r\n      req: \"get user businesses\",\r\n      data: { uid: accountNumber, page: newPage, limit: businessesPerPage },\r\n    });\r\n    setActivePageBusinesses(newPage);\r\n  };\r\n\r\n  const getBusinessPurposes = (business_id, selected = null, newPage = 1) => {\r\n    // console.log(\"BUSINESS PURPOSES FOR ID \" + business_id, businessPurposes);\r\n\r\n    if (selected !== null) {\r\n      setActiveBusiness(selected);\r\n      setActiveBusinesPurpose(null);\r\n      setActivePurposeProperty(null);\r\n    }\r\n    setBusinessPurposes(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(newPage);\r\n    setActiveBusinessID(business_id);\r\n    return sendRequest({\r\n      req: \"get business purposes\",\r\n      data: {\r\n        business_id: business_id,\r\n        language: language,\r\n        page: newPage,\r\n        limit: businessPurposesPerPage,\r\n      },\r\n    });\r\n  };\r\n\r\n  const getPurposeShareholders = (purpose_id, selected = null) => {\r\n    if (selected !== null) {\r\n      setActiveBusinesPurpose(purpose_id);\r\n    }\r\n    setPurposeShareholders(null);\r\n    return sendRequest({\r\n      req: \"get purpose shareholders\",\r\n      data: { purpose_id: purpose_id },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get account data\r\n   */\r\n  const getAccountData = () => {\r\n    if (accountNumber === null) return;\r\n    sendRequest({\r\n      req: \"get account data\",\r\n      data: {\r\n        uid: accountNumber,\r\n        // timeout: sessionTimeout,\r\n        // checkTimeout: !sessionTimeoutApplied,\r\n      },\r\n      // data: { email: barrelGetters.userData.email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get transaction by id\r\n   * @param {integer} id, The primary key\r\n   */\r\n  const getTransactionById = (id) => {\r\n    sendRequest({\r\n      req: \"get transaction by id\",\r\n      data: { id: id, language: language },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get conatainer class\r\n   *\r\n   * Returns object cantaining the classes for layout container appearance.\r\n   *\r\n   * @param {boolean} signedIn, True if user has signed in, otherwise false.\r\n   */\r\n  const getContainerClass = (signedIn) => {\r\n    return {\r\n      wrapperClass: signedIn\r\n        ? \"auth-wrapper auth-wrapper-summary\"\r\n        : \"auth-wrapper\",\r\n      innerClass: signedIn\r\n        ? \"auth-inner auth-inner-summary\"\r\n        : \"auth-inner autoWidth\",\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Get redirect\r\n   *\r\n   * Returns router redirect component.\r\n   */\r\n  const getRedirect = () => {\r\n    return redirectTo === null ? \"\" : <Redirect push to={redirectTo} />;\r\n  };\r\n\r\n  /**\r\n   * Update last seen user\r\n   *\r\n   * Sends a request to update the last-seen-user time\r\n   */\r\n  // const updateLastSeenUser = () => {\r\n  //   // let data = { email: barrelGetters.userData.email };\r\n  //   // return sendRequest({ req: \"update last seen user\", data });\r\n  // };\r\n\r\n  /**\r\n   * Sorts an object array by value of the property\r\n   * @param {array} array, the array\r\n   * @param {string} property, the property name\r\n   */\r\n  const sortObjectArray = (array, property) => {\r\n    return array.sort((a, b) =>\r\n      a[property] > b[property] ? 1 : b[property] > a[property] ? -1 : 0\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Returns an array index of the object\r\n   * containing the property with the certain value.\r\n   *\r\n   * @param {array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const getObjectArrayElementIndex = (array, property, value) => {\r\n    if (array === null) return -1;\r\n    return array\r\n      .map((properties) => {\r\n        return properties[property];\r\n      })\r\n      .indexOf(value);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {*} array\r\n   * @param {*} property\r\n   * @param {*} value\r\n   */\r\n  const deleteObjectArrayElement = (arr, property, value) => {\r\n    // if (arr === null) return;\r\n    return arr.filter((obj) => {\r\n      return obj[property] !== value;\r\n    });\r\n  };\r\n\r\n  const getReviser = () => {\r\n    return \"STA\";\r\n  };\r\n\r\n  const getWorkplace = () => {\r\n    return \"LAPSTA\";\r\n  };\r\n\r\n  const barrelFunctions = {\r\n    sendRequest,\r\n    processUserResponse,\r\n    showMessage,\r\n    hideMessage,\r\n    changeLanguage,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    getArrayObject,\r\n    getRequestStatus,\r\n    showRequestStatus,\r\n    format,\r\n    formatPerCent,\r\n    formatExchangeRate,\r\n    getContainerClass,\r\n    formatDate,\r\n    // updateLastSeenUser,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    getRedirect,\r\n    getUri,\r\n    getIP,\r\n    getCart,\r\n    getCartPurposes,\r\n    getUrlParam,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    getCurrencies,\r\n    getTransactions,\r\n    getShares,\r\n    parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n    // updateTimestamp,\r\n  };\r\n\r\n  /** \r\n   * Event handlers\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On language change\r\n   */\r\n  i18n.on(\"languageChanged\", function (lng) {\r\n    setLanguage(lng);\r\n  });\r\n\r\n  /**\r\n   * On redirect\r\n   * @param {string} to Redirect path (e.g. \"/sign-in\")\r\n   */\r\n  const onRedirect = (to) => {\r\n    setRedirectTo(to);\r\n  };\r\n\r\n  const onSessionStart = () => {\r\n    // start new session\r\n    let data = {};\r\n    data.request = \"hello\";\r\n    data.instance = instance;\r\n    startSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionEnd = () => {\r\n    // end current session\r\n    sendRequest({ req: \"end session\", data: {} });\r\n\r\n    let data = {};\r\n    data.request = \"bye\";\r\n    data.instance = instance;\r\n    endSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionReset = () => {\r\n    setSession(uuidv4());\r\n  };\r\n\r\n  /**\r\n   * On signup\r\n   * @param {object} data Signup data\r\n   */\r\n  const onSignUp = (data) => {\r\n    // console.log(\"SIGN UP (data):\", data);\r\n    /// setUserData(JSON.stringify(data));\r\n    return sendRequest({ req: \"register user\", data });\r\n  };\r\n\r\n  const onSessionTimeout = () => {\r\n    // if (debug) return;\r\n    console.log(\"Session timed out...\");\r\n    // endSession(\"bye\", session);\r\n    setLoggingOut(true);\r\n    setRedirectTo(\"/sign-out\");\r\n    // Logout();\r\n  };\r\n\r\n  /**\r\n   * On account registration\r\n   * @param {object} data The account registration data\r\n   */\r\n  // const onAccountRegistration = (data) => {\r\n  //   // console.log(\"ACCOUNT REGISTRATION (data):\", data);\r\n  //   // setAccountNumber(data.personalID);\r\n  //   return sendRequest({ req: \"register account\", data });\r\n  // };\r\n\r\n  /**\r\n   * On transfer type change\r\n   * @param {string} id The transfer type id (\"U2S\", \"U2U\", \"U2B\" etc.)\r\n   */\r\n  const onTransferTypeChange = (id) => {\r\n    // console.log(\"setTransferType: \" + id);\r\n    setTransferType(id);\r\n  };\r\n\r\n  const onTransferSuccess = () => {\r\n    // console.log(\"ON TRANSFER SUCCESS\", barrels);\r\n  };\r\n\r\n  /**\r\n   * On transfer\r\n   * @param {object} data Transfer data\r\n   */\r\n  const onTransfer = (data) => {\r\n    // console.log(\"ON TRANSFER (data):\", data);\r\n    // sendRequest({ req: \"register account\", data: data });\r\n    sendRequest(data);\r\n  };\r\n\r\n  // const onBusinessRegistration = (data) => {\r\n  //   // console.log(\"ON BUSINESS REGISTRATION (data):\", data);\r\n  //   // sendRequest({ req: \"register account\", data: data });\r\n  //   sendRequest(data);\r\n  // };\r\n\r\n  const onPurposeRegistration = (data) => {\r\n    sendRequest(data);\r\n  };\r\n\r\n  // const onShareholderRegistration = (data) => {\r\n  //   console.log(\"ON SHAREHOLDER REGISTRATION (data):\", data);\r\n  //   // sendRequest({ req: \"register account\", data: data });\r\n  //   sendRequest(data);\r\n  //   // getBusinesses();\r\n  // };\r\n\r\n  /**\r\n   * On logout\r\n   */\r\n  const onLogOut = () => {\r\n    // setSession(null);\r\n    setUpdateInterval(-1);\r\n\r\n    // TODO: refactor this to separate function (as well as the startSession)\r\n    // let data = {};\r\n    // data.request = \"bye\";\r\n    // data.instance = instance;\r\n    // endSession(data, session, debug);\r\n    // onSessionEnd(); // DO NOT ACTIVATE THIS HERE - EXECUTING MULTIPLE TIMES\r\n    setResponseProps(null);\r\n    // setDeleteResponseProp(null);\r\n    // setSession(uuidv4()); // DO NOT SET SESSION HERE - infinite loop!!\r\n    // setSecureSession(false);\r\n    setServerResponseReceived(null);\r\n    setRequestTimedOut(false);\r\n    setReconnecting(false);\r\n    setSignedIn(false);\r\n    setDailyAllowanceDispatched(false);\r\n    setSettings(null);\r\n    // setSessionTimeoutApplied(false);\r\n    setIsExternalRequest(false);\r\n    setCurrencies(null);\r\n    setTransactions(null);\r\n    setShares(null);\r\n    setAccordionView(\"balance\");\r\n    setAccordionViewCurrency(null);\r\n    setAccountNumber(null);\r\n    setAccountType(null);\r\n    setTransferType(\"#u2s\");\r\n    setTransferRequest(null);\r\n    setTransferFromAccount(\"\");\r\n    setTransferToAccount(\"\");\r\n    setTransferAmount(\"\");\r\n    setTransferToUID(\"\");\r\n    setTransferToPurpose(\"\");\r\n    setTransferDescription(\"\");\r\n    setContactSubject(\"\");\r\n    setContactMessage(\"\");\r\n    setUserBirthYear(\"\");\r\n    setUserBirthMonth(\"\");\r\n    setUserBirthDay(\"\");\r\n    setUserBirthDateError(\"\");\r\n    setUserTimezone(\"\");\r\n    setCurrencyCode(\"\");\r\n    setCurrencyName(\"\");\r\n    setCurrencyRegion(\"\");\r\n    setCurrencyNewRate(\"\");\r\n    setCountTransactions(null);\r\n    setUserData(null);\r\n    setUserBusinesses(null);\r\n    setUserBusinessesLoaded(false);\r\n    setActiveBusiness(null);\r\n    setBusinessPurposes(null);\r\n    setCartPurposes(null);\r\n    setActiveBusinesPurpose(null);\r\n    setActivePurposeProperty(null);\r\n    setPurposeShareholders(null);\r\n    setClearRefs(false);\r\n    setLogInEmail(\"\");\r\n    setLogInPassword(\"\");\r\n    setSignUpFirstName(\"\");\r\n    setSignUpLastName(\"\");\r\n    setSignUpEmail(\"\");\r\n    setSignUpPassword(\"\");\r\n    setBusinessRegistrationAddTitle(\"\");\r\n    setBusinessRegistrationAddDescription(\"\");\r\n    setPurposeRegistrationTitle(\"\");\r\n    setPurposeRegistrationDescription(\"\");\r\n    setPurposeRegistrationCategory(\"\");\r\n    setPurposeRegistrationSubcategory(\"\");\r\n    setPurposeRegistrationSubcategory2(\"\");\r\n    setPurposeRegistrationKeywords(\"\");\r\n    setUserEditorEditFirstname(\"\");\r\n    setUserEditorFirstname(\"\");\r\n    setUserEditorEditLastname(\"\");\r\n    setUserEditorLastname(\"\");\r\n    setUserEditorEditEmail(\"\");\r\n    setUserEditorEmail(\"\");\r\n    setUserEditorEditPassword(\"\");\r\n    setUserEditorPassword(\"\");\r\n    setUserEditorPasswordVisible(\"\");\r\n    setUserEditorSubmitButtonVisible(\"\");\r\n    setPasswordResetEmail(\"\");\r\n    setTanInputTAN(\"\");\r\n    setAccountPhotoPath(\"\");\r\n    setPasswordResetTokenValidated(null);\r\n    setPasswordResetTokenEmail(null);\r\n    setTanRequired(false);\r\n    setError(null);\r\n    setInfo(null);\r\n  };\r\n\r\n  const onAlertClose = (type = null) => {\r\n    hideMessage(type);\r\n  };\r\n\r\n  /**\r\n   * Barrel: Event handlers\r\n   */\r\n  const barrelEventHandlers = {\r\n    onRedirect,\r\n    onSignUp,\r\n    onSessionTimeout,\r\n    onTransferTypeChange,\r\n    onTransferSuccess,\r\n    onTransfer,\r\n    onSessionStart,\r\n    onSessionEnd,\r\n    onSessionReset,\r\n    onPurposeRegistration,\r\n    onLogOut,\r\n    onAlertClose,\r\n  };\r\n\r\n  /**\r\n   * Barrel of barrels\r\n   */\r\n  const barrels = {\r\n    barrelGetters,\r\n    barrelSetters,\r\n    barrelFunctions,\r\n    barrelEventHandlers,\r\n  };\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  useSocket((data) => {\r\n    setServerResponseReceived(true);\r\n    setRequestTimedOut(false);\r\n    processUserResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  });\r\n\r\n  useSystemSocket((data) => {\r\n    processSystemResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  }, instance);\r\n\r\n  /** \r\n   * Return\r\n   ============================================================================ */\r\n\r\n  if (props.mode !== \"construction\") {\r\n    if (debug || !reconnecting) {\r\n      return <Main {...barrels} />;\r\n    } else {\r\n      return <NotConnected {...barrels} />;\r\n    }\r\n  } else {\r\n    return <UnderConstruction {...barrels} />;\r\n  }\r\n};\r\n","import { sendData } from \"../utils/sockets\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const { req, data, session, uid, barrels } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, userData, userSequence } = barrels.barrelGetters;\r\n  const {\r\n    setUserData,\r\n    setUID,\r\n    setAccountNumber,\r\n    // setRequest,\r\n    // setUserBusinesses,\r\n  } = barrels.barrelSetters;\r\n  const {} = barrels.barrelFunctions;\r\n  //   const {} = barrels.barrelEventHandlers;\r\n\r\n  let requestFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onRequest = (req, callback) => {\r\n    if (requestFound) return;\r\n    if (req === props.req || req === \"default\") {\r\n      callback();\r\n      requestFound = true;\r\n    }\r\n  };\r\n\r\n  /** \r\n   * Request handlers\r\n  ============================================================================ */\r\n\r\n  onRequest(\"sign in user\", () => {\r\n    setUserData(JSON.stringify(data));\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"get user sequence\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"register account\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const year = fullyear.slice(-2);\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n    const birthDate = `${day}${month}${year}`;\r\n    const timezone = data.timezone.slice(0, 2);\r\n    const initial = userData.lastname.slice(0, 1).toUpperCase();\r\n    const icode = initial.charCodeAt(0).toString().padStart(5, \"0\");\r\n\r\n    data.scode = `${timezone}${birthDate}${initial}`;\r\n    data.tcode = `${timezone}${birthDate}${icode}`;\r\n    data.timezone = data.timezone.slice(5);\r\n    data.sequence = userSequence.toString().padStart(5, \"0\");\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    setUID(data.personalID);\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"default\", () => {\r\n    sendData({ req, data, uid, session }, debug);\r\n\r\n    return true;\r\n  });\r\n\r\n  // onRequest(\"unknown\", () => {\r\n  //   showMessage(`UNKNOWN REQUEST ${req}`, \"info\");\r\n\r\n  //   return true;\r\n  // });\r\n\r\n  return requestFound;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setUID,\r\n    setAccountNumber,\r\n    setRedirectTo,\r\n  } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug) console.log(`ERROR: ${req}`, error, context, props, barrels);\r\n  // const { showMessage } = barrels.barrelFunctions;\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n    // console.log(res, status);\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onError([\"*\", \"INVALID_SESSION\"], () => {\r\n    showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n    setRedirectTo(\"/sign-out\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer errors\r\n   */\r\n  onError([\"transfer U2S\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2B\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_USER_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // user selected the same language again - just ignore\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate email token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate password reset token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"reset password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // showMessage(\"REQUEST_ALREADY_SENT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same language again - that's ok\r\n    return true;\r\n  });\r\n\r\n  onError([\"update user\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same password again - that's ok\r\n    return true;\r\n  });\r\n\r\n  // onError([\"update last seen user\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Same last seen time was submitted (shouldn't be possible) - ignore for now\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"sign in user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"change password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"SAME_PASSWORD_RESET\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"submit tan\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"INVALID_TAN\", \"error\", false);\r\n    return true;\r\n  });\r\n\r\n  onError([\"get cart\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User accessed the same cart again - it's fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer V2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Allowance already dispatched today - totally fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    // The same currency was selected again - no problem\r\n    return true;\r\n  });\r\n\r\n  onError([\"end session\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Session updated to the same data ??\r\n    return true;\r\n  });\r\n\r\n  onError([\"register currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_CURRENCY_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"update purpose property\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register purpose\", \"ER_DUP_ENTRY\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  // onError([\"get user sequence\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Session updated to the same data ??\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"register account\", \"ER_DUP_ENTRY\"], () => {\r\n    setUID(null);\r\n    setAccountNumber(null);\r\n    showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError(\r\n    [\"register account\", \"ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO\"],\r\n    () => {\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n      return true;\r\n    }\r\n  );\r\n\r\n  onError([\"register shareholder\", \"ER_NO_REFERENCED_ROW_2\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"*\", \"ER_CANT_CREATE_THREAD\"], () => {\r\n    showMessage(\"NO_RESPONSE_FROM_SERVER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug, error: msgError } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug)\r\n    console.log(`SYSTEM ERROR: ${req}`, error, context, props, barrels);\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onError([\"*\", \"INVALID_SESSION\"], () => {\r\n  //   showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n  //   setRedirectTo(\"/sign-out\");\r\n  //   return true;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_error\", \"none\"], () => {\r\n    if (msgError !== \"SERVER_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"reconnect_error\", \"TransportError\"], () => {\r\n    if (msgError !== \"SERVER_STILL_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_STILL_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, instance, info: msgInfo } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage, hideMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug)\r\n    console.log(`system response: ${req} (${props.status})`, props, barrels);\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (res === \"*\" && status === props.status && name === name) ||\r\n      (res === props.req && status === props.status) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n  //   if (typeof props.token !== \"undefined\") {\r\n  //     console.log(\"Renewing session...\");\r\n\r\n  //     onSessionEnd();\r\n  //     setSession(props.token);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect attempt\", \"continue\"], () => {\r\n    // if (msgInfo !== \"RECONNECT_ATTEMPT\")\r\n    //   showMessage(\"RECONNECT_ATTEMPT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnecting\", \"continue\"], () => {\r\n    if (msgInfo !== \"RECONNECTING\") {\r\n      setReconnecting(true);\r\n      showMessage(\"RECONNECTING\", \"info\");\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect\", \"success\"], () => {\r\n    setReconnecting(false);\r\n    hideMessage();\r\n    // hideMessage(\"error\");\r\n    // hideMessage(\"info\");\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Loading.css\";\r\nimport React from \"react\";\r\n// import MainSkeleton from \"../pages/main\";\r\n\r\nexport default () => {\r\n  //\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"lds-hourglass\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * User CSS\r\n */\r\nimport \"./normalize.css\";\r\nimport \"./index.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Loading from \"./components/loading\";\r\nimport UnderConstruction from \"./components/pages/underConstruction\";\r\n\r\n/**\r\n * Retrieves an URL parameter\r\n */\r\nconst getUrlParam = (param) => {\r\n  const queryString = window.location.search;\r\n  const urlParams = new URLSearchParams(queryString);\r\n  return urlParams.get(param);\r\n};\r\n\r\n/**\r\n * Clear local storage (URL param ?reset)\r\n */\r\nif (getUrlParam(\"reset\") !== null) {\r\n  window.localStorage.clear();\r\n  console.log(\"Local storage cleared\");\r\n}\r\n\r\n/**\r\n * Render (with suspense)\r\n * mode = default | construction\r\n */\r\nconst root = document.getElementById(\"root\");\r\nconst construction = document.getElementById(\"construction\");\r\nif (root) {\r\n  ReactDOM.render(\r\n    <Suspense fallback={<Loading />}>\r\n      <Dispatcher mode={!construction ? \"\" : \"construction\"} />\r\n    </Suspense>,\r\n    root\r\n  );\r\n}\r\n"],"sourceRoot":""}