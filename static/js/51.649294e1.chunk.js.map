{"version":3,"sources":["components/main/NotConnected.js"],"names":["args","props","Object","assign","namespace","barrels","barrelFunctions","getContainerClass","getRedirect","wrapperClass","innerClass","className","style","height","data","path","component","NotConnected"],"mappings":"uIAAA,4EAwBe,mBAACA,GAId,IAKMC,EAAQC,OAAOC,OALN,CAAEC,UAAW,QAKUJ,GAChCK,EAAUL,EAVO,EAiBoBC,EAAMK,gBAAzCC,EAjBe,EAiBfA,kBAAmBC,EAjBJ,EAiBIA,YAjBJ,EAwBcD,GAJpB,GAITE,EAxBe,EAwBfA,aAAcC,EAxBC,EAwBDA,WAMtB,OACE,oCACE,kBAAC,IAAD,KACGF,IAED,yBAAKG,UATyB,SASJC,MAAO,IAI/B,yBAAKD,UAAWF,EAAcG,MAAO,IAInC,yBAAKD,UAAU,oBAAoBC,MAAO,CAAEC,OAAQ,UAKpD,yBAAKF,UAAWD,GAId,yBAAKE,MAAO,CAAEC,OAAQ,UAKtB,6BACE,kBAAC,UAAD,CAAOC,KAAMT,KAMf,kBAAC,IAAD,KAKE,kBAAC,IAAD,CACEU,KAAK,IACLC,UAAW,WACT,OAAOC,kBAAaZ,OAQ1B,yBAAKM,UAAU,eACb,8BACE,kBAAC,UAAqBN","file":"static/js/51.649294e1.chunk.js","sourcesContent":["/**\r\n * CSS\r\n */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../main/Main.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Alert from \"../alert\";\r\nimport LanguageSelector from \"../language-selector\";\r\nimport NotConnected from \"../notConnected\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n\r\n/**\r\n * Component: Main\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass, getRedirect } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const signedIn = false;\r\n\r\n  // const { t } = useTranslation(props.namespace);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              <div>\r\n                <Alert data={barrels} />\r\n              </div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return NotConnected(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n"],"sourceRoot":""}