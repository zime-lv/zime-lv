{"version":3,"sources":["components/submitButton/SubmitButton.js","components/locale lazy /^/.*/topics/common/-questions/.js$/ groupOptions: {} namespace object","components/locale lazy /^/.*/articles/i/-forgot/-my/-password/-how/-do/-i/-reset/-it/.js$/ groupOptions: {} namespace object","components/locale lazy /^/.*/leads/LeadLogIn/.js$/ groupOptions: {} namespace object","components/locale lazy /^/.*/toasts/_ToastDefault/.js$/ groupOptions: {} namespace object","translations/i18n.js","utils/config.js","utils/state.js","utils/useTimeout.js","components/errorBoundary/ErrorBoundary.js","components/modalMessage/ModalMessage.js","components/accountRegistration/AccountRegistration.js","components/pagination/Pagination.js","components/search/Search.js","components/datePicker/DatePickerWrapper.js","components/datePicker/DatePicker.js","components/dateRangePicker/DateRangePicker.js","components/transactions/Transactions.js","components/shareholder/Shareholder.js","components/shares/Shares.js","components/balance/Balance.js","components/copyableField/CopyableField.js","components/accountContainer/AccountContainer.js","components/transfer/TransferToSelf.js","components/tanInput/TanInput.js","components/transfer/TransferToPerson.js","components/transfer/TransferToBusiness.js","components/businessRegistration/BusinessRegistration.js","components/purposeRegistration/PurposeRegistration.js","components/shareholderRegistration/shareholderRegistration.js","components/myBusiness/MyBusiness.js","components/userEditor/UserEditor.js","components/currencies/Currencies.js","components/currencyRegistration/CurrencyRegistration.js","components/rating/Rating.js","components/listGroupItem/ListGroupItem.js","components/helpMenuLevel2/HelpMenuLevel2.js","components/help/Help.js","components/summary/Summary.js","components/currencyContainer/CurrencyContainer.js","components/transfer/Transfer.js","components/contact/Contact.js","components/status_404/Status_404.js","components/overlay/Overlay.js","components/alertContainer/AlertContainer.js","components/alert/Alert.js","components/login/LogIn.js","components/signup/SignUp.js","components/auth/Auth.js","components/language-selector/LanguageSelector.js","components/footer/Footer.js","components/idleTimer/IdleTimer.js","utils/useInterval.js","utils/useEventListener.js","components/mainMenu/MainMenu.js","components/breadcrumb/Breadcrumb.js","components/article/Article.js","components/main/Routes.js","components/validateEmail/ValidateEmail.js","components/changePassword/ChangePassword.js","components/logout/Logout.js","components/passwordReset/passwordReset.js","components/leads/Leads.js","components/toasts/Toasts.js","components/main/Main.js","components/underConstruction/UnderConstruction.js","components/notConnected/NotConnected.js","utils/sockets.js","utils/userResponseHandler.js","components/loading/Loading.js","Dispatcher.js","utils/requestHandler.js","utils/userErrorHandler.js","utils/systemErrorHandler.js","utils/systemResponseHandler.js","index.js","components/accordionCard/AccordionCard.js","components/card/Card.js","components/locale lazy /^/.*$/ groupOptions: {} namespace object"],"names":["SubmitButton","React","memo","args","props","Object","assign","caption","request","namespace","type","classButton","visible","marginTop","timeout","variant","onSubmit","barrelGetters","barrelSetters","setError","setInfo","useState","requestExpired","e","Button","className","onClick","block","disabled","style","whiteSpace","Spinner","as","animation","size","role","aria-hidden","hidden","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","id","keys","module","exports","webpackEmptyAsyncContext","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","defaultNS","keySeparator","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","config","dev","uri","ENDPOINT","SITEMODE","window","location","hostname","useStickyState","defaultValue","key","stickyValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","useTimeout","callback","delay","savedCallback","useRef","current","setTimeout","clearTimeout","ErrorBoundary","state","hasError","error","errorInfo","console","log","this","children","Component","centered","message","title","footer","onHide","file","backdrop","t","useTranslation","ExternalFile","lazy","Modal","aria-labelledby","Header","closeButton","Navbar","borderRadius","background","backgroundColor","boxShadow","Brand","href","src","width","height","alt","Nav","Title","Body","maxHeight","overflowY","Footer","signedIn","accountNumber","userData","language","userBirthYear","userBirthMonth","userBirthDay","userBirthDateError","userTimezone","setUserBirthYear","setUserBirthMonth","setUserBirthDay","setUserBirthDateError","setUserTimezone","barrelFunctions","getReviser","getWorkplace","sendRequest","userAgreementShow","setUserAgreementShow","privacyPolicyShow","setPrivacyPolicyShow","schema","yup","timezone","required","birthYear","birthMonth","birthDay","timezones_sorted","timezones","composeDate","year","month","day","newDate","dateString","match","datepart","split","length","parseInt","leapYear","isValidDate","yearNow","Date","getFullYear","Alert","Heading","Trans","i18nKey","ModalMessage","show","border","component","handleSubmit","handleChange","values","handleBlur","touched","errors","isValid","validateForm","setFieldValue","Form","noValidate","Row","margin","Group","Col","controlId","Label","Control","custom","name","onChange","target","isInvalid","Array","from","Feedback","monthName","toLocaleString","monthNumber","toString","padStart","dayNumber","element","Offset","Name","paddingBottom","KeyboardArrowRight","color","onMouseDown","validationSchema","data","birthDate","reviser","workplace","email","sendAccountRegistrationRequest","initialValues","countItems","itemsPerPage","active","align","pages","Math","ceil","getPages","items","number","push","Pagination","Item","Ellipsis","textAlign","display","padding","First","Prev","Next","Last","getJSX","advancedSearch","placeholder","captionAdvancedSearch","search","setSearch","refSearch","createRef","tempRefSearch","optional","InputGroup","ref","autoComplete","Append","Text","cursor","Search","refDatePicker","fp","flatpickr","options","destroy","datePicker","aria-describedby","open","DateRange","locale","showMonths","inline","shorthandCurrentMonth","allowInput","clickOpens","monthSelectorType","altInput","altFormat","dateFormat","maxDate","defaultDate","selectedDates","dateStr","instance","captionStartDate","captionEndDate","captionUpdate","dateRangeStart","dateRangeEnd","setDateRangeStart","setDateRangeEnd","getTransactions","formatDate","clearRequestStatus","dateStart","dateEnd","Replay","transactions","countTransactions","activePageTransactions","transactionsPerPage","findTransactions","showRequestStatus","format","formatPerCent","cnt","backgroundHeader","backgroundBody","header","maxWidthBody","marginBottom","DateRangePicker","ListGroup","transaction","keyTransactions","business_title","comment","conv_amount","created","sender_firstname","sender_lastname","recipient_firstname","recipient_lastname","purpose_id","purpose_title","recipient_id","roles","share","share_per_cent","sender_id","from_account","to_account","i_am_sender","i_am_recipient","t_from_account","t_to_account","roles_available","arrRoles","shares_available","float","ArrowRightAlt","sender","Badge","pill","purpose","shareholder","rangeControl","sharePerCent","businessTitle","purposeTitle","businessOwnerFirstname","businessOwnerLastname","sharesCreated","purposeShareholders","setPurposeShareholders","userQuery","setUserQuery","delayedQuery","_","debounce","q","sendQuery","onClose","shareholder_id","ps","sharesLabelId","Toast","minWidth","firstname","lastname","Settings","fontSize","min","max","step","shares","countShares","activePageShares","sharesPerPage","getShares","findShares","keyShares","owner_firstname","owner_lastname","shares_created","shares_roles","shares_share","Shareholder","setAccountType","setRedirectTo","userDataParsed","available","acc_curr","acc_cred","acc_save","copyToClipboard","refCopyableField","position","overflow","readOnly","document","queryCommandSupported","marginLeft","FileCopy","paddingBody","accordionView","setAccordionView","setResponseProps","setClearRefs","getAccountData","toggleView","view","newView","Accordion","defaultActiveKey","eventkey","CopyableField","Balance","Transactions","Shares","navigation","navigationdefaultActiveKey","onNavigationClick","accountType","currencyAbbr","transferFromAccount","transferToAccount","transferAmount","setTransferFromAccount","setTransferToAccount","setTransferAmount","parseLocaleNumber","refAmount","tempRefAmount","fromAccount","toAccount","amount","matches","RegExp","headerPadding","bodyPadding","Prepend","uid","Intl","NumberFormat","notation","minimumFractionDigits","useGrouping","transferToSelf","tanRequired","tanInputTAN","setTanRequired","setTanInputTAN","refTAN","tempRef","tan","autoFocus","transferToUID","transferDescription","setTransferRequest","setTransferToUID","setTransferDescription","refPersonalID","refDescription","tempRefPersonalID","tempRefDescription","toPersonalID","TanInput","rows","description","transferType","transferToPerson","transferToPurpose","setTransferToPurpose","refPurposeID","tempRefPurposeID","purposeID","currency","transferToBusiness","businessRegistrationAddTitle","businessRegistrationAddDescription","setBusinessRegistrationAddTitle","setBusinessRegistrationAddDescription","refBusinessTitle","refBusinessDescription","tempRefBusinessTitle","tempRefBusinessDescription","trim","businessDescription","requestInsert","requestUpdate","businessID","category","subcategory","subcategory2","keywords","barrels","purposeRegistrationTitle","purposeRegistrationDescription","purposeRegistrationKeywords","setPurposeRegistrationTitle","setPurposeRegistrationDescription","setPurposeRegistrationKeywords","onPurposeRegistration","barrelEventHandlers","refPurposeTitle","refPurposeDescription","refPurposeKeywords","tempRefPurposeTitle","tempRefPurposeDescription","tempRefPurposeKeywords","purposeDescription","purposeKeywords","RegisterPurpose","shareholderRoles","typeError","personalID","userBusinesses","countBusinesses","businessesPerPage","activePageBusinesses","userBusinessesLoaded","activeBusiness","activeBusinessID","businessPurposes","countBusinessPurposes","businessPurposesPerPage","activePageBusinessPurposes","activeBusinesPurpose","activePurposeProperty","activePurposeData","setBusinessPurposes","setActiveBusiness","setActiveBusinesPurpose","setActivePurposeProperty","setActivePageBusinessPurposes","setActivePurposeData","getBusinesses","getBusinessPurposes","getPurposeShareholders","findPurposes","menuItems","purposes","cntPurposes","countShareholders","business","keyBusiness","keyPurpose","business_id","action","eventKey","TogglePurpose","paddingLeft","Edit","stopPropagation","Tab","Pane","Card","Toggle","Collapse","Add","keyShareholder","bp","status","purpose_status","Check","label","checked","jsx","BusinessRegistration","date","businessSince","ToggleBusiness","Store","Container","sm","Content","PurposeRegistration","mode","userEditorEditFirstname","userEditorFirstname","userEditorEditLastname","userEditorLastname","userEditorEditEmail","userEditorEmail","userEditorEditPassword","userEditorPassword","userEditorPasswordVisible","userEditorSubmitButtonVisible","setUserEditorEditFirstname","setUserEditorFirstname","setUserEditorEditLastname","setUserEditorLastname","setUserEditorEditEmail","setUserEditorEmail","setUserEditorEditPassword","setUserEditorPassword","setUserEditorPasswordVisible","setUserEditorSubmitButtonVisible","refFirstName","refLastName","refEmail","refPassword","tempRefFirstName","tempRefLastName","tempRefEmail","tempRefPassword","togglePassword","yupObject","firstName","lastName","password","Close","VisibilityOff","Visibility","newEmail","validateEmail","sendUserRegistrationRequest","currencies","settings","countCurrencies","activePageCurrencies","currenciesPerPage","setCurrencyAbbr","setCurrencyRate","getCurrencies","findCurrencies","formatExchangeRate","getObjectArrayElementIndex","onCurrencySelected","currency_id","rate","onPageSelect","Table","responsive","striped","bordered","hover","keyCurrency","abbr","region","includes","aria-label","curr_abbr","curr_title","curr_region","curr_rate","currencyCode","currencyName","currencyRegion","currencyNewRate","setCurrencyCode","setCurrencyName","setCurrencyRegion","setCurrencyNewRate","refAbbr","refTitle","refRegion","refRate","tempRefAbbr","tempRefTitle","tempRefRegion","tempRefRate","fluid","helpPath1","helpPath2","setHelpPath","ListGroupItem","searchable","getFileNameFromURI","link","leadFile","catch","err","maxWidth","xl","HelpMenuLevel2","pageBody","exact","path","AccountRegistration","UserEditor","accordionViewCurrency","setAccordionViewCurrency","Currencies","CurrencyRegistration","CurrencyContainer","MyBusiness","onTransferTypeChange","TransferToPerson","TransferToBusiness","TransferToSelf","Transfer","contactSubject","contactMessage","setContactSubject","setContactMessage","refSubject","refMessage","tempRefSubject","tempRefMessage","subject","Contact","Status_404","dismissible","Children","child","cloneElement","styles","info","onAlertClose","errorStrings","infoStrings","msgError","msg","msgInfo","ip","logInEmail","logInPassword","setLoggingIn","setUpdateInterval","setLogInEmail","setLogInPassword","getUri","sendUserLogInRequest","signUpFirstName","signUpLastName","signUpEmail","signUpPassword","setSignUpFirstName","setSignUpLastName","setSignUpEmail","setSignUpPassword","passwordVisible","setPasswordVisible","cartProps","cartContent","cartPurposes","cartProcessingStatus","cartID","setCartProcessingStatus","Cart","priceTotal","businessCreated","business_created","price","find","products","product","fontWeight","merchant","getCartPurposes","cart","cartid","changeLanguage","lng","selectLanguage","paddingRight","now","pathname","collapseOnSelect","expand","Link","aria-controls","LanguageSelector","defaults","timestamp","stage2","stage3","onTick","onTimerReset","onTimeout","events","onSessionTimeout","seconds","setSeconds","modalMessageShow","setModalMessageShow","setInterval","clearInterval","useInterval","eventHandler","i","addEventListener","removeEventListener","useEventListener","currTime","timeFormatted","minute","second","modalMessage","OverlayTrigger","placement","overlay","Tooltip","AvTimer","sessionTimeout","AccountCircle","PowerSettingsNew","IdleTimer","names","links","index","Article","articleFeedbackSubmitted","scrollPositionY","helpPath3","setArticleFeedbackSubmitted","setScrollPositionY","setHelpPath2","getScrollPosition","setScrollPosition","refFeedbackSubmit","refFeedbackThanks","marginRight","cardTitleClass","getRedirect","getContainerClass","wrapperClass","innerClass","appClass","MainMenu","Image","SignUp","Auth","Login","validationTokenEmail","validationTokenEmailResent","setValidateTokenEmail","getUrlParam","token","ValidateEmail","passwordResetTokenValidated","passwordResetTokenEmail","ChangePassword","emailChanged","setLanguage","onLogOut","onRedirect","tempError","tempInfo","tempLanguage","tempEmailChanged","Logout","Help","passwordResetEmail","setValidateTokenPasswordReset","setPasswordResetEmail","PasswordReset","Summary","session","serverResponseReceived","dailyAllowanceDispatched","validateTokenEmail","validateTokenPasswordReset","connected","clearRefs","loggingOut","setRequestTimedOut","setDailyAllowanceDispatched","setRequest","getIP","saveCartID","sendEmailValidationRequest","sendPasswordResetRequest","showMessage","getCart","onSessionStart","setDate","getDate","lg","md","Routes","Build","PowerOff","socket","openSocket","connect","secure","reconnect","sendData","emit","responseProps","transferRequest","lastInsertId","setSession","setSettings","setCurrencies","setTransactions","setShares","setCountCurrencies","setCountTransactions","setCountShares","setConnected","setUserData","setSignedIn","setCartContent","setCartProps","setLastInsertId","setAccountNumber","setUserSequence","setUID","setUserBusinesses","setCountBusinesses","setUserBusinessesLoaded","setCartPurposes","setCountBusinessPurposes","setAccountPhotoPath","setPasswordResetTokenValidated","setPasswordResetTokenEmail","setValidationTokenEmail","setValidationTokenEmailResent","setEmailChanged","getTransactionById","sortObjectArray","deleteObjectArrayElement","onSessionEnd","responseFound","onResponse","res","reqData","tempRP","saveResponseProps","results","sequence","content","queryCnt","insertId","tags","resent","affectedRows","currency_abbr","isNaN","currency_rate","count_businesses","count_purposes","splice","temp","count_currencies","count_transaction_positions","count_shares","paddingTop","isLocalhost","setDebug","setLoggingOut","loggingIn","pageLoading","setPageLoading","setServerResponseReceived","requestTimedOut","setInstance","uuidv4","setSessionTimeout","reconnecting","setReconnecting","setIP","setCartID","updateInterval","currencyRate","setActivePageCurrencies","setActivePageTransactions","setActivePageShares","setCurrenciesPerPage","setTransactionsPerPage","setSharesPerPage","userSequence","setBusinessesPerPage","setActivePageBusinesses","setActiveBusinessID","setBusinessPurposesPerPage","searchTransactions","setSearchTransactions","searchPurposes","setSearchPurposes","searchShares","setSearchShares","redirectTo","setTransferType","setHelpPath1","setHelpPath3","accountPhotoPath","processRequest","requestFound","onRequest","dt","fullyear","getMonth","slice","initial","toUpperCase","icode","charCodeAt","scode","tcode","requestHandler","processUserResponse","context","errorFound","onError","userErrorHandler","userResponseHandler","processSystemResponse","systemErrorHandler","hideMessage","systemResponseHandler","getArrayObject","array","property","getRequestStatus","obj","ts","hour","isUTC","locales","diff","getTimezoneOffset","moment","add","toDate","DateTimeFormat","param","queryString","URLSearchParams","get","newPage","page","limit","selected","arr","filter","roundTo","n","digits","negative","undefined","multiplicator","pow","parseFloat","toFixed","round","sort","a","b","properties","indexOf","strLoading","strNotFound","finalStatus","retIntl","maximumFractionDigits","substr","to","fetch","method","headers","json","x","scrollX","y","scrollY","scroll","customer","pathLast","substring","lastIndexOf","select","execCommand","blur","stringNumber","parts_local","formatToParts","group","decimal","forEach","replace","on","onSignUp","onTransferSuccess","onTransfer","startSession","endSession","onSessionReset","clear","responseData","setResponseData","useSocket","latency","reason","attemptNumber","useSystemSocket","UnderConstruction","NotConnected","root","getElementById","construction","ReactDOM","render","fallback","Dispatcher","CustomToggle","decoratedOnClick","useAccordionToggle","ExpandMore","ChevronRight","body","minWidthBody","headerContent","transparent","headerBorderBottom","borderBottom","justifyContent","alignItems","flexWrap","item"],"mappings":"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8B,iBACAe,qBACAd,uBACA2O,kBACAC,kBACA1jB,iBACAC,kBACAC,gBACAC,sBACAC,gBACAugB,gBACAC,gBACAC,kBACAC,mBACA/gB,YACA2V,gBAEA8f,oBACAn4B,MAAOlB,KAAKC,MAAMiB,IAClBonB,KAAMtoB,KAAKC,MAAMqoB,KAOb1sB,GAAgB,CACpBo7B,WACAC,gBACAjO,eAGAoO,iBACAvF,aACAwF,4BACA1F,qBAEA4F,cACA/hB,oBAGA8d,aAEAmE,qBAEAlE,eACAqE,SACA3O,qBACAuK,iBACAC,mBACAC,aACAne,oBACAqR,4BACA+M,sBACAC,wBACAC,kBACAmE,2BACAC,6BACAC,uBACAC,wBACAC,0BACAC,oBACAvE,gBACA6D,mBACAtH,eACA0D,eAEAC,eACApC,+BAEAiG,aACA5D,kBACAC,gBACA7J,2BACArH,mBACAC,mBAEA3O,iBACA6f,mBACAC,oBACAC,mBACAhgB,kBACAigB,UACAC,qBACAC,sBACA+D,wBACAC,2BACA/D,2BACApX,qBACAob,uBACArb,uBACAsX,mBACAC,4BACA+D,8BACAlb,iCACAF,2BACAC,4BAEAE,wBACAtL,0BACAsD,gBACAyT,iBACAC,oBACAO,sBACAC,qBACAC,kBACAC,qBACA3b,qBACAC,mBACA+L,mCACAC,yCACAkB,+BACAC,qCAIAC,kCACAuF,8BACAC,0BACAC,6BACAC,yBACAC,0BACAC,sBACAC,6BACAC,yBACAC,gCACAC,oCACAyP,yBACA3Y,kBACA5M,aACAmtB,yBACAE,qBACAE,mBACAn9B,YACAC,WAEA84B,uBACA/E,yBACAkB,iCACA8D,kCACAC,8BACAC,2BACAC,iCACAC,mBACArc,sBACA/B,0BACAC,wBACAC,qBACA8B,oBACAa,wBACAZ,0BACA0O,qBACAC,qBACAvjB,oBACAC,qBACAC,mBACAC,yBACAC,mBACAsgB,mBACAC,mBACAC,qBACAC,sBACA3M,kBACAoW,+BACAC,sBACA0K,gBACAzK,gBACA0K,iBAaI10B,GAAc,SAAC,GAA0B,IAAxBxH,EAAuB,EAAvBA,IAAuB,IAAlBsM,YA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,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,uDAAwD,CACvD,IACA,EACA,GAED,0DAA2D,CAC1D,IACA,EACA,GAED,sBAAuB,CACtB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,IAED,0BAA2B,CAC1B,IACA,EACA,IAED,6BAA8B,CAC7B,IACA,EACA,IAED,+BAAgC,CAC/B,IACA,EACA,IAED,kCAAmC,CAClC,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,GAED,2BAA4B,CAC3B,IACA,EACA,GAED,0BAA2B,CAC1B,IACA,EACA,IAED,6BAA8B,CAC7B,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,GAED,+BAAgC,CAC/B,IACA,EACA,GAED,+BAAgC,CAC/B,IACA,EACA,GAED,kCAAmC,CAClC,IACA,EACA,GAED,yBAA0B,CACzB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,uDAAwD,CACvD,IACA,EACA,GAED,0DAA2D,CAC1D,IACA,EACA,GAED,sBAAuB,CACtB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,IAED,0BAA2B,CAC1B,IACA,EACA,IAED,6BAA8B,CAC7B,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,GAED,2BAA4B,CAC3B,IACA,EACA,GAED,wBAAyB,CACxB,IACA,EACA,GAED,2BAA4B,CAC3B,IACA,EACA,GAED,4BAA6B,CAC5B,IACA,EACA,GAED,+BAAgC,CAC/B,IACA,EACA,GAED,+BAAgC,CAC/B,IACA,EACA,GAED,kCAAmC,CAClC,IACA,EACA,GAED,yBAA0B,CACzB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAItB,EAAI,IAAIuB,MAAM,uBAAyBN,EAAM,KAEjD,MADAjB,EAAEwB,KAAO,mBACHxB,KAIR,IAAIyB,EAAMV,EAAIE,GAAMS,EAAKD,EAAI,GAC7B,OAAOP,EAAoBlB,EAAEyB,EAAI,IAAIH,MAAK,WACzC,OAAOJ,EAAoB6E,EAAErE,EAAID,EAAI,OAGvCT,EAAoBW,KAAO,WAC1B,OAAO7C,OAAO6C,KAAKZ,IAEpBC,EAAoBU,GAAK,GACzBE,EAAOC,QAAUb,I","file":"static/js/main.f7319afc.chunk.js","sourcesContent":["/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\n// export default (args) => {\r\nconst SubmitButton = React.memo((args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    caption: \"Submit\",\r\n    request: null,\r\n    namespace: \"Button\",\r\n    type: \"submit\",\r\n    classButton: \"\",\r\n    visible: true,\r\n    marginTop: 0,\r\n    timeout: 15000, // milliseconds\r\n    variant: \"primary\", // primary | secondary\r\n    onSubmit: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { request } = props.barrelGetters;\r\n  const { setError, setInfo } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const [requestExpired] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    setError(null);\r\n    setInfo(null);\r\n    // document.body.style.overflow = \"hidden\";\r\n    props.onSubmit();\r\n    // e.preventDefault();\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return !props.visible ? (\r\n      <></>\r\n    ) : (\r\n      <Button\r\n        type={props.type}\r\n        className={props.classButton}\r\n        onClick={onSubmit}\r\n        block\r\n        variant={props.variant === \"primary\" ? \"primary\" : \"outline-primary\"}\r\n        disabled={request === props.request && !requestExpired}\r\n        style={{\r\n          marginTop: props.marginTop + \"px\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n      >\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={request !== props.request || requestExpired}\r\n        />\r\n        &nbsp;\r\n        {props.caption}\r\n        &nbsp;\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n});\r\n\r\nexport default SubmitButton;\r\n","var map = {\n\t\"./en/topics/common-questions.js\": [\n\t\t157,\n\t\t3\n\t],\n\t\"./lv/topics/common-questions.js\": [\n\t\t160,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 256;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./en/articles/i-forgot-my-password-how-do-i-reset-it.js\": [\n\t\t155,\n\t\t1\n\t],\n\t\"./lv/articles/i-forgot-my-password-how-do-i-reset-it.js\": [\n\t\t158,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 263;\nmodule.exports = webpackAsyncContext;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 265;","var map = {\n\t\"./en/toasts/_ToastDefault.js\": [\n\t\t156,\n\t\t2\n\t],\n\t\"./lv/toasts/_ToastDefault.js\": [\n\t\t159,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 267;\nmodule.exports = webpackAsyncContext;","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n// not like to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    // lng: \"lv\",\r\n    // ns: [\"LogIn\", \"SignUp\"],\r\n    defaultNS: \"Default\",\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: \"languageChanged loaded\",\r\n      bindStore: \"added removed\",\r\n      nsMode: \"default\",\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","const dev = {\r\n  uri: {\r\n    ENDPOINT: \"http://localhost:9000\",\r\n    SITEMODE: \"DEVELOPMENT\",\r\n  },\r\n};\r\n\r\nconst dev2 = {\r\n  uri: {\r\n    ENDPOINT: \"http://192.168.2.100:5000\",\r\n    SITEMODE: \"DEVELOPMENT2\",\r\n  },\r\n};\r\n\r\nconst staging = {\r\n  uri: {\r\n    ENDPOINT: \"https://dev.local-currency.com\",\r\n    SITEMODE: \"STAGING\",\r\n  },\r\n};\r\n\r\nconst prod = {\r\n  uri: {\r\n    ENDPOINT: \"https://local-currency.com\",\r\n    SITEMODE: \"PRODUCTION\",\r\n  },\r\n};\r\n\r\nconst hostname = window && window.location && window.location.hostname;\r\n\r\nlet config;\r\nswitch (hostname) {\r\n  case \"localhost\":\r\n    config = dev;\r\n    break;\r\n  case \"192.168.2.100\":\r\n    config = dev2;\r\n    break;\r\n  case \"dev.local-currency.com\":\r\n    config = staging;\r\n    break;\r\n  case \"local-currency.com\":\r\n    config = prod;\r\n    break;\r\n  default:\r\n    config = dev;\r\n    break;\r\n}\r\n\r\nexport default {\r\n  ...config,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nexport const useStickyState = (defaultValue, key) => {\r\n  const [value, setValue] = useState(() => {\r\n    const stickyValue = window.localStorage.getItem(key);\r\n    // console.log(\"stickyValue:\", typeof stickyValue);\r\n\r\n    return stickyValue !== null &&\r\n      typeof stickyValue !== \"undefined\" &&\r\n      stickyValue !== \"undefined\"\r\n      ? JSON.parse(stickyValue)\r\n      : defaultValue;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n  return [value, setValue];\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useTimeout = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setTimeout(tick, delay);\r\n      return () => clearTimeout(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","import React from \"react\";\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n    console.log(\"Error boundary:\", error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      //   return <h1>Something went wrong.</h1>;\r\n      return <></>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Modal, Navbar, Nav } from \"react-bootstrap\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ModalMessage\",\r\n    centered: true,\r\n    message: \"\",\r\n    title: null,\r\n    footer: null,\r\n    // bodyStyle: { padding: \"1rem\" },\r\n    onHide: () => {},\r\n    size: \"sm\",\r\n    file: null,\r\n    backdrop: true, // \"static\"\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const ExternalFile =\r\n    props.file !== null\r\n      ? React.lazy(() => import(`../locale/${props.file}`))\r\n      : \"\";\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size={props.size}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered={props.centered}\r\n        backdrop={props.backdrop}\r\n      >\r\n        {props.title !== null && (\r\n          <Modal.Header closeButton>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src=\"gfx/zlogo_light.png\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  alt=\"\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                  {props.title}\r\n                </Modal.Title>\r\n              </Nav>\r\n            </Navbar>\r\n          </Modal.Header>\r\n        )}\r\n        <Modal.Body\r\n          style={{ maxHeight: \"calc(100vh - 210px)\", overflowY: \"auto\" }}\r\n        >\r\n          {props.message !== \"\" ? (\r\n            props.message\r\n          ) : (\r\n            <ErrorBoundary>\r\n              <ExternalFile />\r\n            </ErrorBoundary>\r\n          )}\r\n        </Modal.Body>\r\n        {props.footer !== null && (\r\n          <Modal.Footer>\r\n            <Button block onClick={props.onHide}>\r\n              {t(\"Close\")}\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, Alert, Col } from \"react-bootstrap\";\r\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n// import Dropzone from \"../dropzone\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport ModalMessage from \"../modalMessage\";\r\nimport timezones from \"./timezones.en.json\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    request: \"get user sequence\", // \"register account\",\r\n    namespace: \"AccountRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    signedIn,\r\n    accountNumber,\r\n    // accountPhotoPath,\r\n    userData,\r\n    language,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    debug,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n  } = props.barrelSetters;\r\n  const { getReviser, getWorkplace, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const [userAgreementShow, setUserAgreementShow] = useStickyState(\r\n    false,\r\n    \"userAgreementShow\"\r\n  );\r\n  const [privacyPolicyShow, setPrivacyPolicyShow] = useStickyState(\r\n    false,\r\n    \"privacyPolicyShow\"\r\n  );\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    // dropzoneHook: yup.string().required(t(\"Photo ID is required\")),\r\n    timezone: yup.string().required(t(\"Timezone is required\")),\r\n    birthYear: yup.number().required(t(\"Year is required\")),\r\n    birthMonth: yup.number().required(t(\"Month is required\")),\r\n    birthDay: yup.number().required(t(\"Day is required\")),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Send account registration request\r\n   * @param {object} data\r\n   */\r\n  const sendAccountRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.email = userData.email;\r\n\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    delete data.birthYear;\r\n    delete data.birthMonth;\r\n    delete data.birthDay;\r\n\r\n    const newDate = composeDate(userBirthYear, userBirthMonth, userBirthDay);\r\n    data.birthDate = newDate;\r\n\r\n    if (newDate !== \"\") {\r\n      if (sendAccountRegistrationRequest(data)) {\r\n        // Account registration request was submitted\r\n      }\r\n    }\r\n  };\r\n\r\n  const timezones_sorted = timezones;\r\n\r\n  /**\r\n   * Validates a date\r\n   * @param {string} dateString\r\n   */\r\n  const isValidDate = (dateString) => {\r\n    let dateformat = /^(0?[1-9]|1[0-2])[\\/](0?[1-9]|[1-2][0-9]|3[01])[\\/]\\d{4}$/;\r\n\r\n    // Match the date format through regular expression\r\n    if (dateString.match(dateformat)) {\r\n      let operator = dateString.split(\"/\");\r\n\r\n      // Extract the string into month, date and year\r\n      let datepart = [];\r\n      if (operator.length > 1) {\r\n        datepart = dateString.split(\"/\");\r\n      }\r\n      let month = parseInt(datepart[0]);\r\n      let day = parseInt(datepart[1]);\r\n      let year = parseInt(datepart[2]);\r\n\r\n      // Create list of days of a month\r\n      let ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n      if (month === 1 || month > 2) {\r\n        if (day > ListofDays[month - 1]) {\r\n          ///This check is for Confirming that the date is not out of its range\r\n          return false;\r\n        }\r\n      } else if (month === 2) {\r\n        let leapYear = false;\r\n        if ((!(year % 4) && year % 100) || !(year % 400)) {\r\n          leapYear = true;\r\n        }\r\n        if (leapYear === false && day >= 29) {\r\n          return false;\r\n        } else if (leapYear === true && day > 29) {\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Composes a date\r\n   * @param {string} year\r\n   * @param {string} month\r\n   * @param {string} day\r\n   */\r\n  const composeDate = (year, month, day) => {\r\n    const newDate = `${month}/${day}/${year}`;\r\n    if (isValidDate(newDate)) {\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        setUserBirthDateError(\"\");\r\n\r\n        return newDate;\r\n      } else {\r\n        setUserBirthDateError(\"\");\r\n        return \"\";\r\n      }\r\n    } else {\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        setUserBirthDateError(t(\"Date must be valid\"));\r\n        return \"\";\r\n      } else {\r\n        setUserBirthDateError(\"\");\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const yearNow = new Date().getFullYear();\r\n\r\n  /**\r\n   * Form\r\n   * @param {*} param0\r\n   */\r\n  const AccountRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    setFieldValue,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Form.Row style={{ margin: \"0 0\" }}>\r\n        <Form.Group\r\n          as={Col}\r\n          controlId=\"formGridDateOfBirth\"\r\n          style={{ margin: \"0 0\" }}\r\n        >\r\n          <Form.Label>{t(\"Date of birth\")}</Form.Label>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridYear\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthYear\"\r\n            value={values.birthYear}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthYear(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthYear && touched.birthYear}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Year\")}\r\n            </option>\r\n            {Array.from(Array(120).keys()).map((key) => {\r\n              let year = yearNow - key;\r\n\r\n              return (\r\n                <option key={key} value={year}>\r\n                  {year}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthYear}\r\n          </Form.Control.Feedback>\r\n          <div className=\"invalid-feedback-custom\">{userBirthDateError}</div>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridMonth\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthMonth\"\r\n            value={values.birthMonth}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthMonth(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthMonth && touched.birthMonth}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Month\")}\r\n            </option>\r\n            {Array.from(Array(12).keys()).map((key) => {\r\n              let date = new Date(`${key + 1}/1/1970`);\r\n              let monthName = date.toLocaleString(language, { month: \"long\" });\r\n              let monthNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={monthNumber}>\r\n                  {monthNumber} - {monthName}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthMonth}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridDay\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthDay\"\r\n            value={values.birthDay}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthDay(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthDay && touched.birthDay}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Day\")}\r\n            </option>\r\n            {Array.from(Array(31).keys()).map((key) => {\r\n              let dayNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={dayNumber}>\r\n                  {dayNumber}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthDay}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Group controlId=\"validationFormikTimezone\">\r\n        <Form.Label>{t(\"Timezone\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          custom\r\n          name=\"timezone\"\r\n          value={values.timezone}\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n            setUserTimezone(e.target.value);\r\n          }}\r\n          isInvalid={!!errors.timezone && touched.timezone}\r\n        >\r\n          <option value=\"\">{t(\"Choose...\")}</option>\r\n          {timezones_sorted.map((element, key) => (\r\n            <option\r\n              key={key}\r\n              value={`${(((element.Offset + 12) % 24) + 1)\r\n                .toString()\r\n                .padStart(2, \"0\")} - ${element.Name}`}\r\n            >\r\n              {element.Name}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.timezone}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <div style={{ paddingBottom: \"10px\" }}>\r\n        {t(\"Agree to terms and conditions\")}\r\n      </div>\r\n\r\n      <Trans i18nKey=\"AccountRegistration:The User Agreement and the Privacy Policy\">\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setUserAgreementShow(true)}>\r\n          User Agreement\r\n        </a>\r\n\r\n        <br />\r\n\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setPrivacyPolicyShow(true)}>\r\n          Privacy Policy\r\n        </a>\r\n      </Trans>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  if (signedIn === false)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"User not logged in\")}</Alert.Heading>\r\n          <p>\r\n            <Trans i18nKey=\"AccountRegistration:Please log in first\">\r\n              Please log in first.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  if (!debug && accountNumber !== null)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"Account successfully registered\")}</Alert.Heading>\r\n          <p>\r\n            <Trans\r\n              i18nKey=\"AccountRegistration:Account with your personal ID successfully registered\"\r\n              accountNumber={accountNumber}\r\n            >\r\n              Account with the personal ID\r\n              <strong>{{ accountNumber }}</strong>\r\n              successfully registered.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        show={userAgreementShow}\r\n        file={`${language}/UserAgreement`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"User Agreement\")}\r\n        footer=\"\"\r\n        onHide={() => setUserAgreementShow(false)}\r\n      />\r\n\r\n      <ModalMessage\r\n        show={privacyPolicyShow}\r\n        file={`${language}/PrivacyPolicy`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"Privacy Policy\")}\r\n        footer=\"\"\r\n        onHide={() => setPrivacyPolicyShow(false)}\r\n      />\r\n\r\n      <Card title={t(\"Open account\")} border={0}>\r\n        <Formik\r\n          component={AccountRegistrationForm}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            // dropzoneHook: accountPhotoPath,\r\n            timezone: userTimezone,\r\n            birthYear: userBirthYear,\r\n            birthMonth: userBirthMonth,\r\n            birthDay: userBirthDay,\r\n          }}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Pagination\",\r\n    size: \"md\",\r\n    countItems: 0,\r\n    itemsPerPage: 5,\r\n    active: 0, // active page\r\n    onClick: () => {},\r\n    align: \"center\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const pages = Math.ceil(props.countItems / props.itemsPerPage);\r\n\r\n  if (pages < 2) return <></>;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  const onClick = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = props.active > 1 ? props.active - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          props.active < Math.ceil(props.countItems / props.itemsPerPage)\r\n            ? props.active + 1\r\n            : Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // getBusinesses(number);\r\n    props.onClick(number);\r\n  };\r\n\r\n  const getPages = () => {\r\n    let items = [];\r\n    for (let number = 1; number <= pages; number++) {\r\n      if (\r\n        number === 1 ||\r\n        number === pages ||\r\n        (number >= props.active - 1 && number <= props.active + 1)\r\n      ) {\r\n        items.push(\r\n          <Pagination.Item\r\n            key={number}\r\n            active={number === props.active}\r\n            onClick={() => onClick(number)}\r\n          >\r\n            {number}\r\n          </Pagination.Item>\r\n        );\r\n      } else if (number === 2 || number === pages - 1) {\r\n        items.push(<Pagination.Ellipsis key={number} disabled />);\r\n      }\r\n    }\r\n    return items;\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const { align } = props;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: `${align}`,\r\n          // backgroundColor: \"red\",\r\n        }}\r\n      >\r\n        <span style={{ display: \"inline-block\" }}>\r\n          <Pagination size={props.size} style={{ padding: 0, margin: 0 }}>\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.First onClick={() => props.onClick(\"First\")} />\r\n                <Pagination.Prev onClick={() => props.onClick(\"Prev\")} />\r\n              </>\r\n            )}\r\n\r\n            {getPages()}\r\n\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.Next onClick={() => props.onClick(\"Next\")} />\r\n                <Pagination.Last onClick={() => props.onClick(\"Last\")} />\r\n              </>\r\n            )}\r\n          </Pagination>\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"react-calendar/dist/Calendar.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Col, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search as SearchIcon, Replay as ReplayIcon } from \"@material-ui/icons\";\r\n// import Autosuggest from \"react-autosuggest\";\r\n// import Calendar from \"react-calendar\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n// import DatePicker from \"../datePicker\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Search\",\r\n    request: \"find currencies\",\r\n    advancedSearch: false,\r\n    placeholder: \"SEARCH...\",\r\n    captionAdvancedSearch: \"Advanced search\",\r\n    onSubmit: () => {},\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { search } = props.barrelGetters;\r\n  const { setSearch } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /** \r\n    * Hooks\r\n    ============================================================================ */\r\n  // const [suggestions, setSuggestions] = useStickyState([], \"suggestions\");\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  const refSearch = React.createRef();\r\n\r\n  /**\r\n    * Clear refs\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    const tempRefSearch = refSearch.current;\r\n    return () => {\r\n      if (tempRefSearch !== null && search !== tempRefSearch.value)\r\n        setSearch(tempRefSearch.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    search: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    // findCurrencies(data.search);\r\n    props.onSubmit(data.search);\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * Search\r\n         */}\r\n        <Form.Group style={{ padding: 0, margin: 0 }}>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={props.placeholder}\r\n              name=\"search\"\r\n              ref={refSearch}\r\n              value={values.search}\r\n              autoComplete=\"search\"\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.search && touched.search}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text\r\n                id=\"inputGroupAppend\"\r\n                onClick={() => onSubmit(values)}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <SearchIcon style={{ color: \"var(--dark)\" }} />\r\n              </InputGroup.Text>\r\n            </InputGroup.Append>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.search}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n          {props.advancedSearch && (\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <button\r\n                className=\"button-transparent\"\r\n                style={{ margin: \"0\", padding: \"0\" }}\r\n              >\r\n                <small className=\"text-muted\">\r\n                  {props.captionAdvancedSearch}\r\n                </small>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        search: search,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport flatpickr from \"flatpickr\";\r\n// import { Latvian } from \"flatpickr/dist/l10n/lv.js\";\r\nimport * as language from \"flatpickr/dist/l10n\"; // DO NOT REMOVE !!!\r\nimport { DateRange } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DatePickerWrapper\",\r\n    request: \"get something\",\r\n    value: \"\",\r\n    placeholder: \"Date\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  const refDatePicker = React.createRef();\r\n\r\n  /**\r\n    * States\r\n    ============================================================================ */\r\n  // const [isOpen, setIsOpen] = useState(false);\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  let fp = null; // flatPicker instance\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    fp = flatpickr(refDatePicker.current, props.options);\r\n\r\n    return () => {\r\n      // on unmount\r\n      fp.destroy();\r\n      fp = null;\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (fp === null) return;\r\n\r\n  //   console.log(\"isOpen:\", isOpen);\r\n\r\n  //   // isOpen ? fp.open() : fp.close();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [isOpen]);\r\n\r\n  // useEffect(() => {\r\n  //   if (fp !== null) return;\r\n\r\n  //   fp = flatpickr(refDatePicker.current, props.options);\r\n\r\n  //   // eslint-disable-next-line\r\n  // });\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    datePicker: yup.string().required(t(\"Date is required\")),\r\n  });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <InputGroup>\r\n      <Form.Control\r\n        type=\"string\"\r\n        placeholder={props.placeholder}\r\n        aria-describedby=\"inputGroupPrepend\"\r\n        ref={refDatePicker}\r\n        name=\"datePicker\"\r\n        autoComplete=\"off\"\r\n        value={values.datePicker}\r\n        onChange={handleChange}\r\n        isInvalid={!!errors.datePicker && touched.datePicker}\r\n      />\r\n      <InputGroup.Append>\r\n        <InputGroup.Text\r\n          onClick={() => {\r\n            // console.log(\"click\");\r\n            if (fp !== null) fp.open();\r\n\r\n            // setIsOpen(!isOpen);\r\n          }}\r\n          style={{\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <DateRange style={{ color: \"var(--dark)\" }} />\r\n        </InputGroup.Text>\r\n      </InputGroup.Append>\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        {errors.datePicker}\r\n      </Form.Control.Feedback>\r\n    </InputGroup>\r\n  );\r\n\r\n  /**\r\n     * Formik return\r\n     ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        datePicker: props.value,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"flatpickr/dist/themes/material_green.css\";\r\nimport \"./DatePicker.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { Form, InputGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import Flatpickr from \"react-flatpickr\";\r\n// eslint-disable-next-line\r\n// import { Latvian } from \"flatpickr/dist/l10n/lv.js\";\r\n// import { DateRange } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\nimport Flatpickr from \"./DatePickerWrapper\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DatePicker\",\r\n    request: \"get something\",\r\n    value: \"\",\r\n    onChange: () => {},\r\n    placeholder: \"Date\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  // const [placeholder, setPlaceholder] = useState(props.placeholder);\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  // const refFlatpickr = React.createRef();\r\n\r\n  // Flatpickr(myElem, {\r\n  //   locale: Latvian, // locale for this instance only\r\n  // });\r\n\r\n  // Flatpickr.localize(Latvian);\r\n  // Flatpickr.localize(Flatpickr.l10ns.lv);\r\n  // flatpickr(\"mySelector\");\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  // const schema = yup.object({\r\n  //   dateStart: yup.string().required(t(\"Start date is required\")),\r\n  // });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  // const onSubmit = (data) => {\r\n  //   console.log(data);\r\n  // };\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <Flatpickr\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      options={{\r\n        locale: language,\r\n        showMonths: 1,\r\n        inline: false,\r\n        shorthandCurrentMonth: false,\r\n        allowInput: true,\r\n        clickOpens: false,\r\n        monthSelectorType: \"static\",\r\n        altInput: true,\r\n        altFormat: t(\"Y-m-d\"),\r\n        dateFormat: \"Y-m-d\", // \"d.m.Y\",\r\n        // dateFormat: \"Y-m-d\",\r\n        // minDate: new Date().fp_incr(-7),\r\n        maxDate: \"today\",\r\n        // mode: \"range\",\r\n        defaultDate: props.value,\r\n        onChange: function (selectedDates, dateStr, instance) {\r\n          console.log(selectedDates, dateStr, instance);\r\n          props.onChange(dateStr);\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"react-calendar/dist/Calendar.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Col, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search as SearchIcon, Replay as ReplayIcon } from \"@material-ui/icons\";\r\n// import Autosuggest from \"react-autosuggest\";\r\n// import Calendar from \"react-calendar\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n// import { useStickyState } from \"../../utils/state\";\r\nimport DatePicker from \"../datePicker\";\r\n// import SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DateRangePicker\",\r\n    request: \"find currencies\",\r\n    caption: \"Period of time\",\r\n    captionStartDate: \"Start date\",\r\n    captionEndDate: \"End date\",\r\n    captionUpdate: \"Update\",\r\n    onSubmit: () => {},\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { search, dateRangeStart, dateRangeEnd } = props.barrelGetters;\r\n  const { setSearch, setDateRangeStart, setDateRangeEnd } = props.barrelSetters;\r\n  const {\r\n    getTransactions,\r\n    formatDate,\r\n    clearRequestStatus,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /** \r\n     * Hooks\r\n     ============================================================================ */\r\n  // const [suggestions, setSuggestions] = useStickyState([], \"suggestions\");\r\n\r\n  /**\r\n     * Create refs\r\n     ============================================================================ */\r\n  const refSearch = React.createRef();\r\n\r\n  /**\r\n     * Clear refs\r\n     ============================================================================ */\r\n  useEffect(() => {\r\n    const tempRefSearch = refSearch.current;\r\n    return () => {\r\n      if (tempRefSearch !== null && search !== tempRefSearch.value)\r\n        setSearch(tempRefSearch.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    dateStart: yup.string().required(t(\"Date start is required\")),\r\n    dateEnd: yup.string().required(t(\"Date end is required\")),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const onSubmit = () => {\r\n    getTransactions(1);\r\n  };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const DateRangePickerForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * Caption: Period of time\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          <Form.Group\r\n            as={Col}\r\n            controlId=\"formGridPeriodOfTime\"\r\n            style={{ margin: \"0\", padding: \"0 0\" }}\r\n          >\r\n            <Form.Label>{props.caption}</Form.Label>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        {/**\r\n         * Date start / Date end\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          {/**\r\n           * Date start\r\n           */}\r\n          <Form.Group\r\n            as={Col}\r\n            style={{ margin: \"0\", padding: \"0\" }}\r\n            controlId=\"validationFormikDateStart\"\r\n          >\r\n            <DatePicker\r\n              name=\"dateStart\"\r\n              value={values.dateStart}\r\n              onChange={(data) => {\r\n                // console.log(data);\r\n                setDateRangeStart(data);\r\n              }}\r\n              isInvalid={!!errors.dateStart && touched.dateStart}\r\n              placeholder={props.captionStartDate}\r\n              {...args}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.dateStart}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          {/**\r\n           * Dash\r\n           */}\r\n          <span style={{ margin: \"0\", padding: \"0.4rem 0.5rem\" }}>-</span>\r\n\r\n          {/**\r\n           * Date end\r\n           */}\r\n          <Form.Group\r\n            as={Col}\r\n            style={{ padding: \"0 0\" }}\r\n            controlId=\"validationFormikDateEnd\"\r\n          >\r\n            <DatePicker\r\n              name=\"dateEnd\"\r\n              value={values.dateEnd}\r\n              onChange={(data) => {\r\n                // console.log(data);\r\n                setDateRangeEnd(data);\r\n              }}\r\n              isInvalid={!!errors.dateEnd && touched.dateEnd}\r\n              placeholder={props.captionEndDate}\r\n              {...args}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.dateEnd}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        {/**\r\n         * Update\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onSubmit}\r\n            className=\"button-transparent\"\r\n            style={{ margin: \"-0.5rem 0 0 0\", padding: \"0\" }}\r\n          >\r\n            <ReplayIcon className=\"sm\" style={{ color: \"var(--dark)\" }} />\r\n            <span\r\n              style={{\r\n                margin: \"0 0.5rem\",\r\n              }}\r\n            >\r\n              {props.captionUpdate}\r\n            </span>\r\n          </button>\r\n        </Form.Row>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n     * Formik return\r\n     ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={DateRangePickerForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        dateStart: dateRangeStart,\r\n        dateEnd: dateRangeEnd,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { ListGroup, Badge } from \"react-bootstrap\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { ArrowRightAlt } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\nimport DateRangePicker from \"../dateRangePicker\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    request: \"get transactions\",\r\n    namespace: \"Transactions\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    transactions,\r\n    countTransactions,\r\n    activePageTransactions,\r\n    transactionsPerPage,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const {\r\n    getTransactions,\r\n    findTransactions,\r\n    showRequestStatus,\r\n    format,\r\n    formatDate,\r\n    formatPerCent,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageTransactions > 1 ? activePageTransactions - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageTransactions <\r\n          Math.ceil(countTransactions / transactionsPerPage)\r\n            ? activePageTransactions + 1\r\n            : Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getTransactions(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      header={false}\r\n      maxWidthBody=\"700px\"\r\n    >\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <Search\r\n          advancedSearch={false}\r\n          placeholder={t(\"Find transactions...\")}\r\n          captionAdvancedSearch={t(\"Advanced search\")}\r\n          onSubmit={findTransactions}\r\n          {...args}\r\n        />\r\n        <br />\r\n        <DateRangePicker\r\n          caption={t(\"Period of time\")}\r\n          captionStartDate={t(\"Start date\")}\r\n          captionEndDate={t(\"End date\")}\r\n          captionUpdate={t(\"Update\")}\r\n          {...args}\r\n        />\r\n      </div>\r\n      <ListGroup variant=\"flush\">\r\n        {transactions !== null &&\r\n          transactions.map((transaction, keyTransactions) => {\r\n            cnt++;\r\n\r\n            const {\r\n              // business_description,\r\n              // business_id,\r\n              // business_image,\r\n              // business_link,\r\n              // business_status,\r\n              business_title,\r\n              comment,\r\n              conv_amount,\r\n              created,\r\n              // currency,\r\n              // exchange_rate,\r\n              sender_firstname,\r\n              sender_lastname,\r\n              recipient_firstname,\r\n              recipient_lastname,\r\n              // purpose_description,\r\n              purpose_id,\r\n              // purpose_image,\r\n              // purpose_link,\r\n              // purpose_status,\r\n              purpose_title,\r\n              recipient_id,\r\n              roles,\r\n              share,\r\n              share_per_cent,\r\n              sender_id,\r\n              // sender_status,\r\n              // recipient_status,\r\n              from_account,\r\n              to_account,\r\n              type,\r\n            } = transaction;\r\n\r\n            const i_am_sender = sender_id === accountNumber;\r\n            const i_am_recipient = recipient_id === accountNumber;\r\n            const t_from_account = t(from_account);\r\n            const t_to_account = t(to_account);\r\n\r\n            const roles_available =\r\n              roles !== null && roles !== \"-\" && typeof roles !== \"undefined\";\r\n            const arrRoles = roles_available ? roles.split(\",\") : [];\r\n\r\n            const shares_available =\r\n              typeof share !== \"undefined\" && share !== null && share !== \"-\";\r\n\r\n            if (type === \"transfer U2S\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions}>\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n\r\n                  <Trans\r\n                    i18nKey=\"Transactions:fromAccountToAccount\"\r\n                    t_from_account={t_from_account}\r\n                    t_to_account={t_to_account}\r\n                  >\r\n                    {{ t_from_account }}{\" \"}\r\n                    <ArrowRightAlt style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                    {{ t_to_account }}\r\n                  </Trans>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions}>\r\n                  {i_am_recipient ? (\r\n                    <>\r\n                      {sender_firstname} {sender_lastname}\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {recipient_firstname} {recipient_lastname}\r\n                    </>\r\n                  )}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  {comment !== \"\" && <br />}\r\n                  {comment}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer V2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions}>\r\n                  {t(\"Daily allowance\")}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2B\") {\r\n              const sender = !i_am_sender ? (\r\n                <>\r\n                  {sender_firstname} {sender_lastname}\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              );\r\n              return (\r\n                <ListGroup.Item key={keyTransactions}>\r\n                  {sender}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  {!i_am_sender && <br />}\r\n                  {purpose_id}\r\n                  {comment !== \"\" && comment !== null && (\r\n                    <>\r\n                      <br />\r\n                      {comment}\r\n                    </>\r\n                  )}\r\n                  <br />\r\n                  {business_title} &middot; {purpose_title}\r\n                  {roles_available && (\r\n                    <>\r\n                      <br />\r\n                      {arrRoles.map((role, key) => {\r\n                        return (\r\n                          <span key={key}>\r\n                            {\" \"}\r\n                            <Badge pill variant=\"secondary\">\r\n                              {role}\r\n                            </Badge>\r\n                          </span>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  )}{\" \"}\r\n                  {shares_available && (\r\n                    <>\r\n                      <br />\r\n                      {share} {t(\"shares\")} ({formatPerCent(share_per_cent)})\r\n                    </>\r\n                  )}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n\r\n              // TODO: check if this works\r\n            } else {\r\n              console.log(\"Unknown transfer type:\", type);\r\n\r\n              return <></>;\r\n            }\r\n          })}\r\n      </ListGroup>\r\n\r\n      {showRequestStatus(\r\n        \"get transactions / SELECT transactions\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No transactions\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <br />\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countTransactions}\r\n        itemsPerPage={transactionsPerPage}\r\n        active={activePageTransactions}\r\n        onClick={onPageSelect}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Toast, Badge } from \"react-bootstrap\";\r\nimport { Settings } from \"@material-ui/icons\";\r\nimport _ from \"lodash\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Shareholder\",\r\n    request: \"change share\",\r\n    purpose: null,\r\n    shareholder: null,\r\n    closeButton: true,\r\n    rangeControl: true,\r\n    sharePerCent: null,\r\n    businessTitle: null,\r\n    purposeTitle: null,\r\n    businessOwnerFirstname: null,\r\n    businessOwnerLastname: null,\r\n    sharesCreated: null,\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { purposeShareholders } = props.barrelGetters;\r\n  const { setPurposeShareholders } = props.barrelSetters;\r\n  const { sendRequest, formatPerCent, formatDate } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const [userQuery, setUserQuery] = useState(props.share);\r\n  const delayedQuery = useRef(_.debounce((q) => sendQuery(q), 2000)).current;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const onChange = (e) => {\r\n    setUserQuery(e.target.value);\r\n    delayedQuery(e.target.value);\r\n  };\r\n\r\n  const onClose = () => {\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    return sendRequest({ req: \"remove shareholder\", data });\r\n  };\r\n\r\n  const sendQuery = (delayedQuery) => {\r\n    const ps = purposeShareholders;\r\n    ps[props.id].share = delayedQuery;\r\n    setPurposeShareholders(JSON.stringify(ps));\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    data.share = delayedQuery;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const sharesLabelId = `sharesLabel${props.key}`;\r\n    return (\r\n      <Toast key={props.key} onClose={onClose} style={{ minWidth: \"100%\" }}>\r\n        <Toast.Header closeButton={props.closeButton}>\r\n          <strong className=\"mr-auto\">\r\n            {props.firstname} {props.lastname}{\" \"}\r\n            <small>\r\n              <Settings\r\n                hidden={true}\r\n                fontSize=\"small\"\r\n                style={{ color: \"var(--dark)\" }}\r\n              />\r\n            </small>\r\n          </strong>\r\n          <small>\r\n            <span id={sharesLabelId}>{userQuery}</span> {t(\"shares\")}\r\n          </small>\r\n        </Toast.Header>\r\n        <Toast.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formRoles\">\r\n              <div>\r\n                {props.roles.map((role, key) => {\r\n                  return (\r\n                    <span key={key}>\r\n                      <Badge pill variant=\"secondary\">\r\n                        {role}\r\n                      </Badge>{\" \"}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Form.Group>\r\n\r\n            {props.rangeControl && (\r\n              <Form.Group controlId=\"formBasicRange\">\r\n                <Form.Control\r\n                  type=\"range\"\r\n                  custom\r\n                  variant=\"light\"\r\n                  // value={share}\r\n                  defaultValue={userQuery}\r\n                  // value={userQuery}\r\n                  min={1}\r\n                  max={1000}\r\n                  step={1}\r\n                  // ref={this.input}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            )}\r\n          </Form>\r\n          <span>\r\n            {props.sharePerCent !== null && formatPerCent(props.sharePerCent)}{\" \"}\r\n            {props.businessTitle !== null && props.businessTitle}{\" \"}\r\n            {props.businessTitle !== null && props.purposeTitle !== null && (\r\n              <> &middot; </>\r\n            )}\r\n            {props.purposeTitle !== null && props.purposeTitle}{\" \"}\r\n          </span>\r\n          {props.sharesCreated !== null && (\r\n            <>\r\n              <br />\r\n              {formatDate(props.sharesCreated, {\r\n                month: \"long\",\r\n                day: \"numeric\",\r\n                year: \"numeric\",\r\n              })}\r\n            </>\r\n          )}{\" \"}\r\n          {(props.businessOwnerFirstname !== null ||\r\n            props.businessOwnerLastname !== null) && <br />}\r\n          {props.businessOwnerFirstname !== null &&\r\n            props.businessOwnerFirstname}{\" \"}\r\n          {props.businessOwnerLastname !== null && props.businessOwnerLastname}{\" \"}\r\n        </Toast.Body>\r\n      </Toast>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Form, InputGroup, Button, Table, ListGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n// import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\nimport Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Search from \"../search\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    request: \"get shares\",\r\n    namespace: \"Shares\",\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    shares,\r\n    countShares,\r\n    activePageShares,\r\n    sharesPerPage,\r\n    // accountNumber,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  // const {  } = props.barrelSetters;\r\n  const {\r\n    getShares,\r\n    // getRequestStatus,\r\n    showRequestStatus,\r\n    findShares,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onPageSelect = (number) => {\r\n    console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageShares > 1 ? activePageShares - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageShares < Math.ceil(countShares / sharesPerPage)\r\n            ? activePageShares + 1\r\n            : Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getShares(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      header={false}\r\n      maxWidthBody=\"700px\"\r\n    >\r\n      <Search\r\n        advancedSearch={false}\r\n        placeholder={t(\"Find shares...\")}\r\n        captionAdvancedSearch={t(\"Advanced search\")}\r\n        onSubmit={findShares}\r\n        {...args}\r\n      />\r\n      <br />\r\n      {shares !== null &&\r\n        shares.map((share, keyShares) => {\r\n          cnt++;\r\n\r\n          const {\r\n            // business_description,\r\n            // business_id,\r\n            // business_image,\r\n            // business_link,\r\n            // business_status,\r\n            business_title,\r\n            owner_firstname,\r\n            owner_lastname,\r\n            // owner_status,\r\n            // owner_uid,\r\n            // purpose_description,\r\n            purpose_id,\r\n            // purpose_image,\r\n            // purpose_link,\r\n            // purpose_status,\r\n            purpose_title,\r\n            shareholder_id,\r\n            shares_created,\r\n            // shares_description,\r\n            share_per_cent,\r\n            shares_roles,\r\n            shares_share,\r\n            // shares_status,\r\n            // shares_title,\r\n          } = share;\r\n\r\n          const arrRoles = shares_roles !== null ? shares_roles.split(\",\") : [];\r\n          // const content = `${owner_firstname} ${owner_lastname} / ${formatDate(\r\n          //   shares_created\r\n          // )}`;\r\n\r\n          // console.log(\"keyShares:\", keyShares);\r\n\r\n          return (\r\n            <Shareholder\r\n              {...args}\r\n              key={keyShares}\r\n              id={keyShares}\r\n              shareholder={shareholder_id}\r\n              purpose={purpose_id}\r\n              firstname={userData.firstname}\r\n              lastname={userData.lastname}\r\n              share={shares_share}\r\n              roles={arrRoles}\r\n              closeButton={false}\r\n              rangeControl={false}\r\n              sharePerCent={share_per_cent}\r\n              businessOwnerFirstname={owner_firstname}\r\n              businessOwnerLastname={owner_lastname}\r\n              businessTitle={business_title}\r\n              purposeTitle={purpose_title}\r\n              sharesCreated={shares_created}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {showRequestStatus(\r\n        \"get shares / SELECT shares\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No shares\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"md\"\r\n        countItems={countShares}\r\n        itemsPerPage={sharesPerPage}\r\n        active={activePageShares}\r\n        onClick={onPageSelect}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Badge } from \"react-bootstrap\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n  * Default export\r\n  ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Balance\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { userData } = props.barrelGetters;\r\n  const { setAccountType, setRedirectTo } = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const userDataParsed = userData;\r\n\r\n  const available =\r\n    userDataParsed !== null\r\n      ? format(\r\n          userDataParsed.acc_curr +\r\n            userDataParsed.acc_cred +\r\n            userDataParsed.acc_save\r\n        )\r\n      : null;\r\n  let acc_curr =\r\n    userDataParsed !== null ? format(userDataParsed.acc_curr) : null;\r\n  let acc_cred =\r\n    userDataParsed !== null ? format(userDataParsed.acc_cred) : null;\r\n  let acc_save =\r\n    userDataParsed !== null ? format(userDataParsed.acc_save) : null;\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n\r\n  /**\r\n   *\r\n   * @param {*} type\r\n   */\r\n  const onAccountTypeSelected = (type) => {\r\n    setAccountType(type);\r\n    setRedirectTo(\"/transfer\");\r\n  };\r\n\r\n  const getJSX = () => {\r\n    return (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        header={false}\r\n        maxWidthBody=\"700px\"\r\n      >\r\n        <Form noValidate>\r\n          <Form.Group>\r\n            <Form.Label>{t(\"Available\")}</Form.Label>\r\n\r\n            <Form.Text>\r\n              <div style={{ fontSize: \"3em\" }}>{available}</div>\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <div style={{}}>{t(\"Current account\")}</div>\r\n                <span className=\"\" onClick={() => {}}>\r\n                  <Badge variant=\"Light\">{acc_curr}</Badge>\r\n                </span>\r\n              </li>\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <div style={{}}>{t(\"Credit account\")}</div>\r\n\r\n                <span className=\"\" onClick={() => {}}>\r\n                  <Badge variant=\"Light\">{acc_cred}</Badge>\r\n                </span>\r\n              </li>\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <div style={{}}>{t(\"Savings account\")}</div>\r\n                <span className=\"\" onClick={() => {}}>\r\n                  <Badge variant=\"Light\">{acc_save}</Badge>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </Form.Group>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FileCopy as FileCopyIcon } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Component\", value: \"\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { copyToClipboard } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refCopyableField = useRef(null);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <>\r\n        <span\r\n          style={{\r\n            position: \"relative\",\r\n            display: \"block\",\r\n            overflow: \"auto\",\r\n            // wordBreak: \"break-all\",\r\n            // whiteSpace: \"nowrap\",\r\n          }}\r\n        >\r\n          <input\r\n            ref={refCopyableField}\r\n            className=\"no-focus\"\r\n            readOnly\r\n            style={{\r\n              border: 0,\r\n              width: \"10rem\",\r\n              background: \"Transparent\",\r\n            }}\r\n            type=\"text\"\r\n            defaultValue={props.value}\r\n          />\r\n\r\n          {document.queryCommandSupported(\"copy\") && (\r\n            <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n              <button\r\n                className=\"button-transparent\"\r\n                onClick={() => copyToClipboard(refCopyableField)}\r\n              >\r\n                <FileCopyIcon style={{ color: \"var(--dark)\" }} />\r\n              </button>\r\n            </span>\r\n          )}\r\n        </span>\r\n      </>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Transactions from \"../transactions\";\r\nimport Shares from \"../shares\";\r\nimport AccordionCard from \"../accordionCard\";\r\nimport Balance from \"../balance\";\r\nimport CopyableField from \"../copyableField\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"AccountContainer\", paddingBody: \"20px 0 0 0\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber, accordionView } = props.barrelGetters;\r\n  const {\r\n    setRedirectTo,\r\n    setAccordionView,\r\n    setResponseProps,\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const { getAccountData, getTransactions, getShares } = props.barrelFunctions;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n   *\r\n   * @param {*} view\r\n   */\r\n  const toggleView = (view) => {\r\n    const newView = accordionView !== view ? view : null;\r\n\r\n    setResponseProps(null);\r\n    setAccordionView(newView);\r\n    setClearRefs(true);\r\n\r\n    if (newView !== null) {\r\n      switch (view) {\r\n        case \"balance\":\r\n          getAccountData();\r\n          break;\r\n\r\n        case \"transactions\":\r\n          getTransactions(1);\r\n          break;\r\n\r\n        case \"shares\":\r\n          getShares(1);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return (\r\n    <>\r\n      <Accordion defaultActiveKey={accordionView}>\r\n        {/**\r\n         * Account number\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Account number\")}\r\n          eventkey=\"accountNumber\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"accountNumber\")}\r\n        >\r\n          <CopyableField value={accountNumber} {...args} />\r\n        </AccordionCard>\r\n\r\n        {/**\r\n         * Balance\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Balance\")}\r\n          eventkey=\"balance\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"balance\")}\r\n        >\r\n          <Balance {...args} />\r\n        </AccordionCard>\r\n\r\n        {/**\r\n         * Transactions\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Transactions\")}\r\n          eventkey=\"transactions\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"transactions\")}\r\n        >\r\n          <Transactions {...args} />\r\n        </AccordionCard>\r\n\r\n        {/**\r\n         * Shares\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Shares\")}\r\n          eventkey=\"shares\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"shares\")}\r\n        >\r\n          <Shares {...args} />\r\n        </AccordionCard>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"transfer U2S\",\r\n    namespace: \"Transfer\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    accountType,\r\n    language,\r\n    currencyAbbr,\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userData = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      if (tempRefAmount !== null && transferAmount !== tempRefAmount.value)\r\n        setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toAccount: yup.string().required(t(\"To Account is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} Form data\r\n   */\r\n  const transferToSelf = (data) => {\r\n    // console.log(\"TRANSFER U2S DATA:\", data);\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n\r\n    sendRequest({ req: props.request, data: data });\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToSelf(data);\r\n  };\r\n\r\n  const TransferToSelfForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n      headerPadding=\"20px 20px 10px 20px\"\r\n      bodyPadding=\"20px 20px 10px 20px\"\r\n      border=\"0\"\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * To account\r\n         */}\r\n        <Form.Group controlId=\"validationToAccount\">\r\n          <Form.Label>{t(\"To account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"toAccount\"\r\n            value={values.toAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferToAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.toAccount && touched.toAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option value=\"acc_curr\" hidden={accountType === \"acc_curr\"}>\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option value=\"acc_cred\" hidden={accountType === \"acc_cred\"}>\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option value=\"acc_save\" hidden={accountType === \"acc_save\"}>\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.toAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setTransferAmount(e.target.value);\r\n              }}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"transfer U2S\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={TransferToSelfForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        fromAccount: transferFromAccount,\r\n        toAccount: transferToAccount,\r\n        amount: transferAmount,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\nimport ModalMessage from \"../modalMessage\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"TanInput\",\r\n    request: \"submit tan\",\r\n    show: false,\r\n    size: \"lg\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { tanRequired, userData, tanInputTAN } = props.barrelGetters;\r\n  const { setTanRequired, setTanInputTAN } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refTAN = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    const tempRef = refTAN.current;\r\n    return () => {\r\n      if (tempRef !== null && tanInputTAN !== tempRef.value)\r\n        setTanInputTAN(tempRef.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    tan: yup.string().required(t(\"TAN is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    setTanRequired(false);\r\n    data.email = userData.email;\r\n    setTanInputTAN(\"\");\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div>\r\n        {t(\"A transaction number has been sent to your email account.\")}\r\n      </div>\r\n      <br />\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFormikTAN\">\r\n          <Form.Label>{t(\"TAN\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"tan\"\r\n              autoFocus\r\n              ref={refTAN}\r\n              value={values.tan}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.tan && touched.tan}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.tan}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  const message = (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        tan: tanInputTAN,\r\n      }}\r\n    />\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        message={message}\r\n        show={tanRequired}\r\n        size={props.size}\r\n        centered={true}\r\n        onHide={() => setTanRequired(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport TanInput from \"../tanInput\";\r\n\r\n/**\r\n * Component: TransferToPerson\r\n */\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2U\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const [transferDescriptionTemp, setTransferDescriptionTemp] = useStickyState(\r\n  //   \"\",\r\n  //   \"transferDescriptionTemp\"\r\n  // );\r\n\r\n  const refPersonalID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPersonalID = refPersonalID.current;\r\n    const tempRefDescription = refDescription.current;\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      if (\r\n        tempRefPersonalID !== null &&\r\n        transferToUID !== tempRefPersonalID.value\r\n      )\r\n        setTransferToUID(tempRefPersonalID.value);\r\n\r\n      if (\r\n        tempRefDescription !== null &&\r\n        transferDescription !== tempRefDescription.value\r\n      )\r\n        setTransferDescription(tempRefDescription.value);\r\n\r\n      if (tempRefAmount !== null && transferAmount !== tempRefAmount.value)\r\n        setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toPersonalID: yup\r\n      .string()\r\n      .required(t(\"Recipients Personal ID is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Personal ID Regex\")),\r\n        t(\"Wrong Personal ID format\")\r\n      ),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToPerson = (data) => {\r\n    // console.log(\"TRANSFER U2U DATA:\", data);\r\n    data.transferType = props.request;\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  // return <>test</>;\r\n\r\n  const onSubmit = (data) => {\r\n    transferToPerson(data);\r\n  };\r\n\r\n  const TransferToPersonForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n      headerPadding=\"20px 20px 10px 20px\"\r\n      bodyPadding=\"20px 20px 10px 20px\"\r\n      border=\"0\"\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Recipients Personal ID\r\n         */}\r\n        <Form.Group controlId=\"validationFormikToPersonalID\">\r\n          <Form.Label>{t(\"To Personal ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={t(\"XXXXXX-XXXXX\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"toPersonalID\"\r\n              ref={refPersonalID}\r\n              value={values.toPersonalID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.toPersonalID && touched.toPersonalID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.toPersonalID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Transfer Description\r\n         */}\r\n        <Form.Group controlId=\"validationFormikDescription\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Button: Next */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToPersonForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          toPersonalID: transferToUID,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport TanInput from \"../tanInput\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2B\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPurposeID = refPurposeID.current;\r\n    const tempRefDescription = refDescription.current;\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      if (\r\n        tempRefPurposeID !== null &&\r\n        transferToPurpose !== tempRefPurposeID.value\r\n      )\r\n        setTransferToPurpose(tempRefPurposeID.value);\r\n\r\n      if (\r\n        tempRefDescription !== null &&\r\n        transferDescription !== tempRefDescription.value\r\n      )\r\n        setTransferDescription(tempRefDescription.value);\r\n\r\n      if (tempRefAmount !== null && transferAmount !== tempRefAmount.value)\r\n        setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    // businessTitle: yup\r\n    //   .string()\r\n    //   .required(t(\"Recipients Business ID is required\")),\r\n    purposeID: yup.string().required(t(\"Purpose ID is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToBusiness = (data) => {\r\n    data.transferType = props.request;\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.currency = currencyAbbr;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // data.amount = parseFloat(data.amount);\r\n    // data.amount = Number(data.amount.replace(/[^0-9.-]+/g, \"\"));\r\n\r\n    data.amount = [data.amount];\r\n    data.currency = [data.currency];\r\n    data.purposeID = [data.purposeID];\r\n    data.fromAccount = [data.fromAccount];\r\n\r\n    // console.log(\"data:\", data);\r\n    // return;\r\n\r\n    // const transfers = [data];\r\n\r\n    // setTransferRequest(\r\n    //   JSON.stringify({ transferType: props.request, transfers })\r\n    // );\r\n    setTransferRequest(JSON.stringify(data));\r\n\r\n    data = { email: data.email, language: data.language };\r\n\r\n    // console.log(\"data:\", data);\r\n    // return;\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToBusiness(data);\r\n  };\r\n\r\n  const TransferToBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n      headerPadding=\"20px 20px 10px 20px\"\r\n      bodyPadding=\"20px 20px 10px 20px\"\r\n      border=\"0\"\r\n    >\r\n      {/* From account */}\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Business ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"businessTitle\"\r\n              value={values.businessTitle}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.businessTitle}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n        */}\r\n\r\n        {/* To purpose */}\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Purpose ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"PXXXXXXXXXXXXXXXXXXXXXXX\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"purposeID\"\r\n              ref={refPurposeID}\r\n              value={values.purposeID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.purposeID && touched.purposeID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.purposeID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Field: Description */}\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/* Amount */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"string\" // do NOT change to number!!\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          purposeID: transferToPurpose,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"BusinessRegistration\",\r\n    request: \"register business\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refBusinessTitle = React.createRef();\r\n  const refBusinessDescription = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefBusinessTitle = refBusinessTitle.current;\r\n    const tempRefBusinessDescription = refBusinessDescription.current;\r\n    return () => {\r\n      if (\r\n        tempRefBusinessTitle !== null &&\r\n        businessRegistrationAddTitle !== tempRefBusinessTitle.value\r\n      )\r\n        setBusinessRegistrationAddTitle(tempRefBusinessTitle.value);\r\n\r\n      if (\r\n        tempRefBusinessDescription !== null &&\r\n        businessRegistrationAddDescription !== tempRefBusinessDescription.value\r\n      )\r\n        setBusinessRegistrationAddDescription(tempRefBusinessDescription.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [addOwnerAsShareholder, setAddOwnerAsShareholder] = useStickyState(\r\n  //   false,\r\n  //   \"addOwnerAsShareholder\"\r\n  // );\r\n\r\n  const schema = yup.object({\r\n    businessTitle: yup\r\n      .string()\r\n      .required(t(\"Business title is a required field\"))\r\n      .min(3, t(\"Business title too short\"))\r\n      .max(70, t(\"Business title too long\"))\r\n      .trim(),\r\n    businessDescription: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * On business registration\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n\r\n    // console.log(\"REGISTER BUSINESS DATA:\", data);\r\n\r\n    // onBusinessRegistration({ req: \"register business\", data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Business Title (Business ID) */}\r\n      <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n        <Form.Label>{t(\"Business Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"businessTitle\"\r\n            ref={refBusinessTitle}\r\n            value={values.businessTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.businessTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/* Business Description */}\r\n      <Form.Group controlId=\"businessDescription\">\r\n        <Form.Label>{t(\"Business Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"businessDescription\"\r\n          ref={refBusinessDescription}\r\n          value={values.businessDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={RegisterBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          businessTitle: businessRegistrationAddTitle,\r\n          businessDescription: businessRegistrationAddDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"PurposeRegistration\",\r\n    requestInsert: \"register purpose\",\r\n    requestUpdate: \"update purpose property\",\r\n    businessID: null,\r\n    purposeID: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    subcategory: \"\",\r\n    subcategory2: \"\",\r\n    keywords: \"\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"PURPOSE REGISTRATION PROPS:\", props);\r\n\r\n  const barrels = props;\r\n  const { businessID, purposeID, id } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    language,\r\n    // businessPurposes,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    // purposeRegistrationCategory,\r\n    // purposeRegistrationSubcategory,\r\n    // purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    // setBusinessPurposes,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n  } = barrels.barrelSetters;\r\n  const { getReviser, getWorkplace } = barrels.barrelFunctions;\r\n  const { onPurposeRegistration } = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeTitle = React.createRef();\r\n  const refPurposeDescription = React.createRef();\r\n  // const refPurposeCategory = React.createRef();\r\n  // const refPurposeSubcategory = React.createRef();\r\n  // const refPurposeSubcategory2 = React.createRef();\r\n  const refPurposeKeywords = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPurposeTitle = refPurposeTitle.current;\r\n    const tempRefPurposeDescription = refPurposeDescription.current;\r\n    const tempRefPurposeKeywords = refPurposeKeywords.current;\r\n    return () => {\r\n      if (\r\n        tempRefPurposeTitle !== null &&\r\n        purposeRegistrationTitle !== tempRefPurposeTitle.value\r\n      )\r\n        setPurposeRegistrationTitle(tempRefPurposeTitle.value);\r\n\r\n      if (\r\n        tempRefPurposeDescription !== null &&\r\n        purposeRegistrationDescription !== tempRefPurposeDescription.value\r\n      )\r\n        setPurposeRegistrationDescription(tempRefPurposeDescription.value);\r\n\r\n      if (\r\n        tempRefPurposeKeywords !== null &&\r\n        purposeRegistrationKeywords !== tempRefPurposeKeywords.value\r\n      )\r\n        setPurposeRegistrationKeywords(tempRefPurposeKeywords.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const schema = yup.object({\r\n    purposeTitle: yup\r\n      .string()\r\n      .required(t(\"Purpose title is a required field\"))\r\n      .min(3, t(\"Purpose title too short\"))\r\n      .max(70, t(\"Purpose title too long\"))\r\n      .trim(),\r\n    purposeDescription: yup.string().optional(),\r\n    // purposeCategory: yup\r\n    //   .string()\r\n    //   .required(t(\"Purpose category is a required field\"))\r\n    //   .max(70, t(\"Purpose category too long\"))\r\n    //   .trim(),\r\n    // purposeSubcategory: yup.string().optional(),\r\n    // purposeSubcategory2: yup.string().optional(),\r\n    purposeKeywords: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const RegisterPurpose = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.businessID = businessID;\r\n    data.id = id;\r\n    data.purposeID = purposeID;\r\n    data.uid = accountNumber;\r\n    data.language = language;\r\n\r\n    // console.log(\"REGISTER PURPOSE DATA:\", data);\r\n\r\n    onPurposeRegistration({\r\n      req: props.purposeID === null ? props.requestInsert : props.requestUpdate,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    RegisterPurpose(data);\r\n  };\r\n\r\n  const RegisterPurposeForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/*\r\n       * Purpose Title (Purpose ID)\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeID\">\r\n        <Form.Label>{t(\"Purpose Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"purposeTitle\"\r\n            ref={refPurposeTitle}\r\n            value={values.purposeTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeTitle && touched.purposeTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Description\r\n       */}\r\n      <Form.Group controlId=\"purposeDescription\">\r\n        <Form.Label>{t(\"Purpose Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"purposeDescription\"\r\n          ref={refPurposeDescription}\r\n          value={values.purposeDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Keywords\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeKeywords\">\r\n        <Form.Label>{t(\"Purpose Keywords\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeKeywords\"\r\n            ref={refPurposeKeywords}\r\n            value={values.purposeKeywords}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeKeywords && touched.purposeKeywords}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeKeywords}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Submit button\r\n       */}\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(props.purposeID === null ? \"Submit\" : \"Save\")}\r\n        request={\r\n          props.purposeID === null ? props.requestInsert : props.requestUpdate\r\n        }\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterPurposeForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        purposeTitle: purposeRegistrationTitle,\r\n        purposeDescription: purposeRegistrationDescription,\r\n        // purposeCategory: purposeRegistrationCategory,\r\n        // purposeSubcategory: purposeRegistrationSubcategory,\r\n        // purposeSubcategory2: purposeRegistrationSubcategory2,\r\n        purposeKeywords: purposeRegistrationKeywords,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"register shareholder\",\r\n    namespace: \"ShareholderRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const barrels = props;\r\n  const { purposeID } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber } = barrels.barrelGetters;\r\n  // const {} = barrels.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n  } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const thisRef = createRef();\r\n\r\n  const schema = yup.object({\r\n    // personalID: yup\r\n    //   .string()\r\n    //   .required(t(\"Personal ID is required\"))\r\n    //   .matches(\r\n    //     new RegExp(t(\"Personal ID Regex\")),\r\n    //     t(\"Wrong Personal ID format\")\r\n    //   ),\r\n    shareholderRoles: yup.string().optional(),\r\n    shares: yup\r\n      .number()\r\n      .typeError(t(\"Shares must be a number\"))\r\n      .required(t(\"Shares is required\"))\r\n      .min(1, t(\"Shares too few\"))\r\n      .max(1000, t(\"Shares too many\")),\r\n  });\r\n\r\n  /**\r\n   * Send shareholder registration request\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.purposeID = purposeID;\r\n\r\n    // console.log(\"REGISTER SHAREHOLDER DATA:\", data);\r\n\r\n    // onShareholderRegistration({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterShareholderForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* id=\"shareholderRegistrationForm\" */}\r\n      <Toast style={{ minWidth: \"100%\" }}>\r\n        {/*\r\n        <Toast.Header closeButton={false}>\r\n          <strong className=\"mr-auto\">{t(\"Add Shareholder\")}</strong>\r\n        </Toast.Header>\r\n        */}\r\n        <Toast.Body>\r\n          <Form.Group controlId=\"validationFormikShareholderPersonalID\">\r\n            <Form.Label>{t(\"Shareholder Personal ID\")}</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={t(\"XXXXXX-XXXXX\")}\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"personalID\"\r\n                value={values.personalID}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.personalID && touched.personalID}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.personalID}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          {/* Shareholder Roles */}\r\n          <Form.Group controlId=\"validationFormikShareholderRoles\">\r\n            <Form.Label>{t(\"Shareholder Roles\")}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"shareholderRoles\"\r\n              value={values.shareholderRoles}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.shareholderRoles && touched.shareholderRoles}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.shareholderRoles}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          {/* Shares */}\r\n          <Form.Group controlId=\"validationFormikShares\">\r\n            <Form.Label>{t(\"Shares\")}</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              min={1}\r\n              max={1000}\r\n              step={1}\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"shares\"\r\n              value={values.shares}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.shares && touched.shares}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.shares}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Toast.Body>\r\n      </Toast>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterShareholderForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        personalID: \"\",\r\n        shares: 1,\r\n        shareholderRoles: \"\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useRef } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Card,\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Add, Store, Edit, FileCopy as FileCopyIcon } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Dropzone from \"../dropzone\";\r\nimport BusinessRegistration from \"../businessRegistration\";\r\nimport PurposeRegistration from \"../purposeRegistration\";\r\nimport ShareholderRegistration from \"../shareholderRegistration\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\nimport CopyableField from \"../copyableField\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"MyBusiness\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    userBusinesses,\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes,\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    purposeShareholders,\r\n    // purposeID,\r\n    activePurposeData,\r\n    // language,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRedirectTo,\r\n    setResponseProps,\r\n    setBusinessPurposes,\r\n    setActiveBusiness,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    setActivePageBusinessPurposes,\r\n    setActivePurposeData,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationKeywords,\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    sendRequest,\r\n    showRequestStatus,\r\n    formatDate,\r\n    copyToClipboard,\r\n    findPurposes,\r\n  } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module constants\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n  const refBusinessID = useRef(null);\r\n  const refPurposeID = useRef(null);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Toggle business (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const ToggleBusiness = ({ eventKey, businessID }) => {\r\n    if (activeBusiness === eventKey) {\r\n      setActiveBusiness(null);\r\n      setActivePageBusinessPurposes(null);\r\n    } else {\r\n      setResponseProps(null);\r\n      getBusinessPurposes(businessID, eventKey, 1);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Toggle purpose (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const TogglePurpose = ({ eventKey, purposeID }) => {\r\n    setResponseProps(null);\r\n    getPurposeShareholders(purposeID, eventKey);\r\n  };\r\n\r\n  /**\r\n   * Create:\r\n   * - business menu\r\n   * - business purposes menu\r\n   */\r\n  let menuItems = [];\r\n  let purposes = [];\r\n  let cntBusinesses = 0;\r\n  let cntPurposes = 0;\r\n  let countShareholders = 0;\r\n  userBusinesses !== null &&\r\n    Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n      cntBusinesses++;\r\n      menuItems[keyBusiness] = [];\r\n      purposes[keyBusiness] = [];\r\n      businessPurposes !== null &&\r\n        Object.keys(businessPurposes).map((purpose, keyPurpose) => {\r\n          cntPurposes++;\r\n          if (\r\n            businessPurposes[purpose].business_id ===\r\n            userBusinesses[business].business_id\r\n          ) {\r\n            menuItems[keyBusiness][keyPurpose] = (\r\n              <ListGroup.Item\r\n                action\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n                style={{\r\n                  cursor: \"default\",\r\n                  // whiteSpace: \"nowrap\",\r\n                  overflow: \"auto\",\r\n                }}\r\n                onClick={() =>\r\n                  TogglePurpose({\r\n                    eventKey: keyPurpose,\r\n                    purposeID: businessPurposes[purpose].purpose_id,\r\n                  })\r\n                }\r\n              >\r\n                <span style={{ cursor: \"pointer\" }}>\r\n                  {businessPurposes[purpose].title}\r\n                </span>\r\n\r\n                <span style={{ paddingLeft: \"5px\", float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={(e) => {\r\n                      setPurposeRegistrationTitle(\r\n                        businessPurposes[purpose].title !== null\r\n                          ? businessPurposes[purpose].title\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationDescription(\r\n                        businessPurposes[purpose].description !== null\r\n                          ? businessPurposes[purpose].description\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationKeywords(\r\n                        businessPurposes[purpose].keywords !== null\r\n                          ? businessPurposes[purpose].keywords\r\n                          : \"\"\r\n                      );\r\n\r\n                      setActivePurposeData(\r\n                        JSON.stringify(businessPurposes[purpose])\r\n                      );\r\n                      setActiveBusinesPurpose(\"addPurpose\");\r\n                      e.stopPropagation();\r\n                    }}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </ListGroup.Item>\r\n            );\r\n\r\n            purposes[keyBusiness][keyPurpose] = (\r\n              <Tab.Pane\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n              >\r\n                <Accordion\r\n                  defaultActiveKey={\r\n                    activePurposeProperty !== null\r\n                      ? activePurposeProperty\r\n                      : \"purpose_id\" // \"shareholders\"\r\n                  }\r\n                >\r\n                  {/* Purpose ID */}\r\n                  <Card\r\n                    style={{\r\n                      border: \"0\",\r\n                      borderRadius: \"0\",\r\n                    }}\r\n                  >\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"purpose_id\"\r\n                      onClick={() => setActivePurposeProperty(\"purpose_id\")}\r\n                    >\r\n                      {t(\"Purpose ID\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"purpose_id\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        <Card.Text>\r\n                          <input\r\n                            ref={refPurposeID}\r\n                            className=\"no-focus\"\r\n                            readOnly\r\n                            style={{\r\n                              border: 0,\r\n                              width: \"15rem\",\r\n                              background: \"Transparent\",\r\n                            }}\r\n                            type=\"text\"\r\n                            defaultValue={businessPurposes[purpose].purpose_id}\r\n                          />\r\n                          {document.queryCommandSupported(\"copy\") && (\r\n                            <span\r\n                              style={{ float: \"right\", marginLeft: \"0.25rem\" }}\r\n                            >\r\n                              <button\r\n                                className=\"button-transparent\"\r\n                                onClick={() => copyToClipboard(refPurposeID)}\r\n                              >\r\n                                <FileCopyIcon\r\n                                  style={{ color: \"var(--dark)\" }}\r\n                                />\r\n                              </button>\r\n                            </span>\r\n                          )}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose shareholders */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"default\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"shareholders\"\r\n                      onClick={() => setActivePurposeProperty(\"shareholders\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Shareholders\")}\r\n                      </span>\r\n                      <span style={{ float: \"right\" }}>\r\n                        <Add\r\n                          onClick={(e) => {\r\n                            setActivePurposeProperty(\"addShareholder\");\r\n                            e.stopPropagation();\r\n                          }}\r\n                          fontSize=\"small\"\r\n                          style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                        />\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    {/* Toggle: Add shareholder */}\r\n                    <Accordion.Collapse eventKey=\"addShareholder\">\r\n                      <Card.Body>\r\n                        <ShareholderRegistration\r\n                          {...args}\r\n                          purposeID={businessPurposes[purpose].purpose_id}\r\n                        />\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n\r\n                    {/* Toggle: Shareholders list */}\r\n                    <Accordion.Collapse eventKey=\"shareholders\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        {typeof purposeShareholders !== \"undefined\" &&\r\n                          purposeShareholders !== null &&\r\n                          Object.keys(purposeShareholders).map(\r\n                            (shareholder, keyShareholder) => {\r\n                              if (\r\n                                purposeShareholders[shareholder].purpose_id ===\r\n                                businessPurposes[purpose].purpose_id\r\n                              ) {\r\n                                const { purpose_id } = purposeShareholders[\r\n                                  shareholder\r\n                                ];\r\n                                const {\r\n                                  shareholder_id,\r\n                                  firstname,\r\n                                  lastname,\r\n                                  // email,\r\n                                  roles,\r\n                                  share,\r\n                                } = purposeShareholders[shareholder];\r\n\r\n                                countShareholders++;\r\n\r\n                                const arrRoles =\r\n                                  roles !== null ? roles.split(\",\") : [];\r\n\r\n                                return (\r\n                                  <Shareholder\r\n                                    {...args}\r\n                                    key={keyShareholder}\r\n                                    id={keyShareholder}\r\n                                    shareholder={shareholder_id}\r\n                                    purpose={purpose_id}\r\n                                    firstname={firstname}\r\n                                    lastname={lastname}\r\n                                    share={share}\r\n                                    roles={arrRoles}\r\n                                  />\r\n                                );\r\n                              } else {\r\n                                return \"\"; // TODO: check if this works\r\n                              }\r\n                            }\r\n                          )}\r\n\r\n                        {showRequestStatus(\r\n                          \"get purpose shareholders / SELECT shares\",\r\n                          countShareholders,\r\n                          t(\"Loading shareholders...\"),\r\n                          t(\"No shareholders\"),\r\n                          \"finished\"\r\n                        )}\r\n\r\n                        {/* End shareholders list */}\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose status */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"productStatus\"\r\n                      onClick={() => setActivePurposeProperty(\"productStatus\")}\r\n                    >\r\n                      {t(\"Purpose Status\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"productStatus\">\r\n                      <Card.Body\r\n                        style={{ background: \"var(--white)\" }}\r\n                        onClick={(e) => {\r\n                          // console.log(\"Click\", e);\r\n\r\n                          const bp = businessPurposes;\r\n                          bp[purpose].status =\r\n                            businessPurposes[purpose].status === 0 ? 1 : 0;\r\n                          setBusinessPurposes(JSON.stringify(bp));\r\n\r\n                          let data = {};\r\n                          data.purpose_id =\r\n                            businessPurposes[purpose].purpose_id;\r\n                          data.purpose_status =\r\n                            businessPurposes[purpose].status;\r\n                          return sendRequest({\r\n                            req: \"change purpose status\",\r\n                            data,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Form>\r\n                          {typeof purposeShareholders === \"undefined\" ||\r\n                            (purposeShareholders === null && (\r\n                              <Form.Text>\r\n                                {t(\r\n                                  \"To publish, please add at least one shareholder\"\r\n                                )}\r\n                                <br />\r\n                                <br />\r\n                              </Form.Text>\r\n                            ))}\r\n\r\n                          {typeof purposeShareholders !== \"undefined\" &&\r\n                            purposeShareholders !== null && (\r\n                              <Form.Check\r\n                                type=\"switch\"\r\n                                custom\r\n                                disabled={\r\n                                  typeof purposeShareholders === \"undefined\" ||\r\n                                  purposeShareholders === null\r\n                                }\r\n                                label={t(\r\n                                  businessPurposes[purpose].status === 0\r\n                                    ? \"Not published\"\r\n                                    : \"Published\"\r\n                                )}\r\n                                checked={businessPurposes[purpose].status === 1}\r\n                                onChange={(e) => {\r\n                                  console.log(e);\r\n                                }}\r\n                              />\r\n                            )}\r\n                        </Form>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose title */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"default\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"title\"\r\n                      onClick={() => setActivePurposeProperty(\"title\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Title\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"title\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        <Card.Text>{businessPurposes[purpose].title}</Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose description\r\n                   */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"default\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"description\"\r\n                      onClick={() => setActivePurposeProperty(\"description\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Description\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"description\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].description}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Keywords\r\n                   */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"default\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"keywords\"\r\n                      onClick={() => setActivePurposeProperty(\"keywords\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Keywords\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"keywords\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].keywords}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* End of purpose properties */}\r\n                </Accordion>\r\n              </Tab.Pane>\r\n            );\r\n          }\r\n          countShareholders = 0;\r\n          return true;\r\n        });\r\n\r\n      return true;\r\n    });\r\n\r\n  const jsx = (\r\n    <>\r\n      <Accordion\r\n        defaultActiveKey={\r\n          activeBusiness !== null || !userBusinessesLoaded\r\n            ? activeBusiness\r\n            : \"myBusinesses\"\r\n        }\r\n      >\r\n        {/* Add business location top */}\r\n\r\n        {/**\r\n         * Card: Add business\r\n         */}\r\n        <Card style={{ background: \"Transparent\", border: \"0\" }}>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"addBusiness\"\r\n            style={{\r\n              background: \"Transparent\",\r\n              padding: \"0 0 20px 0\",\r\n            }}\r\n          >\r\n            <span\r\n              style={{ float: \"right\", cursor: \"pointer\" }}\r\n              onClick={() =>\r\n                setActiveBusiness(\r\n                  activeBusiness !== \"addBusiness\" ? \"addBusiness\" : null\r\n                )\r\n              }\r\n            >\r\n              {t(\"Add Business\")}\r\n              &nbsp;\r\n              <Add\r\n                style={{\r\n                  color: \"var(--dark)\",\r\n                  fontSize: \"1.2rem\",\r\n                  paddingBottom: \"0.2rem\",\r\n                }}\r\n              />\r\n            </span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"addBusiness\">\r\n            <Card.Body>\r\n              <BusinessRegistration {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        {/* List user businesses */}\r\n        {userBusinesses !== null &&\r\n          Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n            const date = new Date(userBusinesses[business].created);\r\n            const businessSince = formatDate(date, {\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n              year: \"numeric\",\r\n            });\r\n\r\n            return (\r\n              <Card key={keyBusiness} style={{ borderRadius: \"0\" }}>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey={keyBusiness}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    ToggleBusiness({\r\n                      eventKey: keyBusiness,\r\n                      businessID: userBusinesses[business].business_id,\r\n                    })\r\n                  }\r\n                >\r\n                  <Store style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                  {userBusinesses[business].title}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={keyBusiness}>\r\n                  <Card.Body>\r\n                    <Tab.Container\r\n                      id=\"left-tabs-example\"\r\n                      defaultActiveKey={\r\n                        activeBusinesPurpose !== null\r\n                          ? activeBusinesPurpose\r\n                          : \"aboutBusiness\"\r\n                      }\r\n                    >\r\n                      {/**\r\n                       * Row: Search\r\n                       */}\r\n                      <Row style={{ marginBottom: \"1.2rem\" }}>\r\n                        <Col>\r\n                          <Search\r\n                            advancedSearch={false}\r\n                            placeholder={t(\"Find purposes...\")}\r\n                            captionAdvancedSearch={t(\"Advanced search\")}\r\n                            onSubmit={findPurposes}\r\n                            {...args}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      {/**\r\n                       * Row: Purposes\r\n                       */}\r\n                      <Row>\r\n                        {/**\r\n                         * Layout: Left side - Menu\r\n                         */}\r\n                        <Col sm={5}>\r\n                          <ListGroup variant=\"flush\">\r\n                            {/* Menu item: About business */}\r\n                            <ListGroup.Item\r\n                              action\r\n                              eventKey=\"aboutBusiness\"\r\n                              style={{ cursor: \"default\" }}\r\n                              onClick={(e) => {\r\n                                setActivePurposeData(null);\r\n                                setActiveBusinesPurpose(null);\r\n                                e.stopPropagation();\r\n                              }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  whiteSpace: \"nowrap\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              >\r\n                                {t(\"Purposes\")}\r\n                              </span>\r\n                              <span style={{ float: \"right\" }}>\r\n                                <Add\r\n                                  onClick={(e) => {\r\n                                    setClearRefs(true);\r\n                                    setActivePurposeData(null);\r\n                                    setActiveBusinesPurpose(\"addPurpose\");\r\n                                    e.stopPropagation();\r\n                                  }}\r\n                                  fontSize=\"small\"\r\n                                  style={{\r\n                                    color: \"var(--dark)\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                />\r\n                              </span>\r\n                            </ListGroup.Item>\r\n\r\n                            {/* Menu items: Registered purposes */}\r\n                            {menuItems[keyBusiness]}\r\n\r\n                            {/* old add purpose */}\r\n                          </ListGroup>\r\n                          {countBusinessPurposes !== null && (\r\n                            <>\r\n                              <br />\r\n                              <Pagination\r\n                                {...args}\r\n                                size=\"sm\"\r\n                                countItems={countBusinessPurposes}\r\n                                itemsPerPage={businessPurposesPerPage}\r\n                                active={activePageBusinessPurposes}\r\n                                onClick={(number) =>\r\n                                  getBusinessPurposes(\r\n                                    activeBusinessID,\r\n                                    0,\r\n                                    number\r\n                                  )\r\n                                }\r\n                              />\r\n                            </>\r\n                          )}\r\n\r\n                          {showRequestStatus(\r\n                            \"get business purposes / SELECT purposes\",\r\n                            cntPurposes,\r\n                            t(\"Loading purposes...\"),\r\n                            t(\"No purposes\"),\r\n                            \"finished\"\r\n                          )}\r\n                        </Col>\r\n\r\n                        {/**\r\n                         * Layout: Right side - Content\r\n                         */}\r\n                        <Col sm={7}>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"aboutBusiness\">\r\n                              <Accordion defaultActiveKey=\"businessID\">\r\n                                {/* Business ID */}\r\n                                <Card\r\n                                  style={{\r\n                                    border: \"0\",\r\n                                    borderRadius: \"0\",\r\n                                    // backgroundColor: \"red\",\r\n                                  }}\r\n                                >\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessID\"\r\n                                  >\r\n                                    {t(\"Business ID\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessID\">\r\n                                    <Card\r\n                                      border=\"light\"\r\n                                      style={{ borderRadius: \"0\" }}\r\n                                    >\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          <CopyableField\r\n                                            value={\r\n                                              userBusinesses[business]\r\n                                                .business_id\r\n                                            }\r\n                                            {...args}\r\n                                          />\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business description */}\r\n                                <Card\r\n                                  style={{\r\n                                    border: \"0\",\r\n                                    borderRadius: \"0\",\r\n                                    // backgroundColor: \"red\",\r\n                                  }}\r\n                                >\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessDescription\"\r\n                                  >\r\n                                    {t(\"Business Description\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessDescription\">\r\n                                    <Card\r\n                                      border=\"light\"\r\n                                      style={{ borderRadius: \"0\" }}\r\n                                    >\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          {userBusinesses[business]\r\n                                            .description !== \"\" ? (\r\n                                            userBusinesses[business].description\r\n                                          ) : (\r\n                                            <span className=\"text-center text-muted\">\r\n                                              {t(\"No description\")}\r\n                                            </span>\r\n                                          )}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business Founded */}\r\n                                <Card\r\n                                  style={{\r\n                                    border: \"0\",\r\n                                    borderRadius: \"0\",\r\n                                    // backgroundColor: \"red\",\r\n                                  }}\r\n                                >\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessCreationDate\"\r\n                                  >\r\n                                    {t(\"Business Created\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessCreationDate\">\r\n                                    <Card\r\n                                      border=\"light\"\r\n                                      style={{ borderRadius: \"0\" }}\r\n                                    >\r\n                                      <Card.Body>\r\n                                        <Card.Text>{businessSince}</Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n\r\n                            {/* Start Business purposes */}\r\n                            {purposes[keyBusiness]}\r\n                            {/* End Business purposes */}\r\n\r\n                            {/*\r\n                             * Add new purpose / update existing purpose\r\n                             */}\r\n                            <Tab.Pane eventKey=\"addPurpose\">\r\n                              <Accordion defaultActiveKey=\"newPurpose\">\r\n                                <Card\r\n                                  style={{ border: \"0\", borderRadius: \"0\" }}\r\n                                >\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    eventKey=\"newPurpose\"\r\n                                    style={{ cursor: \"default\" }}\r\n                                  >\r\n                                    {t(\r\n                                      activePurposeData === null\r\n                                        ? \"New Purpose\"\r\n                                        : \"Edit Purpose\"\r\n                                    )}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"newPurpose\">\r\n                                    <Card.Body>\r\n                                      <PurposeRegistration\r\n                                        {...args}\r\n                                        businessID={\r\n                                          userBusinesses[business].business_id\r\n                                        }\r\n                                        id={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.id\r\n                                            : null\r\n                                        }\r\n                                        purposeID={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.purpose_id\r\n                                            : null\r\n                                        }\r\n                                        title={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.title\r\n                                            : \"\"\r\n                                        }\r\n                                        description={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.description\r\n                                            : \"\"\r\n                                        }\r\n                                        category={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.category\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory2={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory2\r\n                                            : \"\"\r\n                                        }\r\n                                        keywords={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.keywords\r\n                                            : \"\"\r\n                                        }\r\n                                      />\r\n                                    </Card.Body>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>\r\n                        </Col>\r\n                      </Row>\r\n                    </Tab.Container>\r\n                    {/* pagination prev */}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            );\r\n            // console.log(\"BUSINESS:\", userBusinesses[business]);\r\n          })}\r\n\r\n        {/* Add business location bottom */}\r\n      </Accordion>\r\n      {userBusinesses !== null && (\r\n        <>\r\n          <br />\r\n\r\n          <Pagination\r\n            {...args}\r\n            size=\"md\"\r\n            countItems={countBusinesses}\r\n            itemsPerPage={businessesPerPage}\r\n            active={activePageBusinesses}\r\n            onClick={(number) => getBusinesses(number)}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{jsx}</>;\r\n};\r\n","import \"./UserEditor.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup, Form, InputGroup } from \"react-bootstrap\";\r\nimport {\r\n  Visibility,\r\n  VisibilityOff,\r\n  Close,\r\n  Edit,\r\n  // Done,\r\n} from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"UserEditor\",\r\n    request: \"update user\",\r\n    mode: \"label\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"USER EDITOR PROPS:\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    // currencies,\r\n    // currencyAbbr,\r\n    // language,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getReviser, getWorkplace } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefFirstName = refFirstName.current;\r\n    const tempRefLastName = refLastName.current;\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (\r\n        tempRefFirstName !== null &&\r\n        userEditorFirstname !== tempRefFirstName.value\r\n      )\r\n        setUserEditorFirstname(tempRefFirstName.value);\r\n\r\n      if (\r\n        tempRefLastName !== null &&\r\n        userEditorLastname !== tempRefLastName.value\r\n      )\r\n        setUserEditorLastname(tempRefLastName.value);\r\n\r\n      if (tempRefEmail !== null && userEditorEmail !== tempRefEmail.value)\r\n        setUserEditorEmail(tempRefEmail.value);\r\n\r\n      if (\r\n        tempRefPassword !== null &&\r\n        userEditorPassword !== tempRefPassword.value\r\n      )\r\n        setUserEditorPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userEditorEditFirstname ||\r\n      userEditorEditLastname ||\r\n      userEditorEditEmail ||\r\n      userEditorEditPassword\r\n    ) {\r\n      setUserEditorSubmitButtonVisible(true);\r\n    } else {\r\n      setUserEditorSubmitButtonVisible(false);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [\r\n    userEditorEditFirstname,\r\n    userEditorEditLastname,\r\n    userEditorEditEmail,\r\n    userEditorEditPassword,\r\n  ]);\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  const togglePassword = () => {\r\n    setUserEditorPasswordVisible(!userEditorPasswordVisible);\r\n  };\r\n\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    // data.language = language;\r\n    // data.email = userData.email;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.personalID = accountNumber;\r\n    if (!userEditorEditFirstname) data.firstName = null;\r\n    if (!userEditorEditLastname) data.lastName = null;\r\n    if (!userEditorEditEmail) data.email = userData.email;\r\n    if (!userEditorEditPassword) data.password = null;\r\n\r\n    if (data.email !== userData.email) {\r\n      data.newEmail = data.email;\r\n      data.email = userData.email;\r\n      data.validateEmail = true;\r\n    }\r\n\r\n    // console.log(\"onSubmit:\", data);\r\n\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const yupObject = {\r\n    firstName: userEditorEditFirstname\r\n      ? yup.string().required(t(\"First name is required\"))\r\n      : yup.string().optional(),\r\n    lastName: userEditorEditLastname\r\n      ? yup.string().required(t(\"Last name is required\"))\r\n      : yup.string().optional(),\r\n    email: userEditorEditEmail\r\n      ? yup\r\n          .string()\r\n          .email(t(\"Invalid email address\"))\r\n          .required(t(\"Email is required\"))\r\n      : yup.string().optional(),\r\n    password: userEditorEditPassword\r\n      ? yup\r\n          .string()\r\n          .required(t(\"No password provided\"))\r\n          .min(8, t(\"Password is too short\"))\r\n          // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n          .matches(\r\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n            t(\"Password is too weak\")\r\n          )\r\n      : yup.string().optional(),\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object(yupObject);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (userData === null) return <></>;\r\n\r\n  /**\r\n   * Destructuring\r\n   */\r\n  const { mode } = props;\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    email,\r\n    // language,\r\n    // currency_name,\r\n    // currency_abbr,\r\n  } = userData;\r\n  // const currency = `${currency_name} (${currency_abbr})`;\r\n\r\n  const UserEditorForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Card title={t(\"Profile\")} border={0} maxWidthBody=\"700px\">\r\n        {/* First name */}\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"First name\")}</Form.Label>\r\n            {!userEditorEditFirstname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditFirstname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{firstname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditFirstname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditFirstname && (\r\n              <Form.Group controlId=\"validationFormikFirstName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter first name\")}\r\n                    name=\"firstName\"\r\n                    ref={refFirstName}\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.firstName && touched.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Last name */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Last name\")}</Form.Label>\r\n            {!userEditorEditLastname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditLastname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{lastname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditLastname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditLastname && (\r\n              <Form.Group controlId=\"validationFormikLastName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter last name\")}\r\n                    name=\"lastName\"\r\n                    ref={refLastName}\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.lastName && touched.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Email */}\r\n          {accountNumber !== null && (\r\n            <ListGroup.Item as=\"div\" action>\r\n              <Form.Label>{t(\"Email address\")}</Form.Label>\r\n              {!userEditorEditEmail ? (\r\n                <>\r\n                  <span style={{ float: \"right\" }}>\r\n                    <Edit\r\n                      onClick={() => setUserEditorEditEmail(true)}\r\n                      fontSize=\"small\"\r\n                      style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                    />\r\n                  </span>\r\n                  <br />\r\n                  <small>{email}</small>\r\n                </>\r\n              ) : (\r\n                <span style={{ float: \"right\" }}>\r\n                  <Close\r\n                    onClick={() => setUserEditorEditEmail(false)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              )}\r\n\r\n              {userEditorEditEmail && (\r\n                <Form.Group controlId=\"validationFormikEmail\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      placeholder={t(\"Enter email\")}\r\n                      name=\"email\"\r\n                      value={values.email}\r\n                      ref={refEmail}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.email && touched.email}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.email}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              )}\r\n            </ListGroup.Item>\r\n          )}\r\n\r\n          {/* Password */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Password\")}</Form.Label>\r\n            {!userEditorEditPassword ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditPassword(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditPassword(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditPassword && (\r\n              <>\r\n                {/* New password */}\r\n                <Form.Group controlId=\"validationFormikPassword\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      type={userEditorPasswordVisible ? \"text\" : \"password\"}\r\n                      placeholder={t(\"Enter new password\")}\r\n                      name=\"password\"\r\n                      ref={refPassword}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.password && touched.password}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <InputGroup.Text\r\n                        id=\"inputGroupAppend\"\r\n                        onClick={togglePassword}\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        {userEditorPasswordVisible ? (\r\n                          <VisibilityOff\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        ) : (\r\n                          <Visibility\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        )}\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.password}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              </>\r\n            )}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n\r\n        <Form.Group controlId=\"validationSubmitButton\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            visible={userEditorSubmitButtonVisible}\r\n            marginTop={20}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n      </Card>\r\n    </Form>\r\n  );\r\n\r\n  const jsx =\r\n    mode === \"label\" ? (\r\n      <span style={{ whiteSpace: \"nowrap\" }}>\r\n        {firstname} {lastname}\r\n      </span>\r\n    ) : (\r\n      <Formik\r\n        component={UserEditorForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          firstName: userEditorFirstname,\r\n          lastName: userEditorLastname,\r\n          email: userEditorEmail,\r\n          password: userEditorPassword,\r\n        }}\r\n      />\r\n    );\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    request: \"get currencies\", // \"register currency\",\r\n    namespace: \"Currencies\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencies,\r\n    settings,\r\n    countCurrencies,\r\n    activePageCurrencies,\r\n    currenciesPerPage,\r\n    currencyAbbr,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyAbbr,\r\n    setResponseProps,\r\n    setCurrencyRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    showRequestStatus,\r\n    getCurrencies,\r\n    findCurrencies,\r\n    formatExchangeRate,\r\n    getObjectArrayElementIndex,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onCurrencySelected = (e) => {\r\n    setCurrencyAbbr(e.target.id);\r\n    sendRequest({\r\n      req: \"register user currency\",\r\n      data: { email: userData.email, currency_id: e.target.id },\r\n    });\r\n\r\n    // Fetch the selected currency rate\r\n    const id = getObjectArrayElementIndex(currencies, \"abbr\", e.target.id);\r\n    setCurrencyRate(currencies[id].rate);\r\n  };\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    setResponseProps(null);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageCurrencies > 1 ? activePageCurrencies - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageCurrencies < Math.ceil(countCurrencies / currenciesPerPage)\r\n            ? activePageCurrencies + 1\r\n            : Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getCurrencies(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrenciesForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <Search\r\n          placeholder={t(\"Find currency...\")}\r\n          onSubmit={findCurrencies}\r\n          {...args}\r\n        />\r\n      </div>\r\n      <Table responsive striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Currency\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Abbr\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Region\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Rate\")}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currencies !== null &&\r\n            currencies.map((currency, keyCurrency) => {\r\n              cnt++;\r\n              // console.log(\"CURRENCY\", currency);\r\n\r\n              const { name, abbr, rate, region } = currency;\r\n\r\n              if (\r\n                typeof settings[\"currencies\"] === \"undefined\" ||\r\n                settings[\"currencies\"] === null ||\r\n                settings[\"currencies\"].length === 0 ||\r\n                settings[\"currencies\"].includes(abbr)\r\n              ) {\r\n                // valid currency - continue\r\n              } else {\r\n                return \"\"; // invalid currency\r\n              }\r\n\r\n              return (\r\n                <tr key={keyCurrency}>\r\n                  <td style={{ textAlign: \"left\", paddingLeft: \"1rem\" }}>\r\n                    <Form.Check\r\n                      id={abbr}\r\n                      type=\"radio\"\r\n                      checked={currencyAbbr === abbr}\r\n                      aria-label=\"option 1\"\r\n                      label={name}\r\n                      custom\r\n                      inline\r\n                      onChange={onCurrencySelected}\r\n                      name=\"selected-currency\"\r\n                    />\r\n                  </td>\r\n                  <td style={{ textAlign: \"center\" }}>{abbr}</td>\r\n                  <td style={{ textAlign: \"left\" }}>{region}</td>\r\n                  <td style={{ textAlign: \"right\" }}>\r\n                    {formatExchangeRate(rate)}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {showRequestStatus(\r\n        \"get currencies / SELECT currencies\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No currencies\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countCurrencies}\r\n        itemsPerPage={currenciesPerPage}\r\n        active={activePageCurrencies}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  // onSubmit={onSubmit}\r\n  return (\r\n    <Formik\r\n      component={CurrenciesForm}\r\n      initialValues={{\r\n        curr_abbr: \"\",\r\n        curr_title: \"\",\r\n        curr_region: \"\",\r\n        curr_rate: 1.0,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"CurrencyRegistration\",\r\n    request: \"register currency\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    formatExchangeRate,\r\n    // getCurrencies,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([\"CurrencyRegistration\"]);\r\n\r\n  const refAbbr = React.createRef();\r\n  const refTitle = React.createRef();\r\n  const refRegion = React.createRef();\r\n  const refRate = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefAbbr = refAbbr.current;\r\n    const tempRefTitle = refTitle.current;\r\n    const tempRefRegion = refRegion.current;\r\n    const tempRefRate = refRate.current;\r\n    return () => {\r\n      if (tempRefAbbr !== null && currencyCode !== tempRefAbbr.value)\r\n        setCurrencyCode(tempRefAbbr.value);\r\n\r\n      if (tempRefTitle !== null && currencyName !== tempRefTitle.value)\r\n        setCurrencyName(tempRefTitle.value);\r\n\r\n      if (tempRefRegion !== null && currencyRegion !== tempRefRegion.value)\r\n        setCurrencyRegion(tempRefRegion.value);\r\n\r\n      if (tempRefRate !== null && currencyNewRate !== tempRefRate.value)\r\n        setCurrencyNewRate(tempRefRate.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    curr_abbr: yup\r\n      .string()\r\n      .required(t(\"Currency abbreviation is required\"))\r\n      .min(3, t(\"Currency abbreviation is too short\"))\r\n      .max(5, t(\"Currency abbreviation is too long\")),\r\n    curr_title: yup\r\n      .string()\r\n      .required(t(\"Currency name is required\"))\r\n      .min(3, t(\"Currency name is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency name is too long\")), // must be at most 70 characters\r\n    curr_region: yup\r\n      .string()\r\n      .required(t(\"Currency region is required\"))\r\n      .min(3, t(\"Currency region is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency region is too long\")), // must be at most 70 characters\r\n    curr_rate: yup\r\n      .string()\r\n      .required(t(\"Exchange rate is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Exchange Rate Regex\")),\r\n        t(\"Wrong exchange rate format\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrencyRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/* Currency abbreviation */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Abbreviation\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_abbr\"\r\n              ref={refAbbr}\r\n              value={values.curr_abbr}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_abbr && touched.curr_abbr}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_abbr}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency name */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Currency Name\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_title\"\r\n              ref={refTitle}\r\n              value={values.curr_title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_title && touched.curr_title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_title}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency region */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Currency Region\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_region\"\r\n              ref={refRegion}\r\n              value={values.curr_region}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_region && touched.curr_region}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_region}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Initial exchange rate */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Initial Exchange Rate\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={formatExchangeRate(1)}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_rate\"\r\n              value={values.curr_rate}\r\n              ref={refRate}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_rate && touched.curr_rate}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_rate}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={CurrencyRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        curr_abbr: currencyCode,\r\n        curr_title: currencyName,\r\n        curr_region: currencyRegion,\r\n        curr_rate: currencyNewRate,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Rating.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Rating\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Container\r\n        fluid\r\n        style={{\r\n          fontSize: \"0.9rem\",\r\n          textAlign: \"center\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n      >\r\n        <Row>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating1\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating2\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating3\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating4\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating5\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginTop: \"-0.3rem\" }}>\r\n          <Col style={{ padding: \"0\" }}>{t(\"1\")}</Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"2\")}</Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"3\")}</Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"4\")}</Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"5\")}</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col style={{ padding: \"0\" }}>{t(\"Not helpful\")}</Col>\r\n          <Col style={{ padding: \"0\" }}></Col>\r\n          <Col style={{ padding: \"0\" }}></Col>\r\n          <Col style={{ padding: \"0\" }}></Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"Very helpful\")}</Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ListGroupItem\",\r\n    caption: \"Untitled\",\r\n    key: \"untitled\",\r\n    href: \"#\",\r\n    onClick: () => {},\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"props:\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <ListGroup.Item\r\n        action\r\n        key={props.key}\r\n        eventKey={props.key}\r\n        style={{ cursor: \"default\", overflow: \"hidden\" }}\r\n        href={props.href}\r\n        onClick={props.onClick}\r\n      >\r\n        {props.caption}\r\n      </ListGroup.Item>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport ListGroupItem from \"../listGroupItem\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"HelpMenuLevel2\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { helpPath1, helpPath2 } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { setHelpPath } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // console.log(t(\"Common Questions\"));\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    switch (helpPath1) {\r\n      case \"#business\":\r\n        return (\r\n          <ListGroup variant=\"flush\" defaultActiveKey={helpPath2}>\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Common Questions\")}\r\n              key=\"common-questions\"\r\n              href=\"/help/topic/common-questions\"\r\n              onClick={() => setHelpPath(2, \"common-questions\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Merchant Services\")}\r\n              key=\"merchant-services\"\r\n              href=\"/help/topic/merchant-services\"\r\n              onClick={() => setHelpPath(2, \"merchant-services\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"My Account\")}\r\n              key=\"my-account\"\r\n              href=\"/help/topic/my-account\"\r\n              onClick={() => setHelpPath(2, \"my-account\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Local Currency Basics\")}\r\n              key=\"local-currency-basics\"\r\n              href=\"/help/topic/local-currency-basics\"\r\n              onClick={() => setHelpPath(2, \"local-currency-basics\")}\r\n            />\r\n          </ListGroup>\r\n        );\r\n        break;\r\n\r\n      case \"#technical\":\r\n        return (\r\n          <ListGroup variant=\"flush\" defaultActiveKey={helpPath2}>\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Common Questions\")}\r\n              key=\"common-questions\"\r\n              href=\"/help/topic/common-questions\"\r\n              onClick={() => setHelpPath(2, \"common-questions\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"APIs\")}\r\n              key=\"apis\"\r\n              href=\"/help/topic/apis\"\r\n              onClick={() => setHelpPath(2, \"apis\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Shopping Carts\")}\r\n              key=\"shopping-carts\"\r\n              href=\"/help/topic/shopping-carts\"\r\n              onClick={() => setHelpPath(2, \"shopping-carts\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Products\")}\r\n              key=\"products\"\r\n              href=\"/help/topic/products\"\r\n              onClick={() => setHelpPath(2, \"products\")}\r\n            />\r\n          </ListGroup>\r\n        );\r\n        break;\r\n\r\n      default:\r\n        // #personal\r\n        return (\r\n          <ListGroup variant=\"flush\" defaultActiveKey={helpPath2}>\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Common Questions\")}\r\n              key=\"common-questions\"\r\n              href=\"/help/topic/common-questions\"\r\n              onClick={() => setHelpPath(2, \"common-questions\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"My Account\")}\r\n              key=\"my-account\"\r\n              href=\"/help/topic/my-account\"\r\n              onClick={() => setHelpPath(2, \"my-account\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Local Currency Basics\")}\r\n              key=\"local-currency-basics\"\r\n              href=\"/help/topic/local-currency-basics\"\r\n              onClick={() => setHelpPath(2, \"local-currency-basics\")}\r\n            />\r\n          </ListGroup>\r\n        );\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * User CSS\r\n ============================================================================ */\r\nimport \"./Help.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { lazy } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\nimport Search from \"../search\";\r\nimport HelpMenuLevel2 from \"../helpMenuLevel2\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Help\", searchable: false };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { language, helpPath1, helpPath2 } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getFileNameFromURI, setHelpPath } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"Personal Help\"),\r\n      link: \"#personal\",\r\n    },\r\n    {\r\n      name: t(\"Business Help\"),\r\n      link: \"#business\",\r\n    },\r\n    {\r\n      name: t(\"Technical Help\"),\r\n      link: \"#technical\",\r\n    },\r\n  ];\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  const getJSX = () => {\r\n    // console.log(window.location.pathname);\r\n\r\n    let leadFile = getFileNameFromURI();\r\n\r\n    let ExternalFile = null;\r\n\r\n    ExternalFile =\r\n      leadFile !== null\r\n        ? lazy(() =>\r\n            import(`../locale/${language}/topics/${leadFile}`).catch((err) => {\r\n              // console.log(\"err:\", err);\r\n              return import(`../locale/${language}/topics/common-questions.js`); // TODO: Change LeadLogiIn.js -> _LeadDefault.js\r\n            })\r\n          )\r\n        : null;\r\n\r\n    const onHelpPath1Click = (link) => {\r\n      // console.log(link);\r\n      // setHelpPath1(link);\r\n      setHelpPath(1, link);\r\n    };\r\n\r\n    return (\r\n      <Card\r\n        title={t(\"Help center\")}\r\n        navigation={navigation}\r\n        headerPadding=\"20px 20px 10px 20px\"\r\n        bodyPadding=\"20px 20px 10px 20px\"\r\n        border={0}\r\n        maxWidthBody=\"100%\"\r\n        navigationdefaultActiveKey={helpPath1}\r\n        onNavigationClick={onHelpPath1Click}\r\n      >\r\n        <Container fluid>\r\n          {/**\r\n           * Search\r\n           */}\r\n          {props.searchable && (\r\n            <Row>\r\n              <Col>\r\n                <div className=\"header-text\">\r\n                  <h1>{t(\"How can we help?\")}</h1>\r\n                </div>\r\n                <div style={{ textAlign: \"center\", margin: \"0 0 35px 0\" }}>\r\n                  <div\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      width: \"100%\",\r\n                      maxWidth: \"600px\",\r\n                    }}\r\n                  >\r\n                    <Search\r\n                      {...args}\r\n                      placeholder={t(\"Ask a question or search by keyword\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n\r\n          <Row>\r\n            <Col xl={4} style={{}}>\r\n              <HelpMenuLevel2 {...args} />\r\n            </Col>\r\n            <Col xl={8} style={{}}>\r\n              {ExternalFile !== null && (\r\n                <ErrorBoundary>\r\n                  <ExternalFile {...args} />\r\n                </ErrorBoundary>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import _ from \"lodash\";\r\n// import { useTranslation } from \"react-i18next\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Button,\r\n  // Breadcrumb,\r\n  // NavDropdown,\r\n  // Alert,\r\n} from \"react-bootstrap\";\r\n// import Octicon, { SignOut } from \"@primer/octicons-react\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../../settings.json\";\r\nimport AccountRegistration from \"../accountRegistration\";\r\n// import BusinessRegistration from \"../../businessRegistration\";\r\nimport Balance from \"../accountContainer\";\r\nimport { Transfer } from \"../transfer\";\r\nimport MyBusiness from \"../myBusiness\";\r\nimport UserEditor from \"../userEditor\";\r\nimport CurrencyContainer from \"../currencyContainer\";\r\n// import Login from \"../../login\";\r\nimport Contact from \"../contact\";\r\nimport Card from \"../card\";\r\nimport Status_404 from \"../status_404\";\r\nimport Help from \"../help\";\r\n// import LanguageSelector from \"../language-selector\";\r\n// import MainMenu from \"../mainMenu\";\r\n\r\n/**\r\n * Component: Summary\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"Summary\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { settings, accountNumber } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getBusinesses } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const { t } = useTranslation(props.namespace);\r\n\r\n  // const location = useLocation();\r\n\r\n  const pageBody = (\r\n    <Router>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/summary\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/account-registration\"\r\n          component={() => {\r\n            return AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/profile\"\r\n          component={() => {\r\n            return UserEditor({ ...args, mode: \"profile\" });\r\n          }}\r\n        />\r\n        {settings !== null &&\r\n          typeof settings[\"currencies\"] !== \"undefined\" &&\r\n          (settings[\"currencies\"] === null ||\r\n            settings[\"currencies\"].length === 0 ||\r\n            settings[\"currencies\"].length > 1) && (\r\n            <Route\r\n              exact\r\n              path=\"/currency\"\r\n              component={() => {\r\n                return CurrencyContainer({ ...args });\r\n              }}\r\n            />\r\n          )}\r\n\r\n        <Route\r\n          exact\r\n          path=\"/my-business\"\r\n          component={() => {\r\n            return MyBusiness(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/balance\"\r\n          component={() => {\r\n            return Balance(args);\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/transfer\"\r\n          component={() => {\r\n            return Transfer(args);\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/feedback\"\r\n          component={() => {\r\n            return Contact(args);\r\n          }}\r\n        />\r\n\r\n        {/**\r\n         * Default route\r\n         */}\r\n        <Route\r\n          path=\"*\"\r\n          component={() => {\r\n            return Status_404(args);\r\n          }}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n\r\n      {/* Content */}\r\n      {/*<h3>{t(\"Summary\")}</h3>*/}\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <Card\r\n              backgroundHeader=\"Transparent\"\r\n              backgroundBody=\"Transparent\"\r\n              border=\"0\"\r\n              align=\"left\"\r\n              maxWidthBody=\"700px\"\r\n              header={false}\r\n            >\r\n              {pageBody}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../settings.json\";\r\n// import Card from \"../card\";\r\nimport Currencies from \"../currencies\";\r\nimport CurrencyRegistration from \"../currencyRegistration\";\r\nimport AccordionCard from \"../accordionCard\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\", paddingBody: \"20px 0 0 0\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    accordionViewCurrency,\r\n    activePageCurrencies,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setAccordionViewCurrency,\r\n    setRedirectTo,\r\n    setResponseProps,\r\n  } = props.barrelSetters;\r\n  const { getCurrencies } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const ToggleCurrencies = () => {\r\n    if (accordionViewCurrency !== \"currencies\") {\r\n      setResponseProps(null);\r\n      setAccordionViewCurrency(\"currencies\");\r\n      getCurrencies(activePageCurrencies);\r\n    } else {\r\n      setAccordionViewCurrency(null);\r\n    }\r\n  };\r\n\r\n  const ToggleCurrencyRegistration = () => {\r\n    setAccordionViewCurrency(\r\n      accordionViewCurrency !== \"currencyRegistration\"\r\n        ? \"currencyRegistration\"\r\n        : null\r\n    );\r\n  };\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  if (\r\n    typeof settings[\"currencies\"] !== \"undefined\" &&\r\n    settings[\"currencies\"] !== null &&\r\n    settings[\"currencies\"].length < 2\r\n  ) {\r\n    return <></>; // currency creation is disabled\r\n  } else {\r\n    return (\r\n      <>\r\n        <Accordion defaultActiveKey={accordionViewCurrency}>\r\n          {/**\r\n           * Currencies\r\n           */}\r\n          <AccordionCard\r\n            title={t(\"Currencies\")}\r\n            eventkey=\"currencies\"\r\n            active={accordionViewCurrency}\r\n            paddingBody={props.paddingBody}\r\n            onClick={ToggleCurrencies}\r\n          >\r\n            <Currencies {...args} />\r\n          </AccordionCard>\r\n\r\n          {/**\r\n           * Currency registration\r\n           */}\r\n          {typeof settings[\"currencyCreationAllowed\"] !== \"undefined\" &&\r\n            settings[\"currencyCreationAllowed\"] && (\r\n              <AccordionCard\r\n                title={t(\"Currency Registration\")}\r\n                eventkey=\"currencyRegistration\"\r\n                active={accordionViewCurrency}\r\n                paddingBody={props.paddingBody}\r\n                onClick={ToggleCurrencyRegistration}\r\n              >\r\n                <CurrencyRegistration {...args} />\r\n              </AccordionCard>\r\n            )}\r\n        </Accordion>\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { TransferToSelf, TransferToPerson, TransferToBusiness } from \"./index\";\r\n\r\n/**\r\n * Component: Transfer\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber, transferType } = props.barrelGetters;\r\n  const { setRedirectTo } = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  const { onTransferTypeChange } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"Transfer\");\r\n\r\n  const data = props.data;\r\n  const type = transferType;\r\n  // const onTypeChange = args.onTypeChange;\r\n\r\n  // console.log(\"TRANSFER DATA TYPE:\", type);\r\n\r\n  // const [transferCard, setTransferCard] = useState(null);\r\n\r\n  const onNavigationClick = (id) => {\r\n    onTransferTypeChange(id);\r\n  };\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"U2S\"),\r\n      link: \"#u2s\",\r\n    },\r\n    {\r\n      name: t(\"U2U\"),\r\n      link: \"#u2u\",\r\n    },\r\n    {\r\n      name: t(\"U2B\"),\r\n      link: \"#u2b\",\r\n    },\r\n  ];\r\n\r\n  // console.log(\"TRANSFER DATA\", data);\r\n  // const title = t(\"Transfer to account\");\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  switch (type) {\r\n    case \"#u2u\": // User to user\r\n      // case \"/u2u\": // User to user\r\n      return (\r\n        <TransferToPerson\r\n          title={t(\"Transfer to account\")}\r\n          args={props}\r\n          navigation={navigation}\r\n          navigationdefaultActiveKey={type}\r\n          onNavigationClick={onNavigationClick}\r\n        />\r\n      );\r\n      break;\r\n    case \"#u2b\": // User to business\r\n      // case \"/u2b\": // User to business\r\n      return (\r\n        <TransferToBusiness\r\n          title={t(\"Transfer to account\")}\r\n          args={props}\r\n          navigation={navigation}\r\n          navigationdefaultActiveKey={type}\r\n          onNavigationClick={onNavigationClick}\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      // \"#u2s\"\r\n      return (\r\n        <TransferToSelf\r\n          title={t(\"Transfer to account\")}\r\n          args={props}\r\n          navigation={navigation}\r\n          navigationdefaultActiveKey={type}\r\n          onNavigationClick={onNavigationClick}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\nimport Rating from \"../rating\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Contact\", request: \"send message\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    language,\r\n    accountNumber,\r\n    contactSubject,\r\n    contactMessage,\r\n  } = props.barrelGetters;\r\n  const { setContactSubject, setContactMessage } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refSubject = React.createRef();\r\n  const refMessage = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefSubject = refSubject.current;\r\n    const tempRefMessage = refMessage.current;\r\n    return () => {\r\n      // console.log(\"ON UNMOUNT:\", tempRefSubject.value);\r\n      if (tempRefSubject !== null && contactSubject !== tempRefSubject.value)\r\n        setContactSubject(tempRefSubject.value);\r\n\r\n      if (tempRefMessage !== null && contactMessage !== tempRefMessage.value)\r\n        setContactMessage(tempRefMessage.value);\r\n      // console.log(\"CONTACT UNMOUNTS\");\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    subject: yup.string().required(t(\"Subject is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.sender = accountNumber;\r\n    data.language = language;\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  // const navigation = [\r\n  //   {\r\n  //     name: t(\"U2S\"),\r\n  //     link: \"#u2s\",\r\n  //   },\r\n  // ];\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card header={false} border={0} maxWidthBody=\"700px\">\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * Rating\r\n         */}\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <Trans i18nKey=\"Rating:Thank you for your feedback\">\r\n            Thank you for your feedback! How helpful was our site?*\r\n          </Trans>\r\n        </div>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <Rating {...args} />\r\n        </div>\r\n\r\n        {/*\r\n         * Subject\r\n         */}\r\n        <Form.Group controlId=\"validationFormikSubject\">\r\n          <Form.Label>{t(\"Subject\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={t(\"Enter message subject\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"subject\"\r\n              ref={refSubject}\r\n              value={values.subject}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setContactSubject(e.target.value);\r\n              }}\r\n              isInvalid={!!errors.subject && touched.subject}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.subject}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Message\r\n         */}\r\n        <Form.Group controlId=\"validationFormikMessage\">\r\n          <Form.Label>{t(\"Message\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter message\")}\r\n            name=\"message\"\r\n            value={values.message}\r\n            ref={refMessage}\r\n            onChange={handleChange}\r\n            as=\"textarea\"\r\n            rows=\"10\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        subject: contactSubject,\r\n        message: contactMessage,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"HttpResponseStatusCodes\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return <Card title={t(\"404 Not found\")} border={0}></Card>;\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Overlay.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { cloneElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Overlay\",\r\n    visible: false,\r\n    variant: \"info\",\r\n    dismissible: false,\r\n    onClose: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"dismissible:\", props.dismissible);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  useTimeout(\r\n    () => {\r\n      props.onClose();\r\n    },\r\n    !props.dismissible ? 5000 : -1 // millisec till overlay closes, -1 never\r\n  );\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      let className = \"custom-overlay\";\r\n\r\n      /**\r\n       * Implement property: dismissible\r\n       */\r\n      if (props.dismissible) {\r\n        className += \" alert-dismissible\";\r\n      }\r\n\r\n      /**\r\n       * Implement property: variant\r\n       */\r\n      switch (props.variant) {\r\n        case \"danger\":\r\n          className += \" alert-danger\";\r\n          break;\r\n\r\n        default:\r\n          className += \" alert-info\";\r\n          break;\r\n      }\r\n      let key = 0;\r\n      return (\r\n        <div className={className}>\r\n          {props.dismissible && (\r\n            <button type=\"button\" className=\"close\" onMouseDown={props.onClose}>\r\n              <span aria-hidden=\"true\">×</span>\r\n              <span className=\"sr-only\">Close alert</span>\r\n            </button>\r\n          )}\r\n          {React.Children.map(args.children, (child) => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                ...args,\r\n                styles: null,\r\n                key: key,\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./AlertContainer.css\";\r\n\r\n/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = { namespace: \"AlertContainer\", visible: false };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      return (\r\n        <div className=\"alert-container\">\r\n          {React.Children.map(args.children, (child) => child)}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Alert } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Overlay from \"../overlay\";\r\nimport AlertContainer from \"../alertContainer\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args.data);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onAlertClose: onClose } = props.barrelEventHandlers;\r\n\r\n  // let t;\r\n  const errorStrings = useTranslation(\"Errors\").t;\r\n  const infoStrings = useTranslation(\"Infos\").t;\r\n\r\n  if (error !== null && info !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <>\r\n        <AlertContainer visible={true}>\r\n          {msgError !== \"\" && msgError !== null && (\r\n            <Overlay\r\n              visible={true}\r\n              variant=\"danger\"\r\n              onClose={() => onClose(\"error\")}\r\n              dismissible={error.dismissible}\r\n            >\r\n              {msgError}\r\n            </Overlay>\r\n          )}\r\n\r\n          {msgInfo !== \"\" && msgInfo !== null && (\r\n            <Overlay\r\n              visible={true}\r\n              variant=\"info\"\r\n              onClose={() => onClose(\"info\")}\r\n              dismissible={info.dismissible}\r\n            >\r\n              {msgInfo}\r\n            </Overlay>\r\n          )}\r\n        </AlertContainer>\r\n      </>\r\n    );\r\n  } else if (error !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        {msgError !== \"\" && msgError !== null && (\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"danger\"\r\n            onClose={() => onClose(\"error\")}\r\n            dismissible={error.dismissible}\r\n          >\r\n            {msgError}\r\n          </Overlay>\r\n        )}\r\n      </AlertContainer>\r\n    );\r\n  } else if (info !== null) {\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        {msgInfo !== \"\" && msgInfo !== null && (\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"info\"\r\n            onClose={() => onClose(\"info\")}\r\n            dismissible={info.dismissible}\r\n          >\r\n            {msgInfo}\r\n          </Overlay>\r\n        )}\r\n      </AlertContainer>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, Container, Row, Col } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"LogIn\", request: \"sign in user\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { ip, logInEmail, logInPassword } = props.barrelGetters;\r\n  const {\r\n    setLoggingIn,\r\n    setUpdateInterval,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    getUri,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (tempRefEmail !== null && logInEmail !== tempRefEmail.value)\r\n        setLogInEmail(tempRefEmail.value);\r\n\r\n      if (tempRefPassword !== null && logInPassword !== tempRefPassword.value)\r\n        setLogInPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup.string().required(t(\"No password provided\")),\r\n  });\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserLogInRequest = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.ip = ip;\r\n    data.uri = getUri();\r\n    sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    setUpdateInterval(-1);\r\n    setLoggingIn(true);\r\n    sendUserLogInRequest(data);\r\n  };\r\n\r\n  const UserLogInForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      align=\"left\"\r\n      // maxWidth=\"500px\"\r\n      header={false}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <h3>{t(\"Sign In\")}</h3>\r\n\r\n        {/**\r\n         * Email\r\n         */}\r\n        <Form.Group controlId=\"validationFormikEmail\">\r\n          <Form.Label>{t(\"Email address\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            // autoFocus\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Password\r\n         */}\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <Form.Label>{t(\"Password\")}</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            ref={refPassword}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Submit button\r\n         */}\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace=\"LogIn\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Container fluid=\"md\">\r\n          <Row>\r\n            {/**\r\n             * Register\r\n             */}\r\n            <Col>\r\n              <p className=\"other-options text-left\">\r\n                <Trans i18nKey=\"LogIn:Not yet registered\">\r\n                  Not yet <a href=\"/sign-up\">registered?</a>\r\n                </Trans>\r\n              </p>\r\n            </Col>\r\n\r\n            {/**\r\n             * Forgot password\r\n             */}\r\n            <Col>\r\n              <p className=\"other-options text-right\">\r\n                <Trans i18nKey=\"LogIn:Forgot password\">\r\n                  Forgot <a href=\"/reset\">password?</a>\r\n                </Trans>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={UserLogInForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          email: logInEmail,\r\n          password: logInPassword,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"register user\", namespace: \"SignUp\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    language,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n  } = props.barrelSetters;\r\n  const { getReviser, getWorkplace, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefFirstName = refFirstName.current;\r\n    const tempRefLastName = refLastName.current;\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (\r\n        tempRefFirstName !== null &&\r\n        signUpFirstName !== tempRefFirstName.value\r\n      )\r\n        setSignUpFirstName(tempRefFirstName.value);\r\n\r\n      if (tempRefLastName !== null && signUpLastName !== tempRefLastName.value)\r\n        setSignUpLastName(tempRefLastName.value);\r\n\r\n      if (tempRefEmail !== null && signUpEmail !== tempRefEmail.value)\r\n        setSignUpEmail(tempRefEmail.value);\r\n\r\n      if (tempRefPassword !== null && signUpPassword !== tempRefPassword.value)\r\n        setSignUpPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    firstName: yup.string().required(t(\"First name is required\")),\r\n    lastName: yup.string().required(t(\"Last name is required\")),\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.language = language;\r\n    data.validateEmail = true;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    // const recaptchaValue = refReCAPTCHA.current.getValue();\r\n    // this.props.onSubmit(recaptchaValue);\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  // const onChange = (data) => {\r\n  //   console.log(\"onChange:\", data);\r\n  // };\r\n\r\n  const UserRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      align=\"left\"\r\n      // maxWidth=\"500px\"\r\n      header={false}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <h3>{t(\"Sign Up\")}</h3>\r\n\r\n        {/**\r\n         * First name\r\n         */}\r\n        <Form.Group controlId=\"validationFormikFirstName\">\r\n          <Form.Label>{t(\"First name\")}</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter first name\")}\r\n            name=\"firstName\"\r\n            ref={refFirstName}\r\n            // autoFocus\r\n            value={values.firstName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.firstName && touched.firstName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.firstName}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Last name\r\n         */}\r\n        <Form.Group controlId=\"validationFormikLastName\">\r\n          <Form.Label>{t(\"Last name\")}</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter last name\")}\r\n            name=\"lastName\"\r\n            ref={refLastName}\r\n            value={values.lastName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.lastName && touched.lastName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.lastName}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Email\r\n         */}\r\n        <Form.Group controlId=\"validationFormikEmail\">\r\n          <Form.Label>{t(\"Email address\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Password\r\n         */}\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <Form.Label>{t(\"Password\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type={passwordVisible ? \"text\" : \"password\"}\r\n              placeholder={t(\"Enter password\")}\r\n              name=\"password\"\r\n              ref={refPassword}\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.password && touched.password}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text\r\n                id=\"inputGroupAppend\"\r\n                onClick={togglePassword}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                {passwordVisible ? (\r\n                  <VisibilityOff\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\" }}\r\n                  />\r\n                ) : (\r\n                  <Visibility\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\" }}\r\n                  />\r\n                )}\r\n              </InputGroup.Text>\r\n            </InputGroup.Append>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.password}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Submit button\r\n         */}\r\n        <Form.Group controlId=\"validationSubmitButton\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Login link\r\n         */}\r\n        <p className=\"other-options text-right\">\r\n          <Trans i18nKey=\"SignUp:Already registered\">\r\n            Already registered <a href=\"/sign-in\">sign in?</a>\r\n          </Trans>\r\n        </p>\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={UserRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        firstName: signUpFirstName,\r\n        lastName: signUpLastName,\r\n        email: signUpEmail,\r\n        password: signUpPassword,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport TanInput from \"../tanInput\";\r\nimport { useEffect } from \"react\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Checkout\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    // externalRequest,\r\n    // accountNumber,\r\n    cartProps,\r\n    cartContent,\r\n    cartPurposes,\r\n    tanRequired,\r\n    userData,\r\n    language,\r\n    accountNumber,\r\n    currencyAbbr,\r\n    cartID,\r\n    cartProcessingStatus,\r\n  } = props.barrelGetters;\r\n  const { setTransferRequest, setCartProcessingStatus } = props.barrelSetters;\r\n  const { format, sendRequest, formatDate } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const schema = yup.object({});\r\n\r\n  const getCartPurposes = () => {\r\n    if (cartContent === null) return false;\r\n\r\n    let priceTotal = 0;\r\n    let priceReal = 0;\r\n\r\n    let purposeID = [];\r\n    let amount = [];\r\n    let currency = [];\r\n    let fromAccount = [];\r\n\r\n    cartContent.map((element) => {\r\n      priceTotal += element.price * element.amount;\r\n      let product_found = \"N\";\r\n\r\n      if (cartPurposes !== null) {\r\n        let product = cartPurposes.find(\r\n          (products) => products.purpose_id === element.product\r\n        );\r\n\r\n        if (typeof product !== \"undefined\") {\r\n          product_found = \"Y\";\r\n          priceReal += element.price * element.amount;\r\n        }\r\n        // console.log(\"product:\", product);\r\n      }\r\n\r\n      /**\r\n       * In current implementation if product could be added to the cart,\r\n       * then subsequential deactivation is ignored.\r\n       */\r\n      purposeID.push(element.product);\r\n      amount.push(element.price * element.amount);\r\n      currency.push(currencyAbbr);\r\n      fromAccount.push(\"acc_curr\");\r\n    });\r\n\r\n    return { purposeID, amount, currency, fromAccount };\r\n  };\r\n\r\n  const Cart = () => {\r\n    if (cartProps === null) return <></>;\r\n\r\n    let priceTotal = 0; // Price of active AND inactive purposes\r\n    let priceReal = 0; // Price of active purposes\r\n\r\n    const businessCreated = formatDate(cartProps.business_created, {\r\n      month: \"numeric\",\r\n      year: \"numeric\",\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {cartContent !== null &&\r\n          cartContent.map((element, key) => {\r\n            priceTotal += element.price * element.amount;\r\n            let product_found = \"N\";\r\n\r\n            if (cartPurposes !== null) {\r\n              let product = cartPurposes.find(\r\n                (products) => products.purpose_id === element.product\r\n              );\r\n\r\n              if (typeof product !== \"undefined\") {\r\n                product_found = \"Y\";\r\n                priceReal += element.price * element.amount;\r\n              }\r\n              // console.log(\"product:\", product);\r\n            }\r\n\r\n            //   if (typeof product !== \"undefined\") {\r\n            //     product_found = product.title;\r\n            //   }\r\n            // }\r\n\r\n            return (\r\n              <div key={key}>\r\n                {false && (\r\n                  <>\r\n                    <div>product: {element.product}</div>\r\n                    <div>price: {element.price}</div>\r\n                    <div>amount: {element.amount}</div>\r\n                    <div>found: {product_found}</div>\r\n                    <br />\r\n                  </>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        <div style={{ fontWeight: \"bold\" }}>{t(\"Merchant\")}</div>\r\n        <div style={{}}>{cartProps.merchant}</div>\r\n        <div style={{}}>{cartProps.business_title}</div>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <Trans\r\n            i18nKey=\"Checkout:Business created\"\r\n            businessCreated={businessCreated}\r\n          >\r\n            Since {{ businessCreated }}\r\n          </Trans>\r\n        </div>\r\n\r\n        <div style={{ fontWeight: \"bold\" }}>{t(\"Amount\")}</div>\r\n        <div style={{ fontSize: \"1.5rem\" }}>{format(priceTotal)}</div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    setCartProcessingStatus(null);\r\n\r\n    data.transferType = \"transfer U2B\";\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n\r\n    const { amount, currency, purposeID, fromAccount } = getCartPurposes();\r\n\r\n    data.amount = amount;\r\n    data.currency = currency;\r\n    data.purposeID = purposeID;\r\n    data.fromAccount = fromAccount;\r\n\r\n    data.cart = cartProps.cartid;\r\n    data.merchant = cartProps.merchant;\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n\r\n    data = { email: userData.email, language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n\r\n    // setTransferAmount(\"\");\r\n  };\r\n\r\n  const CheckoutForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card title={t(\"Checkout\")} border=\"0\">\r\n      {/* From account */}\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <Cart />\r\n        </div>\r\n        {/* Submit button */}\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  // return <>{getJSX()}</>;\r\n\r\n  return (\r\n    <>\r\n      {cartProcessingStatus === null ? (\r\n        <>\r\n          <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n          <Formik\r\n            component={CheckoutForm}\r\n            validationSchema={schema}\r\n            onSubmit={onSubmit}\r\n            initialValues={{}}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {cartProcessingStatus === true\r\n            ? \"Transfer successful\"\r\n            : \"Transfer error\"}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../../translations/i18n\";\r\n// import { withNamespaces } from \"react-i18next\";\r\nimport { Form, Badge } from \"react-bootstrap\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"LanguageSelector\",\r\n    backgroundColor: \"var(--dark)\",\r\n    color: \"var(--light)\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { userData, signedIn } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n  const languages = [\r\n    { id: 1, language: \"Latviešu\", code: \"lv\" },\r\n    { id: 2, language: \"English\", code: \"en\" },\r\n  ];\r\n  const handleLanguageSelect = (e) => {\r\n    changeLanguage(e.target.value);\r\n  };\r\n  const selectLanguage = (language) => {\r\n    changeLanguage(language);\r\n\r\n    if (userData !== null && signedIn) {\r\n      sendRequest({\r\n        req: \"register user language\",\r\n        data: { email: userData.email, language },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (1) {\r\n    return (\r\n      <span style={{ paddingLeft: \"0.5rem\", paddingRight: \"0.5rem\" }}>\r\n        <Badge\r\n          pill\r\n          style={{\r\n            cursor: \"pointer\",\r\n            backgroundColor: props.backgroundColor,\r\n            color: props.color,\r\n            marginBottom: \"0.3rem\",\r\n          }}\r\n          onClick={() => {\r\n            selectLanguage(\"en\");\r\n          }}\r\n        >\r\n          en\r\n        </Badge>{\" \"}\r\n        <Badge\r\n          pill\r\n          style={{\r\n            cursor: \"pointer\",\r\n            backgroundColor: props.backgroundColor,\r\n            color: props.color,\r\n            marginBottom: \"0.3rem\",\r\n          }}\r\n          onClick={() => {\r\n            selectLanguage(\"lv\");\r\n          }}\r\n        >\r\n          lv\r\n        </Badge>\r\n      </span>\r\n    );\r\n  } else {\r\n    return (\r\n      <Form.Control\r\n        as=\"select\"\r\n        id=\"languageSelector\"\r\n        onChange={handleLanguageSelect}\r\n        custom\r\n      >\r\n        <option key=\"0\" value={props.language}>\r\n          {t(\"Language\")}\r\n        </option>\r\n        {languages.map((el) => (\r\n          <option key={el.id} value={el.code}>\r\n            {el.language}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    );\r\n  }\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col, Navbar, Nav } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\nimport LanguageSelector from \"../language-selector\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Footer\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { signedIn } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Card\r\n        title=\"\"\r\n        header={true}\r\n        border={0}\r\n        maxWidthBody=\"100%\"\r\n        headerPadding=\"10px\"\r\n        bodyPadding=\"10px 20px\"\r\n      >\r\n        {window.location.pathname !== \"/auth\" ? (\r\n          /**\r\n           * Full footer\r\n           */\r\n          <Container\r\n            fluid\r\n            style={{\r\n              paddingRight: \"0\",\r\n              paddingLeft: \"0\",\r\n            }}\r\n          >\r\n            {/*\r\n             * Top Footer\r\n             */}\r\n            <Row style={{ padding: 0 }}>\r\n              <Col style={{ padding: 0 }}>\r\n                <Navbar\r\n                  collapseOnSelect\r\n                  expand=\"sm\"\r\n                  style={{\r\n                    borderRadius: \"5px\",\r\n                    backgroundColor: \"var(--light)\", // e8f6f3\r\n                    boxShadow: \"none\",\r\n                    padding: \"0 .5rem\",\r\n                  }}\r\n                >\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"help\" href=\"/help\">\r\n                      {t(\"Help\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    {signedIn &&\r\n                      window.location.pathname !== \"/contact\" &&\r\n                      window.location.pathname !== \"/account-registration\" && (\r\n                        <Nav>\r\n                          <Nav.Link eventKey=\"contact\" href=\"/contact\">\r\n                            {t(\"Contact\")}\r\n                          </Nav.Link>\r\n                        </Nav>\r\n                      )}\r\n\r\n                    <Nav className=\"mr-auto\">\r\n                      <Nav.Link eventKey=\"about\" href=\"/security\">\r\n                        {t(\"Security\")}\r\n                      </Nav.Link>\r\n                    </Nav>\r\n\r\n                    <Nav>\r\n                      <Nav.Item>\r\n                        <LanguageSelector {...args} />\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                  </Navbar.Collapse>\r\n                </Navbar>\r\n              </Col>\r\n            </Row>\r\n\r\n            {/*\r\n             * Bottom Footer\r\n             */}\r\n            <Row\r\n              className=\"d-none d-sm-block\"\r\n              style={{ padding: 0, fontSize: \"0.86rem\" }}\r\n            >\r\n              <Col style={{ padding: 0 }}>\r\n                <Navbar\r\n                  collapseOnSelect\r\n                  expand=\"sm\"\r\n                  style={{\r\n                    borderRadius: \"5px\",\r\n                    backgroundColor: \"var(--light)\", // e8f6f3\r\n                    boxShadow: \"none\",\r\n                    padding: \"0 .5rem\",\r\n                  }}\r\n                >\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/about\">\r\n                      {t(\"About\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/newsroom\">\r\n                      {t(\"Newsroom\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/jobs\">\r\n                      {t(\"Jobs\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link eventKey=\"about\" href=\"/sitemap\">\r\n                      {t(\"Sitemap\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Item style={{}}>\r\n                      &copy;&nbsp;{now.getFullYear()}\r\n                    </Nav.Item>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/feedback\">\r\n                      {t(\"Feedback\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n                </Navbar>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        ) : (\r\n          /**\r\n           * Minimal footer\r\n           */\r\n          <Container\r\n            fluid\r\n            style={{\r\n              paddingRight: \"0\",\r\n              paddingLeft: \"0\",\r\n            }}\r\n          >\r\n            {/*\r\n             * Top Footer\r\n             */}\r\n            <Row style={{ padding: 0 }}>\r\n              <Col style={{ padding: 0 }}>\r\n                <Nav className=\"justify-content-center\">\r\n                  <Nav.Item>\r\n                    <LanguageSelector {...args} />\r\n                  </Nav.Item>\r\n                </Nav>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        )}\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AvTimer } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n//  let time = new Date().toLocaleString();\r\nimport { useInterval } from \"../../utils/useInterval\";\r\nimport { useEventListener } from \"../../utils/useEventListener\";\r\n\r\nimport ModalMessage from \"../modalMessage\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Constants\r\n     ============================================================================ */\r\n  const minute = 60; // seconds, for testing purposes > 60\r\n\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"IdleTimer\",\r\n    timeout: 5 * minute,\r\n    timestamp: null,\r\n    stage2: 60, // show seconds (vs minutes) in stage 2\r\n    stage3: 20, // show modal message on stage 3\r\n    onTick: () => {},\r\n    onTimerReset: () => {},\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { formatDate } = props.barrelFunctions;\r\n  const { onSessionTimeout } = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const [seconds, setSeconds] = useState(props.timeout);\r\n  const [modalMessageShow, setModalMessageShow] = React.useState(false);\r\n\r\n  useInterval(() => {\r\n    // Your custom logic here\r\n\r\n    setSeconds(seconds - 1);\r\n    props.onTick(seconds);\r\n  }, 1000);\r\n\r\n  useEventListener(() => {\r\n    setSeconds(props.timeout);\r\n    props.onTimerReset();\r\n  }, [\"mousedown\", \"click\", \"scroll\", \"keypress\"]); // \"click\",\r\n\r\n  useEffect(() => {\r\n    if (seconds === props.timeout) setModalMessageShow(false);\r\n    if (seconds === props.stage3) setModalMessageShow(true);\r\n    if (seconds === 0) onSessionTimeout();\r\n\r\n    // eslint-disable-next-line\r\n  }, [seconds]);\r\n\r\n  // useEffect(() => {\r\n  //   setSeconds(props.timeout);\r\n  //   props.onTimerReset();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [session]);\r\n\r\n  const getJSX = () => {\r\n    let currTime;\r\n    if (seconds > props.stage2) currTime = Math.ceil(seconds / minute);\r\n    else currTime = seconds;\r\n\r\n    const timeFormatted = formatDate(new Date(1970, 1, 1, 0, 0, currTime), {\r\n      minute: \"numeric\",\r\n      second: \"numeric\",\r\n    });\r\n\r\n    const onSessionContinue = () => {\r\n      // console.log(\"onSessionContinue\");\r\n      setSeconds(props.timeout);\r\n      setModalMessageShow(false);\r\n    };\r\n\r\n    const modalMessage = (\r\n      <>\r\n        <Trans\r\n          i18nKey=\"IdleTimer:Automatic logout\"\r\n          timeFormatted={timeFormatted}\r\n        >\r\n          <div className=\"text-center\">Automatic logout in</div>\r\n          <div\r\n            className=\"text-center\"\r\n            style={{ fontSize: \"4em\", fontWeight: \"bold\", color: \"#A93226\" }}\r\n          >\r\n            {{ timeFormatted }}\r\n          </div>\r\n          <div className=\"text-center\">\r\n            Do you want to continue the session?\r\n          </div>\r\n        </Trans>\r\n        <br />\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Continue now\")}\r\n          request=\"continue session\"\r\n          onSubmit={onSessionContinue}\r\n          namespace={props.namespace}\r\n        />\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <ModalMessage\r\n          show={modalMessageShow}\r\n          message={modalMessage}\r\n          onHide={() => setModalMessageShow(false)}\r\n        />\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip>\r\n              {seconds > props.stage2 ? (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Minutes to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  minutes.\r\n                </Trans>\r\n              ) : (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Seconds to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  seconds.\r\n                </Trans>\r\n              )}\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <div style={{ whiteSpace: \"nowrap\", cursor: \"default\" }}>\r\n            <AvTimer\r\n              style={{\r\n                fontSize: \"1.2rem\",\r\n                paddingBottom: \"0.2rem\",\r\n                color: \"var(--dark)\",\r\n              }}\r\n            />\r\n            &nbsp;\r\n            {seconds > props.stage2 ? (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:minutes\" currTime={currTime}>\r\n                    {{ currTime }} minutes\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:min\" currTime={currTime}>\r\n                    {{ currTime }} min\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:seconds\" currTime={currTime}>\r\n                    {{ currTime }} seconds\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:sec\" currTime={currTime}>\r\n                    <span>{{ currTime }}</span> sec\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </OverlayTrigger>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useEventListener = (callback, events) => {\r\n  let defaults = {\r\n    namespace: \"EventListener\",\r\n\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, { events: events });\r\n\r\n  useEffect(() => {\r\n    const eventHandler = (e) => {\r\n      callback(e);\r\n    };\r\n\r\n    for (let i in props.events) {\r\n      window.addEventListener(props.events[i], eventHandler);\r\n    }\r\n\r\n    return () => {\r\n      for (let i in props.events) {\r\n        window.removeEventListener(props.events[i], eventHandler);\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Button,\r\n  // Breadcrumb,\r\n  // NavDropdown,\r\n  // Alert,\r\n} from \"react-bootstrap\";\r\nimport { PowerSettingsNew, AccountCircle } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport UserEditor from \"../userEditor\";\r\nimport IdleTimer from \"../idleTimer\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"MainMenu\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    sessionTimeout,\r\n    accountNumber,\r\n    signedIn,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getBusinesses } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Container\r\n        fluid\r\n        style={{\r\n          paddingRight: \"0\",\r\n          paddingLeft: \"0\",\r\n        }}\r\n      >\r\n        <Row>\r\n          {/*\r\n           * User Menu\r\n           */}\r\n          <Col>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: 0,\r\n                // background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"var(--light)\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              {/**\r\n               * Brand\r\n               */}\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src={\r\n                    settings !== null && typeof settings[\"logo\"] !== \"undefined\"\r\n                      ? settings[\"logo\"]\r\n                      : \"/gfx/zlogo_light.png\"\r\n                  }\r\n                  alt=\"\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n\r\n              {/**\r\n               * User editor\r\n               */}\r\n              <Nav className=\"mr-auto\">\r\n                {signedIn ? (\r\n                  <>\r\n                    {window.location.pathname !== \"/auth\" ? (\r\n                      <Nav.Link eventKey=\"profile\" href=\"/profile\">\r\n                        <UserEditor {...args} />\r\n                      </Nav.Link>\r\n                    ) : (\r\n                      <Nav.Item>\r\n                        <UserEditor {...args} />\r\n                      </Nav.Item>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Nav.Item>\r\n                    <strong>{t(\"Local Currency\")}</strong>\r\n                  </Nav.Item>\r\n                )}\r\n              </Nav>\r\n\r\n              {/**\r\n               * Register\r\n               */}\r\n              {!signedIn && window.location.pathname !== \"/sign-up\" && (\r\n                <Nav>\r\n                  <Nav.Link eventKey=\"sign-out\" href=\"/sign-up\">\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      <span>\r\n                        <AccountCircle\r\n                          style={{\r\n                            fontSize: \"1.2rem\",\r\n                            paddingBottom: \"0.2rem\",\r\n                            color: \"var(--dark)\",\r\n                          }}\r\n                        />\r\n                      </span>\r\n\r\n                      <span className=\"d-none d-sm-inline\">\r\n                        &nbsp;\r\n                        {t(\"Register\")}\r\n                      </span>\r\n                    </span>\r\n                  </Nav.Link>\r\n                </Nav>\r\n              )}\r\n\r\n              {/**\r\n               * Sign in\r\n               */}\r\n              {!signedIn && window.location.pathname !== \"/sign-in\" && (\r\n                <Nav>\r\n                  <Nav.Link eventKey=\"sign-out\" href=\"/sign-in\">\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      <span>\r\n                        <PowerSettingsNew\r\n                          style={{\r\n                            fontSize: \"1.2rem\",\r\n                            paddingBottom: \"0.2rem\",\r\n                            color: \"var(--dark)\",\r\n                          }}\r\n                        />\r\n                      </span>\r\n\r\n                      <span className=\"d-none d-sm-inline\">\r\n                        &nbsp;\r\n                        {t(\"Sign in\")}\r\n                      </span>\r\n                    </span>\r\n                  </Nav.Link>\r\n                </Nav>\r\n              )}\r\n\r\n              {/**\r\n               * Sign out\r\n               */}\r\n              {signedIn && (\r\n                <Nav>\r\n                  <Nav.Link eventKey=\"sign-out\" href=\"/sign-out\">\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      <span>\r\n                        <PowerSettingsNew\r\n                          style={{\r\n                            fontSize: \"1.2rem\",\r\n                            paddingBottom: \"0.2rem\",\r\n                            color: \"var(--dark)\",\r\n                          }}\r\n                        />\r\n                      </span>\r\n\r\n                      <span className=\"d-none d-sm-inline\">\r\n                        &nbsp;\r\n                        {t(\"Sign out\")}\r\n                      </span>\r\n                    </span>\r\n                  </Nav.Link>\r\n                </Nav>\r\n              )}\r\n\r\n              {/**\r\n               * Idle timer\r\n               */}\r\n              {signedIn && (\r\n                <Nav>\r\n                  <Nav.Item>\r\n                    <IdleTimer timeout={sessionTimeout} {...args} />\r\n                  </Nav.Item>\r\n                </Nav>\r\n              )}\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/*\r\n         * Account Menu\r\n         */}\r\n        {signedIn && window.location.pathname !== \"/auth\" && (\r\n          <Row>\r\n            <Col>\r\n              <Navbar\r\n                collapseOnSelect\r\n                expand=\"sm\"\r\n                // className=\"card-header\"\r\n                // className=\"navbar-trans\"\r\n                // bg=\"dark\"\r\n                variant=\"dark\"\r\n                style={{\r\n                  borderRadius: 0,\r\n                  background: \"transparent !important\",\r\n                  backgroundColor: \"var(--dark)\",\r\n                  boxShadow: \"none\",\r\n                }}\r\n              >\r\n                <Nav>\r\n                  <Nav.Link\r\n                    className=\"nav-link-2\"\r\n                    eventKey=\"balance\"\r\n                    href=\"/balance\"\r\n                    style={{\r\n                      fontWeight:\r\n                        window.location.pathname === \"/balance\"\r\n                          ? \"bold\"\r\n                          : \"normal\",\r\n                    }}\r\n                  >\r\n                    {t(\"Balance\")}\r\n                  </Nav.Link>\r\n                </Nav>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                  <Nav className=\"mr-auto\">\r\n                    {accountNumber !== null && (\r\n                      <>\r\n                        <Nav.Link\r\n                          className=\"nav-link-2\"\r\n                          eventKey=\"transfer\"\r\n                          href=\"/transfer\"\r\n                          style={{\r\n                            fontWeight:\r\n                              window.location.pathname === \"/transfer\"\r\n                                ? \"bold\"\r\n                                : \"normal\",\r\n                          }}\r\n                        >\r\n                          {t(\"Transfer\")}\r\n                        </Nav.Link>\r\n                        <Nav.Link\r\n                          className=\"nav-link-2\"\r\n                          eventKey=\"my-business\"\r\n                          href=\"#\"\r\n                          onClick={() => getBusinesses(1)}\r\n                          style={{\r\n                            fontWeight:\r\n                              window.location.pathname === \"/my-business\"\r\n                                ? \"bold\"\r\n                                : \"normal\",\r\n                          }}\r\n                        >\r\n                          {t(\"Business\")}\r\n                        </Nav.Link>\r\n\r\n                        {/**\r\n                         * Currency\r\n                         */}\r\n                        {settings !== null &&\r\n                          typeof settings[\"currencies\"] !== \"undefined\" &&\r\n                          (settings[\"currencies\"] === null ||\r\n                            settings[\"currencies\"].length === 0 ||\r\n                            settings[\"currencies\"].length > 1) && (\r\n                            <Nav.Link\r\n                              className=\"nav-link-2\"\r\n                              eventKey=\"currency\"\r\n                              href=\"/currency\"\r\n                              style={{\r\n                                fontWeight:\r\n                                  window.location.pathname === \"/currency\"\r\n                                    ? \"bold\"\r\n                                    : \"normal\",\r\n                              }}\r\n                            >\r\n                              {t(\"Currency\")}\r\n                            </Nav.Link>\r\n                          )}\r\n                      </>\r\n                    )}\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Breadcrumb.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Breadcrumb\", names: \"\", links: \"\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const arrItems = props.items.split(\"|\");\r\n  // const arrItems = props.items;\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    let key = 0;\r\n    return (\r\n      <Breadcrumb style={{}}>\r\n        {props.names.map((name, index) => {\r\n          key++;\r\n          return name !== \"\" ? (\r\n            <Breadcrumb.Item key={key} href={props.links[index]}>\r\n              {name}\r\n            </Breadcrumb.Item>\r\n          ) : (\r\n            \"\"\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * User CSS\r\n ============================================================================ */\r\nimport \"./Article.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { lazy, useEffect, useLayoutEffect, memo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Accordion,\r\n  Tab,\r\n  ListGroup,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\nimport ListGroupItem from \"../listGroupItem\";\r\nimport Breadcrumb from \"../breadcrumb\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport Search from \"../search\";\r\nimport { useStickyState } from \"../../utils/state\";\r\nimport { createRef } from \"react\";\r\nimport HelpMenuLevel2 from \"../helpMenuLevel2\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nconst Article = (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Article\", searchable: false };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    language,\r\n    articleFeedbackSubmitted,\r\n    scrollPositionY,\r\n    helpPath1,\r\n    helpPath2,\r\n    helpPath3,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setArticleFeedbackSubmitted,\r\n    setScrollPositionY,\r\n    setHelpPath2,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getFileNameFromURI,\r\n    getScrollPosition,\r\n    setScrollPosition,\r\n    setHelpPath,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refFeedbackSubmit = React.createRef();\r\n  const refFeedbackThanks = React.createRef();\r\n\r\n  // useEffect(() => {\r\n  //   setScrollPosition(0, scrollPositionY);\r\n  // }, []);\r\n\r\n  // useLayoutEffect(() => {\r\n  //   setScrollPosition(0, scrollPositionY);\r\n  //   console.log(\"SET scrollPositionY:\", scrollPositionY);\r\n  // });\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"Help Articles\"),\r\n      link: \"#helpArticles\",\r\n    },\r\n    {\r\n      name: t(\"Community Posts\"),\r\n      link: \"#communityPosts\",\r\n    },\r\n  ];\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    let leadFile = getFileNameFromURI(); // \"i-forgot-my-password-how-do-i-reset-it.js\";\r\n\r\n    let ExternalFile = null;\r\n\r\n    ExternalFile =\r\n      leadFile !== null\r\n        ? lazy(() => {\r\n            const ret = import(\r\n              `../locale/${language}/articles/${leadFile}`\r\n            ).catch((err) => {\r\n              // console.log(\"err:\", err);\r\n              return import(\r\n                `../locale/${language}/articles/i-forgot-my-password-how-do-i-reset-it.js`\r\n              ); // TODO: Change LeadLogiIn.js -> _LeadDefault.js\r\n            });\r\n            // console.log(\"RET:\", ret);\r\n\r\n            // ret.then((value) => {\r\n            //   console.log(\"THEN:\", value);\r\n            //   // expected output: \"Success!\"\r\n            //   setScrollPosition(0, scrollPositionY);\r\n            // });\r\n\r\n            return ret;\r\n          })\r\n        : null;\r\n\r\n    // console.log(refFeedbackThanks);\r\n\r\n    const topicPath = \"/help/topic\";\r\n\r\n    return (\r\n      <Card title={t(\"Help center\")} border={0} maxWidthBody=\"100%\">\r\n        <Container fluid>\r\n          {/**\r\n           * Search\r\n           */}\r\n          {props.searchable && (\r\n            <Row>\r\n              <Col>\r\n                <div className=\"header-text\">\r\n                  <h1>{t(\"How can we help?\")}</h1>\r\n                </div>\r\n                <div style={{ textAlign: \"center\", margin: \"0 0 35px 0\" }}>\r\n                  <div\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      width: \"100%\",\r\n                      maxWidth: \"600px\",\r\n                    }}\r\n                  >\r\n                    <Search\r\n                      {...args}\r\n                      placeholder={t(\"Ask a question or search by keyword\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n\r\n          {/**\r\n           * Help categories\r\n           */}\r\n          <Row>\r\n            <Col xl={4} style={{}}>\r\n              <HelpMenuLevel2 {...args} />\r\n            </Col>\r\n            <Col xl={8} style={{}}>\r\n              <Breadcrumb\r\n                names={[t(helpPath1), t(helpPath2), t(helpPath3)]}\r\n                links={[\r\n                  `${topicPath}/${helpPath1}`,\r\n                  `${topicPath}/${helpPath2}`,\r\n                  `${topicPath}/${helpPath2}#${helpPath3}`,\r\n                ]}\r\n              />\r\n\r\n              {ExternalFile !== null && (\r\n                <ErrorBoundary>\r\n                  <ExternalFile {...args} />\r\n                </ErrorBoundary>\r\n              )}\r\n\r\n              {/**\r\n               * Did this help?\r\n               */}\r\n              <hr />\r\n\r\n              <div ref={refFeedbackSubmit} style={{ display: \"block\" }}>\r\n                <p className=\"feedback-heading\">{t(\"Did this help?\")}</p>\r\n                <div\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    maxWidth: \"50px\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                >\r\n                  <SubmitButton\r\n                    {...args}\r\n                    caption={t(\"Yes\")}\r\n                    request=\"did this help\"\r\n                    namespace={props.namespace}\r\n                    classButton=\"feedback-button\"\r\n                    type=\"button\"\r\n                    onSubmit={() => {\r\n                      refFeedbackSubmit.current.style.display = \"none\";\r\n                      refFeedbackThanks.current.style.display = \"block\";\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div style={{ display: \"inline-block\", maxWidth: \"50px\" }}>\r\n                  <SubmitButton\r\n                    {...args}\r\n                    caption={t(\"No\")}\r\n                    request=\"did this help\"\r\n                    namespace={props.namespace}\r\n                    classButton=\"feedback-button\"\r\n                    type=\"button\"\r\n                    onSubmit={() => {\r\n                      refFeedbackSubmit.current.style.display = \"none\";\r\n                      refFeedbackThanks.current.style.display = \"block\";\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div ref={refFeedbackThanks} style={{ display: \"none\" }}>\r\n                <p className=\"feedback-heading\">\r\n                  {t(\"Thank you for your feedback.\")}\r\n                </p>\r\n              </div>\r\n\r\n              {/**\r\n               * Related Topics\r\n               */}\r\n              <Card\r\n                title={t(\"Related topics\")}\r\n                navigation={navigation}\r\n                headerPadding=\"20px 0 10px 0\"\r\n                bodyPadding=\"20px 0 10px 0\"\r\n                border={0}\r\n                maxWidthBody=\"100%\"\r\n                cardTitleClass=\"related-topics-heading\"\r\n              >\r\n                <p>\r\n                  <a href=\"/help/article/i-forgot-my-password\">\r\n                    I forgot my password. How do I reset it?\r\n                  </a>\r\n                </p>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n\r\nexport default Article;\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Summary from \"../summary\";\r\nimport Alert from \"../alert\";\r\nimport Login from \"../login\";\r\nimport Logout from \"../logout\";\r\nimport SignUp from \"../signup\";\r\nimport PasswordReset from \"../passwordReset\";\r\nimport ValidateEmail from \"../validateEmail\";\r\nimport ChangePassword from \"../changePassword\";\r\nimport Auth from \"../auth\";\r\nimport Footer from \"../footer\";\r\nimport MainMenu from \"../mainMenu\";\r\nimport Help from \"../help\";\r\nimport Article from \"../article\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { signedIn } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getRedirect, getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module constats\r\n   ============================================================================ */\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <>\r\n        <Router>\r\n          {getRedirect()}\r\n\r\n          <div className={appClass} style={{}}>\r\n            {/**\r\n             * The alert\r\n             */}\r\n            <Alert data={args} />\r\n\r\n            {/**\r\n             * Wrapper for the main window\r\n             */}\r\n            <div className={wrapperClass} style={{}}>\r\n              {/**\r\n               * The main window\r\n               */}\r\n              <div\r\n                className={innerClass}\r\n                style={{\r\n                  backgroundColor: \"Transparent\",\r\n                }}\r\n              >\r\n                <MainMenu {...args} />\r\n\r\n                {(window.location.pathname === \"/sign-in\" ||\r\n                  window.location.pathname === \"/sign-out\" ||\r\n                  (window.location.pathname === \"/\" && !signedIn)) && (\r\n                  <Image\r\n                    className=\"d-none d-md-block\"\r\n                    src=\"gfx/raised_hands.png\"\r\n                    fluid\r\n                  />\r\n                )}\r\n\r\n                {/**\r\n                 * Routes\r\n                 */}\r\n                <Switch>\r\n                  {/**\r\n                   * Route: Sign up\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/sign-up\"\r\n                    component={() => {\r\n                      return SignUp(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Sign up\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/auth\"\r\n                    component={() => (signedIn ? Auth(args) : Login(args))}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Validate mail\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/validate-email\"\r\n                    component={() => {\r\n                      return ValidateEmail(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Change password\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/password\"\r\n                    component={() => {\r\n                      return ChangePassword(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Sign out\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/sign-out\"\r\n                    component={() => {\r\n                      return Logout(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Topic\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/help\"\r\n                    component={() => {\r\n                      return Help(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Topic\r\n                   */}\r\n                  <Route\r\n                    path=\"/help/topic\"\r\n                    component={() => {\r\n                      return Help(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Article\r\n                   */}\r\n                  <Route\r\n                    path=\"/help/article\"\r\n                    component={() => {\r\n                      return Article(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Password reset\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/reset\"\r\n                    component={() => {\r\n                      return PasswordReset(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Default route\r\n                   */}\r\n                  <Route\r\n                    path=\"*\"\r\n                    component={() => {\r\n                      return signedIn ? Summary(args) : Login(args);\r\n                    }}\r\n                  />\r\n                </Switch>\r\n                <Footer {...args} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ValidateEmail\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    // validateTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    language,\r\n  } = props.barrelGetters;\r\n  const { setValidateTokenEmail } = props.barrelSetters;\r\n  const { getUrlParam, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Hooks\r\n    ============================================================================ */\r\n\r\n  // setToken(getUrlParam(\"token\"));\r\n  // setEmail(getUrlParam(\"email\"));\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenEmail(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (data) => {\r\n    sendRequest({\r\n      req: \"resend validate email token\",\r\n      data: {\r\n        token: validationTokenEmail.token,\r\n        email: validationTokenEmail.email,\r\n        language,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const queryString = window.location.search;\r\n    // const urlParams = new URLSearchParams(queryString);\r\n\r\n    return token === null ? (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        <h4>{t(\"A verification link has been sent to your email account.\")}</h4>\r\n        <hr />\r\n        <p>\r\n          {t(\r\n            \"Please click on the link that has just been sent to your email account\"\r\n          )}\r\n        </p>\r\n        {validationTokenEmailResent < 5 && (\r\n          <>\r\n            <br />\r\n            <h5>{t(\"Didn't receive email?\")}</h5>\r\n\r\n            <SubmitButton\r\n              {...args}\r\n              caption={t(\"Submit\")}\r\n              visible={true}\r\n              marginTop={20}\r\n              request={\"resend validate email token\"}\r\n              namespace={props.namespace}\r\n              onSubmit={handleSubmit}\r\n            />\r\n          </>\r\n        )}\r\n      </Card>\r\n    ) : (\r\n      <div className=\"text-center\">\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"border\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={false}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ChangePassword\",\r\n    request: \"change password\",\r\n    email: null,\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([\r\n    passwordResetTokenValidated === true ? \"SignUp\" : \"ChangePassword\",\r\n  ]); // adjust namespace\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.email = passwordResetTokenEmail;\r\n    // console.log(data);\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ChangePasswordForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Password */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"New password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  if (passwordResetTokenValidated === true) {\r\n    // if (true) {\r\n    return (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        <Formik\r\n          component={ChangePasswordForm}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            password: \"\",\r\n          }}\r\n        />\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        {t(\"Awaiting validation\")}\r\n      </Card>\r\n    );\r\n  }\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(\"Logout\");\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info, language, emailChanged } = props.barrelGetters;\r\n  const {\r\n    setLanguage,\r\n    setRedirectTo,\r\n    // setEmailChanged,\r\n    // setLoggingOut,\r\n    setInfo,\r\n    setError,\r\n  } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onLogOut, onRedirect } = props.barrelEventHandlers;\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Save vars\r\n     */\r\n    const tempError = error;\r\n    const tempInfo = info;\r\n    const tempLanguage = language;\r\n    const tempEmailChanged = emailChanged;\r\n\r\n    /**\r\n     * Log out\r\n     */\r\n    onLogOut();\r\n\r\n    /**\r\n     * Restore vars\r\n     */\r\n    setLanguage(tempLanguage);\r\n\r\n    if (tempEmailChanged) {\r\n      onRedirect(\"/validate-email\");\r\n    }\r\n\r\n    if (tempError !== null) {\r\n      setError(JSON.stringify(tempError));\r\n    } else {\r\n      setError(null);\r\n    }\r\n\r\n    if (tempInfo !== null) {\r\n      setInfo(JSON.stringify(tempInfo));\r\n    } else {\r\n      setInfo(null);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, []); // JSON.stringify(error), JSON.stringify(info) - logOut\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        <h4>{t(\"See you soon\")}</h4>\r\n        <hr />\r\n\r\n        <Trans i18nKey=\"Logout:Security note\">\r\n          <strong>Security note:</strong> For security reasons, it is\r\n          recommended that you close the browser completely at the end of your\r\n          visit to the Local Currency website (i.e. all browser windows or\r\n          browser tabs) and then open it again if necessary to visit other\r\n          websites. This note applies in particular if you do not use your Local\r\n          Currency website at home, but on a public device or a device that is\r\n          accessible to other people - for example in an internet cafe, in a\r\n          hotel or at work.\r\n        </Trans>\r\n\r\n        <br />\r\n        <br />\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Sign in\")}\r\n          request=\"get started\"\r\n          namespace=\"LogIn\"\r\n          onSubmit={() => setRedirectTo(\"/\")}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n  * Default export\r\n  ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ResetPassword\", request: \"reset password\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { language, passwordResetEmail } = props.barrelGetters;\r\n  const {\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetEmail,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getUrlParam } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  const refEmail = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    const tempRefEmail = refEmail.current;\r\n    return () => {\r\n      if (tempRefEmail !== null && passwordResetEmail !== tempRefEmail.value)\r\n        setPasswordResetEmail(tempRefEmail.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenPasswordReset(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n    * Event listeners\r\n    ============================================================================ */\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    data.language = language;\r\n    sendRequest({\r\n      req: props.request,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n  });\r\n\r\n  const passwordResetForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      align=\"left\"\r\n      // maxWidth=\"500px\"\r\n      header={false}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <h3>{t(\"Reset password\")}</h3>\r\n\r\n        {/* Email */}\r\n        <Form.Group controlId=\"validationFormikEmail\">\r\n          <Form.Label>{t(\"Email address\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              placeholder={t(\"Enter email\")}\r\n              name=\"email\"\r\n              ref={refEmail}\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.email && touched.email}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.email}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  // return (\r\n  //   <Formik\r\n  //     component={passwordResetForm}\r\n  //     validationSchema={schema}\r\n  //     onSubmit={onSubmit}\r\n  //     initialValues={{\r\n  //       email: \"\",\r\n  //     }}\r\n  //   />\r\n  // );\r\n\r\n  return token === null ? (\r\n    <Formik\r\n      component={passwordResetForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        email: passwordResetEmail,\r\n      }}\r\n    />\r\n  ) : (\r\n    <div className=\"text-center\">\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n        hidden={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Leads.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect, lazy } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n    * User imports\r\n    ============================================================================ */\r\nimport Alert from \"../alert\";\r\nimport LanguageSelector from \"../language-selector\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n      * Default Properties\r\n      ============================================================================ */\r\n  let defaults = { namespace: \"Leads\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const { signedIn, language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n      * Destructured vars\r\n      ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n  // const appClass = \"App\";\r\n\r\n  /**\r\n      * Functions\r\n      ============================================================================ */\r\n  const getJSX = () => {\r\n    let leadFile;\r\n    switch (window.location.pathname) {\r\n      case \"/\":\r\n      case \"/sign-in\":\r\n        leadFile = \"LeadHome.js\";\r\n        break;\r\n\r\n      case \"/sign-up\":\r\n        leadFile = \"LeadSignUp.js\";\r\n        break;\r\n\r\n      case \"/auth\":\r\n        leadFile = \"LeadAuth.js\";\r\n        break;\r\n\r\n      case \"/transfer\":\r\n        leadFile = \"Transfer.js\";\r\n        break;\r\n\r\n      // case \"/transfer/u2s\":\r\n      //   leadFile = \"TransferU2S.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2u\":\r\n      //   leadFile = \"TransferU2U.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2b\":\r\n      //   leadFile = \"TransferU2B.js\";\r\n      //   break;\r\n\r\n      default:\r\n        leadFile = \"_LeadDefault.js\";\r\n        break;\r\n    }\r\n\r\n    let ExternalFile = null;\r\n\r\n    ExternalFile =\r\n      leadFile !== null\r\n        ? lazy(() =>\r\n            import(`../locale/${language}/leads/${leadFile}`).catch((err) => {\r\n              // console.log(\"err:\", err);\r\n              return import(`../locale/${language}/leads/LeadLogIn.js`); // TODO: Change LeadLogiIn.js -> _LeadDefault.js\r\n            })\r\n          )\r\n        : null;\r\n\r\n    return (\r\n      <div className={appClass} style={{ padding: \"0 0% 0 0%\" }}>\r\n        {/**\r\n         * Wrapper for the main window\r\n         */}\r\n        <div className={wrapperClass} style={{}}>\r\n          {/**\r\n           * Top margin of the main window (only for >= sm)\r\n           */}\r\n          <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n          {/**\r\n           * The main window\r\n           */}\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              background: \"Transparent\",\r\n              boxShadow: \"none\",\r\n              padding: \"0 15px\",\r\n            }}\r\n          >\r\n            {ExternalFile !== null && (\r\n              <ErrorBoundary>\r\n                <ExternalFile {...args} />\r\n              </ErrorBoundary>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n      * Return\r\n      ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Toasts.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect, lazy } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n    * User imports\r\n    ============================================================================ */\r\nimport Alert from \"../alert\";\r\nimport LanguageSelector from \"../language-selector\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n      * Default Properties\r\n      ============================================================================ */\r\n  let defaults = { namespace: \"Toasts\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const { signedIn, language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n      * Destructured vars\r\n      ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n  // const appClass = \"App\";\r\n\r\n  /**\r\n      * Functions\r\n      ============================================================================ */\r\n  const getJSX = () => {\r\n    let leadFile;\r\n    switch (window.location.pathname) {\r\n      case \"/\":\r\n      case \"/sign-in\":\r\n        leadFile = \"ToastHome.js\";\r\n        break;\r\n\r\n      case \"/sign-up\":\r\n        leadFile = \"ToastSignUp.js\";\r\n        break;\r\n\r\n      case \"/auth\":\r\n        leadFile = \"ToastAuth.js\";\r\n        break;\r\n\r\n      // case \"/transfer\":\r\n      //   leadFile = \"Transfer.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2s\":\r\n      //   leadFile = \"TransferU2S.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2u\":\r\n      //   leadFile = \"TransferU2U.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2b\":\r\n      //   leadFile = \"TransferU2B.js\";\r\n      //   break;\r\n\r\n      default:\r\n        leadFile = \"_ToastDefault.js\";\r\n        break;\r\n    }\r\n\r\n    let ExternalFile = null;\r\n\r\n    ExternalFile =\r\n      leadFile !== null\r\n        ? lazy(() =>\r\n            import(`../locale/${language}/toasts/${leadFile}`).catch((err) => {\r\n              // console.log(\"err:\", err);\r\n              return import(`../locale/${language}/toasts/_ToastDefault.js`);\r\n            })\r\n          )\r\n        : null;\r\n\r\n    return (\r\n      <div\r\n        className={appClass}\r\n        style={{\r\n          padding: \"0 0% 0 0%\",\r\n        }}\r\n      >\r\n        {/**\r\n         * Wrapper for the main window\r\n         */}\r\n        <div className={wrapperClass} style={{}}>\r\n          {/** overflowY: \"auto\", maxHeight: \"100vh\" */}\r\n          {/**\r\n           * Top margin of the main window (only for >= sm)\r\n           */}\r\n          <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n          {/**\r\n           * The main window\r\n           */}\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              background: \"Transparent\",\r\n              boxShadow: \"none\",\r\n              padding: \"0 15px\",\r\n            }}\r\n          >\r\n            {ExternalFile !== null && (\r\n              <ErrorBoundary>\r\n                <ExternalFile {...args} />\r\n              </ErrorBoundary>\r\n            )}\r\n\r\n            {/**\r\n             * Footer\r\n             */}\r\n            {false && (\r\n              <div className=\"text-center\">\r\n                <span style={{}}>\r\n                  <LanguageSelector {...args} />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n      * Return\r\n      ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n// import { useScrollPosition } from \"../../utils/useScrollPosition\";\r\nimport Routes from \"./Routes\";\r\nimport Leads from \"../leads\";\r\nimport Toasts from \"../toasts\";\r\n\r\n/**\r\n * Component: Main\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const {\r\n    session,\r\n    serverResponseReceived,\r\n    signedIn,\r\n    userData,\r\n    dailyAllowanceDispatched,\r\n    accountNumber,\r\n    cartID,\r\n    cartContent,\r\n    validateTokenEmail,\r\n    passwordResetTokenValidated,\r\n    validateTokenPasswordReset,\r\n    connected,\r\n    // isExternalRequest,\r\n    clearRefs,\r\n    loggingOut,\r\n    scrollPositionY,\r\n    // hideOnScroll,\r\n    cartProcessingStatus,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRequestTimedOut,\r\n    setUpdateInterval,\r\n    setDailyAllowanceDispatched,\r\n    setRequest,\r\n    // setIsExternalRequest,\r\n    setUserEditorFirstname,\r\n    setUserEditorLastname,\r\n    setUserEditorEmail,\r\n    setUserEditorPassword,\r\n    setRedirectTo,\r\n\r\n    // Currency registration\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n\r\n    // Business registration\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n\r\n    // Purpose registration\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationKeywords,\r\n\r\n    // Contact\r\n    setContactSubject,\r\n    setContactMessage,\r\n\r\n    // Date range\r\n    setDateRangeStart,\r\n    setDateRangeEnd,\r\n\r\n    // Search\r\n    setSearch,\r\n\r\n    //\r\n    setClearRefs,\r\n\r\n    // setHideOnScroll,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // processUserResponse,\r\n    getIP,\r\n    saveCartID,\r\n    getCartPurposes,\r\n    // updateLastSeenUser,\r\n    getAccountData,\r\n    sendRequest,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    showMessage,\r\n    getCart,\r\n    // setScrollPosition,\r\n  } = props.barrelFunctions;\r\n  const {\r\n    onRedirect,\r\n    onSessionStart,\r\n    // onSessionEnd,\r\n  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  // useScrollPosition(\r\n  //   ({ prevPos, currPos }) => {\r\n  //     const isShow = currPos.y > prevPos.y;\r\n  //     if (isShow !== hideOnScroll) setHideOnScroll(isShow);\r\n  //   },\r\n  //   [hideOnScroll]\r\n  // );\r\n\r\n  /** \r\n   * Effect hooks\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On mount / on unmount\r\n   */\r\n  useEffect(() => {\r\n    getIP();\r\n\r\n    // saveCartID();\r\n    // getCart();\r\n\r\n    return () => {\r\n      // on unmount\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * On session ID change\r\n   */\r\n  useEffect(() => {\r\n    if (session === null) return;\r\n\r\n    onSessionStart();\r\n\r\n    // eslint-disable-next-line\r\n  }, [session]);\r\n\r\n  /**\r\n   * On connected\r\n   */\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n  }, [connected]);\r\n\r\n  /**\r\n   * On request timeout\r\n   */\r\n  useTimeout(\r\n    () => {\r\n      setRequestTimedOut(true);\r\n      setRequest(null);\r\n      showMessage(\"REQUEST_EXPIRED\", \"info\");\r\n    },\r\n    serverResponseReceived === false ? 7000 : -1 // 7 sec till socket request timeout\r\n  );\r\n\r\n  /**\r\n   * Map user data to user editor vars\r\n   */\r\n  useEffect(() => {\r\n    if (userData === null) return;\r\n    setUserEditorFirstname(userData.firstname);\r\n    setUserEditorLastname(userData.lastname);\r\n    setUserEditorEmail(userData.email);\r\n    setUserEditorPassword(\"\");\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(userData)]);\r\n\r\n  /**\r\n   * On signed in status change\r\n   */\r\n  useEffect(() => {\r\n    if (!signedIn) return;\r\n\r\n    setUpdateInterval(-1);\r\n\r\n    // Dispatch daily allowance\r\n    if (accountNumber !== null && !dailyAllowanceDispatched) {\r\n      getAccountData();\r\n      sendRequest({\r\n        req: \"dispatch daily allowance\",\r\n        data: { uid: accountNumber },\r\n      });\r\n      setDailyAllowanceDispatched(true);\r\n    }\r\n\r\n    /**\r\n     * Handle external request\r\n     */\r\n    // let redirectTarget;\r\n    if (accountNumber !== null) {\r\n      if (cartID !== null) {\r\n        // redirectTarget = \"/auth\";\r\n        // setIsExternalRequest(false);\r\n        getCart();\r\n        onRedirect(\"/auth\");\r\n      }\r\n    } else {\r\n      if (window.location.pathname !== \"/sign-out\") {\r\n        if (\r\n          userData === null ||\r\n          userData.status !== 1 ||\r\n          typeof userData.status === \"undefined\"\r\n        ) {\r\n          showMessage(\"EMAIL_NOT_YET_VALIDATED\", \"info\");\r\n          onRedirect(\"/sign-out\");\r\n          return;\r\n        } else {\r\n          onRedirect(\"/account-registration\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [signedIn]);\r\n\r\n  /**\r\n   * On account number change\r\n   */\r\n  useEffect(() => {\r\n    // if (accountNumber === null) return;\r\n\r\n    getCart();\r\n\r\n    // eslint-disable-next-line\r\n  }, [accountNumber]);\r\n\r\n  /**\r\n   * On account number change\r\n   */\r\n  // useEffect(() => {\r\n  //   if (cartProcessingStatus === null) return;\r\n\r\n  //   console.log(\"cartProcessingStatus: \", cartProcessingStatus);\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [cartProcessingStatus]);\r\n\r\n  /**\r\n   * Clear refs\r\n   */\r\n  useEffect(() => {\r\n    if (clearRefs === false) return;\r\n\r\n    // Business registration\r\n    setBusinessRegistrationAddTitle(\"\");\r\n    setBusinessRegistrationAddDescription(\"\");\r\n\r\n    // Purpose registration\r\n    setPurposeRegistrationTitle(\"\");\r\n    setPurposeRegistrationDescription(\"\");\r\n    setPurposeRegistrationKeywords(\"\");\r\n\r\n    // Currency registration\r\n    setCurrencyCode(\"\");\r\n    setCurrencyName(\"\");\r\n    setCurrencyRegion(\"\");\r\n    setCurrencyNewRate(\"\");\r\n\r\n    // Contact\r\n    setContactSubject(\"\");\r\n    setContactMessage(\"\");\r\n\r\n    // Date range\r\n    setDateRangeStart(now.setDate(now.getDate() - 7));\r\n    setDateRangeEnd(\"today\");\r\n\r\n    // Search\r\n    setSearch(\"\");\r\n\r\n    setClearRefs(false);\r\n\r\n    // eslint-disable-next-line\r\n  }, [clearRefs]);\r\n\r\n  /**\r\n   * On external request\r\n   */\r\n  // useEffect(() => {\r\n  //   if (externalRequest === null || accountNumber === null) return;\r\n\r\n  //   const data = {\r\n  //     customer: accountNumber,\r\n  //     cart: externalRequest.cart,\r\n  //   };\r\n\r\n  //   sendRequest({ req: \"get cart\", data: data });\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [JSON.stringify(externalRequest)]);\r\n\r\n  /**\r\n   * On cart content change\r\n   */\r\n  useEffect(() => {\r\n    if (!signedIn || cartContent === null) return;\r\n\r\n    getCartPurposes();\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(cartContent)]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenEmail === null) return;\r\n\r\n    sendEmailValidationRequest(JSON.parse(validateTokenEmail));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenEmail]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (passwordResetTokenValidated === null) return;\r\n\r\n    onRedirect(\"/password\");\r\n\r\n    // eslint-disable-next-line\r\n  }, [passwordResetTokenValidated]);\r\n\r\n  /**\r\n   * On password reset validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenPasswordReset === null) return;\r\n\r\n    sendPasswordResetRequest(JSON.parse(validateTokenPasswordReset));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenPasswordReset]);\r\n\r\n  const getJSX = () => {\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          <Row>\r\n            {/** Left column */}\r\n            <Col xl={4} lg={6} className=\"d-none d-lg-block\" style={{}}>\r\n              <Leads {...barrels} />\r\n            </Col>\r\n\r\n            {/** Middle column */}\r\n            <Col\r\n              lg={6}\r\n              md={12}\r\n              style={{ padding: 0, backgroundColor: \"Transparent\" }}\r\n            >\r\n              <Routes {...barrels} />\r\n            </Col>\r\n\r\n            {/** Right column */}\r\n            <Col\r\n              className=\"d-none d-xl-block\"\r\n              style={{ paddingLeft: 0, paddingRight: 0 }}\r\n            >\r\n              <Toasts {...barrels} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Build } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"UnderConstruction\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <Build style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"We are constructing\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { PowerOff } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"NotConnected\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <PowerOff style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"Not connected\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport config from \"./config\";\r\nimport openSocket from \"socket.io-client\";\r\n// import { useTimeout } from \"./useTimeout\";\r\n\r\nlet socket = openSocket.connect(config.uri.ENDPOINT, {\r\n  secure: true,\r\n  reconnect: true,\r\n});\r\n\r\n/**\r\n * Send request to the server\r\n * @param {*} param0\r\n */\r\nexport const sendData = (data, debug = false) => {\r\n  if (debug) console.log(`request: ${data.req}`, data);\r\n\r\n  // No data - do not send\r\n  // if (req.length === 0) return false;\r\n\r\n  // useTimeout(() => {\r\n  //   console.log(\"Socket timeout\");\r\n  // }, 3000);\r\n\r\n  socket.emit(`onDataReceived`, data);\r\n  return true;\r\n};\r\n\r\n// Start a session\r\nexport const startSession = (data, session, debug = false) => {\r\n  // console.log(\"startSession\");\r\n  if (debug) console.log(`request: start session`, data, session);\r\n\r\n  socket.emit(`start session`, {\r\n    data: data,\r\n    session: session,\r\n    req: \"start session\",\r\n  });\r\n};\r\n\r\n// End the session\r\nexport const endSession = (data, session, debug = false) => {\r\n  if (debug) console.log(`request: end session`, data, session);\r\n  socket.emit(`end session`, {\r\n    // char: data,\r\n    data: data,\r\n    // uid: uid,\r\n    session: session,\r\n    req: \"end session\",\r\n  });\r\n};\r\n\r\n// Custom hook: useSocket\r\nexport const useSocket = (callback) => {\r\n  const [responseData, setResponseData] = useState(null);\r\n\r\n  socket.on(`onDataReceived`, (data) => {\r\n    setResponseData(data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (responseData === null) return;\r\n\r\n    callback(responseData);\r\n    // eslint-disable-next-line\r\n  }, [responseData]);\r\n};\r\n\r\nexport const useSystemSocket = (callback, instance) => {\r\n  useEffect(() => {\r\n    // socket.on(\"onDataReceived\", (data) => {\r\n    //   callback(data);\r\n    // });\r\n\r\n    /**\r\n     * System error listeners\r\n     */\r\n    socket.on(\"connect_error\", () => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_error\",\r\n          context: {},\r\n          error: { code: \"none\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"connect_timeout\", (timeout) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_timeout\",\r\n          context: {},\r\n          error: { code: \"connect_timeout\", timeout },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_error\",\r\n          context: {},\r\n          error: { code: error.type, error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_failed\", () => {\r\n      // This should never occur\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_failed\",\r\n          context: {},\r\n          error: { code: \"reconnect_failed\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"error\",\r\n          context: {},\r\n          error: { code: \"error\", error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    /**\r\n     * System status listeners\r\n     */\r\n    socket.on(\"ping\", () => {\r\n      // callback({ data: \"ping\" }, true);\r\n    });\r\n    socket.on(\"pong\", (latency) => {\r\n      // callback({ data: \"pong\", latency }, true);\r\n    });\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n      if (reason === \"io server disconnect\") {\r\n        // the disconnection was initiated by the server, you need to reconnect manually\r\n        socket.connect();\r\n      } else {\r\n        // else the socket will automatically try to reconnect\r\n      }\r\n      // Reasons:\r\n      // - \"transport close\": Server was stopped\r\n      callback({ req: \"disconnect\", status: \"success\", reason }, true);\r\n    });\r\n    socket.on(\"reconnect\", (attemptNumber) => {\r\n      // Successfully reconnected on attempt: attemptNumber\r\n      callback({ req: \"reconnect\", status: \"success\", attemptNumber }, true);\r\n    });\r\n    socket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnect attempt\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnecting\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnecting\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n  }, [instance]);\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"RESPONSE HANDLER: \", props, barrels);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    debug,\r\n    // requestTS,\r\n    // session,\r\n    // sessionTimeout,\r\n    // settings,\r\n    // loggingIn,\r\n    // isExternalRequest,\r\n    signedIn,\r\n    instance,\r\n    responseProps,\r\n    currencies,\r\n    transactions,\r\n    transferRequest,\r\n    shares,\r\n    // transactionsPerPage,\r\n    // sharesPerPage,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    // uid,\r\n    userBusinesses,\r\n    cartPurposes,\r\n    businessPurposes,\r\n    purposeShareholders,\r\n    activeBusinesPurpose,\r\n    lastInsertId,\r\n    cartContent,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setSession,\r\n    // setSessionTimeoutApplied,\r\n    setResponseProps,\r\n    setSettings,\r\n    setLoggingIn,\r\n    // setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setConnected,\r\n    // setLanguage,\r\n    setUserData,\r\n    setSignedIn,\r\n    // setIsExternalRequest,\r\n    setCartContent,\r\n    setCartProps,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    // setTransferSuccess,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setCartPurposes,\r\n    setBusinessPurposes,\r\n    setCountBusinessPurposes,\r\n    setPurposeShareholders,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidateTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setActivePurposeData,\r\n    setTanRequired,\r\n    // setRedirect,\r\n    setClearRefs,\r\n    setEmailChanged,\r\n    setCartProcessingStatus,\r\n    setActiveBusiness,\r\n  } = barrels.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    // processUserResponse,\r\n    // getBusinesses,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    showMessage,\r\n    changeLanguage,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    // endSession,\r\n    // updateLastSeenUser,\r\n    // showTanInput,\r\n    // updateTimestamp,\r\n    // hideMessage,\r\n  } = barrels.barrelFunctions;\r\n  const {\r\n    // onTransferSuccess,\r\n    onRedirect,\r\n    // onSessionTimeout,\r\n    onSessionEnd,\r\n    // onLogOut,\r\n  } = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug) console.log(`response: ${req} (${props.status})`, props, barrels);\r\n\r\n  /**\r\n   * Save response properties\r\n   * @param {string} req\r\n   * @param {string} name\r\n   * @param {string} status\r\n   */\r\n  const saveResponseProps = ({ req, name, status }) => {\r\n    const res = typeof name !== \"undefined\" ? `${req} / ${name}` : req;\r\n    if (responseProps === null) {\r\n      setResponseProps(JSON.stringify([{ res, status }]));\r\n    } else {\r\n      const tempRP = deleteObjectArrayElement(responseProps, \"res\", res);\r\n      setResponseProps(JSON.stringify([...tempRP, { res, status }]));\r\n    }\r\n  };\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (instance === props.reqData.instance &&\r\n        res === \"*\" &&\r\n        status === props.status &&\r\n        name === props.name) ||\r\n      (instance === props.reqData.instance &&\r\n        res === props.req &&\r\n        status === props.status) ||\r\n      (instance === props.reqData.instance && res === \"unknown\")\r\n    ) {\r\n      saveResponseProps({ req, name: props.name, status: props.status });\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n    if (typeof props.token !== \"undefined\") {\r\n      console.log(\"Renewing session...\");\r\n\r\n      onSessionEnd();\r\n      setSession(props.token);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Start session (success)\r\n   */\r\n  onResponse([\"start session\", \"success\"], () => {\r\n    if (signedIn) {\r\n      sendRequest({ req: \"validate session\", data: {} });\r\n    }\r\n    setConnected(true);\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * End session (success)\r\n   */\r\n  onResponse([\"end session\", \"success\"], () => {\r\n    // console.log(\"ON END SESSION\");\r\n\r\n    setConnected(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM users\") {\r\n      setUserSequence(props.results.sequence);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"success\"], () => {\r\n    // register user\r\n    sendRequest({ req: \"register account\", data: props.reqData });\r\n  });\r\n\r\n  onResponse([\"get tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n    setTanRequired(true);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get cart\", \"continue\"], () => {\r\n    if (props.name === \"SELECT carts\") {\r\n      setCartContent(props.results.content);\r\n      delete props.results.content;\r\n      setCartProps(JSON.stringify(props.results));\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"pending\"], () => {\r\n    // setTanRequired(false);\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"finished\"], () => {\r\n    if (props.name === \"UPDATE tans\") {\r\n      if (props.queryCnt > 0) {\r\n        // setTanRequired(true);\r\n        return false;\r\n      } else {\r\n        // setTanRequired(false);\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n\r\n    sendRequest({ req: transferRequest.transferType, data: transferRequest });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (pending)\r\n   */\r\n  onResponse([\"register user\", \"pending\"], () => {\r\n    // Might show some user feedback\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register user\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO users\") {\r\n      if (props.results.insertId > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    } else if (props.name === \"INSERT INTO validation_tokens\") {\r\n      // const { token, email } = props.tags;\r\n      // setValidateTokenEmail(\r\n      //   JSON.stringify({\r\n      //     token,\r\n      //     email,\r\n      //   })\r\n      // );\r\n      setValidationTokenEmail({\r\n        token: props.tags.token,\r\n        email: props.tags.email,\r\n      });\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (success)\r\n   */\r\n  onResponse([\"register user\", \"success\"], () => {\r\n    // console.log(\"REGISTER USER PROPS:\", props);\r\n    const noEmailValidation = false;\r\n\r\n    if (noEmailValidation) {\r\n      setSignedIn(true);\r\n      setSession(props.email); // TODO: Might restore\r\n      onRedirect(\"/account-registration\");\r\n      sendRequest({ req: \"get user\", data: { email: props.email } }); // to not require a log in\r\n      return false;\r\n    } else {\r\n      onRedirect(\"/validate-email\");\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"continue\"], () => {\r\n    if (props.name === \"SELECT validation_tokens\") {\r\n      setValidationTokenEmailResent(props.results.resent);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"continue\"], () => {\r\n    if (props.name === \"UPDATE validation tokens\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        // onRedirect(\"/sign-in\");\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (props.name === \"UPDATE users\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        onRedirect(\"/sign-in\");\r\n        return true;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"success\"], () => {\r\n    showMessage(\"EMAIL_VALIDATION_SUCCESS\", \"info\", false);\r\n    setValidateTokenEmail(null); // email validation token not needed any more + prevent the unnecessary resend\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"validate password reset token\", \"continue\"], () => {\r\n  //   if (props.name === \"UPDATE validation tokens\") {\r\n  //     if (props.results.affectedRows > 0) {\r\n  //       // onRedirect(\"/password\");\r\n  //       setPasswordResetTokenValidated(true);\r\n  //       return true;\r\n  //     } else {\r\n  //       // No row was inserted - an error was returned\r\n  //       return true;\r\n  //     }\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"validate password reset token\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(true);\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get URI settings (continue)\r\n   */\r\n  onResponse([\"get uri settings\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM uri_settings\") {\r\n      const results = JSON.parse(props.results.settings);\r\n\r\n      // console.log(\"results.settings\", results);\r\n\r\n      setSettings(JSON.stringify(results));\r\n\r\n      // Force single currency\r\n      if (\r\n        typeof results[\"currency\"] !== \"undefined\" &&\r\n        results[\"currency\"] !== null\r\n      ) {\r\n        const abbr = results[\"currency\"];\r\n        // setCurrencyAbbr(abbr);\r\n        sendRequest({\r\n          req: \"register user currency\",\r\n          data: { email: userData.email, currency_id: abbr },\r\n        });\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user currency (success)\r\n   */\r\n  onResponse([\"register user currency\", \"success\"], () => {\r\n    setCurrencyAbbr(props.reqData.currency_id);\r\n    // return false;\r\n  });\r\n\r\n  /**\r\n   * Sign in user (continue)\r\n   */\r\n  onResponse([\"sign in user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      /**\r\n       * Validated user\r\n       */\r\n      if (props.results.status === 1) {\r\n        // email validated\r\n        setUserData(JSON.stringify(props.results));\r\n        setAccountNumber(props.results.uid);\r\n        // setSession(props.results.email); // TODO: Might restore\r\n        setCurrencyAbbr(props.results.currency_abbr);\r\n        setCurrencyRate(\r\n          isNaN(props.results.currency_rate) ? 1 : props.results.currency_rate\r\n        );\r\n\r\n        changeLanguage(props.results.language);\r\n\r\n        return false;\r\n\r\n        /**\r\n         * Not yet validated user\r\n         */\r\n      } else if (props.results.status === 0) {\r\n        // setAccountNumber(props.results.uid);\r\n        setUserData(JSON.stringify(props.results));\r\n        changeLanguage(props.results.language);\r\n        onRedirect(\"/validate-email\");\r\n        return true;\r\n\r\n        /**\r\n         * Suspended user\r\n         */\r\n      } else if (props.results.status === 2) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_SUSPENDED\", \"error\");\r\n        return true;\r\n\r\n        /**\r\n         * Deleted user\r\n         */\r\n      } else if (props.results.status === 3) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_DELETED\", \"error\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Sign in user (finished)\r\n   */\r\n  onResponse([\"sign in user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt > 0) {\r\n        return false;\r\n      } else {\r\n        showMessage(\"INVALID_SIGN_IN\", \"error\");\r\n        // setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"sign in user\", \"success\"], () => {\r\n    setSignedIn(true);\r\n    setLoggingIn(false);\r\n    onSessionEnd();\r\n    setSession(props.token);\r\n    setRedirectTo(\"/balance\");\r\n\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Update user (continue)\r\n  //  */\r\n  // onResponse([\"update user\", \"continue\"], () => {\r\n  //   if (props.name === \"INSERT INTO validation_tokens\") {\r\n  //     onRedirect(\"/validate-email\");\r\n  //     return false;\r\n  //   }\r\n  //   return true;\r\n  // });\r\n\r\n  /**\r\n   * Update user (success)\r\n   */\r\n  onResponse([\"update user\", \"success\"], () => {\r\n    if (\r\n      typeof props.reqData.newEmail !== \"undefined\" &&\r\n      props.reqData.newEmail !== null\r\n    ) {\r\n      setEmailChanged(true);\r\n      onRedirect(\"/sign-out\");\r\n      // onRedirect(\"/validate-email\");\r\n      return true;\r\n    } else {\r\n      sendRequest({ req: \"get user\", data: { email: userData.email } });\r\n      return false;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Get user (continue)\r\n   */\r\n  onResponse([\"get user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUserData(JSON.stringify(props.results));\r\n      setUID(props.results.uid);\r\n      setAccountNumber(props.results.uid);\r\n      if (accountNumber === null && props.results.uid !== null) {\r\n        setRedirectTo(\"/summary\");\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user (finished)\r\n   */\r\n  onResponse([\"get user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 1) {\r\n        // exactly one user found - all is good\r\n        return false;\r\n      } else if (props.queryCnt === 0) {\r\n        // Something wrong with (accessing) the user data\r\n        // Probable causes:\r\n        // - user was deleted from the DB\r\n        // - user status was set to >= 2\r\n        // - multiple users with the same email address, most improbable (db constraint)\r\n        // - user changed the email address or password\r\n        setRedirectTo(\"/sign-out\");\r\n        // showMessage(\"INVALID_DATA\", \"error\");\r\n        return true;\r\n      }\r\n      return true;\r\n    }\r\n    // if (props.rowNum === 1) {\r\n    //   return true;\r\n    // } else {\r\n    //   // Something wrong with (accessing) the user data\r\n    //   // Probable causes:\r\n    //   // - user was deleted from the DB\r\n    //   // - user status was set to >= 2\r\n    //   // - multiple users with the same email address, most improbable (db constraint)\r\n    //   // - user changed the email address or password\r\n    //   // onLogOut();\r\n    //   setRedirectTo(\"/sign-out\");\r\n    //   // showMessage(\"INVALID_DATA\", \"error\");\r\n    //   return true;\r\n    // }\r\n  });\r\n\r\n  onResponse([\"get user\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (continue)\r\n   */\r\n  onResponse([\"get user businesses\", \"continue\"], () => {\r\n    if (props.name === \"SELECT businesses\") {\r\n      const business = props.results;\r\n      const { business_id } = business;\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([business]));\r\n        getBusinessPurposes(business_id, 0, 1);\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, business]));\r\n      }\r\n    } else if (props.name === \"COUNT businesses\") {\r\n      setCountBusinesses(props.results.count_businesses);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (finished)\r\n   */\r\n  onResponse([\"get user businesses\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    setUserBusinessesLoaded(true);\r\n    setRedirectTo(\"/my-business\");\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get user businesses\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (continue)\r\n   */\r\n  onResponse([\"get cart purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (cartPurposes === null) {\r\n        setCartPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setCartPurposes(JSON.stringify([...cartPurposes, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      // setCartPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (success)\r\n   */\r\n  onResponse([\"get cart purposes\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (continue)\r\n   */\r\n  onResponse([\"get business purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (businessPurposes === null) {\r\n        setBusinessPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setBusinessPurposes(\r\n          JSON.stringify([...businessPurposes, props.results])\r\n        );\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      setCountBusinessPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (finished)\r\n   */\r\n  onResponse([\"get business purposes\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (continue)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"continue\"], () => {\r\n    if (props.name === \"SELECT shares\") {\r\n      if (purposeShareholders === null) {\r\n        setPurposeShareholders(JSON.stringify([props.results]));\r\n      } else {\r\n        setPurposeShareholders(\r\n          JSON.stringify([...purposeShareholders, props.results])\r\n        );\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (finished)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user business by id (continue)\r\n   */\r\n  // onResponse([\"get business by id\", \"continue\"], () => {\r\n  //   if (userBusinesses === null) {\r\n  //     setUserBusinesses(JSON.stringify([props.results]));\r\n  //   } else {\r\n  //     setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"get business by id\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.name === \"SELECT businesses\") {\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([props.results]));\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business by id (finished)\r\n   */\r\n  onResponse([\"get business by id\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.queryCnt > 0) {\r\n      // getting business was successful - query returned results\r\n      return false;\r\n    } else {\r\n      console.log(\"Error getting business by id\");\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get business by id\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (continue)\r\n   */\r\n  onResponse([\"get purpose by id\", \"continue\"], () => {\r\n    /**\r\n     * Replace the purpose if it is already there\r\n     */\r\n    const index = getObjectArrayElementIndex(\r\n      businessPurposes,\r\n      \"purpose_id\",\r\n      props.results.purpose_id\r\n    );\r\n    if (index > -1) {\r\n      businessPurposes.splice(index, 1);\r\n      let temp = [...businessPurposes, props.results];\r\n      temp = sortObjectArray(temp, \"title\");\r\n      setBusinessPurposes(JSON.stringify(temp));\r\n      setActivePurposeData(JSON.stringify(props.results));\r\n\r\n      /**\r\n       * ... otherwise add the purpose\r\n       */\r\n    } else {\r\n      if (props.name === \"SELECT purposes\") {\r\n        if (businessPurposes === null) {\r\n          setBusinessPurposes(JSON.stringify([props.results]));\r\n        } else {\r\n          setBusinessPurposes(\r\n            JSON.stringify([...businessPurposes, props.results])\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (finished)\r\n   */\r\n  onResponse([\"get purpose by id\", \"finished\"], () => {\r\n    if (props.queryCnt < 1) {\r\n      // Something went wrong\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (success)\r\n   */\r\n  onResponse([\"get purpose by id\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (continue)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"continue\"], () => {\r\n    if (purposeShareholders === null) {\r\n      setPurposeShareholders(JSON.stringify([props.results]));\r\n    } else {\r\n      setPurposeShareholders(\r\n        JSON.stringify([...purposeShareholders, props.results])\r\n      );\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (finished)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Upload file (ready)\r\n   */\r\n  onResponse([\"upload file\", \"continue\"], () => {\r\n    // console.log(\"UPLOAD FILE =========== \");\r\n\r\n    // if (props.name === \"SELECT 1\") {\r\n    // setAccountPhotoPath(props + \"?r=\" + Math.random());\r\n    setAccountPhotoPath(Date.now()); // ok\r\n    return false;\r\n    // }\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"finished\"], () => {\r\n    if (props.name === \"SELECT 1\") {\r\n      if (props.queryCnt === 0) {\r\n        // something went wrong\r\n        // setAccountPhotoPath(\"ok\");\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"continue\"], () => {\r\n    if (props.results.affectedRows < 1) {\r\n      // error registering account\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"INVALID_DATA\", \"error\");\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"success\"], () => {\r\n    // getAccountData();\r\n    sendRequest({ req: \"get user\", data: { email: props.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (continue)\r\n   */\r\n  onResponse([\"get account data\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUID(props.results.uid);\r\n      setUserData(JSON.stringify(props.results));\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (finished)\r\n   */\r\n  onResponse([\"get account data\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 0) {\r\n        // Account not reachable\r\n        // - user session timed out\r\n        showMessage(\"SESSION_TIMED_OUT\", \"info\", false);\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get account data\", \"success\"], () => {\r\n    if (userData === null) return true;\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2S\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (continue)\r\n   */\r\n  onResponse([\"transfer U2S\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (success)\r\n   */\r\n  onResponse([\"transfer U2S\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2U\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (continue)\r\n   */\r\n  onResponse([\"transfer U2U\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (success)\r\n   */\r\n  onResponse([\"transfer U2U\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2B\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (continue)\r\n   */\r\n  onResponse([\"transfer U2B\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (success)\r\n   */\r\n  onResponse([\"transfer U2B\", \"success\"], () => {\r\n    setTanRequired(false);\r\n\r\n    // If not an external request\r\n    if (cartContent === null) {\r\n      showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n      getTransactionById(lastInsertId);\r\n\r\n      return false;\r\n    } else {\r\n      setCartProcessingStatus(true);\r\n      return true;\r\n    }\r\n\r\n    // If an external request\r\n  });\r\n\r\n  /**\r\n   * Register business\r\n   ============================================================================================*/\r\n  onResponse([\"register business\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    if (props.name === \"INSERT INTO businesses\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register business\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    // <ModalConfirm\r\n    //   title=\"Add Shareholders\"\r\n    //   message=\"Do you want to add yourself as a shareholder?\"\r\n    // />;\r\n\r\n    setClearRefs(true);\r\n\r\n    setActiveBusiness(null);\r\n\r\n    showMessage(\"REGISTER_BUSINESS_SUCCESS\", \"info\", false);\r\n\r\n    sendRequest({\r\n      req: \"get business by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    // getBusinesses();\r\n    return false;\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"register currency\", \"continue\"], () => {\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    if (props.results.insertId > 0) {\r\n      setLastInsertId(props.results.insertId);\r\n\r\n      return false;\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register currency\", \"success\"], () => {\r\n    showMessage(\"REGISTER_CURRENCY_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get currency by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (continue)\r\n   */\r\n  onResponse([\"get currencies\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT currencies\") {\r\n      setCountCurrencies(props.results.count_currencies);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (finished)\r\n   */\r\n  onResponse([\"get currencies\", \"finished\"], () => {\r\n    // setRedirectTo(\"/currency\");\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Find currencies (continue)\r\n  //  */\r\n  // onResponse([\"find currencies\", \"continue\"], () => {\r\n  //   // console.log(\"PROPS NAME:\", props.name);\r\n\r\n  //   if (props.name === \"SELECT currencies\") {\r\n  //     if (currencies === null) {\r\n  //       setCurrencies(JSON.stringify([props.results]));\r\n  //     } else {\r\n  //       setCurrencies(JSON.stringify([...currencies, props.results]));\r\n  //     }\r\n  //   } else if (props.name === \"COUNT currencies\") {\r\n  //     setCountCurrencies(props.results.count_currencies);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get currency by id (continue)\r\n   */\r\n  onResponse([\"get currency by id\", \"continue\"], () => {\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get currency by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transactions (continue)\r\n   */\r\n  onResponse([\"get transactions\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT transactions\") {\r\n      if (transactions === null) {\r\n        setTransactions(JSON.stringify([props.results]));\r\n      } else {\r\n        setTransactions(JSON.stringify([...transactions, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT transactions\") {\r\n      setCountTransactions(props.results.count_transaction_positions);\r\n      // } else if (props.name === \"VALIDATE SESSION\") {\r\n      //   if (typeof props.token !== \"undefined\") {\r\n      //     console.log(\"RESET SESSION\");\r\n      //     onSessionEnd();\r\n      //     // setSession(props.newToken);\r\n      //     setSession(props.token);\r\n      //   }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get transactions (finished)\r\n   */\r\n  onResponse([\"get transactions\", \"finished\"], () => {\r\n    setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Find transactions (continue)\r\n  //  */\r\n  // onResponse([\"find transactions\", \"continue\"], () => {\r\n  //   // console.log(\"PROPS NAME:\", props.name);\r\n\r\n  //   if (props.name === \"SELECT transactions\") {\r\n  //     if (transactions === null) {\r\n  //       setTransactions(JSON.stringify([props.results]));\r\n  //     } else {\r\n  //       setTransactions(JSON.stringify([...transactions, props.results]));\r\n  //     }\r\n  //   } else if (props.name === \"COUNT transactions\") {\r\n  //     setCountTransactions(props.results.count_transaction_positions);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get shares (continue)\r\n   */\r\n  onResponse([\"get shares\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT shares\") {\r\n      if (shares === null) {\r\n        setShares(JSON.stringify([props.results]));\r\n      } else {\r\n        setShares(JSON.stringify([...shares, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT shares\") {\r\n      setCountShares(props.results.count_shares);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shares (finished)\r\n   */\r\n  onResponse([\"get shares\", \"finished\"], () => {\r\n    // setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transaction by id (continue)\r\n   */\r\n  onResponse([\"get transaction by id\", \"continue\"], () => {\r\n    if (transactions === null) {\r\n      setTransactions(JSON.stringify([props.results]));\r\n    } else {\r\n      setTransactions(JSON.stringify([...transactions, props.results]));\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get transaction by id\", \"finished\"], () => {\r\n    getAccountData();\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"send message\", \"success\"], () => {\r\n    setClearRefs(true);\r\n    showMessage(\"SEND_MESSAGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"continue\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get purpose by id\",\r\n    //   data: { id: props.results.insertId },\r\n    // });\r\n    if (props.name === \"INSERT INTO purposes\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"success\"], () => {\r\n    showMessage(\"REGISTER_PURPOSE_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: lastInsertId, language: language },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"update purpose property\", \"success\"], () => {\r\n    showMessage(\"UPDATE_PURPOSE_SUCCESS\", \"info\", false);\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: props.reqData.id, language: language },\r\n    });\r\n    // getBusinessPurposes(props.reqData.business_id, 0, 1);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"continue\"], () => {\r\n    if (props.results.insertId > 0) {\r\n      // showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\");\r\n\r\n      // return sendRequest({\r\n      //   req: \"get shareholder by id\",\r\n      //   data: { id: props.results.insertId },\r\n      // });\r\n      setLastInsertId(props.results.insertId);\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"success\"], () => {\r\n    showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\", false);\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"change share\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    // getPurposeShareholders(activeBusinesPurpose);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"remove shareholder\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"reset password\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"change password\", \"success\"], () => {\r\n    // TOTO: If NO_ROWS_CHANGE - probably the currently saved password was submitted\r\n    setPasswordResetTokenValidated(null);\r\n    setPasswordResetTokenEmail(null);\r\n    onRedirect(\"/sign-in\");\r\n    showMessage(\"PASSWORD_CHANGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"unknown\"], () => {\r\n  //   if (\r\n  //     status === \"pending\" ||\r\n  //     status === \"continue\" ||\r\n  //     status === \"finished\" ||\r\n  //     status === \"success\"\r\n  //   ) {\r\n  //     return false;\r\n  //   } else {\r\n  //     showMessage(`${req}: ${status}`, \"info\");\r\n  //     return true;\r\n  //   }\r\n  // });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Loading.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Loading\" };\r\n\r\n  /**\r\n        * Properties\r\n        ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  //   const barrels = DispatcherSkeleton();\r\n\r\n  //\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          {/** Left column */}\r\n          <Col xl={4} lg={6} className=\"d-none d-lg-block\" style={{}}>\r\n            {/** Left column */}\r\n          </Col>\r\n\r\n          {/** Middle column */}\r\n          <Col\r\n            lg={6}\r\n            md={12}\r\n            style={{\r\n              padding: 0,\r\n              backgroundColor: \"Transparent\",\r\n              textAlign: \"center\",\r\n              paddingTop: \"3rem\",\r\n            }}\r\n          >\r\n            <div className=\"lds-ellipsis\">\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </Col>\r\n\r\n          {/** Right column */}\r\n          <Col\r\n            className=\"d-none d-xl-block\"\r\n            style={{ paddingLeft: 0, paddingRight: 0 }}\r\n          >\r\n            {/** Right column */}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport {\r\n  // BrowserRouter as Router,\r\n  // Switch,\r\n  // Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport i18n from \"./translations/i18n\";\r\nimport config from \"./utils/config\";\r\nimport { useStickyState } from \"./utils/state\";\r\nimport Main from \"./components/main\";\r\nimport UnderConstruction from \"./components/underConstruction\";\r\nimport NotConnected from \"./components/notConnected\";\r\n\r\nimport {\r\n  useSocket,\r\n  useSystemSocket,\r\n  sendData,\r\n  startSession,\r\n  endSession,\r\n} from \"./utils/sockets\";\r\n// import { useInterval } from \"./utils/useInterval\";\r\n// import { useTimeout } from \"./utils/useTimeout\";\r\nimport requestHandler from \"./utils/requestHandler\";\r\nimport userErrorHandler from \"./utils/userErrorHandler\";\r\nimport userResponseHandler from \"./utils/userResponseHandler\";\r\nimport systemErrorHandler from \"./utils/systemErrorHandler\";\r\nimport systemResponseHandler from \"./utils/systemResponseHandler\";\r\nimport Loading from \"./components/loading\";\r\n\r\n/**\r\n * Component: Dispatcher\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Dispatcher\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const isLocalhost =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\";\r\n\r\n  /** \r\n   * Hooks\r\n   ============================================================================ */\r\n  const [debug, setDebug] = useState(\r\n    isLocalhost || config.uri.SITEMODE === \"STAGING\"\r\n  );\r\n  const [loggingOut, setLoggingOut] = useState(false);\r\n  const [loggingIn, setLoggingIn] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(true);\r\n  const [request, setRequest] = useStickyState(null, \"request\");\r\n  const [serverResponseReceived, setServerResponseReceived] = useStickyState(\r\n    null,\r\n    \"serverResponseReceived\"\r\n  );\r\n  const [requestTimedOut, setRequestTimedOut] = useStickyState(\r\n    false,\r\n    \"requestTimedOut\"\r\n  );\r\n  const [instance, setInstance] = useState(Date.now());\r\n  const [session, setSession] = useStickyState(uuidv4(), \"session\");\r\n  const [settings, setSettings] = useStickyState(null, \"settings\");\r\n  const [responseProps, setResponseProps] = useStickyState(\r\n    null,\r\n    \"responseProps\"\r\n  );\r\n  const [sessionTimeout, setSessionTimeout] = useStickyState(\r\n    (!debug ? 5 : 120) * 60, // 30 | 5 * 60\r\n    \"sessionTimeout\"\r\n  );\r\n  const [connected, setConnected] = useStickyState(false, \"connected\");\r\n  const [reconnecting, setReconnecting] = useStickyState(false, \"reconnecting\");\r\n  const [ip, setIP] = useStickyState(\"\", \"ip\");\r\n  const [signedIn, setSignedIn] = useStickyState(false, \"signedIn\");\r\n  const [\r\n    dailyAllowanceDispatched,\r\n    setDailyAllowanceDispatched,\r\n  ] = useStickyState(false, \"dailyAllowanceDispatched\");\r\n  // const [isExternalRequest, setIsExternalRequest] = useStickyState(\r\n  //   false,\r\n  //   \"isExternalRequest\"\r\n  // );\r\n  const [cartID, setCartID] = useStickyState(null, \"cartID\");\r\n  const [cartContent, setCartContent] = useStickyState(null, \"cartContent\");\r\n  const [cartProps, setCartProps] = useStickyState(null, \"cartProps\");\r\n  const [cartProcessingStatus, setCartProcessingStatus] = useStickyState(\r\n    null,\r\n    \"cartProcessingStatus\"\r\n  );\r\n  const [updateInterval, setUpdateInterval] = useStickyState(\r\n    -1,\r\n    \"updateInterval\"\r\n  );\r\n  const [currencyAbbr, setCurrencyAbbr] = useStickyState(\"Z\", \"currencyAbbr\");\r\n  const [currencyRate, setCurrencyRate] = useStickyState(1.0, \"currencyRate\");\r\n  const [currencies, setCurrencies] = useStickyState(null, \"currencies\");\r\n  const [transactions, setTransactions] = useStickyState(null, \"transactions\");\r\n  const [shares, setShares] = useStickyState(null, \"shares\");\r\n  const [accordionView, setAccordionView] = useStickyState(\r\n    \"balance\",\r\n    \"accordionView\"\r\n  );\r\n  const [accordionViewCurrency, setAccordionViewCurrency] = useStickyState(\r\n    null,\r\n    \"accordionViewCurrency\"\r\n  );\r\n  const [countCurrencies, setCountCurrencies] = useStickyState(\r\n    null,\r\n    \"countCurrencies\"\r\n  );\r\n  const [countTransactions, setCountTransactions] = useStickyState(\r\n    null,\r\n    \"countTransactions\"\r\n  );\r\n  const [countShares, setCountShares] = useStickyState(null, \"countShares\");\r\n  const [activePageCurrencies, setActivePageCurrencies] = useStickyState(\r\n    1,\r\n    \"activePageCurrencies\"\r\n  );\r\n  const [activePageTransactions, setActivePageTransactions] = useStickyState(\r\n    1,\r\n    \"activePageTransactions\"\r\n  );\r\n  const [activePageShares, setActivePageShares] = useStickyState(\r\n    1,\r\n    \"activePageShares\"\r\n  );\r\n  const [currenciesPerPage, setCurrenciesPerPage] = useStickyState(\r\n    5,\r\n    \"currenciesPerPage\"\r\n  );\r\n  const [transactionsPerPage, setTransactionsPerPage] = useStickyState(\r\n    5,\r\n    \"transactionsPerPage\"\r\n  );\r\n  const [sharesPerPage, setSharesPerPage] = useStickyState(5, \"sharesPerPage\");\r\n  const [userData, setUserData] = useStickyState(null, \"userData\");\r\n  const [uid, setUID] = useStickyState(null, \"uid\");\r\n  const [accountNumber, setAccountNumber] = useStickyState(\r\n    null,\r\n    \"accountNumber\"\r\n  );\r\n  const [userSequence, setUserSequence] = useStickyState(null, \"userSequence\");\r\n  const [accountType, setAccountType] = useStickyState(null, \"accountType\");\r\n  const [userBusinesses, setUserBusinesses] = useStickyState(\r\n    null,\r\n    \"userBusinesses\"\r\n  );\r\n  const [countBusinesses, setCountBusinesses] = useStickyState(\r\n    null,\r\n    \"countBusinesses\"\r\n  );\r\n  const [businessesPerPage, setBusinessesPerPage] = useStickyState(\r\n    1,\r\n    \"businessesPerPage\"\r\n  );\r\n  const [activePageBusinesses, setActivePageBusinesses] = useStickyState(\r\n    1,\r\n    \"activePageBusinesses\"\r\n  );\r\n  const [userBusinessesLoaded, setUserBusinessesLoaded] = useStickyState(\r\n    false,\r\n    \"userBusinessesLoaded\"\r\n  );\r\n  const [activeBusiness, setActiveBusiness] = useStickyState(\r\n    null,\r\n    \"activeBusiness\"\r\n  );\r\n  const [activeBusinessID, setActiveBusinessID] = useStickyState(\r\n    null,\r\n    \"activeBusinessID\"\r\n  );\r\n\r\n  const [businessPurposes, setBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"businessPurposes\"\r\n  );\r\n\r\n  const [cartPurposes, setCartPurposes] = useStickyState(null, \"cartPurposes\");\r\n\r\n  const [countBusinessPurposes, setCountBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"countBusinessPurposes\"\r\n  );\r\n  const [businessPurposesPerPage, setBusinessPurposesPerPage] = useStickyState(\r\n    5,\r\n    \"businessPurposesPerPage\"\r\n  );\r\n  const [\r\n    activePageBusinessPurposes,\r\n    setActivePageBusinessPurposes,\r\n  ] = useStickyState(1, \"activePageBusinessPurposes\");\r\n\r\n  const [activeBusinesPurpose, setActiveBusinesPurpose] = useStickyState(\r\n    null,\r\n    \"activeBusinesPurpose\"\r\n  );\r\n\r\n  const [activePurposeData, setActivePurposeData] = useStickyState(\r\n    null,\r\n    \"activePurposeData\"\r\n  );\r\n\r\n  const [activePurposeProperty, setActivePurposeProperty] = useStickyState(\r\n    null,\r\n    \"activePurposeProperty\"\r\n  );\r\n\r\n  const [purposeShareholders, setPurposeShareholders] = useStickyState(\r\n    null,\r\n    \"purposeShareholders\"\r\n  );\r\n\r\n  const [clearRefs, setClearRefs] = useStickyState(false, \"clearRefs\");\r\n\r\n  /**\r\n   * Log in\r\n   */\r\n  const [logInEmail, setLogInEmail] = useStickyState(\"\", \"logInEmail\");\r\n  const [logInPassword, setLogInPassword] = useStickyState(\"\", \"logInPassword\");\r\n\r\n  /**\r\n   * Sign Up\r\n   */\r\n  const [signUpFirstName, setSignUpFirstName] = useStickyState(\r\n    \"\",\r\n    \"signUpFirstName\"\r\n  );\r\n  const [signUpLastName, setSignUpLastName] = useStickyState(\r\n    \"\",\r\n    \"signUpLastName\"\r\n  );\r\n  const [signUpEmail, setSignUpEmail] = useStickyState(\"\", \"signUpEmail\");\r\n  const [signUpPassword, setSignUpPassword] = useStickyState(\r\n    \"\",\r\n    \"signUpPassword\"\r\n  );\r\n\r\n  /**\r\n   * Transactions\r\n   */\r\n  const [dateRangeStart, setDateRangeStart] = useStickyState(\r\n    now.setDate(now.getDate() - 7), // new Date().fp_incr(-7),\r\n    \"dateRangeStart\"\r\n  );\r\n  const [dateRangeEnd, setDateRangeEnd] = useStickyState(\r\n    \"today\",\r\n    \"dateRangeEnd\"\r\n  );\r\n\r\n  /**\r\n   * Business registration\r\n   */\r\n  const [\r\n    businessRegistrationAddTitle,\r\n    setBusinessRegistrationAddTitle,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddTitle\");\r\n  const [\r\n    businessRegistrationAddDescription,\r\n    setBusinessRegistrationAddDescription,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddDescription\");\r\n\r\n  /**\r\n   * Purpose registration\r\n   */\r\n  const [\r\n    purposeRegistrationTitle,\r\n    setPurposeRegistrationTitle,\r\n  ] = useStickyState(\"\", \"purposeRegistrationTitle\");\r\n  const [\r\n    purposeRegistrationDescription,\r\n    setPurposeRegistrationDescription,\r\n  ] = useStickyState(\"\", \"purposeRegistrationDescription\");\r\n  const [\r\n    purposeRegistrationKeywords,\r\n    setPurposeRegistrationKeywords,\r\n  ] = useStickyState(\"\", \"purposeRegistrationKeywords\");\r\n\r\n  /**\r\n   * User editor\r\n   */\r\n  const [userEditorEditFirstname, setUserEditorEditFirstname] = useStickyState(\r\n    false,\r\n    \"userEditorEditFirstname\"\r\n  );\r\n  const [userEditorFirstname, setUserEditorFirstname] = useStickyState(\r\n    \"\",\r\n    \"userEditorFirstname\"\r\n  );\r\n  const [userEditorEditLastname, setUserEditorEditLastname] = useStickyState(\r\n    false,\r\n    \"userEditorEditLastname\"\r\n  );\r\n  const [userEditorLastname, setUserEditorLastname] = useStickyState(\r\n    \"\",\r\n    \"userEditorLastname\"\r\n  );\r\n  const [userEditorEditEmail, setUserEditorEditEmail] = useStickyState(\r\n    false,\r\n    \"userEditorEditEmail\"\r\n  );\r\n  const [userEditorEmail, setUserEditorEmail] = useStickyState(\r\n    \"\",\r\n    \"userEditorEmail\"\r\n  );\r\n  const [userEditorEditPassword, setUserEditorEditPassword] = useStickyState(\r\n    false,\r\n    \"userEditorEditPassword\"\r\n  );\r\n  const [userEditorPassword, setUserEditorPassword] = useStickyState(\r\n    \"\",\r\n    \"userEditorPassword\"\r\n  );\r\n  const [\r\n    userEditorPasswordVisible,\r\n    setUserEditorPasswordVisible,\r\n  ] = useStickyState(false, \"userEditorPasswordVisible\");\r\n  const [\r\n    userEditorSubmitButtonVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  ] = useStickyState(false, \"userEditorSubmitButtonVisible\");\r\n\r\n  /**\r\n   * Password reset\r\n   */\r\n  const [passwordResetEmail, setPasswordResetEmail] = useStickyState(\r\n    \"\",\r\n    \"passwordResetEmail\"\r\n  );\r\n\r\n  /**\r\n   * TAN input\r\n   */\r\n  const [tanInputTAN, setTanInputTAN] = useStickyState(\"\", \"tanInputTAN\");\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  const [search, setSearch] = useStickyState(\"\", \"search\");\r\n  const [searchTransactions, setSearchTransactions] = useStickyState(\r\n    \"\",\r\n    \"searchTransactions\"\r\n  );\r\n  const [searchPurposes, setSearchPurposes] = useStickyState(\r\n    \"\",\r\n    \"searchPurposes\"\r\n  );\r\n  const [searchShares, setSearchShares] = useStickyState(\"\", \"searchShares\");\r\n\r\n  /**\r\n   * Misc\r\n   */\r\n\r\n  // const [businessLoaded, setBusinessLoaded] = useState(null);\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [redirectTo, setRedirectTo] = useState(null);\r\n  const [lastInsertId, setLastInsertId] = useState(null);\r\n  // const [responseData, setResponseData] = useState(null);\r\n\r\n  const [validateTokenEmail, setValidateTokenEmail] = useState(null);\r\n  const [validateTokenPasswordReset, setValidateTokenPasswordReset] = useState(\r\n    null\r\n  );\r\n\r\n  /**\r\n   * User changed the email address; must log out and show the validation dialog\r\n   */\r\n  const [emailChanged, setEmailChanged] = useStickyState(false, \"emailChanged\"); //\r\n\r\n  const [\r\n    passwordResetTokenValidated,\r\n    setPasswordResetTokenValidated,\r\n  ] = useState(null);\r\n  const [passwordResetTokenEmail, setPasswordResetTokenEmail] = useState(null);\r\n\r\n  // const [tmrConnected] = useState(null);\r\n  const [validationTokenEmail, setValidationTokenEmail] = useStickyState(\r\n    null,\r\n    \"validationTokenEmail\"\r\n  ); //\r\n  const [\r\n    validationTokenEmailResent,\r\n    setValidationTokenEmailResent,\r\n  ] = useStickyState(0, \"validationTokenEmailResent\"); //\r\n  const [language, setLanguage] = useStickyState(\r\n    i18n.options.fallbackLng[0],\r\n    \"language\"\r\n  ); //\r\n  const [transferType, setTransferType] = useStickyState(\r\n    \"#u2s\",\r\n    \"transferType\"\r\n  );\r\n  const [transferRequest, setTransferRequest] = useStickyState(\r\n    null,\r\n    \"transferRequest\"\r\n  );\r\n  const [transferFromAccount, setTransferFromAccount] = useStickyState(\r\n    \"\",\r\n    \"transferFromAccount\"\r\n  );\r\n  const [transferToAccount, setTransferToAccount] = useStickyState(\r\n    \"\",\r\n    \"transferToAccount\"\r\n  );\r\n  const [transferAmount, setTransferAmount] = useStickyState(\r\n    \"\",\r\n    \"transferAmount\"\r\n  );\r\n  const [transferToUID, setTransferToUID] = useStickyState(\"\", \"transferToUID\");\r\n  const [transferToPurpose, setTransferToPurpose] = useStickyState(\r\n    \"\",\r\n    \"transferToPurpose\"\r\n  );\r\n  const [transferDescription, setTransferDescription] = useStickyState(\r\n    \"\",\r\n    \"transferDescription\"\r\n  );\r\n  const [contactSubject, setContactSubject] = useStickyState(\r\n    \"\",\r\n    \"contactSubject\"\r\n  );\r\n  const [contactMessage, setContactMessage] = useStickyState(\r\n    \"\",\r\n    \"contactMessage\"\r\n  );\r\n  const [userBirthYear, setUserBirthYear] = useStickyState(\"\", \"userBirthYear\");\r\n  const [userBirthMonth, setUserBirthMonth] = useStickyState(\r\n    \"\",\r\n    \"userBirthMonth\"\r\n  );\r\n  const [userBirthDay, setUserBirthDay] = useStickyState(\"\", \"userBirthDay\");\r\n  const [userBirthDateError, setUserBirthDateError] = useState(\r\n    \"\",\r\n    \"userBirthDateError\"\r\n  );\r\n  const [userTimezone, setUserTimezone] = useStickyState(\"\", \"userTimezone\");\r\n\r\n  const [currencyCode, setCurrencyCode] = useStickyState(\"\", \"currencyCode\");\r\n  const [currencyName, setCurrencyName] = useStickyState(\"\", \"currencyName\");\r\n  const [currencyRegion, setCurrencyRegion] = useStickyState(\r\n    \"\",\r\n    \"currencyRegion\"\r\n  );\r\n  const [currencyNewRate, setCurrencyNewRate] = useStickyState(\r\n    1.0,\r\n    \"currencyNewRate\"\r\n  );\r\n\r\n  /**\r\n   * Help topics and articles\r\n   */\r\n  const [\r\n    articleFeedbackSubmitted,\r\n    setArticleFeedbackSubmitted,\r\n  ] = useStickyState(false, \"articleFeedbackSubmitted\");\r\n  const [scrollPositionY, setScrollPositionY] = useStickyState(\r\n    0,\r\n    \"scrollPositionY\"\r\n  );\r\n  const [helpPath1, setHelpPath1] = useStickyState(\"#personal\", \"helpPath1\");\r\n  const [helpPath2, setHelpPath2] = useStickyState(\r\n    \"common-questions\",\r\n    \"helpPath2\"\r\n  );\r\n  const [helpPath3, setHelpPath3] = useStickyState(\"\", \"helpPath3\");\r\n\r\n  // const [hideOnScroll, setHideOnScroll] = useStickyState(true, \"hideOnScroll\");\r\n\r\n  const [tanRequired, setTanRequired] = useStickyState(false, \"tanRequired\");\r\n  // const [transferSuccess, setTransferSuccess] = useStickyState(\r\n  //   false,\r\n  //   \"transferSuccess\"\r\n  // );\r\n  const [accountPhotoPath, setAccountPhotoPath] = useState(\"\");\r\n  const [error, setError] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  const [info, setInfo] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  // const [alertVisible, setAlertVisible] = useState(false);\r\n\r\n  // const gotEvent = useEventListener();\r\n  // console.log(gotEvent);\r\n\r\n  /**\r\n   * Barrel: Getters\r\n   */\r\n  const barrelGetters = {\r\n    debug,\r\n    // instance,\r\n    loggingOut,\r\n    loggingIn,\r\n    // timestamp,\r\n    // startTimestamp,\r\n    pageLoading,\r\n    request,\r\n    serverResponseReceived,\r\n    requestTimedOut,\r\n    // requestTS,\r\n    instance,\r\n    responseProps: JSON.parse(responseProps),\r\n    // deleteResponseProp,\r\n    // lastRequest,\r\n    session,\r\n    // secureSession,\r\n    sessionTimeout,\r\n    // sessionTimeoutApplied,\r\n    settings: JSON.parse(settings),\r\n    ip,\r\n    updateInterval,\r\n    currencies: JSON.parse(currencies),\r\n    transactions: JSON.parse(transactions),\r\n    shares: JSON.parse(shares),\r\n    accordionView,\r\n    accordionViewCurrency,\r\n    countCurrencies,\r\n    countTransactions,\r\n    countShares,\r\n    activePageCurrencies,\r\n    activePageTransactions,\r\n    activePageShares,\r\n    currenciesPerPage,\r\n    transactionsPerPage,\r\n    sharesPerPage,\r\n    userData: JSON.parse(userData),\r\n    // redirect,\r\n    redirectTo,\r\n    lastInsertId,\r\n    connected,\r\n    reconnecting,\r\n    signedIn,\r\n    dailyAllowanceDispatched,\r\n    // isExternalRequest,\r\n    cartID,\r\n    cartContent: JSON.parse(cartContent),\r\n    cartProps: JSON.parse(cartProps),\r\n    cartProcessingStatus,\r\n    currencyAbbr,\r\n    currencyRate,\r\n    // currencyStatus,\r\n    accountNumber,\r\n    userSequence,\r\n    accountType,\r\n    uid,\r\n    userBusinesses: JSON.parse(userBusinesses),\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes: JSON.parse(businessPurposes),\r\n    cartPurposes: JSON.parse(cartPurposes),\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    // purposeID,\r\n    activePurposeData: JSON.parse(activePurposeData),\r\n    purposeShareholders: JSON.parse(purposeShareholders),\r\n    clearRefs,\r\n    logInEmail,\r\n    logInPassword,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n    dateRangeStart,\r\n    dateRangeEnd,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    // purposeRegistrationCategory,\r\n    // purposeRegistrationSubcategory,\r\n    // purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n    passwordResetEmail,\r\n    tanInputTAN,\r\n    search,\r\n    searchTransactions,\r\n    searchPurposes,\r\n    searchShares,\r\n    // businessLoaded,\r\n    tanRequired,\r\n    articleFeedbackSubmitted,\r\n    scrollPositionY,\r\n    helpPath1,\r\n    helpPath2,\r\n    helpPath3,\r\n    // hideOnScroll,\r\n    // tmrConnected,\r\n    validateTokenEmail,\r\n    validateTokenPasswordReset,\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    emailChanged,\r\n    transferRequest: JSON.parse(transferRequest),\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    contactSubject,\r\n    contactMessage,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n    language,\r\n    transferType,\r\n    // transferSuccess,\r\n    accountPhotoPath,\r\n    error: JSON.parse(error),\r\n    info: JSON.parse(info),\r\n    // alertVisible,\r\n  };\r\n\r\n  /**\r\n   * Barrel: Setters\r\n   */\r\n  const barrelSetters = {\r\n    setDebug,\r\n    setLoggingOut,\r\n    setLoggingIn,\r\n    // setTimestamp,\r\n    // setStartTimestamp,\r\n    setPageLoading,\r\n    setRequest,\r\n    setServerResponseReceived,\r\n    setRequestTimedOut,\r\n    // setRequestTS,\r\n    setInstance,\r\n    setResponseProps,\r\n    // setDeleteResponseProp,\r\n    // setLastRequest,\r\n    setSession,\r\n    // setSecureSession,\r\n    setSessionTimeout,\r\n    // setSessionTimeoutApplied,\r\n    setSettings,\r\n    setIP,\r\n    setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setAccordionView,\r\n    setAccordionViewCurrency,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setActivePageCurrencies,\r\n    setActivePageTransactions,\r\n    setActivePageShares,\r\n    setCurrenciesPerPage,\r\n    setTransactionsPerPage,\r\n    setSharesPerPage,\r\n    setConnected,\r\n    setReconnecting,\r\n    setLanguage,\r\n    setUserData,\r\n    // sendRequest,\r\n    setSignedIn,\r\n    setDailyAllowanceDispatched,\r\n    // setIsExternalRequest,\r\n    setCartID,\r\n    setCartContent,\r\n    setCartProps,\r\n    setCartProcessingStatus,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setAccountType,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setBusinessesPerPage,\r\n    setActivePageBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setActiveBusiness,\r\n    setActiveBusinessID,\r\n    setBusinessPurposes,\r\n    setCartPurposes,\r\n    setCountBusinessPurposes,\r\n    setBusinessPurposesPerPage,\r\n    setActivePageBusinessPurposes,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePurposeData,\r\n    setPurposeShareholders,\r\n    setClearRefs,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n    setDateRangeStart,\r\n    setDateRangeEnd,\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n    setPasswordResetEmail,\r\n    setTanInputTAN,\r\n    setSearch,\r\n    setSearchTransactions,\r\n    setSearchPurposes,\r\n    setSearchShares,\r\n    setError,\r\n    setInfo,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setValidateTokenEmail,\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setEmailChanged,\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setContactSubject,\r\n    setContactMessage,\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n    setTanRequired,\r\n    setArticleFeedbackSubmitted,\r\n    setScrollPositionY,\r\n    setHelpPath1,\r\n    setHelpPath2,\r\n    setHelpPath3,\r\n    // setHideOnScroll,\r\n  };\r\n\r\n  /** \r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Sends requests to the server\r\n   * @param {string} request Request name\r\n   * @param {object} data Request data\r\n   */\r\n  const sendRequest = ({ req, data = null }) => {\r\n    if (processRequest({ req, data, session, uid: \"STA\", barrels })) {\r\n      // request processed successfully\r\n      setServerResponseReceived(false);\r\n      return true;\r\n    } else {\r\n      console.log(\"THIS SHOULD NEVER BE REACHED\");\r\n      return sendData({ req, uid: \"STA\", session, data }, debug);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Processes user request\r\n   * @param {*} param0\r\n   */\r\n  const processRequest = ({ req, data, session, uid, barrels }) => {\r\n    data.instance = instance;\r\n\r\n    // if (req !== \"update last seen user\") {\r\n    setRequest(req);\r\n    // }\r\n\r\n    return requestHandler({\r\n      req,\r\n      data,\r\n      session,\r\n      uid,\r\n      barrels,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Processes server response\r\n   *\r\n   * Chooses a handler depending on response status:\r\n   * Error or other (success | continue | finished | pending etc.)\r\n   *\r\n   * @param {*} param0\r\n   */\r\n  const processUserResponse = ({ args, barrels }) => {\r\n    return args.status === \"error\"\r\n      ? userErrorHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        })\r\n      : userResponseHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  const processSystemResponse = ({ args, barrels }) => {\r\n    // console.log(\"SYSTEM RESPONSE DATA:\", args);\r\n    return args.status === \"error\"\r\n      ? systemErrorHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        })\r\n      : systemResponseHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  /**\r\n   * Shows a messgae (error or info)\r\n   *\r\n   * @param {string} msg, Messgae text\r\n   * @param {string} type, Message type (\"error\" | \"info\")\r\n   */\r\n  const showMessage = (msg, type = \"error\", dismissible = true) => {\r\n    type === \"error\"\r\n      ? setError(JSON.stringify({ msg, dismissible }))\r\n      : setInfo(JSON.stringify({ msg, dismissible }));\r\n  };\r\n\r\n  /**\r\n   * Hides the message\r\n   */\r\n  const hideMessage = (type = null) => {\r\n    if (type === \"error\") {\r\n      setError(null);\r\n    } else if (type === \"info\") {\r\n      setInfo(null);\r\n    } else {\r\n      setError(null);\r\n      setInfo(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the object-element of an array\r\n   * @param {object array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const getArrayObject = (array, property, value) => {\r\n    if (array === null) return null;\r\n    return array.find((o) => o[property] === value);\r\n  };\r\n\r\n  /**\r\n   * Returns the current processing status of the request\r\n   * @param {string} req\r\n   */\r\n  const getRequestStatus = (req) => {\r\n    const obj = getArrayObject(barrelGetters.responseProps, \"res\", req);\r\n    if (obj === null) return \"undefined\";\r\n    return typeof obj !== \"undefined\" ? obj.status : \"undefined\";\r\n  };\r\n\r\n  /**\r\n   * Clears the current processing status of the request\r\n   * @param {string} req\r\n   */\r\n  const clearRequestStatus = (req) => {\r\n    deleteObjectArrayElement(barrelGetters.responseProps, \"res\", req);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {*} status\r\n   * @param {*} cnt\r\n   * @param {*} strLoading\r\n   * @param {*} strNotFound\r\n   */\r\n  const showRequestStatus = (\r\n    req,\r\n    cnt,\r\n    strLoading,\r\n    strNotFound,\r\n    finalStatus = \"success\"\r\n  ) => {\r\n    const status = getRequestStatus(req);\r\n    if (status === \"undefined\") return \"\";\r\n\r\n    if (status === \"undefined\" || status !== finalStatus) {\r\n      return <p className=\"text-center text-muted\">{strLoading}</p>;\r\n    } else if (status === finalStatus && cnt === 0) {\r\n      return <p className=\"text-center text-muted\">{strNotFound}</p>;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Changes the website language\r\n   */\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n    setLanguage(lng);\r\n  };\r\n\r\n  const roundTo = (n, digits) => {\r\n    let negative = false;\r\n    if (digits === undefined) {\r\n      digits = 0;\r\n    }\r\n    if (n < 0) {\r\n      negative = true;\r\n      n = n * -1;\r\n    }\r\n    const multiplicator = Math.pow(10, digits);\r\n    n = parseFloat((n * multiplicator).toFixed(11));\r\n    n = (Math.round(n) / multiplicator).toFixed(2);\r\n    if (negative) {\r\n      n = (n * -1).toFixed(2);\r\n    }\r\n    return n;\r\n  };\r\n\r\n  /**\r\n   * Format number\r\n   * @param {number} number\r\n   */\r\n  const format = (number, currency = currencyAbbr, useGrouping = true) => {\r\n    const retIntl = new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      useGrouping: useGrouping,\r\n    }).format(number * currencyRate);\r\n\r\n    if (parseFloat(number) !== 0 && number.toString().substr(0, 4) === \"0.00\")\r\n      return t(\"micro amount\");\r\n\r\n    return retIntl + \" \" + currency;\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   * @param {number} number\r\n   */\r\n  const formatPerCent = (number) => {\r\n    return (\r\n      new Intl.NumberFormat(language, {\r\n        notation: \"standard\",\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2,\r\n      }).format(number) + \"%\"\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   *\r\n   * @param {number} number\r\n   */\r\n  const formatExchangeRate = (number) => {\r\n    return new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 5,\r\n      maximumFractionDigits: 5,\r\n    }).format(number);\r\n  };\r\n\r\n  /**\r\n   * Parses a number according to a locale\r\n   *\r\n   * @param {string} stringNumber\r\n   * @param {string} locale\r\n   */\r\n  const parseLocaleNumber = (stringNumber, locale) => {\r\n    let num = 123456.789,\r\n      fmt_local = new Intl.NumberFormat(locale, {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n      }),\r\n      parts_local = fmt_local.formatToParts(num),\r\n      group = \"\",\r\n      decimal = \"\",\r\n      currency = \"\";\r\n\r\n    // separators\r\n    parts_local.forEach(function (i) {\r\n      switch (i.type) {\r\n        case \"group\":\r\n          group = i.value;\r\n          break;\r\n        case \"decimal\":\r\n          decimal = i.value;\r\n          break;\r\n        case \"currency\":\r\n          currency = i.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return parseFloat(\r\n      stringNumber\r\n        .replace(new RegExp(\"\\\\\" + group, \"g\"), \"\")\r\n        .replace(new RegExp(\"\\\\\" + decimal), \".\")\r\n        .replace(new RegExp(\"\\\\\" + currency, \"g\"), \"\")\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Formates a date\r\n   *\r\n   * @param {date} ts A timestamp.\r\n   * @param {object} options The date options.\r\n   * @param {boolean} isUTC\r\n   * @param {string} locales e.g. \"lv\"\r\n   * @param {string} format e.g. \"YYYY-MM-DD HH:mm:ss\"\r\n   */\r\n  const formatDate = (\r\n    ts,\r\n    options = {\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    },\r\n    isUTC = true,\r\n    locales = language,\r\n    format = null\r\n  ) => {\r\n    let date = new Date(ts);\r\n    if (isUTC) {\r\n      const diff = date.getTimezoneOffset();\r\n      date = moment(date).add(-diff, \"m\").toDate();\r\n    }\r\n    return format === null\r\n      ? new Intl.DateTimeFormat(locales, options).format(date)\r\n      : moment(date).format(format);\r\n  };\r\n\r\n  /**\r\n   * Retrieves an URL parameter\r\n   */\r\n  const getUrlParam = (param) => {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    return urlParams.get(param);\r\n  };\r\n\r\n  /**\r\n   * Returns the file name from URI path\r\n   */\r\n  const getFileNameFromURI = () => {\r\n    const path = window.location.pathname;\r\n    const pathLast = path.substring(path.lastIndexOf(\"/\") + 1);\r\n    return `${pathLast}.js`;\r\n  };\r\n\r\n  const sendEmailValidationRequest = ({ token, email }) => {\r\n    sendRequest({\r\n      req: \"validate email token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Sends the password reset request\r\n   *\r\n   * @param {string} token The password reset token\r\n   * @param {string} email User's email\r\n   */\r\n  const sendPasswordResetRequest = ({ token, email }) => {\r\n    setPasswordResetTokenEmail(email);\r\n    sendRequest({\r\n      req: \"validate password reset token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets client URI\r\n   */\r\n  const getUri = () => {\r\n    return `${window.location.hostname}`;\r\n  };\r\n\r\n  /**\r\n   * Gets client IP\r\n   */\r\n  const getIP = () => {\r\n    if (debug) return;\r\n    fetch(`${config.uri.ENDPOINT}/ip`, {\r\n      method: \"post\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((results) => results.json())\r\n      .then((data) => {\r\n        setIP(typeof data.ip === \"string\" ? data.ip : \"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Gets the scroll position\r\n   */\r\n  const getScrollPosition = () => {\r\n    return { x: window.scrollX, y: window.scrollY };\r\n  };\r\n\r\n  /**\r\n   * Sets the help path\r\n   * @param {integer} id\r\n   * @param {string} name\r\n   */\r\n  const setHelpPath = (id, name) => {\r\n    if (id === 1) {\r\n      setHelpPath1(name);\r\n      setHelpPath2(\"\");\r\n      setHelpPath3(\"\");\r\n    } else if (id === 2) {\r\n      setHelpPath2(name);\r\n      setHelpPath3(\"\");\r\n    } else {\r\n      setHelpPath3(name);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sets the scroll position\r\n   */\r\n  const setScrollPosition = (x, y) => {\r\n    console.log(\"setScrollPosition:\", x, y);\r\n    // window.scrollTo(x, y);\r\n    window.scroll(x, y);\r\n  };\r\n\r\n  /**\r\n   * Saves the cart request\r\n   */\r\n  const saveCartID = () => {\r\n    const cart = getUrlParam(\"cart\");\r\n\r\n    if (cart !== null) {\r\n      setCartID(cart);\r\n      // if (!signedIn) setIsExternalRequest(true);\r\n      // } else {\r\n      //   setCartID(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the cart from DB\r\n   */\r\n  const getCart = () => {\r\n    // if (typeof externalRequest.cart === \"undefined\" || accountNumber === null)\r\n    //   return;\r\n\r\n    if (!signedIn || accountNumber === null) {\r\n      saveCartID();\r\n      return;\r\n    }\r\n\r\n    // const cartFromUrl = getUrlParam(\"cart\");\r\n\r\n    // saveCartID();\r\n\r\n    let cart = cartID !== null ? cartID : getUrlParam(\"cart\");\r\n    if (cart === null) return;\r\n\r\n    const data = {\r\n      customer: accountNumber,\r\n      cart,\r\n    };\r\n\r\n    sendRequest({ req: \"get cart\", data: data });\r\n\r\n    setCartID(null);\r\n  };\r\n\r\n  /**\r\n   * Gets cart purposses\r\n   */\r\n  const getCartPurposes = () => {\r\n    if (cartContent === null) return;\r\n\r\n    let cartPurposes = [];\r\n\r\n    barrelGetters.cartContent.map((element) =>\r\n      cartPurposes.push(element.product)\r\n    );\r\n\r\n    setCartPurposes(null);\r\n\r\n    sendRequest({\r\n      req: \"get cart purposes\",\r\n      data: {\r\n        purposes: JSON.stringify(cartPurposes),\r\n        language: language,\r\n        page: 1,\r\n        limit: 5,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the currencies\r\n   *\r\n   * @param {*} newPage\r\n   */\r\n  const getCurrencies = (newPage) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: {\r\n        uid: accountNumber,\r\n        search: null,\r\n        page: newPage,\r\n        limit: currenciesPerPage,\r\n      },\r\n    });\r\n    setActivePageCurrencies(newPage);\r\n  };\r\n\r\n  /**\r\n   * Finds currencies\r\n   *\r\n   * @param {string} search The search sring.\r\n   */\r\n  const findCurrencies = (search) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: {\r\n        uid: accountNumber,\r\n        search,\r\n        page: 1,\r\n        limit: currenciesPerPage,\r\n      },\r\n    });\r\n    setActivePageCurrencies(1);\r\n  };\r\n\r\n  /**\r\n   * Gets user transactions\r\n   *\r\n   * @param {integer} newPage\r\n   */\r\n  const getTransactions = (newPage, search = null) => {\r\n    setTransactions(null);\r\n\r\n    let dateStart = dateRangeStart;\r\n    let dateEnd = dateRangeEnd;\r\n    if (dateEnd === \"today\") {\r\n      const now = new Date();\r\n      dateEnd = now.setDate(now.getDate());\r\n    }\r\n    dateStart = formatDate(dateStart, null, true, null, \"YYYY-MM-DD\");\r\n    dateEnd = formatDate(dateEnd, null, true, null, \"YYYY-MM-DD\");\r\n\r\n    sendRequest({\r\n      req: \"get transactions\",\r\n      data: {\r\n        page: newPage,\r\n        limit: transactionsPerPage,\r\n        uid: accountNumber,\r\n        language,\r\n        dateStart,\r\n        dateEnd,\r\n        search: search !== null ? search : searchTransactions,\r\n      },\r\n    });\r\n    setActivePageTransactions(newPage);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {ref} ref\r\n   */\r\n  const copyToClipboard = (ref) => {\r\n    ref.current.select();\r\n    document.execCommand(\"copy\");\r\n    ref.current.blur();\r\n    showMessage(\"COPIED_TO_CLIPBOARD\", \"info\", false);\r\n  };\r\n\r\n  /**\r\n   * Finds transactions\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findTransactions = (search) => {\r\n    setSearchTransactions(search);\r\n    getTransactions(1, search);\r\n  };\r\n\r\n  /**\r\n   * Finds transactions\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findPurposes = (search) => {\r\n    setSearchPurposes(search);\r\n    setResponseProps(null);\r\n    getBusinessPurposes(activeBusinessID, activeBusiness, 1, search);\r\n  };\r\n\r\n  /**\r\n   * Gets user shares\r\n   *\r\n   * @param {*} newPage\r\n   */\r\n  const getShares = (newPage, search = null) => {\r\n    setShares(null);\r\n    sendRequest({\r\n      req: \"get shares\",\r\n      data: {\r\n        page: newPage,\r\n        limit: sharesPerPage,\r\n        uid: accountNumber,\r\n        language: language,\r\n        search: search !== null ? search : searchShares,\r\n      },\r\n    });\r\n    setActivePageShares(newPage);\r\n  };\r\n\r\n  /**\r\n   * Finds shares\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findShares = (search) => {\r\n    setSearchShares(search);\r\n    getShares(1, search);\r\n  };\r\n\r\n  /**\r\n   * Gets user businesses\r\n   *\r\n   * @param {integer} newPage\r\n   */\r\n  const getBusinesses = (newPage = 1) => {\r\n    setUserBusinesses(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(1);\r\n    setActiveBusinessID(null);\r\n    sendRequest({\r\n      req: \"get user businesses\",\r\n      data: { uid: accountNumber, page: newPage, limit: businessesPerPage },\r\n    });\r\n    setActivePageBusinesses(newPage);\r\n  };\r\n\r\n  /**\r\n   * Gets the business purposes\r\n   *\r\n   * @param {*} business_id\r\n   * @param {*} selected\r\n   * @param {*} newPage\r\n   */\r\n  const getBusinessPurposes = (\r\n    business_id,\r\n    selected = null,\r\n    newPage = 1,\r\n    search = null\r\n  ) => {\r\n    // console.log(\"BUSINESS PURPOSES FOR ID \" + business_id, businessPurposes);\r\n\r\n    if (selected !== null) {\r\n      setActiveBusiness(selected);\r\n      setActiveBusinesPurpose(null);\r\n      setActivePurposeProperty(null);\r\n    }\r\n    setBusinessPurposes(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(newPage);\r\n    setActiveBusinessID(business_id);\r\n    return sendRequest({\r\n      req: \"get business purposes\",\r\n      data: {\r\n        business_id: business_id,\r\n        language: language,\r\n        search: search !== null ? search : searchPurposes,\r\n        page: newPage,\r\n        limit: businessPurposesPerPage,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the purpose shareholders\r\n   *\r\n   * @param {*} purpose_id\r\n   * @param {*} selected\r\n   */\r\n  const getPurposeShareholders = (purpose_id, selected = null) => {\r\n    if (selected !== null) {\r\n      setActiveBusinesPurpose(purpose_id);\r\n    }\r\n    setPurposeShareholders(null);\r\n    return sendRequest({\r\n      req: \"get purpose shareholders\",\r\n      data: { purpose_id: purpose_id },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get account data\r\n   */\r\n  const getAccountData = () => {\r\n    if (accountNumber === null) return;\r\n    sendRequest({\r\n      req: \"get account data\",\r\n      data: {\r\n        uid: accountNumber,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get transaction by id\r\n   *\r\n   * @param {integer} id The primary key\r\n   */\r\n  const getTransactionById = (id) => {\r\n    sendRequest({\r\n      req: \"get transaction by id\",\r\n      data: { id: id, language: language },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get conatainer class\r\n   *\r\n   * Returns object cantaining the classes for layout container appearance.\r\n   *\r\n   * @param {boolean} signedIn, True if user has signed in, otherwise false.\r\n   */\r\n  // const getContainerClass = (signedIn) => {\r\n  //   return {\r\n  //     wrapperClass: signedIn\r\n  //       ? \"auth-wrapper auth-wrapper-summary\"\r\n  //       : \"auth-wrapper\",\r\n  //     innerClass: signedIn\r\n  //       ? \"auth-inner auth-inner-summary\"\r\n  //       : \"auth-inner autoWidth\",\r\n  //   };\r\n  // };\r\n  const getContainerClass = (signedIn) => {\r\n    return {\r\n      wrapperClass: \"auth-wrapper auth-wrapper-summary\",\r\n      innerClass: \"auth-inner auth-inner-summary\",\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Get redirect\r\n   *\r\n   * Returns router redirect component.\r\n   */\r\n  const getRedirect = () => {\r\n    return redirectTo === null ? \"\" : <Redirect push to={redirectTo} />;\r\n  };\r\n\r\n  /**\r\n   * Sorts an object array by value of the property\r\n   *\r\n   * @param {array} array The array\r\n   * @param {string} property The property name\r\n   */\r\n  const sortObjectArray = (array, property) => {\r\n    return array.sort((a, b) =>\r\n      a[property] > b[property] ? 1 : b[property] > a[property] ? -1 : 0\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Returns an array index of the object\r\n   * containing the property with the certain value.\r\n   *\r\n   * @param {array} array The array\r\n   * @param {string} property The property name\r\n   * @param {any} value The property value\r\n   */\r\n  const getObjectArrayElementIndex = (array, property, value) => {\r\n    if (array === null) return -1;\r\n    return array\r\n      .map((properties) => {\r\n        return properties[property];\r\n      })\r\n      .indexOf(value);\r\n  };\r\n\r\n  /**\r\n   * Deletes an object array element\r\n   *\r\n   * @param {array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const deleteObjectArrayElement = (arr, property, value) => {\r\n    return arr.filter((obj) => {\r\n      return obj[property] !== value;\r\n    });\r\n  };\r\n\r\n  const getReviser = () => {\r\n    return \"STA\";\r\n  };\r\n\r\n  const getWorkplace = () => {\r\n    return \"LAPSTA\";\r\n  };\r\n\r\n  const barrelFunctions = {\r\n    sendRequest,\r\n    processUserResponse,\r\n    showMessage,\r\n    hideMessage,\r\n    changeLanguage,\r\n    roundTo,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    getArrayObject,\r\n    getRequestStatus,\r\n    clearRequestStatus,\r\n    showRequestStatus,\r\n    format,\r\n    formatPerCent,\r\n    formatExchangeRate,\r\n    getContainerClass,\r\n    formatDate,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    getRedirect,\r\n    getUri,\r\n    getIP,\r\n    getScrollPosition,\r\n    setScrollPosition,\r\n    setHelpPath,\r\n    saveCartID,\r\n    getCart,\r\n    getCartPurposes,\r\n    getUrlParam,\r\n    getFileNameFromURI,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    getCurrencies,\r\n    findCurrencies,\r\n    getTransactions,\r\n    copyToClipboard,\r\n    findTransactions,\r\n    findPurposes,\r\n    getShares,\r\n    findShares,\r\n    parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n  };\r\n\r\n  /** \r\n   * Event handlers\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On language change\r\n   */\r\n  i18n.on(\"languageChanged\", function (lng) {\r\n    const languages = [\"en\", \"lv\"];\r\n    if (languages.indexOf(lng) < 0) lng = \"en\";\r\n    // if (lng === \"en-US\") lng = \"en\";\r\n    setLanguage(lng);\r\n  });\r\n\r\n  /**\r\n   * On redirect\r\n   * @param {string} to Redirect path (e.g. \"/sign-in\")\r\n   */\r\n  const onRedirect = (to) => {\r\n    setRedirectTo(to);\r\n  };\r\n\r\n  const onSessionStart = () => {\r\n    // start new session\r\n    let data = {};\r\n    data.request = \"hello\";\r\n    data.instance = instance;\r\n    startSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionEnd = () => {\r\n    // end current session\r\n    sendRequest({ req: \"end session\", data: {} });\r\n\r\n    let data = {};\r\n    data.request = \"bye\";\r\n    data.instance = instance;\r\n    endSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionReset = () => {\r\n    setSession(uuidv4());\r\n  };\r\n\r\n  /**\r\n   * On signup\r\n   * @param {object} data Signup data\r\n   */\r\n  const onSignUp = (data) => {\r\n    return sendRequest({ req: \"register user\", data });\r\n  };\r\n\r\n  const onSessionTimeout = () => {\r\n    // console.log(\"Session timed out...\");\r\n    setLoggingOut(true);\r\n    setRedirectTo(\"/sign-out\");\r\n  };\r\n\r\n  /**\r\n   * On transfer type change\r\n   * @param {string} id The transfer type id (\"U2S\", \"U2U\", \"U2B\" etc.)\r\n   */\r\n  const onTransferTypeChange = (id) => {\r\n    console.log(\"setTransferType: \", id);\r\n    setTransferType(id);\r\n  };\r\n\r\n  const onTransferSuccess = () => {\r\n    // console.log(\"ON TRANSFER SUCCESS\", barrels);\r\n  };\r\n\r\n  /**\r\n   * On transfer\r\n   * @param {object} data Transfer data\r\n   */\r\n  const onTransfer = (data) => {\r\n    // console.log(\"ON TRANSFER (data):\", data);\r\n    // sendRequest({ req: \"register account\", data: data });\r\n    sendRequest(data);\r\n  };\r\n\r\n  const onPurposeRegistration = (data) => {\r\n    sendRequest(data);\r\n  };\r\n\r\n  const onLogOut = () => {\r\n    window.localStorage.clear();\r\n    setSignedIn(false);\r\n    // onSessionEnd(); // DO NOT ACTIVATE THIS HERE - EXECUTING MULTIPLE TIMES\r\n    // setSession(uuidv4()); // DO NOT SET SESSION HERE - INFINITE LOOP!!\r\n  };\r\n\r\n  const onAlertClose = (type = null) => {\r\n    hideMessage(type);\r\n  };\r\n\r\n  /**\r\n   * Barrel: Event handlers\r\n   */\r\n  const barrelEventHandlers = {\r\n    onRedirect,\r\n    onSignUp,\r\n    onSessionTimeout,\r\n    onTransferTypeChange,\r\n    onTransferSuccess,\r\n    onTransfer,\r\n    onSessionStart,\r\n    onSessionEnd,\r\n    onSessionReset,\r\n    onPurposeRegistration,\r\n    onLogOut,\r\n    onAlertClose,\r\n  };\r\n\r\n  /**\r\n   * Barrel of barrels\r\n   */\r\n  const barrels = {\r\n    barrelGetters,\r\n    barrelSetters,\r\n    barrelFunctions,\r\n    barrelEventHandlers,\r\n  };\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  useSocket((data) => {\r\n    setServerResponseReceived(true);\r\n    setRequestTimedOut(false);\r\n    processUserResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  });\r\n\r\n  useSystemSocket((data) => {\r\n    processSystemResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  }, instance);\r\n\r\n  /** \r\n   * Return\r\n   ============================================================================ */\r\n\r\n  if (props.mode === \"construction\") {\r\n    return <UnderConstruction {...barrels} />;\r\n    // } else if (props.mode === \"loading\") {\r\n    //   return <Loading {...barrels} />;\r\n  } else {\r\n    if (!reconnecting || debug) {\r\n      return <Main {...barrels} />;\r\n    } else {\r\n      return <NotConnected {...barrels} />;\r\n    }\r\n  }\r\n};\r\n","import { sendData } from \"../utils/sockets\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const { req, data, session, uid, barrels } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, userData, userSequence } = barrels.barrelGetters;\r\n  const {\r\n    setUserData,\r\n    setUID,\r\n    // setAccountNumber,\r\n    // setRequest,\r\n    // setUserBusinesses,\r\n  } = barrels.barrelSetters;\r\n  // const {} = barrels.barrelFunctions;\r\n  //   const {} = barrels.barrelEventHandlers;\r\n\r\n  let requestFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onRequest = (req, callback) => {\r\n    if (requestFound) return;\r\n    if (req === props.req || req === \"default\") {\r\n      callback();\r\n      requestFound = true;\r\n    }\r\n  };\r\n\r\n  /** \r\n   * Request handlers\r\n  ============================================================================ */\r\n\r\n  onRequest(\"sign in user\", () => {\r\n    setUserData(JSON.stringify(data));\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"get user sequence\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"register account\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const year = fullyear.slice(-2);\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n    const birthDate = `${day}${month}${year}`;\r\n    const timezone = data.timezone.slice(0, 2);\r\n    const initial = userData.lastname.slice(0, 1).toUpperCase();\r\n    const icode = initial.charCodeAt(0).toString().padStart(5, \"0\");\r\n\r\n    data.scode = `${timezone}${birthDate}${initial}`;\r\n    data.tcode = `${timezone}${birthDate}${icode}`;\r\n    data.timezone = data.timezone.slice(5);\r\n    data.sequence = userSequence.toString().padStart(5, \"0\");\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    setUID(data.personalID);\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"default\", () => {\r\n    sendData({ req, data, uid, session }, debug);\r\n\r\n    return true;\r\n  });\r\n\r\n  // onRequest(\"unknown\", () => {\r\n  //   showMessage(`UNKNOWN REQUEST ${req}`, \"info\");\r\n\r\n  //   return true;\r\n  // });\r\n\r\n  return requestFound;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug, cartContent } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setUID,\r\n    setAccountNumber,\r\n    setRedirectTo,\r\n    setCartProcessingStatus,\r\n  } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  const { onRedirect } = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug) console.log(`ERROR: ${req}`, error, context, props, barrels);\r\n  // const { showMessage } = barrels.barrelFunctions;\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n    // console.log(res, status);\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onError([\"*\", \"INVALID_SESSION\"], () => {\r\n    showMessage(\"SESSION_TIMED_OUT\", \"info\", false);\r\n    setRedirectTo(\"/sign-out\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer errors\r\n   */\r\n  onError([\"transfer U2S\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2B\", \"NO_ROWS_CHANGED\"], () => {\r\n    if (cartContent !== null) {\r\n      setCartProcessingStatus(false);\r\n    } else {\r\n      showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    }\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_USER_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // user selected the same language again - just ignore\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate email token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate password reset token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"reset password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // showMessage(\"REQUEST_ALREADY_SENT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same language again - that's ok\r\n    return true;\r\n  });\r\n\r\n  onError([\"update user\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same password again - that's ok\r\n    return true;\r\n  });\r\n\r\n  // onError([\"update last seen user\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Same last seen time was submitted (shouldn't be possible) - ignore for now\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"sign in user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"change password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"SAME_PASSWORD_RESET\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"submit tan\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"INVALID_TAN\", \"error\", false);\r\n    return true;\r\n  });\r\n\r\n  onError([\"get cart\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User accessed the same cart again - it's fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer V2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Allowance already dispatched today - totally fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    // The same currency was selected again - no problem\r\n    return true;\r\n  });\r\n\r\n  onError([\"end session\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Session updated to the same data ??\r\n    return true;\r\n  });\r\n\r\n  onError([\"register currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_CURRENCY_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"update purpose property\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register purpose\", \"ER_DUP_ENTRY\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  // onError([\"get user sequence\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Session updated to the same data ??\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"register account\", \"ER_DUP_ENTRY\"], () => {\r\n    setUID(null);\r\n    setAccountNumber(null);\r\n    showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError(\r\n    [\"register account\", \"ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO\"],\r\n    () => {\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n      return true;\r\n    }\r\n  );\r\n\r\n  onError([\"register shareholder\", \"ER_NO_REFERENCED_ROW_2\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"reset password\", \"ER_NO_REFERENCED_ROW_2\"], () => {\r\n    // Reset password email not found - might be an attack - imitate the behavior as if the link was sent\r\n    onRedirect(\"/password\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"*\", \"ER_CANT_CREATE_THREAD\"], () => {\r\n    showMessage(\"NO_RESPONSE_FROM_SERVER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug, error: msgError } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug)\r\n    console.log(`SYSTEM ERROR: ${req}`, error, context, props, barrels);\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onError([\"*\", \"INVALID_SESSION\"], () => {\r\n  //   showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n  //   setRedirectTo(\"/sign-out\");\r\n  //   return true;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_error\", \"none\"], () => {\r\n    if (msgError !== \"SERVER_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_timeout\", \"connect_timeout\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"reconnect_error\", \"TransportError\"], () => {\r\n    if (msgError !== \"SERVER_STILL_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_STILL_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, info: msgInfo } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage, hideMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug)\r\n    console.log(`system response: ${req} (${props.status})`, props, barrels);\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (res === \"*\" && status === props.status) ||\r\n      (res === props.req && status === props.status) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n  //   if (typeof props.token !== \"undefined\") {\r\n  //     console.log(\"Renewing session...\");\r\n\r\n  //     onSessionEnd();\r\n  //     setSession(props.token);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect attempt\", \"continue\"], () => {\r\n    // if (msgInfo !== \"RECONNECT_ATTEMPT\")\r\n    //   showMessage(\"RECONNECT_ATTEMPT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnecting\", \"continue\"], () => {\r\n    if (msgInfo !== \"RECONNECTING\") {\r\n      setReconnecting(true);\r\n      showMessage(\"RECONNECTING\", \"info\");\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect\", \"success\"], () => {\r\n    setReconnecting(false);\r\n    hideMessage();\r\n    // hideMessage(\"error\");\r\n    // hideMessage(\"info\");\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","/**\r\n * System CSS\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * User CSS\r\n */\r\nimport \"./normalize.css\";\r\nimport \"./index.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Loading from \"./components/loading\";\r\nimport ErrorBoundary from \"./components/errorBoundary\";\r\n\r\n/**\r\n * Retrieves an URL parameter\r\n */\r\nconst getUrlParam = (param) => {\r\n  const queryString = window.location.search;\r\n  const urlParams = new URLSearchParams(queryString);\r\n  return urlParams.get(param);\r\n};\r\n\r\n/**\r\n * Clear local storage (URL param ?reset)\r\n */\r\nif (getUrlParam(\"reset\") !== null) {\r\n  window.localStorage.clear();\r\n  console.log(\"Local storage cleared\");\r\n}\r\n\r\nconst Dummy = () => {\r\n  return <></>;\r\n};\r\n\r\n// <Dummy /> | <Loading />\r\n\r\n/**\r\n * Render (with suspense)\r\n * mode = default | construction\r\n */\r\nconst root = document.getElementById(\"root\");\r\nconst construction = document.getElementById(\"construction\");\r\nif (root) {\r\n  ReactDOM.render(\r\n    <Suspense fallback={<Loading />}>\r\n      <ErrorBoundary>\r\n        <Dispatcher mode={!construction ? \"\" : \"construction\"} />\r\n      </ErrorBoundary>\r\n    </Suspense>,\r\n    root\r\n  );\r\n}\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { cloneElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\nimport { ChevronRight, ExpandMore } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"AccordionCard\",\r\n    header: true,\r\n    title: \"Untitled\",\r\n    eventkey: \"untitled\",\r\n    active: \"\",\r\n    paddingBody: \"0\",\r\n    onClick: () => {},\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const CustomToggle = ({ children, eventKey }) => {\r\n    // const currentEventKey = React.useContext(AccordionContext);\r\n\r\n    const decoratedOnClick = useAccordionToggle(eventKey, () => {\r\n      console.log(\"totally custom!\", eventKey);\r\n      props.onClick(eventKey);\r\n    });\r\n    // console.log(props.active);\r\n\r\n    const isCurrentEventKey = props.active === eventKey;\r\n\r\n    if (isCurrentEventKey) {\r\n      return (\r\n        <div onClick={decoratedOnClick}>\r\n          {children}\r\n          <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n            <ExpandMore style={{ color: \"var(--dark)\", fontSize: \"2rem\" }} />\r\n          </span>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div onClick={decoratedOnClick}>\r\n          {children}\r\n          <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n            <ChevronRight style={{ color: \"var(--dark)\", fontSize: \"2rem\" }} />\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    let key = 0;\r\n    return (\r\n      <Card style={{ border: 0, backgroundColor: \"Transparent\" }}>\r\n        {props.header && (\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey={props.eventkey}\r\n            style={{\r\n              backgroundColor: \"Transparent\",\r\n              padding: \"12px 2px 12px 2px\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"20px\",\r\n            }}\r\n          >\r\n            <CustomToggle eventKey={props.eventkey}>{props.title}</CustomToggle>\r\n          </Accordion.Toggle>\r\n        )}\r\n        <Accordion.Collapse eventKey={props.eventkey}>\r\n          <Card.Body style={{ padding: props.paddingBody }}>\r\n            {React.Children.map(args.children, (child) => {\r\n              if (typeof child !== \"object\") {\r\n                return child;\r\n              } else {\r\n                key++;\r\n                return cloneElement(child, {\r\n                  ...args,\r\n                  styles: null,\r\n                  key: key,\r\n                });\r\n              }\r\n            })}\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","import \"./Card.css\";\r\nimport React, { cloneElement } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n// import { Container, Row, Col, Button } from \"react-bootstrap\";\r\n// import Button from \"react-bootstrap/Button\";\r\n\r\nexport default (args) => {\r\n  let defaults = {\r\n    title: \"Untitled\",\r\n    navigation: undefined,\r\n    footer: undefined,\r\n    header: true,\r\n    body: true,\r\n    headerPadding: \"20px\",\r\n    bodyPadding: \"20px\",\r\n    align: \"left\",\r\n    maxWidth: \"100%\",\r\n    minWidthBody: \"150px\",\r\n    maxWidthBody: \"500px\",\r\n    cardTitleClass: \"\",\r\n    headerContent: null,\r\n    transparent: false,\r\n    background: \"Transparent\",\r\n    backgroundHeader: \"var(--light)\",\r\n    backgroundBody: \"var(--light)\",\r\n    border: \"1px solid rgba(0,0,0,.125)\",\r\n    headerBorderBottom: \"1px solid rgba(0,0,0,.125)\",\r\n    onNavigationClick: () => {},\r\n  };\r\n  let props = Object.assign(defaults, args);\r\n\r\n  let key = 0;\r\n\r\n  let footer = props.footer ? <Card.Footer>{props.footer}</Card.Footer> : \"\";\r\n\r\n  return (\r\n    <Card\r\n      className=\"custom-card\"\r\n      style={{ background: props.background, border: props.border }}\r\n    >\r\n      {/* <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" /> */}\r\n      {props.header && (\r\n        <Card.Header\r\n          className=\"custom-card\"\r\n          style={{\r\n            background: props.backgroundHeader,\r\n            borderBottom: props.headerBorderBottom,\r\n            padding: props.headerPadding,\r\n          }}\r\n        >\r\n          {props.headerContent !== null ? (\r\n            props.headerContent\r\n          ) : (\r\n            <>\r\n              {props.title.length > 0 && (\r\n                <Card.Title className={props.cardTitleClass}>\r\n                  {props.title}\r\n                </Card.Title>\r\n              )}\r\n              <Nav\r\n                variant=\"tabs\"\r\n                defaultActiveKey={props.navigationdefaultActiveKey}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexWrap: \"wrap\",\r\n                }}\r\n              >\r\n                {props.navigation &&\r\n                  props.navigation.map((item, key) => (\r\n                    <Nav.Item key={key}>\r\n                      <Nav.Link\r\n                        className=\"custom-card\"\r\n                        href={item.link}\r\n                        onClick={() => props.onNavigationClick(item.link)}\r\n                        style={{ color: \"var(--dark)\" }}\r\n                      >\r\n                        {item.name}\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  ))}\r\n              </Nav>\r\n            </>\r\n          )}\r\n        </Card.Header>\r\n      )}\r\n\r\n      {props.body && (\r\n        <Card.Body\r\n          className=\"custom-card\"\r\n          style={{\r\n            background: props.backgroundBody,\r\n            textAlign: props.align,\r\n            maxWidth: props.maxWidth,\r\n            padding: props.bodyPadding,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              minWidth: props.minWidthBody,\r\n              maxWidth: props.maxWidthBody,\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            {React.Children.map(args.children, (child) => {\r\n              if (typeof child !== \"object\") {\r\n                return child;\r\n              } else if (child === null) {\r\n                return;\r\n              } else {\r\n                key++;\r\n                return cloneElement(child, {\r\n                  styles: null,\r\n                  key: key,\r\n                });\r\n              }\r\n            })}\r\n          </div>\r\n        </Card.Body>\r\n      )}\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n","var map = {\n\t\"./document.css\": [\n\t\t301,\n\t\t7,\n\t\t33\n\t],\n\t\"./en/PrivacyPolicy\": [\n\t\t201,\n\t\t9,\n\t\t9\n\t],\n\t\"./en/PrivacyPolicy.js\": [\n\t\t201,\n\t\t9,\n\t\t9\n\t],\n\t\"./en/UserAgreement\": [\n\t\t202,\n\t\t9,\n\t\t10\n\t],\n\t\"./en/UserAgreement.js\": [\n\t\t202,\n\t\t9,\n\t\t10\n\t],\n\t\"./en/articles/i-forgot-my-password-how-do-i-reset-it\": [\n\t\t155,\n\t\t9,\n\t\t1\n\t],\n\t\"./en/articles/i-forgot-my-password-how-do-i-reset-it.js\": [\n\t\t155,\n\t\t9,\n\t\t1\n\t],\n\t\"./en/leads/LeadAuth\": [\n\t\t203,\n\t\t9,\n\t\t13\n\t],\n\t\"./en/leads/LeadAuth.js\": [\n\t\t203,\n\t\t9,\n\t\t13\n\t],\n\t\"./en/leads/LeadHome\": [\n\t\t204,\n\t\t9,\n\t\t14\n\t],\n\t\"./en/leads/LeadHome.js\": [\n\t\t204,\n\t\t9,\n\t\t14\n\t],\n\t\"./en/leads/LeadSignUp\": [\n\t\t205,\n\t\t9,\n\t\t15\n\t],\n\t\"./en/leads/LeadSignUp.js\": [\n\t\t205,\n\t\t9,\n\t\t15\n\t],\n\t\"./en/leads/Transfer\": [\n\t\t206,\n\t\t9,\n\t\t16\n\t],\n\t\"./en/leads/Transfer.js\": [\n\t\t206,\n\t\t9,\n\t\t16\n\t],\n\t\"./en/leads/TransferU2B\": [\n\t\t207,\n\t\t9,\n\t\t27\n\t],\n\t\"./en/leads/TransferU2B.js\": [\n\t\t207,\n\t\t9,\n\t\t27\n\t],\n\t\"./en/leads/TransferU2S\": [\n\t\t208,\n\t\t9,\n\t\t17\n\t],\n\t\"./en/leads/TransferU2S.js\": [\n\t\t208,\n\t\t9,\n\t\t17\n\t],\n\t\"./en/leads/TransferU2U\": [\n\t\t209,\n\t\t9,\n\t\t18\n\t],\n\t\"./en/leads/TransferU2U.js\": [\n\t\t209,\n\t\t9,\n\t\t18\n\t],\n\t\"./en/leads/_LeadDefault\": [\n\t\t210,\n\t\t9,\n\t\t19\n\t],\n\t\"./en/leads/_LeadDefault.js\": [\n\t\t210,\n\t\t9,\n\t\t19\n\t],\n\t\"./en/leads/_LeadTemplateHelp\": [\n\t\t211,\n\t\t9,\n\t\t20\n\t],\n\t\"./en/leads/_LeadTemplateHelp.js\": [\n\t\t211,\n\t\t9,\n\t\t20\n\t],\n\t\"./en/toasts/ToastAuth\": [\n\t\t212,\n\t\t9,\n\t\t21\n\t],\n\t\"./en/toasts/ToastAuth.js\": [\n\t\t212,\n\t\t9,\n\t\t21\n\t],\n\t\"./en/toasts/ToastHome\": [\n\t\t213,\n\t\t9,\n\t\t6\n\t],\n\t\"./en/toasts/ToastHome.js\": [\n\t\t213,\n\t\t9,\n\t\t6\n\t],\n\t\"./en/toasts/ToastSignUp\": [\n\t\t214,\n\t\t9,\n\t\t22\n\t],\n\t\"./en/toasts/ToastSignUp.js\": [\n\t\t214,\n\t\t9,\n\t\t22\n\t],\n\t\"./en/toasts/_ToastDefault\": [\n\t\t156,\n\t\t9,\n\t\t2\n\t],\n\t\"./en/toasts/_ToastDefault.js\": [\n\t\t156,\n\t\t9,\n\t\t2\n\t],\n\t\"./en/topics/common-questions\": [\n\t\t157,\n\t\t9,\n\t\t3\n\t],\n\t\"./en/topics/common-questions.js\": [\n\t\t157,\n\t\t9,\n\t\t3\n\t],\n\t\"./en/topics/my-account\": [\n\t\t215,\n\t\t9,\n\t\t28\n\t],\n\t\"./en/topics/my-account.js\": [\n\t\t215,\n\t\t9,\n\t\t28\n\t],\n\t\"./lv/PrivacyPolicy\": [\n\t\t216,\n\t\t9,\n\t\t11\n\t],\n\t\"./lv/PrivacyPolicy.js\": [\n\t\t216,\n\t\t9,\n\t\t11\n\t],\n\t\"./lv/UserAgreement\": [\n\t\t217,\n\t\t9,\n\t\t12\n\t],\n\t\"./lv/UserAgreement.js\": [\n\t\t217,\n\t\t9,\n\t\t12\n\t],\n\t\"./lv/articles/i-forgot-my-password-how-do-i-reset-it\": [\n\t\t158,\n\t\t9,\n\t\t4\n\t],\n\t\"./lv/articles/i-forgot-my-password-how-do-i-reset-it.js\": [\n\t\t158,\n\t\t9,\n\t\t4\n\t],\n\t\"./lv/leads/LeadAuth\": [\n\t\t218,\n\t\t9,\n\t\t23\n\t],\n\t\"./lv/leads/LeadAuth.js\": [\n\t\t218,\n\t\t9,\n\t\t23\n\t],\n\t\"./lv/leads/LeadHome\": [\n\t\t219,\n\t\t9,\n\t\t24\n\t],\n\t\"./lv/leads/LeadHome.js\": [\n\t\t219,\n\t\t9,\n\t\t24\n\t],\n\t\"./lv/leads/LeadSignUp\": [\n\t\t220,\n\t\t9,\n\t\t25\n\t],\n\t\"./lv/leads/LeadSignUp.js\": [\n\t\t220,\n\t\t9,\n\t\t25\n\t],\n\t\"./lv/leads/_LeadDefault\": [\n\t\t221,\n\t\t9,\n\t\t26\n\t],\n\t\"./lv/leads/_LeadDefault.js\": [\n\t\t221,\n\t\t9,\n\t\t26\n\t],\n\t\"./lv/toasts/ToastAuth\": [\n\t\t222,\n\t\t9,\n\t\t8\n\t],\n\t\"./lv/toasts/ToastAuth.js\": [\n\t\t222,\n\t\t9,\n\t\t8\n\t],\n\t\"./lv/toasts/ToastHome\": [\n\t\t223,\n\t\t9,\n\t\t7\n\t],\n\t\"./lv/toasts/ToastHome.js\": [\n\t\t223,\n\t\t9,\n\t\t7\n\t],\n\t\"./lv/toasts/_ToastDefault\": [\n\t\t159,\n\t\t9,\n\t\t0\n\t],\n\t\"./lv/toasts/_ToastDefault.js\": [\n\t\t159,\n\t\t9,\n\t\t0\n\t],\n\t\"./lv/topics/common-questions\": [\n\t\t160,\n\t\t9,\n\t\t5\n\t],\n\t\"./lv/topics/common-questions.js\": [\n\t\t160,\n\t\t9,\n\t\t5\n\t],\n\t\"./lv/topics/my-account\": [\n\t\t224,\n\t\t9,\n\t\t29\n\t],\n\t\"./lv/topics/my-account.js\": [\n\t\t224,\n\t\t9,\n\t\t29\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 97;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}