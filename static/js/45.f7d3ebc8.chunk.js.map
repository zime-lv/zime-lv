{"version":3,"sources":["components/_templates/Container.js"],"names":["args","props","Object","assign","namespace","visible","useTranslation","t","key","className","React","Children","map","children","child","cloneElement","styles","getJSX"],"mappings":"kLAiBe,mBAACA,GAId,IAKMC,EAAQC,OAAOC,OALN,CAAEC,UAAW,YAAaC,SAAS,GAKZL,GAaxBM,YAAe,CAACL,EAAMG,YAA5BG,EAgCR,OAAO,oCA3BQ,WACb,GAAIN,EAAMI,QAAS,CACjB,IAAIG,EAAM,EACV,OACE,yBAAKC,UAAU,kBACZC,IAAMC,SAASC,IAAIZ,EAAKa,UAAU,SAACC,GAClC,MAAqB,kBAAVA,EACFA,GAEPN,IACOO,uBAAaD,EAAD,eACdd,EADc,CAEjBgB,OAAQ,KACRR,IAAKA,UAOf,OAAO,qCAODS","file":"static/js/45.f7d3ebc8.chunk.js","sourcesContent":["/**\r\n * CSS\r\n ============================================================================ */\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { cloneElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Container\", visible: false }; // TODO: adjust namespace\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      let key = 0;\r\n      return (\r\n        <div className=\"custom-overlay\">\r\n          {React.Children.map(args.children, (child) => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                ...args,\r\n                styles: null,\r\n                key: key,\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n"],"sourceRoot":""}