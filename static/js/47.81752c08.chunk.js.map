{"version":3,"sources":["components/currencyContainer/CurrencyContainer_BAK.js"],"names":["args","props","Object","assign","namespace","barrelGetters","settings","accordionViewCurrency","activePageCurrencies","accountNumber","barrelSetters","setAccordionViewCurrency","setRedirectTo","setResponseProps","getCurrencies","barrelFunctions","t","useTranslation","length","defaultActiveKey","Toggle","as","Card","Header","eventKey","style","cursor","onClick","Collapse","Body"],"mappings":"yHAAA,qEAkBe,mBAACA,GAId,IAKMC,EAAQC,OAAOC,OALN,CAAEC,UAAW,qBAKUJ,GATf,EAmBnBC,EAAMI,cAJRC,EAfqB,EAerBA,SACAC,EAhBqB,EAgBrBA,sBACAC,EAjBqB,EAiBrBA,qBACAC,EAlBqB,EAkBrBA,cAlBqB,EAwBnBR,EAAMS,cAHRC,EArBqB,EAqBrBA,yBACAC,EAtBqB,EAsBrBA,cACAC,EAvBqB,EAuBrBA,iBAEMC,EAAkBb,EAAMc,gBAAxBD,cAMAE,EAAMC,YAAe,CAAChB,EAAMG,YAA5BY,EA4BR,OALsB,OAAlBP,GAAwBG,EAAc,aAMN,qBAA3BN,EAAQ,YACY,OAA3BA,EAAQ,YACRA,EAAQ,WAAeY,OAAS,EAEzB,qCAGL,oCACE,kBAAC,IAAD,CAAWC,iBAAkBZ,GAC3B,kBAAC,IAAD,KACE,kBAAC,IAAUa,OAAX,CACEC,GAAIC,IAAKC,OACTC,SAAS,aACTC,MAAO,CAAEC,OAAQ,WACjBC,QAtCa,WACO,eAA1BpB,GACFM,EAAiB,MACjBF,EAAyB,cACzBG,EAAcN,IAEdG,EAAyB,QAkChBK,EAAE,eAGL,kBAAC,IAAUY,SAAX,CAAoBJ,SAAS,cAC3B,kBAAC,IAAKK,KAAN,KACE,kBAAC,UAAe7B,MAK0B,qBAAxCM,EAAQ,yBACdA,EAAQ,yBACN,kBAAC,IAAD,KACE,kBAAC,IAAUc,OAAX,CACEC,GAAIC,IAAKC,OACTC,SAAS,uBACTC,MAAO,CAAEC,OAAQ,WACjBC,QA/CmB,WACjChB,EAC4B,yBAA1BJ,EACI,uBACA,QA6CSS,EAAE,0BAGL,kBAAC,IAAUY,SAAX,CAAoBJ,SAAS,wBAC3B,kBAAC,IAAKK,KAAN,KACE,kBAAC,UAAyB7B","file":"static/js/47.81752c08.chunk.js","sourcesContent":["/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../settings.json\";\r\n// import Card from \"../card\";\r\nimport Currencies from \"../currencies\";\r\nimport CurrencyRegistration from \"../currencyRegistration\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    accordionViewCurrency,\r\n    activePageCurrencies,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setAccordionViewCurrency,\r\n    setRedirectTo,\r\n    setResponseProps,\r\n  } = props.barrelSetters;\r\n  const { getCurrencies } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const ToggleCurrencies = () => {\r\n    if (accordionViewCurrency !== \"currencies\") {\r\n      setResponseProps(null);\r\n      setAccordionViewCurrency(\"currencies\");\r\n      getCurrencies(activePageCurrencies);\r\n    } else {\r\n      setAccordionViewCurrency(null);\r\n    }\r\n  };\r\n\r\n  const ToggleCurrencyRegistration = () => {\r\n    setAccordionViewCurrency(\r\n      accordionViewCurrency !== \"currencyRegistration\"\r\n        ? \"currencyRegistration\"\r\n        : null\r\n    );\r\n  };\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  if (\r\n    typeof settings[\"currencies\"] !== \"undefined\" &&\r\n    settings[\"currencies\"] !== null &&\r\n    settings[\"currencies\"].length < 2\r\n  ) {\r\n    return <></>; // currency creation is disabled\r\n  } else {\r\n    return (\r\n      <>\r\n        <Accordion defaultActiveKey={accordionViewCurrency}>\r\n          <Card>\r\n            <Accordion.Toggle\r\n              as={Card.Header}\r\n              eventKey=\"currencies\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={ToggleCurrencies}\r\n            >\r\n              {t(\"Currencies\")}\r\n            </Accordion.Toggle>\r\n\r\n            <Accordion.Collapse eventKey=\"currencies\">\r\n              <Card.Body>\r\n                <Currencies {...args} />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n\r\n          {typeof settings[\"currencyCreationAllowed\"] !== \"undefined\" &&\r\n            settings[\"currencyCreationAllowed\"] && (\r\n              <Card>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey=\"currencyRegistration\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={ToggleCurrencyRegistration}\r\n                >\r\n                  {t(\"Currency Registration\")}\r\n                </Accordion.Toggle>\r\n\r\n                <Accordion.Collapse eventKey=\"currencyRegistration\">\r\n                  <Card.Body>\r\n                    <CurrencyRegistration {...args} />\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            )}\r\n        </Accordion>\r\n      </>\r\n    );\r\n  }\r\n};\r\n"],"sourceRoot":""}