{"version":3,"sources":["components/form/index.js","components/form/Form.js"],"names":["args","props","Object","assign","initialValues","callbacks","schema","yup","key","validationSchema","onSubmit","console","log","handleSubmit","noValidate","React","Children","map","children","child","cloneElement","styles"],"mappings":"yIAAA,qE,iCCAA,iDAKe,mBAAAA,GACb,IAIMC,EAAQC,OAAOC,OAJN,CACbC,cAAe,GACfC,UAAW,IAEyBL,GAGhCM,GAFUL,EAAMI,UAEPE,IAAW,KAuCtBC,EAAM,EAEV,OACE,kBAAC,IAAD,CACEC,iBAAkBH,EAClBI,SAAUC,QAAQC,IAClBR,cAAeH,EAAMG,gBAEpB,gBAAGS,EAAH,EAAGA,aAAH,OACC,kBAAC,IAAD,CAAMC,YAAU,EAACJ,SAAUG,GACxBE,IAAMC,SAASC,IAAIjB,EAAKkB,UAAU,SAAAC,GACjC,MAAqB,kBAAVA,EACFA,GAEPX,IACOY,uBAAaD,EAAO,CACzBE,OAAQ,KACRb,IAAKA","file":"static/js/4.b059251b.chunk.js","sourcesContent":["export { default } from \"./Form\";\r\n","import React, { cloneElement } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport default args => {\r\n  let defaults = {\r\n    initialValues: {},\r\n    callbacks: {}\r\n  };\r\n  const props = Object.assign(defaults, args);\r\n  let callbacks = props.callbacks;\r\n\r\n  const schema = yup.object({\r\n    // fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    // toAccount: yup.string().required(t(\"To Account is required\")),\r\n    // amount: yup.string().required(t(\"Amount is required\"))\r\n  });\r\n\r\n  //   const handleChange = () => {\r\n  //     console.log(\"handleChange\");\r\n  //   };\r\n  //   const handleBlur = () => {\r\n  //     console.log(\"handleBlur\");\r\n  //   };\r\n  //   const values = () => {\r\n  //     console.log(\"values\");\r\n  //   };\r\n  //   const touched = () => {\r\n  //     console.log(\"touched\");\r\n  //   };\r\n  //   const isValid = () => {\r\n  //     console.log(\"isValid\");\r\n  //   };\r\n  //   const validateForm = () => {\r\n  //     console.log(\"validateForm\");\r\n  //   };\r\n  //   const errors = () => {\r\n  //     console.log(\"errors\");\r\n  //   };\r\n\r\n  //   const callbacks = {\r\n  //     handleSubmit,\r\n  //     handleChange,\r\n  //     handleBlur,\r\n  //     values,\r\n  //     touched,\r\n  //     isValid,\r\n  //     validateForm,\r\n  //     errors\r\n  //   };\r\n\r\n  let key = 0;\r\n\r\n  return (\r\n    <Formik\r\n      validationSchema={schema}\r\n      onSubmit={console.log}\r\n      initialValues={props.initialValues}\r\n    >\r\n      {({ handleSubmit }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          {React.Children.map(args.children, child => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                styles: null,\r\n                key: key\r\n              });\r\n            }\r\n          })}\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n"],"sourceRoot":""}