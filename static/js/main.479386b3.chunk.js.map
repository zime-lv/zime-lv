{"version":3,"sources":["components/locale lazy /^/.*$/ groupOptions: {} namespace object","translations/i18n.js","utils/config.js","utils/state.js","components/card/Card.js","components/submitButton/SubmitButton.js","components/errorBoundary/ErrorBoundary.js","components/modalMessage/ModalMessage.js","components/accountRegistration/AccountRegistration.js","components/pagination/Pagination.js","components/transactions/Transactions.js","components/shareholder/Shareholder.js","components/shares/Shares.js","components/transfer/Balance.js","components/transfer/TransferToSelf.js","components/tanInput/TanInput.js","components/transfer/TransferToPerson.js","components/transfer/TransferToBusiness.js","components/businessRegistration/businessRegistration.js","components/purposeRegistration/PurposeRegistration.js","components/shareholderRegistration/shareholderRegistration.js","components/myBusiness/MyBusiness.js","components/userEditor/UserEditor.js","components/currencies/Currencies.js","components/currencyRegistration/CurrencyRegistration.js","components/idleTimer/IdleTimer.js","utils/useInterval.js","utils/useEventListener.js","components/login/LogIn.js","components/pages/summary/Summary.js","components/currencyContainer/CurrencyContainer.js","components/transfer/Transfer.js","components/contact/Contact.js","utils/sockets.js","components/signup/SignUp.js","components/alert/Alert.js","components/language-selector/LanguageSelector.js","components/pages/main/Main.js","utils/useTimeout.js","components/auth/Auth.js","components/validateEmail/ValidateEmail.js","components/changePassword/ChangePassword.js","components/logout/Logout.js","components/passwordReset/passwordReset.js","components/pages/underConstruction/UnderConstruction.js","components/underConstruction/UnderConstruction.js","components/pages/notConnected/NotConnected.js","components/notConnected/NotConnected.js","utils/userResponseHandler.js","Dispatcher.js","utils/requestHandler.js","utils/userErrorHandler.js","utils/systemErrorHandler.js","utils/systemResponseHandler.js","components/loading/Loading.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","defaultNS","keySeparator","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","config","dev","uri","ENDPOINT","window","location","hostname","useStickyState","defaultValue","key","useState","stickyValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","args","defaults","title","navigation","undefined","footer","header","body","headerContent","onNavigationClick","props","assign","Footer","Header","className","length","Title","Nav","variant","defaultActiveKey","navigationdefaultActiveKey","item","Item","Link","href","link","onClick","style","color","name","Body","React","Children","children","child","cloneElement","styles","caption","request","namespace","visible","marginTop","timeout","onSubmit","barrelGetters","barrelSetters","setRequest","barrelFunctions","showMessage","requestExpired","Button","type","block","disabled","Spinner","as","animation","size","role","aria-hidden","hidden","ErrorBoundary","state","hasError","error","errorInfo","console","log","this","Component","centered","message","onHide","file","backdrop","useTranslation","ExternalFile","lazy","Modal","aria-labelledby","closeButton","Navbar","borderRadius","background","backgroundColor","boxShadow","Brand","src","width","height","maxHeight","overflowY","signedIn","accountNumber","userData","accountPhotoPath","language","userBirthYear","userBirthMonth","userBirthDay","userBirthDateError","userTimezone","setUserBirthYear","setUserBirthMonth","setUserBirthDay","setUserBirthDateError","setUserTimezone","getReviser","getWorkplace","sendRequest","formatDate","userAgreementShow","setUserAgreementShow","privacyPolicyShow","setPrivacyPolicyShow","schema","yup","timezone","required","birthYear","birthMonth","birthDay","timezones_sorted","timezones","composeDate","year","month","day","newDate","dateString","match","datepart","split","parseInt","leapYear","isValidDate","yearNow","Date","getFullYear","Alert","Heading","Trans","i18nKey","ModalMessage","show","component","handleSubmit","handleChange","values","handleBlur","touched","errors","isValid","validateForm","setFieldValue","Form","noValidate","Row","Group","Col","controlId","Label","Control","custom","onChange","target","isInvalid","Array","from","Feedback","monthName","toLocaleString","monthNumber","toString","padStart","dayNumber","element","Offset","Name","paddingBottom","KeyboardArrowRight","onMouseDown","SubmitButton","validationSchema","data","birthDate","reviser","workplace","email","sendAccountRegistrationRequest","initialValues","countItems","itemsPerPage","active","align","pages","Math","ceil","getPages","items","number","push","Pagination","Ellipsis","textAlign","display","padding","margin","First","Prev","Next","Last","getJSX","transactions","countTransactions","activePageTransactions","transactionsPerPage","responseProps","getTransactions","getArrayObject","format","formatPerCent","cnt","transactionsRequest","transactionsRequestStatus","status","ListGroup","transaction","keyTransactions","business_title","conv_amount","created","sender_firstname","sender_lastname","purpose_id","purpose_title","recipient_id","roles","share","share_per_cent","from_account","to_account","i_am_recipient","t_from_account","t_to_account","roles_available","arrRoles","shares_available","action","float","ArrowRightAlt","Badge","pill","purpose","shareholder","rangeControl","sharePerCent","businessTitle","purposeTitle","businessOwnerFirstname","businessOwnerLastname","sharesCreated","purposeShareholders","setPurposeShareholders","userQuery","setUserQuery","delayedQuery","useRef","_","debounce","q","sendQuery","current","onClose","shareholder_id","ps","sharesLabelId","Toast","minWidth","firstname","lastname","Settings","fontSize","min","max","step","shares","countShares","activePageShares","sharesPerPage","getShares","keyShares","owner_firstname","owner_lastname","shares_created","shares_roles","shares_share","Shareholder","accordionView","setAccountType","setRedirectTo","setAccordionView","getAccountData","userDataParsed","onAccountTypeSelected","available","acc_curr","acc_cred","acc_save","toggleView","view","newView","Accordion","Toggle","Card","eventKey","cursor","Collapse","Text","Transactions","Shares","accountType","currencyAbbr","transferFromAccount","transferToAccount","transferAmount","setTransferFromAccount","setTransferToAccount","setTransferAmount","parseLocaleNumber","refAmount","createRef","fromAccount","toAccount","amount","matches","RegExp","InputGroup","Prepend","placeholder","aria-describedby","ref","uid","Intl","NumberFormat","notation","minimumFractionDigits","useGrouping","transferToSelf","tanRequired","tanInputTAN","setTanRequired","setTanInputTAN","refTAN","tan","transferToUID","transferDescription","setTransferRequest","setTransferToUID","setTransferDescription","refPersonalID","refDescription","toPersonalID","TanInput","rows","description","transferType","transferToPerson","transferToPurpose","setTransferToPurpose","refPurposeID","purposeID","currency","transferToBusiness","businessRegistrationAddTitle","businessRegistrationAddDescription","setBusinessRegistrationAddTitle","setBusinessRegistrationAddDescription","barrelEventHandlers","onBusinessRegistration","refBusinessTitle","refBusinessDescription","trim","businessDescription","optional","requestInsert","requestUpdate","businessID","category","subcategory","subcategory2","keywords","barrels","purposeRegistrationTitle","businessPurposes","purposeRegistrationDescription","purposeRegistrationCategory","purposeRegistrationSubcategory","purposeRegistrationSubcategory2","purposeRegistrationKeywords","setPurposeRegistrationTitle","setBusinessPurposes","setPurposeRegistrationDescription","setPurposeRegistrationCategory","setPurposeRegistrationSubcategory","setPurposeRegistrationSubcategory2","setPurposeRegistrationKeywords","onPurposeRegistration","refPurposeTitle","refPurposeDescription","refPurposeCategory","refPurposeSubcategory","refPurposeSubcategory2","refPurposeKeywords","purposeDescription","purposeCategory","purposeSubcategory","purposeSubcategory2","purposeKeywords","RegisterPurpose","shareholderRoles","typeError","personalID","userBusinesses","countBusinesses","businessesPerPage","activePageBusinesses","userBusinessesLoaded","activeBusiness","activeBusinessID","countBusinessPurposes","businessPurposesPerPage","activePageBusinessPurposes","activeBusinesPurpose","activePurposeProperty","activePurposeData","setActiveBusiness","setActiveBusinesPurpose","setActivePurposeProperty","setActivePurposeData","getBusinesses","getBusinessPurposes","getPurposeShareholders","menuItems","purposes","countShareholders","business","keyBusiness","keyPurpose","business_id","TogglePurpose","whiteSpace","Edit","stopPropagation","Tab","Pane","bg","Add","keyShareholder","bp","purpose_status","Check","label","checked","jsx","date","businessSince","DateTimeFormat","ToggleBusiness","Store","Container","sm","Content","border","PurposeRegistration","mode","userEditorEditFirstname","userEditorFirstname","userEditorEditLastname","userEditorLastname","userEditorEditEmail","userEditorEmail","userEditorEditPassword","userEditorPassword","userEditorPasswordVisible","userEditorSubmitButtonVisible","setUserEditorEditFirstname","setUserEditorFirstname","setUserEditorEditLastname","setUserEditorLastname","setUserEditorEmail","setUserEditorEditEmail","setUserEditorEditPassword","setUserEditorPassword","setUserEditorPasswordVisible","setUserEditorSubmitButtonVisible","refFirstName","refLastName","refEmail","refPassword","togglePassword","yupObject","firstName","lastName","password","Close","Append","VisibilityOff","Visibility","sendUserRegistrationRequest","currencies","settings","countCurrencies","activePageCurrencies","currenciesPerPage","setCurrencyAbbr","getCurrencies","formatExchangeRate","onCurrencySelected","currency_id","onPageSelect","Table","responsive","striped","bordered","hover","keyCurrency","abbr","rate","region","includes","aria-label","inline","curr_abbr","curr_title","curr_region","curr_rate","currencyCode","currencyName","currencyRegion","currencyNewRate","setCurrencyCode","setCurrencyName","setCurrencyRegion","setCurrencyNewRate","refAbbr","refTitle","refRegion","refRate","timestamp","stage2","stage3","onTick","onTimerReset","onTimeout","events","session","onSessionTimeout","seconds","setSeconds","modalMessageShow","setModalMessageShow","callback","delay","savedCallback","setInterval","clearInterval","useInterval","eventHandler","i","addEventListener","removeEventListener","useEventListener","currTime","timeFormatted","minute","second","modalMessage","fontWeight","OverlayTrigger","placement","overlay","Tooltip","AvTimer","ip","logInEmail","logInPassword","setLoggingIn","setUpdateInterval","setLogInEmail","setLogInPassword","getUri","fluid","sendUserLogInRequest","sessionTimeout","useLocation","paddingRight","paddingLeft","PowerSettingsNew","IdleTimer","collapseOnSelect","expand","pathname","aria-controls","pageBody","exact","path","Balance","AccountRegistration","UserEditor","accordionViewCurrency","setAccordionViewCurrency","Currencies","CurrencyRegistration","CurrencyContainer","MyBusiness","onTransferTypeChange","transferCard","setTransferCard","TransferToSelf","TransferToPerson","TransferToBusiness","Transfer","contactSubject","contactMessage","setContactSubject","setContactMessage","refSubject","refMessage","subject","sender","Contact","socket","openSocket","connect","secure","reconnect","sendData","emit","signUpFirstName","signUpLastName","signUpEmail","signUpPassword","setSignUpFirstName","setSignUpLastName","setSignUpEmail","setSignUpPassword","passwordVisible","setPasswordVisible","validateEmail","info","onAlertClose","errorStrings","infoStrings","msgError","msgInfo","dismissible","changeLanguage","lng","selectLanguage","serverResponseReceived","instance","dailyAllowanceDispatched","externalRequest","updateInterval","cartContent","validateTokenEmail","passwordResetTokenValidated","validateTokenPasswordReset","connected","isExternalRequest","setRequestTimedOut","setDailyAllowanceDispatched","setSignedIn","setIsExternalRequest","getIP","processUserResponse","getCart","getCartPurposes","sendEmailValidationRequest","sendPasswordResetRequest","getContainerClass","getRedirect","onRedirect","onSessionStart","onSessionEnd","setTimeout","clearTimeout","useTimeout","customer","cart","wrapperClass","innerClass","appClass","Summary","Login","SignUp","cartPurposes","Cart","priceTotal","priceReal","price","product_found","find","products","product","Auth","validationTokenEmail","validationTokenEmailResent","setValidateTokenEmail","getUrlParam","token","ValidateEmail","passwordResetTokenEmail","ChangePassword","setLanguage","onLogOut","tempError","tempInfo","tempLanguage","Logout","passwordResetEmail","setValidateTokenPasswordReset","setPasswordResetEmail","PasswordReset","LanguageSelector","marginLeft","marginRight","Build","UnderConstruction","PowerOff","NotConnected","loggingIn","transferRequest","lastInsertId","setSession","setResponseProps","setSettings","setCurrencies","setTransactions","setShares","setCountCurrencies","setCountTransactions","setCountShares","setConnected","setUserData","setCartContent","setCurrencyRate","setLastInsertId","setAccountNumber","setUserSequence","setUID","setUserBusinesses","setCountBusinesses","setUserBusinessesLoaded","setCartPurposes","setCountBusinessPurposes","setAccountPhotoPath","setPasswordResetTokenValidated","setPasswordResetTokenEmail","setValidationTokenEmail","setValidationTokenEmailResent","getTransactionById","sortObjectArray","getObjectArrayElementIndex","showTanInput","responseFound","onResponse","res","reqData","tempRP","filter","saveResponseProps","results","sequence","content","queryCnt","insertId","tags","resent","affectedRows","currency_abbr","isNaN","currency_rate","count_businesses","count_purposes","index","splice","temp","now","count_currencies","count_transaction_positions","count_shares","isLocalhost","setDebug","loggingOut","setLoggingOut","pageLoading","setPageLoading","setServerResponseReceived","requestTimedOut","setInstance","uuidv4","setSessionTimeout","reconnecting","setReconnecting","setIP","setExternalRequest","currencyRate","setActivePageCurrencies","setActivePageTransactions","setActivePageShares","setCurrenciesPerPage","setTransactionsPerPage","setSharesPerPage","userSequence","setBusinessesPerPage","setActivePageBusinesses","setActiveBusinessID","setBusinessPurposesPerPage","setActivePageBusinessPurposes","redirectTo","options","setTransferType","setError","setInfo","processRequest","requestFound","onRequest","dt","fullyear","getMonth","getDate","slice","initial","toUpperCase","icode","charCodeAt","scode","tcode","requestHandler","context","errorFound","onError","userErrorHandler","userResponseHandler","processSystemResponse","systemErrorHandler","hideMessage","systemResponseHandler","param","queryString","search","URLSearchParams","get","msg","array","property","sort","a","b","properties","indexOf","retIntl","maximumFractionDigits","parseFloat","substr","ts","hour","isUTC","locales","diff","getTimezoneOffset","moment","add","toDate","to","fetch","method","headers","json","catch","page","limit","newPage","selected","stringNumber","locale","parts_local","formatToParts","group","decimal","forEach","replace","on","onSignUp","onTransferSuccess","onTransfer","startSession","endSession","onSessionReset","responseData","setResponseData","useSocket","latency","reason","attemptNumber","useSystemSocket","clear","root","document","getElementById","construction","ReactDOM","render","fallback","Dispatcher"],"mappings":"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C,MAAMyb,IAC9B7K,oBAAqB7Q,KAAKC,MAAM4Q,IAChCmU,cACAC,iBACAqD,mBACAC,kBACAC,eACAC,kBACA5Q,gCACAC,sCACAkB,4BACAE,kCACAC,+BACAC,kCACAC,mCACAC,+BACA6E,2BACAC,uBACAC,0BACAC,sBACAC,uBACAC,mBACAC,0BACAC,sBACAC,6BACAC,iCACA4O,sBACAnX,eAEAD,eAEA6T,sBACAE,8BACAD,+BACA8C,2BACAN,wBACAC,8BACAyB,gBAAiBpuB,KAAKC,MAAMmuB,IAC5B1Z,uBACAC,qBACAC,kBACA8B,iBACAa,qBACAZ,uBACA2Q,kBACAC,kBACA/gB,iBACAC,kBACAC,gBACAC,sBACAC,gBACAob,gBACAC,gBACAC,kBACAC,mBACA5b,YACA8Q,gBAEA/Q,oBACA/B,SACA0kB,SAOI7lB,GAAgB,CACpB6uB,WACAE,gBACAjN,eAGAmN,iBACAhvB,aACAivB,4BACAhI,qBAEAkI,cACAjE,oBAEAD,aAEAoE,qBAEAlE,eACAqE,SACA1N,qBACAsJ,iBACAC,mBACAC,aACAvb,oBACAsT,4BACAkI,sBACAC,wBACAC,kBACAkE,2BACAC,6BACAC,uBACAC,wBACAC,0BACAC,oBACAtE,gBACA6D,mBACA1F,eACA8B,eAEAxE,eACAD,+BACAE,wBACAqI,sBACA7D,kBACAvO,mBACAwO,mBAEA/b,iBACAgc,mBACAC,oBACAC,mBACAnc,kBACAoc,UACAC,qBACAC,sBACA+D,wBACAC,2BACA/D,2BACA9T,qBACA8X,uBACAja,uBACAkW,mBACAC,4BACA+D,8BACAC,iCACA/X,2BACAC,4BAEAC,wBACAhL,0BACAsU,iBACAC,oBACAqD,sBACAC,qBACAC,kBACAC,qBACA9Q,mCACAC,yCACAuB,+BACAE,qCACAC,kCACAC,qCACAC,sCACAC,kCACAgF,8BACAC,0BACAC,6BACAC,yBACAE,0BACAD,sBACAE,6BACAC,yBACAC,gCACAC,oCACAoO,yBACAnX,kBAEAqZ,uBACAhD,yBACAa,iCACAoC,kCACAC,8BACAC,2BACAC,iCACApZ,sBACA/B,0BACAC,wBACAC,qBACA8B,oBACAW,wBACAV,0BACA0Q,qBACAC,qBACA5gB,oBACAC,qBACAC,mBACAC,yBACAC,mBACAmb,mBACAC,mBACAC,qBACAC,sBACAjM,mBAeIlP,GAAc,SAAC,GAA0B,IAAxBpK,EAAuB,EAAvBA,IAAuB,IAAlB+O,YAAkB,MAAX,KAAW,EAC5C,OAAIkoB,GAAe,CAAEj3B,MAAK+O,OAAMoX,UAAStN,IAAK,MAAOkD,cAEnDuZ,GAA0B,IACnB,IAEP7tB,QAAQC,IAAI,gCACL0jB,GAAS,CAAEprB,MAAK6Y,IAAK,MAAOsN,UAASpX,QAAQxN,KAQlD01B,GAAiB,SAAC,GAA0C,IAAxCj3B,EAAuC,EAAvCA,IAAK+O,EAAkC,EAAlCA,KAAMoX,EAA4B,EAA5BA,QAAStN,EAAmB,EAAnBA,IAAKkD,EAAc,EAAdA,QAOjD,OANAhN,EAAK6d,SAAWA,EAGhBvmB,EAAWrG,GCzvBA,SAACuD,GAId,IAKMU,EAAQpD,OAAOqD,OALN,GAKuBX,GAC9BvD,EAAqCiE,EAArCjE,IAAK+O,EAAgC9K,EAAhC8K,KAAMoX,EAA0BliB,EAA1BkiB,QAAStN,EAAiB5U,EAAjB4U,IAAKkD,EAAY9X,EAAZ8X,QAVV,EAemBA,EAAQ5V,cAA1C5E,EAfe,EAefA,MAAO8H,EAfQ,EAeRA,SAAUitB,EAfF,EAeEA,aAfF,EAsBnBva,EAAQ3V,cALV4rB,EAjBqB,EAiBrBA,YACAM,EAlBqB,EAkBrBA,OAlBqB,EAmBrBF,iBAnBqB,YAuBZrW,EAAQzV,iBAGnB,IAAI4wB,GAAe,EAKbC,EAAY,SAACn3B,EAAKymB,GAClByQ,GACAl3B,IAAQiE,EAAMjE,KAAe,YAARA,IACvBymB,IACAyQ,GAAe,IAyDnB,OAjDAC,EAAU,gBAAgB,WACxBnF,EAAYhvB,KAAKM,UAAUyL,IAC3Bqc,GAAS,CAAEprB,MAAK+O,OAAM8J,MAAKsN,WAAW5kB,MAGxC41B,EAAU,qBAAqB,WAC7B,IAAMC,EAAK,IAAIprB,KAAK+C,EAAKC,WACnBqoB,EAAWD,EAAGnrB,cAAcmC,WAC5B/C,GAAS+rB,EAAGE,WAAa,GAAGlpB,WAAWC,SAAS,EAAG,KACnD/C,EAAM8rB,EAAGG,UAAUnpB,WAAWC,SAAS,EAAG,KAEhDU,EAAKC,UAAL,UAAoBqoB,EAApB,YAAgChsB,EAAhC,YAAyCC,GAEzC8f,GAAS,CAAEprB,MAAK+O,OAAM8J,MAAKsN,WAAW5kB,MAGxC41B,EAAU,oBAAoB,WAC5B,IAAMC,EAAK,IAAIprB,KAAK+C,EAAKC,WACnBqoB,EAAWD,EAAGnrB,cAAcmC,WAC5BhD,EAAOisB,EAASG,OAAO,GACvBnsB,GAAS+rB,EAAGE,WAAa,GAAGlpB,WAAWC,SAAS,EAAG,KACnD/C,EAAM8rB,EAAGG,UAAUnpB,WAAWC,SAAS,EAAG,KAC1CW,EAAS,UAAM1D,GAAN,OAAYD,GAAZ,OAAoBD,GAC7BR,EAAWmE,EAAKnE,SAAS4sB,MAAM,EAAG,GAClCC,EAAUpuB,EAAS0L,SAASyiB,MAAM,EAAG,GAAGE,cACxCC,EAAQF,EAAQG,WAAW,GAAGxpB,WAAWC,SAAS,EAAG,KAE3DU,EAAK8oB,MAAL,UAAgBjtB,GAAhB,OAA2BoE,GAA3B,OAAuCyoB,GACvC1oB,EAAK+oB,MAAL,UAAgBltB,GAAhB,OAA2BoE,GAA3B,OAAuC2oB,GACvC5oB,EAAKnE,SAAWmE,EAAKnE,SAAS4sB,MAAM,GACpCzoB,EAAK8kB,SAAWyC,EAAaloB,WAAWC,SAAS,EAAG,KACpDU,EAAKC,UAAL,UAAoBqoB,EAApB,YAAgChsB,EAAhC,YAAyCC,GAEzCgnB,EAAOvjB,EAAK8O,YACZuN,GAAS,CAAEprB,MAAK+O,OAAM8J,MAAKsN,WAAW5kB,MAGxC41B,EAAU,WAAW,WAGnB,OAFA/L,GAAS,CAAEprB,MAAK+O,OAAM8J,MAAKsN,WAAW5kB,IAE/B,KASF21B,EDgqBEa,CAAe,CACpB/3B,MACA+O,OACAoX,UACAtN,MACAkD,aAYE4R,GAAsB,SAAC,GAAuB,IAArBpqB,EAAoB,EAApBA,KAAMwY,EAAc,EAAdA,QACnC,MAAuB,UAAhBxY,EAAKiO,OE9wBD,YAAwB,IAArBjO,EAAoB,EAApBA,KAAMwY,EAAc,EAAdA,QAShB9X,EAAQpD,OAAOqD,OALN,GAKuBX,GAK9BhC,EAAUwa,EAAQ5V,cAAlB5E,MAd4B,EAoBhCwa,EAAQ3V,cAJVC,EAhBkC,EAgBlCA,WACAisB,EAjBkC,EAiBlCA,OACAF,EAlBkC,EAkBlCA,iBACAjc,EAnBkC,EAmBlCA,cAEM5P,EAAgBwV,EAAQzV,gBAAxBC,YAIAvG,EAAwBiE,EAAxBjE,IAAKuH,EAAmBtD,EAAnBsD,MAAOywB,EAAY/zB,EAAZ+zB,QAChBz2B,GAAOkG,QAAQC,IAAR,iBAAsB1H,GAAOuH,EAAOywB,EAAS/zB,EAAO8X,GAG/D,IAAIkc,GAAa,EAKXC,EAAU,SAACnpB,EAAM0X,GACrB,IAAIwR,EAAJ,CADkC,kBAEZlpB,EAFY,GAE3BwkB,EAF2B,KAEtB/hB,EAFsB,KAKlC,OACG+hB,IAAQvzB,GAAOwR,IAAWjK,EAAM/G,MACxB,MAAR+yB,GAAe/hB,IAAWjK,EAAM/G,MACzB,YAAR+yB,KAEA9M,IACApgB,EAAW,MACX4xB,GAAa,GACN,KAwJX,OA/IAC,EAAQ,CAAC,IAAK,oBAAoB,WAGhC,OAFA3xB,EAAY,oBAAqB,QACjC4P,EAAc,cACP,KAMT+hB,EAAQ,CAAC,eAAgB,oBAAoB,WAE3C,OADA3xB,EAAY,mBAAoB,UACzB,KAGT2xB,EAAQ,CAAC,eAAgB,oBAAoB,WAE3C,OADA3xB,EAAY,mBAAoB,UACzB,KAGT2xB,EAAQ,CAAC,eAAgB,oBAAoB,WAE3C,OADA3xB,EAAY,mBAAoB,UACzB,KAGT2xB,EAAQ,CAAC,gBAAiB,oBAAoB,WAE5C,OADA3xB,EAAY,4BAA6B,UAClC,KAGT2xB,EAAQ,CAAC,yBAA0B,oBAAoB,WAErD,OAAO,KAGTA,EAAQ,CAAC,uBAAwB,oBAAoB,WAEnD,OADA3xB,EAAY,0BAA2B,UAChC,KAGT2xB,EAAQ,CAAC,gCAAiC,oBAAoB,WAE5D,OADA3xB,EAAY,0BAA2B,UAChC,KAGT2xB,EAAQ,CAAC,iBAAkB,oBAAoB,WAE7C,OAAO,KAGTA,EAAQ,CAAC,yBAA0B,oBAAoB,WAErD,OAAO,KAGTA,EAAQ,CAAC,cAAe,oBAAoB,WAE1C,OAAO,KAQTA,EAAQ,CAAC,eAAgB,oBAAoB,WAE3C,OADA3xB,EAAY,iBAAkB,UACvB,KAGT2xB,EAAQ,CAAC,kBAAmB,oBAAoB,WAG9C,OADA3xB,EAAY,sBAAuB,SAC5B,KAGT2xB,EAAQ,CAAC,aAAc,oBAAoB,WAGzC,OADA3xB,EAAY,cAAe,UACpB,KAGT2xB,EAAQ,CAAC,WAAY,oBAAoB,WAEvC,OAAO,KAGTA,EAAQ,CAAC,eAAgB,oBAAoB,WAE3C,OAAO,KAGTA,EAAQ,CAAC,yBAA0B,oBAAoB,WAErD,OAAO,KAGTA,EAAQ,CAAC,cAAe,oBAAoB,WAE1C,OAAO,KAGTA,EAAQ,CAAC,oBAAqB,oBAAoB,WAEhD,OADA3xB,EAAY,kCAAmC,UACxC,KAQT2xB,EAAQ,CAAC,mBAAoB,iBAAiB,WAI5C,OAHA5F,EAAO,MACPF,EAAiB,MACjB7rB,EAAY,iCAAkC,UACvC,KAGT2xB,EACE,CAAC,mBAAoB,6CACrB,WAIE,OAHA5F,EAAO,MACPF,EAAiB,MACjB7rB,EAAY,iCAAkC,UACvC,KAIX2xB,EAAQ,CAAC,uBAAwB,2BAA2B,WAE1D,OADA3xB,EAAY,iBAAkB,UACvB,KAGT2xB,EAAQ,CAAC,IAAK,0BAA0B,WAEtC,OADA3xB,EAAY,0BAA2B,UAChC,KAGT2xB,EAAQ,CAAC,YAAY,WAEnB,OADA3xB,EAAYgB,EAAM/G,KAAM,UACjB,MAGF,EFwkBD23B,CAAiB,CACf50B,KAAMA,EACNsV,IAAKA,GACLkD,QAASA,IAEXqc,GAAoB,CAClB70B,KAAMA,EACNsV,IAAKA,GACLkD,QAASA,KAIXsc,GAAwB,SAAC,GAAuB,IAArB90B,EAAoB,EAApBA,KAAMwY,EAAc,EAAdA,QAErC,MAAuB,UAAhBxY,EAAKiO,OG7xBD,YAAwB,IAArBjO,EAAoB,EAApBA,KAAMwY,EAAc,EAAdA,QAShB9X,EAAQpD,OAAOqD,OALN,GAKuBX,GATF,EAcDwY,EAAQ5V,cAAnC5E,EAd4B,EAc5BA,MAAc8qB,EAdc,EAcrB9kB,MAdqB,EAeIwU,EAAQ3V,cAAxCC,EAf4B,EAe5BA,WAAYuvB,EAfgB,EAehBA,gBACZrvB,EAAgBwV,EAAQzV,gBAAxBC,YAIAvG,EAAwBiE,EAAxBjE,IAAKuH,EAAmBtD,EAAnBsD,MAAOywB,EAAY/zB,EAAZ+zB,QAChBz2B,GACFkG,QAAQC,IAAR,wBAA6B1H,GAAOuH,EAAOywB,EAAS/zB,EAAO8X,GAE7D,IAAIkc,GAAa,EAKXC,EAAU,SAACnpB,EAAM0X,GACrB,IAAIwR,EAAJ,CADkC,kBAEZlpB,EAFY,GAE3BwkB,EAF2B,KAEtB/hB,EAFsB,KAIlC,OACG+hB,IAAQvzB,GAAOwR,IAAWjK,EAAM/G,MACxB,MAAR+yB,GAAe/hB,IAAWjK,EAAM/G,MACzB,YAAR+yB,KAEA9M,IACApgB,EAAW,MACX4xB,GAAa,GACN,KA4CX,OA1BAC,EAAQ,CAAC,gBAAiB,SAAS,WAMjC,MALiB,uBAAb7L,GAEFuJ,GAAgB,IAGX,KAMTsC,EAAQ,CAAC,kBAAmB,mBAAmB,WAM7C,MALiB,6BAAb7L,GAEFuJ,GAAgB,IAGX,KAGTsC,EAAQ,CAAC,YAAY,WAEnB,OADA3xB,EAAYgB,EAAM/G,KAAM,UACjB,MAGF,EHysBD83B,CAAmB,CACjB/0B,KAAMA,EACNwY,QAASA,IIhyBJ,YAAwB,IAArBxY,EAAoB,EAApBA,KAAMwY,EAAc,EAAdA,QAShB9X,EAAQpD,OAAOqD,OALN,GAKuBX,GATF,EAcOwY,EAAQ5V,cAA3C5E,EAd4B,EAc5BA,MAAuB+qB,GAdK,EAcrBM,SAdqB,EAcXX,MAdW,EAeIlQ,EAAQ3V,cAAxCC,EAf4B,EAe5BA,WAAYuvB,EAfgB,EAehBA,gBAfgB,EAgBC7Z,EAAQzV,gBAArCC,EAhB4B,EAgB5BA,YAAagyB,EAhBe,EAgBfA,YAMbv4B,EAAQiE,EAARjE,IAKJuB,GACFkG,QAAQC,IAAR,2BAAgC1H,EAAhC,aAAwCiE,EAAMuN,OAA9C,KAAyDvN,EAAO8X,GAElE,IAAIsX,GAAgB,EAKdC,EAAa,SAACvkB,EAAM0X,GACxB,IAAI4M,EAAJ,CADqC,kBAEFtkB,EAFE,GAE9BwkB,EAF8B,KAEzB/hB,EAFyB,YAEjBpM,OAFiB,MAEV,KAFU,GAK1B,MAARmuB,GAAe/hB,IAAWvN,EAAMuN,QAAUpM,IAASA,GACnDmuB,IAAQtvB,EAAMjE,KAAOwR,IAAWvN,EAAMuN,QAC/B,YAAR+hB,KAEI9M,KACFpgB,EAAW,MAEA,OAATjB,IAAeiuB,GAAgB,MAwDvC,OAhCAC,EAAW,CAAC,oBAAqB,aAAa,WAG5C,OAAO,KAMTA,EAAW,CAAC,eAAgB,aAAa,WAKvC,MAJgB,iBAAZhH,IACFsJ,GAAgB,GAChBrvB,EAAY,eAAgB,UAEvB,KAMT+sB,EAAW,CAAC,YAAa,YAAY,WAKnC,OAJAsC,GAAgB,GAChB2C,KAGO,KAGTjF,EAAW,CAAC,YAAY,WACtB,OAAO,KAGFD,EJ2rBDmF,CAAsB,CACpBj1B,KAAMA,EACNwY,QAASA,KAiBXwc,GAAc,WAAkB,IAAjB7xB,EAAgB,uDAAT,KACb,UAATA,EACFqwB,GAAS,OACS,SAATrwB,GAGTqwB,GAAS,MAFTC,GAAQ,QA4JNnH,GAAc,SAAC4I,GACnB,IAAMC,EAAcp2B,OAAOC,SAASo2B,OAEpC,OADkB,IAAIC,gBAAgBF,GACrBG,IAAIJ,IAgRjBnyB,GAAkB,CACtB8D,eACAujB,uBACApnB,YA7bkB,SAACuyB,GAAyB,IAApBpyB,EAAmB,uDAAZ,QACtB,UAATA,EAAmBqwB,GAAS+B,GAAO9B,GAAQ8B,IA6b3CP,eACA/L,eAhaqB,SAACC,GACtBzrB,EAAKwrB,eAAeC,GACpByD,GAAYzD,IA+ZZyG,gBArCsB,SAAC6F,EAAOC,GAC9B,OAAOD,EAAME,MAAK,SAACC,EAAGC,GAAJ,OAChBD,EAAEF,GAAYG,EAAEH,GAAY,EAAIG,EAAEH,GAAYE,EAAEF,IAAa,EAAI,MAoCnE7F,2BAxBiC,SAAC4F,EAAOC,EAAU91B,GACnD,OAAc,OAAV61B,GAAwB,EACrBA,EACJj5B,KAAI,SAACs5B,GACJ,OAAOA,EAAWJ,MAEnBK,QAAQn2B,IAmBXgO,eA1aqB,SAAC6nB,EAAOC,EAAU91B,GACvC,OAAO61B,EAAMzJ,MAAK,SAACpvB,GAAD,OAAOA,EAAE84B,KAAc91B,MA0azCiO,OAzYa,SAACpB,GAAyD,IAAjD4K,EAAgD,uDAArClD,GAAcyB,IAAuB,yDAUhEogB,EAAU,IAAIxgB,KAAKC,aAAaxP,GAAU,CAC9CyP,SAAU,WACVC,sBAAuB,EACvBsgB,sBAAuB,EACvBrgB,YAAaA,IACZ/H,OAAOpB,EAASgmB,IAEnB,OAA2B,IAAvByD,WAAWzpB,IAAoD,SAAnCA,EAAO3B,WAAWqrB,OAAO,EAAG,GACnD94B,EAAE,gBAEJ24B,EAAU,IAAM3e,GAsXvBvJ,cA9WoB,SAACrB,GACrB,OACE,IAAI+I,KAAKC,aAAaxP,GAAU,CAC9ByP,SAAU,WACVC,sBAAuB,EACvBsgB,sBAAuB,IACtBpoB,OAAOpB,GAAU,KAyWtB6T,mBAjWyB,SAAC7T,GAC1B,OAAO,IAAI+I,KAAKC,aAAaxP,GAAU,CACrCyP,SAAU,WACVC,sBAAuB,EACvBsgB,sBAAuB,IACtBpoB,OAAOpB,IA6VVie,kBA9EwB,SAAC7kB,GACzB,MAAO,CACLulB,aAAcvlB,EACV,oCACA,eACJwlB,WAAYxlB,EACR,gCACA,yBAwENkB,WAvTiB,SACjBqvB,GAUI,IATJ7C,EASG,uDATO,CACRxrB,MAAO,OACPC,IAAK,UACLF,KAAM,UACNuuB,KAAM,UACNrS,OAAQ,WAEVsS,IAEG,yDADHC,EACG,uDADOtwB,GAENiX,EAAO,IAAIxU,KAAK0tB,GACpB,GAAIE,EAAO,CACT,IAAME,EAAOtZ,EAAKuZ,oBAClBvZ,EAAOwZ,IAAOxZ,GAAMyZ,KAAKH,EAAM,KAAKI,SAEtC,OAAO,IAAIphB,KAAK4H,eAAemZ,EAAShD,GAAS1lB,OAAOqP,IAwSxDsN,2BAlRiC,SAAC,GAAsB,IAApBgC,EAAmB,EAAnBA,MAAO3gB,EAAY,EAAZA,MAG3C/E,GAAY,CACVpK,IAAK,uBACL+O,KAAM,CAAE+gB,QAAO3gB,YA8QjB4e,yBA1Q+B,SAAC,GAAsB,IAApB+B,EAAmB,EAAnBA,MAAO3gB,EAAY,EAAZA,MAEzC2jB,GAA2B3jB,GAC3B/E,GAAY,CACVpK,IAAK,gCACL+O,KAAM,CAAE+gB,QAAO3gB,YAsQjB8e,YAnEkB,WAClB,OAAsB,OAAf2I,GAAsB,GAAK,kBAAC,IAAD,CAAU5mB,MAAI,EAACmqB,GAAIvD,MAmErDtO,OAnQa,WAEb,MAAM,GAAN,OAAUhmB,OAAOC,SAASC,WAkQ1BkrB,MA/PY,WACRnsB,GACJ64B,MAAM,GAAD,OAAIl4B,EAAOE,IAAIC,SAAf,OAA8B,CACjCg4B,OAAQ,OACRnZ,KAAM,UACNoZ,QAAS,CACP,eAAgB,sBAGjBj6B,MAAK,SAACuzB,GAAD,OAAaA,EAAQ2G,UAC1Bl6B,MAAK,SAAC0O,GACL8mB,GAAyB,kBAAZ9mB,EAAKgZ,GAAkBhZ,EAAKgZ,GAAK,OAE/CyS,OAAM,SAACjzB,GACNE,QAAQF,MAAM,SAAUA,OAkP5BqmB,QA9Oc,WACd,IAAMa,EAAOoB,GAAY,QAIZ,OAATpB,IACFqH,GAAmB9yB,KAAKM,UAAU,CAAEmrB,UAC/BtlB,IAAUskB,IAAqB,KAwOtCI,gBApOsB,WACtB,GAAoB,OAAhBb,GAAJ,CAEA,IAAIgC,EAAe,GAEnB7oB,GAAc6mB,YAAYltB,KAAI,SAACyO,GAC7BygB,EAAahf,KAAKzB,EAAQihB,YAK5BkD,GAAgB,MAEhBtoB,GAAY,CACVpK,IAAK,oBACL+O,KAAM,CACJoQ,SAAUnc,KAAKM,UAAU0rB,GACzBzlB,SAAUA,GACVkxB,KAAM,EACNC,MAAO,OAkNX7K,eACAxZ,eAxHqB,WACC,OAAlBjN,IACJgB,GAAY,CACVpK,IAAK,mBACL+O,KAAM,CACJ8J,IAAKzP,OAoHT6pB,mBAxGyB,SAACvyB,GAC1B0J,GAAY,CACVpK,IAAK,wBACL+O,KAAM,CAAErO,GAAIA,EAAI6I,SAAUA,OAsG5BwV,cA3KoB,WAAkB,IAAjB4b,EAAgB,uDAAN,EAC/BpI,GAAkB,MAClBI,GAAyB,MACzBgE,GAA8B,GAC9BF,GAAoB,MACpBrsB,GAAY,CACVpK,IAAK,sBACL+O,KAAM,CAAE8J,IAAKzP,GAAeqxB,KAAME,EAASD,MAAO1c,MAEpDwY,GAAwBmE,IAmKxB3b,oBAhK0B,SAACQ,GAA+C,IAAlCob,EAAiC,uDAAtB,KAAMD,EAAgB,uDAAN,EAYnE,OATiB,OAAbC,IACFjc,GAAkBic,GAClBhc,GAAwB,MACxBC,GAAyB,OAE3BrC,GAAoB,MACpBmW,GAAyB,MACzBgE,GAA8BgE,GAC9BlE,GAAoBjX,GACbpV,GAAY,CACjBpK,IAAK,wBACL+O,KAAM,CACJyQ,YAAaA,EACbjW,SAAUA,GACVkxB,KAAME,EACND,MAAOpc,OA+IXW,uBA1I6B,SAAChN,GAAiC,IAArB2oB,EAAoB,uDAAT,KAKrD,OAJiB,OAAbA,GACFhc,GAAwB3M,GAE1B6B,GAAuB,MAChB1J,GAAY,CACjBpK,IAAK,2BACL+O,KAAM,CAAEkD,WAAYA,MAoItB0R,cAnNoB,SAACgX,GACrBlJ,GAAc,MACdrnB,GAAY,CACVpK,IAAK,iBACL+O,KAAM,CAAE0rB,KAAME,EAASD,MAAOjX,MAEhCuS,GAAwB2E,IA8MxB1pB,gBA3MsB,SAAC0pB,GACvBjJ,GAAgB,MAChBtnB,GAAY,CACVpK,IAAK,mBACL+O,KAAM,CACJ0rB,KAAME,EACND,MAAO3pB,GACP8H,IAAKzP,GACLG,SAAUA,MAGd0sB,GAA0B0E,IAiM1BllB,UA9LgB,SAACklB,GACjBhJ,GAAU,MACVvnB,GAAY,CACVpK,IAAK,aACL+O,KAAM,CACJ0rB,KAAME,EACND,MAAOllB,GACPqD,IAAKzP,GACLG,SAAUA,MAGd2sB,GAAoByE,IAoLpB3iB,kBA7WwB,SAAC6iB,EAAcC,GACvC,IAKEC,EAJY,IAAIjiB,KAAKC,aAAa+hB,EAAQ,CACxC51B,MAAO,WACPyV,SAAU,QAEYqgB,cALhB,YAMRC,EAAQ,GACRC,EAAU,GACVvgB,EAAW,GAmBb,OAhBAogB,EAAYI,SAAQ,SAAUnU,GAC5B,OAAQA,EAAEtgB,MACR,IAAK,QACHu0B,EAAQjU,EAAE9jB,MACV,MACF,IAAK,UACHg4B,EAAUlU,EAAE9jB,MACZ,MACF,IAAK,WACHyX,EAAWqM,EAAE9jB,UAOZs2B,WACLqB,EACGO,QAAQ,IAAI7iB,OAAO,KAAO0iB,EAAO,KAAM,IACvCG,QAAQ,IAAI7iB,OAAO,KAAO2iB,GAAU,KACpCE,QAAQ,IAAI7iB,OAAO,KAAOoC,EAAU,KAAM,MA8U/CzQ,WAxCiB,WACjB,MAAO,OAwCPC,aArCmB,WACnB,MAAO,WA+CTnJ,EAAKq6B,GAAG,mBAAmB,SAAU5O,GACnCyD,GAAYzD,MAOd,IAwNM1Q,GAAU,CACd5V,iBACAC,iBACAE,mBACA2U,oBAtB0B,CAC1BiT,WAvMiB,SAACiM,GAClBhkB,GAAcgkB,IAuMdmB,SAxKe,SAACvsB,GAGhB,OAAO3E,GAAY,CAAEpK,IAAK,gBAAiB+O,UAsK3CqX,iBAnKuB,WAEvB3e,QAAQC,IAAI,wBAEZytB,GAAc,GACdhf,GAAc,cA+Jd4T,qBA7I2B,SAACrpB,GAE5Bo2B,GAAgBp2B,IA4IhB66B,kBAzIwB,aA0IxBC,WAlIiB,SAACzsB,GAGlB3E,GAAY2E,IAgIZof,eAzMqB,WAErB,IAAIpf,EAAO,CACXA,QAAe,SACfA,EAAK6d,SAAWA,EhBzwCQ,SAAC7d,EAAMoX,GAA4B,IAAnB5kB,EAAkB,wDAExDA,GAAOkG,QAAQC,IAAR,yBAAsCqH,EAAMoX,GAEvD4E,GAAOM,KAAP,gBAA6B,CAC3Btc,KAAMA,EACNoX,QAASA,EACTnmB,IAAK,kBgBmwCLy7B,CAAa1sB,EAAMoX,EAAS5kB,GAC5B+zB,GAA0B,IAoM1BlH,aAjMmB,WAEnBhkB,GAAY,CAAEpK,IAAK,cAAe+O,KAAM,KAExC,IAAIA,EAAO,CACXA,QAAe,OACfA,EAAK6d,SAAWA,EhBxwCM,SAAC7d,EAAMoX,GAA4B,IAAnB5kB,EAAkB,wDACtDA,GAAOkG,QAAQC,IAAR,uBAAoCqH,EAAMoX,GACrD4E,GAAOM,KAAP,cAA2B,CAEzBtc,KAAMA,EAENoX,QAASA,EACTnmB,IAAK,gBgBkwCL07B,CAAW3sB,EAAMoX,EAAS5kB,GAC1B+zB,GAA0B,IA0L1BqG,eAvLqB,WACrBrK,EAAWmE,gBAuLX3Y,sBA1H4B,SAAC/N,GAC7B3E,GAAY2E,IA0HZohB,SA7Ge,WAEfhI,IAAmB,GAQnBoJ,GAAiB,MAGjB+D,EAA0B,MAC1BhI,GAAmB,GACnBsI,IAAgB,GAChBpI,IAAY,GACZD,IAA4B,GAC5BiE,GAAY,MAEZ/D,IAAqB,GACrBgE,GAAc,MACdC,GAAgB,MAChBC,GAAU,MACVvb,GAAiB,WACjBsT,GAAyB,MACzB0I,GAAiB,MACjBlc,GAAe,MACf4gB,GAAgB,QAChBld,GAAmB,MACnB/B,GAAuB,IACvBC,GAAqB,IACrBC,GAAkB,IAClB8B,GAAiB,IACjBW,GAAqB,IACrBV,GAAuB,IACvB0Q,GAAkB,IAClBC,GAAkB,IAClB5gB,GAAiB,IACjBC,GAAkB,IAClBC,GAAgB,IAChBC,GAAsB,IACtBC,GAAgB,IAChBmb,GAAgB,IAChBC,GAAgB,IAChBC,GAAkB,IAClBC,GAAmB,IACnBsM,GAAqB,MACrBG,GAAY,MACZO,GAAkB,MAClBE,IAAwB,GACxB9T,GAAkB,MAClBnC,GAAoB,MACpBkW,GAAgB,MAChB9T,GAAwB,MACxBC,GAAyB,MACzB/K,GAAuB,MACvBsU,GAAc,IACdC,GAAiB,IACjBqD,GAAmB,IACnBC,GAAkB,IAClBC,GAAe,IACfC,GAAkB,IAClB9Q,GAAgC,IAChCC,GAAsC,IACtCuB,GAA4B,IAC5BE,GAAkC,IAClCC,GAA+B,IAC/BC,GAAkC,IAClCC,GAAmC,IACnCC,GAA+B,IAC/BgF,GAA2B,IAC3BC,GAAuB,IACvBC,GAA0B,IAC1BC,GAAsB,IACtBE,GAAuB,IACvBD,GAAmB,IACnBE,GAA0B,IAC1BC,GAAsB,IACtBC,GAA6B,IAC7BC,GAAiC,IACjCoO,GAAsB,IACtBnX,GAAe,IACfqZ,GAAoB,IACpBC,GAA+B,MAC/BC,GAA2B,MAC3BxZ,IAAe,GACfyd,GAAS,MACTC,GAAQ,OAsBR9K,aAnBmB,WAAkB,IAAjBxlB,EAAgB,uDAAT,KAC3B6xB,GAAY7xB,MAuDd,OhBh+CuB,SAAC+f,GAAc,IAAD,EACG7jB,mBAAS,MADZ,mBAC9Bg5B,EAD8B,KAChBC,EADgB,KAGrC9Q,GAAOsQ,GAAP,kBAA4B,SAACtsB,GAC3B8sB,EAAgB9sB,MAGlB3L,qBAAU,WACa,OAAjBw4B,GAEJnV,EAASmV,KAER,CAACA,IgBg8CJE,EAAU,SAAC/sB,GACTumB,GAA0B,GAC1BhI,GAAmB,GACnBK,GAAoB,CAClBpqB,KAAMwL,EACNgN,QAASA,QhBl8CgB,SAAC0K,EAAUmG,GACxCxpB,qBAAU,WAQR2nB,GAAOsQ,GAAG,iBAAiB,WACzB5U,EACE,CACEjV,OAAQ,QACRxR,IAAK,gBACLg4B,QAAS,GACTzwB,MAAO,CAAE/G,KAAM,UAEjB,MAGJuqB,GAAOsQ,GAAG,mBAAmB,SAACp1B,GAC5BwgB,EACE,CACEjV,OAAQ,QACRxR,IAAK,kBACLg4B,QAAS,GACTzwB,MAAO,CAAE/G,KAAM,kBAAmByF,aAEpC,MAGJ8kB,GAAOsQ,GAAG,mBAAmB,SAAC9zB,GAC5Bkf,EACE,CACEjV,OAAQ,QACRxR,IAAK,kBACLg4B,QAAS,GACTzwB,MAAO,CAAE/G,KAAM+G,EAAMb,KAAMa,WAE7B,MAGJwjB,GAAOsQ,GAAG,oBAAoB,WAE5B5U,EACE,CACEjV,OAAQ,QACRxR,IAAK,mBACLg4B,QAAS,GACTzwB,MAAO,CAAE/G,KAAM,sBAEjB,MAGJuqB,GAAOsQ,GAAG,SAAS,SAAC9zB,GAClBkf,EACE,CACEjV,OAAQ,QACRxR,IAAK,QACLg4B,QAAS,GACTzwB,MAAO,CAAE/G,KAAM,QAAS+G,WAE1B,MAOJwjB,GAAOsQ,GAAG,QAAQ,eAGlBtQ,GAAOsQ,GAAG,QAAQ,SAACU,OAInBhR,GAAOsQ,GAAG,cAAc,SAACW,GACR,yBAAXA,GAEFjR,GAAOE,UAMTxE,EAAS,CAAEzmB,IAAK,aAAcwR,OAAQ,UAAWwqB,WAAU,MAE7DjR,GAAOsQ,GAAG,aAAa,SAACY,GAEtBxV,EAAS,CAAEzmB,IAAK,YAAawR,OAAQ,UAAWyqB,kBAAiB,MAEnElR,GAAOsQ,GAAG,qBAAqB,SAACY,GAC9BxV,EACE,CAAEzmB,IAAK,oBAAqBwR,OAAQ,WAAYyqB,kBAChD,MAGJlR,GAAOsQ,GAAG,gBAAgB,SAACY,GACzBxV,EACE,CAAEzmB,IAAK,eAAgBwR,OAAQ,WAAYyqB,kBAC3C,QAGH,CAACrP,IgB+1CJsP,EAAgB,SAACntB,GACfspB,GAAsB,CACpB90B,KAAMwL,EACNgN,QAASA,OAEV6Q,GAMgB,iBAAf3oB,EAAMid,KACJ3f,IAAUo0B,GACL,kBAAC,GAAS5Z,IAEV,kBAAC,GAAiBA,IAGpB,kBAAC,GAAsBA,KKvhDnB,I,OAAA,WAEb,OACE,oCACE,yBAAK1X,UAAU,aACb,yBAAKA,UAAU,sBC0BM,OATT,SAACo0B,GACnB,IAAMC,EAAcp2B,OAAOC,SAASo2B,OAEpC,OADkB,IAAIC,gBAAgBF,GACrBG,IAAIJ,GAMnB5I,CAAY,WACdvtB,OAAOQ,aAAaq5B,QACpB10B,QAAQC,IAAI,0BAOd,IAAM00B,GAAOC,SAASC,eAAe,QAC/BC,GAAeF,SAASC,eAAe,gBACzCF,IACFI,IAASC,OACP,kBAAC,WAAD,CAAUC,SAAU,kBAAC,GAAD,OAClB,kBAACC,GAAD,CAAYzb,KAAOqb,GAAoB,eAAL,MAEpCH,M","file":"static/js/main.479386b3.chunk.js","sourcesContent":["var map = {\n\t\"./document.css\": [\n\t\t268,\n\t\t7,\n\t\t7\n\t],\n\t\"./en/PrivacyPolicy\": [\n\t\t194,\n\t\t9,\n\t\t0\n\t],\n\t\"./en/PrivacyPolicy.js\": [\n\t\t194,\n\t\t9,\n\t\t0\n\t],\n\t\"./en/UserAgreement\": [\n\t\t195,\n\t\t9,\n\t\t1\n\t],\n\t\"./en/UserAgreement.js\": [\n\t\t195,\n\t\t9,\n\t\t1\n\t],\n\t\"./lv/PrivacyPolicy\": [\n\t\t196,\n\t\t9,\n\t\t2\n\t],\n\t\"./lv/PrivacyPolicy.js\": [\n\t\t196,\n\t\t9,\n\t\t2\n\t],\n\t\"./lv/UserAgreement\": [\n\t\t197,\n\t\t9,\n\t\t3\n\t],\n\t\"./lv/UserAgreement.js\": [\n\t\t197,\n\t\t9,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 222;\nmodule.exports = webpackAsyncContext;","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n// not like to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    // lng: \"lv\",\r\n    // ns: [\"LogIn\", \"SignUp\"],\r\n    defaultNS: \"Default\",\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: \"languageChanged loaded\",\r\n      bindStore: \"added removed\",\r\n      nsMode: \"default\",\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","const dev = {\r\n  uri: {\r\n    ENDPOINT: \"http://localhost:9000\",\r\n    // ENDPOINT: \"http://192.168.2.100:9000\"\r\n  },\r\n};\r\n\r\nconst dev2 = {\r\n  uri: {\r\n    ENDPOINT: \"http://192.168.2.100:5000\",\r\n  },\r\n};\r\n\r\nconst staging = {\r\n  uri: {\r\n    ENDPOINT: \"https://dev.zime.lv\",\r\n  },\r\n};\r\n\r\nconst prod = {\r\n  uri: {\r\n    ENDPOINT: \"https://zime.lv\",\r\n  },\r\n};\r\n\r\nconst hostname = window && window.location && window.location.hostname;\r\n\r\nlet config;\r\nswitch (hostname) {\r\n  case \"localhost\":\r\n    config = dev;\r\n    break;\r\n  case \"192.168.2.100\":\r\n    config = dev2;\r\n    break;\r\n  case \"dev.zime.lv\":\r\n    config = staging;\r\n    break;\r\n  case \"zime.lv\":\r\n    config = prod;\r\n    break;\r\n  default:\r\n    config = dev;\r\n    break;\r\n}\r\n\r\nexport default {\r\n  ...config,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nexport const useStickyState = (defaultValue, key) => {\r\n  const [value, setValue] = useState(() => {\r\n    const stickyValue = window.localStorage.getItem(key);\r\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n  return [value, setValue];\r\n};\r\n","import \"./Card.css\";\r\nimport React, { cloneElement } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n// import { Container, Row, Col, Button } from \"react-bootstrap\";\r\n// import Button from \"react-bootstrap/Button\";\r\n\r\nexport default (args) => {\r\n  let defaults = {\r\n    title: \"Untitled\",\r\n    navigation: undefined,\r\n    footer: undefined,\r\n    header: true,\r\n    body: true,\r\n    headerContent: null,\r\n    onNavigationClick: () => {},\r\n  };\r\n  let props = Object.assign(defaults, args);\r\n\r\n  let key = 0;\r\n\r\n  let footer = props.footer ? <Card.Footer>{props.footer}</Card.Footer> : \"\";\r\n\r\n  return (\r\n    <Card>\r\n      {/* <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" /> */}\r\n      {props.header && (\r\n        <Card.Header className=\"custom-card\">\r\n          {props.headerContent !== null ? (\r\n            props.headerContent\r\n          ) : (\r\n            <>\r\n              {props.title.length > 0 && <Card.Title>{props.title}</Card.Title>}\r\n              <Nav\r\n                variant=\"tabs\"\r\n                defaultActiveKey={props.navigationdefaultActiveKey}\r\n              >\r\n                {props.navigation &&\r\n                  props.navigation.map((item, key) => (\r\n                    <Nav.Item key={key}>\r\n                      <Nav.Link\r\n                        className=\"custom-card\"\r\n                        href={item.link}\r\n                        onClick={() => props.onNavigationClick(item.link)}\r\n                        style={{ color: \"black\" }}\r\n                      >\r\n                        {item.name}\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  ))}\r\n              </Nav>\r\n            </>\r\n          )}\r\n        </Card.Header>\r\n      )}\r\n\r\n      {props.body && (\r\n        <Card.Body className=\"custom-card\">\r\n          {React.Children.map(args.children, (child) => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                styles: null,\r\n                key: key,\r\n              });\r\n            }\r\n          })}\r\n        </Card.Body>\r\n      )}\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    caption: \"Submit\",\r\n    request: null,\r\n    namespace: \"Button\",\r\n    visible: true,\r\n    marginTop: 0,\r\n    timeout: 15000, // milliseconds\r\n    onSubmit: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { request } = props.barrelGetters;\r\n  const { setRequest } = props.barrelSetters;\r\n  const { showMessage } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const [requestExpired, setRequestExpired] = useState(false);\r\n\r\n  // useTimeout(() => {\r\n  //   if (request !== props.request) return;\r\n  //   // console.log(\"useTimeout\");\r\n\r\n  //   // Your custom logic here\r\n  //   // setSeconds(seconds - 1);\r\n  //   setRequestExpired(true);\r\n  //   setRequest(null);\r\n  //   showMessage(\"REQUEST_EXPIRED\", \"error\");\r\n  // }, props.timeout);\r\n\r\n  // useEffect(() => {\r\n  //   if (requestExpired)\r\n  // }, [requestExpired]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return !props.visible ? (\r\n      <></>\r\n    ) : (\r\n      <Button\r\n        type=\"submit\"\r\n        onClick={props.onSubmit}\r\n        block\r\n        disabled={request === props.request && !requestExpired}\r\n        style={{ marginTop: props.marginTop + \"px\" }}\r\n      >\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"border\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={request !== props.request || requestExpired}\r\n        />\r\n        &nbsp;\r\n        {props.caption}\r\n        &nbsp;\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","import React from \"react\";\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n    console.log(\"Error boundary:\", error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      //   return <h1>Something went wrong.</h1>;\r\n      return <></>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Modal, Navbar, Nav } from \"react-bootstrap\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ModalMessage\",\r\n    centered: true,\r\n    message: \"\",\r\n    title: null,\r\n    footer: null,\r\n    // bodyStyle: { padding: \"1rem\" },\r\n    onHide: () => {},\r\n    size: \"sm\",\r\n    file: null,\r\n    backdrop: true, // \"static\"\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const ExternalFile =\r\n    props.file !== null\r\n      ? React.lazy(() => import(`../locale/${props.file}`))\r\n      : \"\";\r\n\r\n  // async function loadExternalFile() {\r\n  //   await React.preloadLazy(ExternalFile);\r\n  // }\r\n\r\n  // loadExternalFile();\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size={props.size}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered={props.centered}\r\n        backdrop={props.backdrop}\r\n      >\r\n        {props.title !== null && (\r\n          <Modal.Header closeButton>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src=\"gfx/zlogo_light.png\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                  {props.title}\r\n                </Modal.Title>\r\n              </Nav>\r\n            </Navbar>\r\n          </Modal.Header>\r\n        )}\r\n        <Modal.Body\r\n          style={{ maxHeight: \"calc(100vh - 210px)\", overflowY: \"auto\" }}\r\n        >\r\n          {props.message !== \"\" ? (\r\n            props.message\r\n          ) : (\r\n            <ErrorBoundary>\r\n              <ExternalFile />\r\n            </ErrorBoundary>\r\n          )}\r\n        </Modal.Body>\r\n        {props.footer !== null && (\r\n          <Modal.Footer>\r\n            <Button block onClick={props.onHide}>\r\n              {t(\"Close\")}\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","// System CSS\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// System imports\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, InputGroup, Alert, Col } from \"react-bootstrap\";\r\n// import { Redirect } from \"react-router-dom\";\r\n// import ChevronRight from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\r\nimport moment from \"moment-timezone\";\r\n// import DatePicker from \"react-datepicker\";\r\nimport { Today } from \"@material-ui/icons\";\r\n// import { Today } from \"@material-ui/icons\";\r\n// import DatePicker from \"react-date-picker\";\r\n// import MomentUtils from \"@date-io/moment\";\r\n// import { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n// import { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport _ from \"lodash\";\r\n\r\n// User imports\r\nimport Card from \"../card\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useStickyState } from \"../../utils/state\";\r\nimport Dropzone from \"../dropzone\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport ModalMessage from \"../modalMessage\";\r\n// import { useStickyState } from \"../../utils/state\";\r\nimport timezones from \"./timezones.en.json\";\r\n\r\n// const UserAgreement = React.lazy(() => import(\"../locale/en/UserAgreement\"));\r\n\r\nexport default (args) => {\r\n  // console.log(\"ACCOUNT REGISTRATION ARGS:\", args);\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"get user sequence\", // \"register account\",\r\n    namespace: \"AccountRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    signedIn,\r\n    accountNumber,\r\n    accountPhotoPath,\r\n    userData,\r\n    language,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    debug,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    formatDate,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [userAgreementShow, setUserAgreementShow] = useStickyState(\r\n    false,\r\n    \"userAgreementShow\"\r\n  );\r\n  const [privacyPolicyShow, setPrivacyPolicyShow] = useStickyState(\r\n    false,\r\n    \"privacyPolicyShow\"\r\n  );\r\n\r\n  const [offsetList, setOffsetList] = useStickyState(null, \"offsetList\");\r\n  const [calenarVisible, setCalenarVisible] = useState(false);\r\n  // const [birthDateError, setBirthDateError] = useState(\"\");\r\n  // const [birthDate, setBirthDate] = useState(\"\");\r\n\r\n  // const [birthYear, setBirthYear] = useState(\"\");\r\n  // const [birthMonth, setBirthMonth] = useState(\"\");\r\n  // const [birthDay, setBirthDay] = useState(\"\");\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    // dropzoneHook: yup.string().required(t(\"Photo ID is required\")),\r\n    // dropzoneHook: yup.string().optional(),\r\n    // terms: yup.array().required(t(\"Terms is required\")),\r\n    timezone: yup.string().required(t(\"Timezone at birth is required\")),\r\n    birthYear: yup.number().required(t(\"Year is required\")),\r\n    birthMonth: yup.number().required(t(\"Month is required\")),\r\n    birthDay: yup.number().required(t(\"Day is required\")),\r\n    // birthDateHook: yup.string().required(t(\"Birth date is required\")).length(5),\r\n    // birthDate: yup\r\n    //   .string()\r\n    //   .required(t(\"Date of birth is required\"))\r\n    //   // .max(new Date(), t(\"Date of birth must be today or earlier\"))\r\n    //   // .string()\r\n    //   .matches(new RegExp(t(\"Date Regex\")), t(\"Wrong date format\")),\r\n\r\n    // .test({\r\n    //   name: \"regex\",\r\n    //   exclusive: true,\r\n    //   params: {},\r\n    //   message: t(\"Date must be valid\"),\r\n    //   test: (value) => {\r\n    //     if (typeof value === \"undefined\") return false;\r\n\r\n    //     // return Date.parse(value);\r\n    //     return value !== \"error\";\r\n\r\n    //     console.log(\"TEST\");\r\n\r\n    //     // Test regex\r\n    //     // if (!RegExp(t(\"Date Regex\")).test(value)) return false;\r\n\r\n    //     let date2en;\r\n    //     try {\r\n    //       date2en = formatDate(\r\n    //         value,\r\n    //         { month: \"numeric\", day: \"numeric\", year: \"numeric\" },\r\n    //         false,\r\n    //         \"en-US\"\r\n    //       );\r\n    //     } catch (error) {\r\n    //       console.log(\"error\", error);\r\n    //       return false;\r\n    //     }\r\n\r\n    //     // // console.log(\"date2en\", date2en);\r\n    //     // console.log(\"date2en\", date2en);\r\n\r\n    //     // // console.log(\"IS DATE\", _.isDate(new Date(date2en)));\r\n    //     // console.log(\"IS DATE\", _.isDate(new Date(date2en)));\r\n\r\n    //     return true;\r\n    //   },\r\n    // }),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  /**\r\n   * Send account registration request\r\n   * @param {object} data\r\n   */\r\n  const sendAccountRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.email = userData.email;\r\n\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    delete data.birthYear;\r\n    delete data.birthMonth;\r\n    delete data.birthDay;\r\n\r\n    const newDate = composeDate(userBirthYear, userBirthMonth, userBirthDay);\r\n    data.birthDate = newDate;\r\n\r\n    if (newDate !== \"\") {\r\n      // console.log(data);\r\n      if (sendAccountRegistrationRequest(data)) {\r\n        // Account registration request was submitted\r\n      }\r\n    }\r\n  };\r\n\r\n  // const timezones = 1;\r\n  // const timezones_sorted = timezones.sort((a, b) =>\r\n  //   (a.Offset + 12) % 24 > (b.Offset + 12) % 24\r\n  //     ? 1\r\n  //     : (a.Offset + 12) % 24 === (b.Offset + 12) % 24\r\n  //     ? a.Name > b.Name\r\n  //       ? 1\r\n  //       : -1\r\n  //     : -1\r\n  // );\r\n\r\n  const timezones_sorted = timezones;\r\n\r\n  const isValidDate = (dateString) => {\r\n    let dateformat = /^(0?[1-9]|1[0-2])[\\/](0?[1-9]|[1-2][0-9]|3[01])[\\/]\\d{4}$/;\r\n\r\n    // Match the date format through regular expression\r\n    if (dateString.match(dateformat)) {\r\n      let operator = dateString.split(\"/\");\r\n\r\n      // Extract the string into month, date and year\r\n      let datepart = [];\r\n      if (operator.length > 1) {\r\n        datepart = dateString.split(\"/\");\r\n      }\r\n      let month = parseInt(datepart[0]);\r\n      let day = parseInt(datepart[1]);\r\n      let year = parseInt(datepart[2]);\r\n\r\n      // Create list of days of a month\r\n      let ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n      if (month == 1 || month > 2) {\r\n        if (day > ListofDays[month - 1]) {\r\n          ///This check is for Confirming that the date is not out of its range\r\n          return false;\r\n        }\r\n      } else if (month == 2) {\r\n        let leapYear = false;\r\n        if ((!(year % 4) && year % 100) || !(year % 400)) {\r\n          leapYear = true;\r\n        }\r\n        if (leapYear == false && day >= 29) {\r\n          return false;\r\n        } else if (leapYear == true && day > 29) {\r\n          // console.log(\"Invalid date format!\");\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      // console.log(\"Invalid date format!\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const composeDate = (year, month, day) => {\r\n    // console.log(year, month, day);\r\n    const newDate = `${month}/${day}/${year}`;\r\n    // const newDate = `${year}-${month}-${day}`;\r\n    if (isValidDate(newDate)) {\r\n      // setBirthDateComposed(newDate);\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        // console.log(\"ok\");\r\n        setUserBirthDateError(\"\");\r\n        // setBirthDate(newDate);\r\n\r\n        // return \"ok\";\r\n        return newDate;\r\n      } else {\r\n        // console.log(\"incomplete\");\r\n        setUserBirthDateError(\"\");\r\n        // return \"incomplete\";\r\n        return \"\";\r\n      }\r\n    } else {\r\n      // setBirthDateComposed(\"error\");\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        // console.log(\"error\");\r\n        setUserBirthDateError(t(\"Date must be valid\"));\r\n        // return \"error\";\r\n        return \"\";\r\n      } else {\r\n        // console.log(\"incomplete\");\r\n        setUserBirthDateError(\"\");\r\n        // return \"incomplete\";\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  let timeZoneID = 0;\r\n  let prevTimeZoneID = 0;\r\n  const yearNow = new Date().getFullYear();\r\n\r\n  const AccountRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    setFieldValue,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridYear\">\r\n          <Form.Label>{t(\"Date of birth\")}</Form.Label>\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthYear\"\r\n            value={values.birthYear}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthYear(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthYear && touched.birthYear}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Year\")}\r\n            </option>\r\n            {Array.from(Array(120).keys()).map((key) => {\r\n              let year = yearNow - key;\r\n\r\n              return (\r\n                <option key={key} value={year}>\r\n                  {year}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthYear}\r\n          </Form.Control.Feedback>\r\n          <div className=\"invalid-feedback-custom\">{userBirthDateError}</div>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridMonth\">\r\n          <Form.Label>&nbsp;</Form.Label>\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthMonth\"\r\n            value={values.birthMonth}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthMonth(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthMonth && touched.birthMonth}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Month\")}\r\n            </option>\r\n            {Array.from(Array(12).keys()).map((key) => {\r\n              let date = new Date(`${key + 1}/1/1970`);\r\n              let monthName = date.toLocaleString(language, { month: \"long\" });\r\n              let monthNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={monthNumber}>\r\n                  {monthNumber} - {monthName}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthMonth}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridDay\">\r\n          <Form.Label>&nbsp;</Form.Label>\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthDay\"\r\n            value={values.birthDay}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthDay(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthDay && touched.birthDay}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Day\")}\r\n            </option>\r\n            {Array.from(Array(31).keys()).map((key) => {\r\n              let dayNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={dayNumber}>\r\n                  {dayNumber}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthDay}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Group controlId=\"validationFormikTimezone\">\r\n        <Form.Label>{t(\"Timezone at birth\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          custom\r\n          name=\"timezone\"\r\n          value={values.timezone}\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n            setUserTimezone(e.target.value);\r\n          }}\r\n          isInvalid={!!errors.timezone && touched.timezone}\r\n        >\r\n          <option value=\"\">{t(\"Choose...\")}</option>\r\n          {timezones_sorted.map((element, key) => (\r\n            <option\r\n              key={key}\r\n              value={`${(((element.Offset + 12) % 24) + 1)\r\n                .toString()\r\n                .padStart(2, \"0\")} - ${element.Name}`}\r\n            >\r\n              {element.Name}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.timezone}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <div style={{ paddingBottom: \"10px\" }}>\r\n        {t(\"Agree to terms and conditions\")}\r\n      </div>\r\n\r\n      <Trans i18nKey=\"AccountRegistration:The User Agreement and the Privacy Policy\">\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setUserAgreementShow(true)}>\r\n          User Agreement\r\n        </a>\r\n\r\n        <br />\r\n\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setPrivacyPolicyShow(true)}>\r\n          Privacy Policy\r\n        </a>\r\n      </Trans>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  if (signedIn === false)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"User not logged in\")}</Alert.Heading>\r\n          <p>\r\n            <Trans i18nKey=\"AccountRegistration:Please log in first\">\r\n              Please log in first.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  if (!debug && accountNumber !== null)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"Account successfully registered\")}</Alert.Heading>\r\n          <p>\r\n            <Trans\r\n              i18nKey=\"AccountRegistration:Account with your personal ID successfully registered\"\r\n              accountNumber={accountNumber}\r\n            >\r\n              Account with the personal ID\r\n              <strong>{{ accountNumber }}</strong>\r\n              successfully registered.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        show={userAgreementShow}\r\n        file={`${language}/UserAgreement`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"User Agreement\")}\r\n        footer=\"\"\r\n        onHide={() => setUserAgreementShow(false)}\r\n      />\r\n\r\n      <ModalMessage\r\n        show={privacyPolicyShow}\r\n        file={`${language}/PrivacyPolicy`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"Privacy Policy\")}\r\n        footer=\"\"\r\n        onHide={() => setPrivacyPolicyShow(false)}\r\n      />\r\n\r\n      <Card title={t(\"Open account\")}>\r\n        <Formik\r\n          component={AccountRegistrationForm}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            // personalID: \"\",\r\n            // terms: \"\",\r\n            // dropzoneHook: accountPhotoPath,\r\n            timezone: userTimezone,\r\n            // birthDate: \"\",\r\n            birthYear: userBirthYear,\r\n            birthMonth: userBirthMonth,\r\n            birthDay: userBirthDay,\r\n            // birthDateHook: \"\",\r\n          }}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Pagination\",\r\n    size: \"md\",\r\n    countItems: 0,\r\n    itemsPerPage: 5,\r\n    active: 0, // active page\r\n    onClick: () => {},\r\n    align: \"center\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const pages = Math.ceil(props.countItems / props.itemsPerPage);\r\n\r\n  if (pages < 2) return <></>;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  const onClick = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = props.active > 1 ? props.active - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          props.active < Math.ceil(props.countItems / props.itemsPerPage)\r\n            ? props.active + 1\r\n            : Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // getBusinesses(number);\r\n    props.onClick(number);\r\n  };\r\n\r\n  const getPages = () => {\r\n    let items = [];\r\n    for (let number = 1; number <= pages; number++) {\r\n      if (\r\n        number === 1 ||\r\n        number === pages ||\r\n        (number >= props.active - 1 && number <= props.active + 1)\r\n      ) {\r\n        items.push(\r\n          <Pagination.Item\r\n            key={number}\r\n            active={number === props.active}\r\n            onClick={() => onClick(number)}\r\n          >\r\n            {number}\r\n          </Pagination.Item>\r\n        );\r\n      } else if (number === 2 || number === pages - 1) {\r\n        items.push(<Pagination.Ellipsis key={number} disabled />);\r\n      }\r\n    }\r\n    return items;\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const { align } = props;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: `${align}`,\r\n          // backgroundColor: \"red\",\r\n        }}\r\n      >\r\n        <span style={{ display: \"inline-block\" }}>\r\n          <Pagination size={props.size} style={{ padding: 0, margin: 0 }}>\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.First onClick={() => props.onClick(\"First\")} />\r\n                <Pagination.Prev onClick={() => props.onClick(\"Prev\")} />\r\n              </>\r\n            )}\r\n\r\n            {getPages()}\r\n\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.Next onClick={() => props.onClick(\"Next\")} />\r\n                <Pagination.Last onClick={() => props.onClick(\"Last\")} />\r\n              </>\r\n            )}\r\n          </Pagination>\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport {\r\n  // Form,\r\n  // InputGroup,\r\n  // Button,\r\n  // Table,\r\n  ListGroup,\r\n  Badge,\r\n} from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { ArrowRightAlt } from \"@material-ui/icons\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    request: \"get transactions\",\r\n    namespace: \"Transactions\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    transactions,\r\n    countTransactions,\r\n    activePageTransactions,\r\n    transactionsPerPage,\r\n    accountNumber,\r\n    responseProps,\r\n  } = props.barrelGetters;\r\n  // const { setActivePageTransactions } = props.barrelSetters;\r\n  const {\r\n    // getReviser,\r\n    // getWorkplace,\r\n    // sendRequest,\r\n    getTransactions,\r\n    getArrayObject,\r\n    format,\r\n    formatDate,\r\n    formatPerCent,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageTransactions > 1 ? activePageTransactions - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageTransactions <\r\n          Math.ceil(countTransactions / transactionsPerPage)\r\n            ? activePageTransactions + 1\r\n            : Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getTransactions(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  const transactionsRequest = getArrayObject(\r\n    responseProps,\r\n    \"res\",\r\n    \"get transactions\"\r\n  );\r\n  const transactionsRequestStatus =\r\n    typeof transactionsRequest !== \"undefined\"\r\n      ? transactionsRequest.status\r\n      : \"undefined\";\r\n  // console.log(\"transactionsRequestStatus:\", transactionsRequestStatus);\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <ListGroup variant=\"flush\">\r\n        {transactions !== null &&\r\n          transactions.map((transaction, keyTransactions) => {\r\n            cnt++;\r\n\r\n            const {\r\n              // business_description,\r\n              // business_id,\r\n              // business_image,\r\n              // business_link,\r\n              // business_status,\r\n              business_title,\r\n              // comment,\r\n              conv_amount,\r\n              created,\r\n              // currency,\r\n              // exchange_rate,\r\n              sender_firstname,\r\n              sender_lastname,\r\n              // recipient_firstname,\r\n              // recipient_lastname,\r\n              // purpose_description,\r\n              purpose_id,\r\n              // purpose_image,\r\n              // purpose_link,\r\n              // purpose_status,\r\n              purpose_title,\r\n              recipient_id,\r\n              roles,\r\n              share,\r\n              share_per_cent,\r\n              // sender_id,\r\n              // sender_status,\r\n              // recipient_status,\r\n              from_account,\r\n              to_account,\r\n              type,\r\n            } = transaction;\r\n\r\n            // const i_am_sender = sender_id === accountNumber;\r\n            const i_am_recipient = recipient_id === accountNumber;\r\n            const t_from_account = t(from_account);\r\n            const t_to_account = t(to_account);\r\n\r\n            const roles_available =\r\n              roles !== null && roles !== \"-\" && typeof roles !== \"undefined\";\r\n            const arrRoles = roles_available ? roles.split(\",\") : [];\r\n\r\n            const shares_available =\r\n              typeof share !== \"undefined\" && share !== null && share !== \"-\";\r\n\r\n            if (type === \"transfer U2S\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {sender_firstname} {sender_lastname}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <Trans\r\n                    i18nKey=\"Transactions:fromAccountToAccount\"\r\n                    t_from_account={t_from_account}\r\n                    t_to_account={t_to_account}\r\n                  >\r\n                    {{ t_from_account }}{\" \"}\r\n                    <ArrowRightAlt style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                    {{ t_to_account }}\r\n                  </Trans>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {sender_firstname} {sender_lastname}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer V2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {t(\"Daily allowance\")}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2B\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {purpose_id}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  {business_title} &middot; {purpose_title}\r\n                  <br />\r\n                  {sender_firstname} {sender_lastname}\r\n                  {roles_available && (\r\n                    <>\r\n                      <br />\r\n                      {arrRoles.map((role, key) => {\r\n                        return (\r\n                          <span key={key}>\r\n                            {\" \"}\r\n                            <Badge pill variant=\"secondary\">\r\n                              {role}\r\n                            </Badge>\r\n                          </span>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  )}{\" \"}\r\n                  {shares_available && (\r\n                    <>\r\n                      <br />\r\n                      {share} {t(\"shares\")} ({formatPerCent(share_per_cent)})\r\n                    </>\r\n                  )}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n\r\n              // TODO: check if this works\r\n            } else {\r\n              console.log(\"Unknown transfer type:\", type);\r\n\r\n              return <></>;\r\n            }\r\n          })}\r\n      </ListGroup>\r\n\r\n      {transactionsRequestStatus === \"success\" && cnt === 0 && (\r\n        <p className=\"text-center text-muted\">{t(\"No transactions\")}</p>\r\n      )}\r\n\r\n      {transactionsRequestStatus !== \"success\" && (\r\n        <p className=\"text-center text-muted\">{t(\"Loading...\")}</p>\r\n      )}\r\n      <br />\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countTransactions}\r\n        itemsPerPage={transactionsPerPage}\r\n        active={activePageTransactions}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Toast, Badge } from \"react-bootstrap\";\r\nimport { Settings } from \"@material-ui/icons\";\r\nimport _ from \"lodash\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Shareholder\",\r\n    request: \"change share\",\r\n    purpose: null,\r\n    shareholder: null,\r\n    closeButton: true,\r\n    rangeControl: true,\r\n    sharePerCent: null,\r\n    businessTitle: null,\r\n    purposeTitle: null,\r\n    businessOwnerFirstname: null,\r\n    businessOwnerLastname: null,\r\n    sharesCreated: null,\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { purposeShareholders } = props.barrelGetters;\r\n  const { setPurposeShareholders } = props.barrelSetters;\r\n  const { sendRequest, formatPerCent, formatDate } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const [userQuery, setUserQuery] = useState(props.share);\r\n  const delayedQuery = useRef(_.debounce((q) => sendQuery(q), 2000)).current;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const onChange = (e) => {\r\n    setUserQuery(e.target.value);\r\n    delayedQuery(e.target.value);\r\n  };\r\n\r\n  const onClose = () => {\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    return sendRequest({ req: \"remove shareholder\", data });\r\n  };\r\n\r\n  const sendQuery = (delayedQuery) => {\r\n    const ps = purposeShareholders;\r\n    ps[props.id].share = delayedQuery;\r\n    setPurposeShareholders(JSON.stringify(ps));\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    data.share = delayedQuery;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const sharesLabelId = `sharesLabel${props.key}`;\r\n    return (\r\n      <Toast key={props.key} onClose={onClose} style={{ minWidth: \"100%\" }}>\r\n        <Toast.Header closeButton={props.closeButton}>\r\n          <strong className=\"mr-auto\">\r\n            {props.firstname} {props.lastname}{\" \"}\r\n            <small>\r\n              <Settings\r\n                hidden={true}\r\n                fontSize=\"small\"\r\n                style={{ color: \"var(--dark)\" }}\r\n              />\r\n            </small>\r\n          </strong>\r\n          <small>\r\n            <span id={sharesLabelId}>{userQuery}</span> {t(\"shares\")}\r\n          </small>\r\n        </Toast.Header>\r\n        <Toast.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formRoles\">\r\n              <div>\r\n                {props.roles.map((role, key) => {\r\n                  return (\r\n                    <span key={key}>\r\n                      <Badge pill variant=\"secondary\">\r\n                        {role}\r\n                      </Badge>{\" \"}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Form.Group>\r\n\r\n            {props.rangeControl && (\r\n              <Form.Group controlId=\"formBasicRange\">\r\n                <Form.Control\r\n                  type=\"range\"\r\n                  custom\r\n                  variant=\"light\"\r\n                  // value={share}\r\n                  defaultValue={userQuery}\r\n                  // value={userQuery}\r\n                  min={1}\r\n                  max={1000}\r\n                  step={1}\r\n                  // ref={this.input}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            )}\r\n          </Form>\r\n          <span>\r\n            {props.sharePerCent !== null && formatPerCent(props.sharePerCent)}{\" \"}\r\n            {props.businessTitle !== null && props.businessTitle}{\" \"}\r\n            {props.businessTitle !== null && props.purposeTitle !== null && (\r\n              <> &middot; </>\r\n            )}\r\n            {props.purposeTitle !== null && props.purposeTitle}{\" \"}\r\n          </span>\r\n          {props.sharesCreated !== null && (\r\n            <>\r\n              <br />\r\n              {formatDate(props.sharesCreated, {\r\n                month: \"long\",\r\n                day: \"numeric\",\r\n                year: \"numeric\",\r\n              })}\r\n            </>\r\n          )}{\" \"}\r\n          {(props.businessOwnerFirstname !== null ||\r\n            props.businessOwnerLastname !== null) && <br />}\r\n          {props.businessOwnerFirstname !== null &&\r\n            props.businessOwnerFirstname}{\" \"}\r\n          {props.businessOwnerLastname !== null && props.businessOwnerLastname}{\" \"}\r\n        </Toast.Body>\r\n      </Toast>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Form, InputGroup, Button, Table, ListGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n// import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\nimport Shareholder from \"../shareholder\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    request: \"get shares\",\r\n    namespace: \"Shares\",\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    shares,\r\n    countShares,\r\n    activePageShares,\r\n    sharesPerPage,\r\n    // accountNumber,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  // const {  } = props.barrelSetters;\r\n  const {\r\n    // getReviser,\r\n    // getWorkplace,\r\n    // sendRequest,\r\n    getShares,\r\n    // format,\r\n    // formatPerCent,\r\n    // formatDate,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onPageSelect = (number) => {\r\n    console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageShares > 1 ? activePageShares - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageShares < Math.ceil(countShares / sharesPerPage)\r\n            ? activePageShares + 1\r\n            : Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getShares(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <>\r\n      {shares !== null &&\r\n        shares.map((share, keyShares) => {\r\n          cnt++;\r\n\r\n          const {\r\n            // business_description,\r\n            // business_id,\r\n            // business_image,\r\n            // business_link,\r\n            // business_status,\r\n            business_title,\r\n            owner_firstname,\r\n            owner_lastname,\r\n            // owner_status,\r\n            // owner_uid,\r\n            // purpose_description,\r\n            purpose_id,\r\n            // purpose_image,\r\n            // purpose_link,\r\n            // purpose_status,\r\n            purpose_title,\r\n            shareholder_id,\r\n            shares_created,\r\n            // shares_description,\r\n            share_per_cent,\r\n            shares_roles,\r\n            shares_share,\r\n            // shares_status,\r\n            // shares_title,\r\n          } = share;\r\n\r\n          const arrRoles = shares_roles !== null ? shares_roles.split(\",\") : [];\r\n          // const content = `${owner_firstname} ${owner_lastname} / ${formatDate(\r\n          //   shares_created\r\n          // )}`;\r\n\r\n          // console.log(\"keyShares:\", keyShares);\r\n\r\n          return (\r\n            <Shareholder\r\n              {...args}\r\n              key={keyShares}\r\n              id={keyShares}\r\n              shareholder={shareholder_id}\r\n              purpose={purpose_id}\r\n              firstname={userData.firstname}\r\n              lastname={userData.lastname}\r\n              share={shares_share}\r\n              roles={arrRoles}\r\n              closeButton={false}\r\n              rangeControl={false}\r\n              sharePerCent={share_per_cent}\r\n              businessOwnerFirstname={owner_firstname}\r\n              businessOwnerLastname={owner_lastname}\r\n              businessTitle={business_title}\r\n              purposeTitle={purpose_title}\r\n              sharesCreated={shares_created}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {cnt === 0 && <p className=\"text-center text-muted\">{t(\"No shares\")}</p>}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"md\"\r\n        countItems={countShares}\r\n        itemsPerPage={sharesPerPage}\r\n        active={activePageShares}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Badge, Accordion, Card } from \"react-bootstrap\";\r\n// import { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\n// import { Redirect } from \"react-router-dom\";\r\n// import Octicon, { ChevronRight } from \"@primer/octicons-react\";\r\n// import AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\n\r\n// import ZCard from \"../card\";\r\nimport Transactions from \"../transactions\";\r\nimport Shares from \"../shares\";\r\n\r\nexport default (args) => {\r\n  // let defaults = {};\r\n  // const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    accordionView,\r\n    // currencyAbbr,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setAccountType,\r\n    setRedirectTo,\r\n    setAccordionView,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    getAccountData,\r\n    getTransactions,\r\n    getShares,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userData = props.data.userData;\r\n  // let format = props.format;\r\n  const { t } = useTranslation(\"Balance\");\r\n  // const [redirect, setRedirect] = useState(false);\r\n\r\n  // console.log(\"BALANCE DATA:\", props);\r\n  // console.log(\"BALANCE userData\", userData);\r\n  // const userDataParsed = JSON.parse(userData);\r\n  const userDataParsed = userData;\r\n\r\n  // let footer = <small className=\"text-muted\">Last updated 3 mins ago</small>;\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  // const gotoNextView = () => {\r\n  //   // console.log(props);\r\n\r\n  //   // props.data.setView(\"transfer\");\r\n  //   setRedirect(true);\r\n  // };\r\n\r\n  const onAccountTypeSelected = (type) => {\r\n    // console.log(type);\r\n\r\n    setAccountType(type);\r\n    setRedirectTo(\"/transfer\");\r\n  };\r\n\r\n  // console.log(userData);\r\n  const available =\r\n    userDataParsed !== null\r\n      ? format(\r\n          userDataParsed.acc_curr +\r\n            userDataParsed.acc_cred +\r\n            userDataParsed.acc_save\r\n        )\r\n      : null;\r\n  let acc_curr =\r\n    userDataParsed !== null ? format(userDataParsed.acc_curr) : null;\r\n  let acc_cred =\r\n    userDataParsed !== null ? format(userDataParsed.acc_cred) : null;\r\n  let acc_save =\r\n    userDataParsed !== null ? format(userDataParsed.acc_save) : null;\r\n\r\n  // if (props.data.view === \"transfer\") {\r\n  //   return <Redirect push to=\"/transfer\" />;\r\n  // }\r\n\r\n  // if (redirect) {\r\n  //   // props.data.setView(\"transfer\");\r\n  //   return <Redirect push to=\"/transfer\" />;\r\n  // }\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  const toggleView = (view) => {\r\n    const newView = accordionView !== view ? view : null;\r\n\r\n    setAccordionView(newView);\r\n\r\n    if (newView !== null) {\r\n      switch (view) {\r\n        case \"balance\":\r\n          getAccountData();\r\n          break;\r\n\r\n        case \"transactions\":\r\n          getTransactions(1);\r\n          break;\r\n\r\n        case \"shares\":\r\n          getShares(1);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  // const ToggleAccountNumber = () => {\r\n  //   setAccordionView(\r\n  //     accordionView !== \"accountNumber\" ? \"accountNumber\" : null\r\n  //   );\r\n  // };\r\n\r\n  // const ToggleBalance = () => {\r\n  //   // console.log(\"decorate\");\r\n  //   setAccordionView(accordionView !== \"balance\" ? \"balance\" : null);\r\n  //   getAccountData();\r\n  // };\r\n\r\n  // const ToggleTransactions = () => {\r\n  //   // console.log(\"decorate\");\r\n  //   setAccordionView(\"transactions\");\r\n  //   getTransactions(1);\r\n  // };\r\n\r\n  // const ToggleShares = () => {\r\n  //   // console.log(\"decorate\");\r\n  //   setAccordionView(\"shares\");\r\n  //   getShares(1);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Accordion defaultActiveKey={accordionView}>\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"accountNumber\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"accountNumber\")}\r\n          >\r\n            {t(\"Account number\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"accountNumber\">\r\n            <Card.Body>\r\n              <Card.Text>{accountNumber}</Card.Text>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"balance\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n              // backgroundColor: \"#e8f6f3\",\r\n            }}\r\n            onClick={() => toggleView(\"balance\")}\r\n          >\r\n            {t(\"Balance\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"balance\">\r\n            <Card.Body>\r\n              <Form noValidate>\r\n                <Form.Group>\r\n                  <Form.Label>{t(\"Available\")}</Form.Label>\r\n\r\n                  <Form.Text>\r\n                    <div style={{ fontSize: \"3em\" }}>{available}</div>\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Current account\")}</div>\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_curr\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_curr}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Credit account\")}</div>\r\n\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_cred\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_cred}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Savings account\")}</div>\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_save\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_save}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"transactions\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"transactions\")}\r\n          >\r\n            {t(\"Transactions\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"transactions\">\r\n            <Card.Body>\r\n              <Transactions {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"shares\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"shares\")}\r\n          >\r\n            {t(\"Shares\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"shares\">\r\n            <Card.Body>\r\n              <Shares {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"transfer U2S\",\r\n    namespace: \"Transfer\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    accountType,\r\n    language,\r\n    currencyAbbr,\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userData = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setTransferAmount(refAmount.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [fromAccountSaved, setFromAccountSaved] = useStickyState(\r\n  //   \"\",\r\n  //   \"fromAccountSaved\"\r\n  // );\r\n  // const [toAccountSaved, setToAccountSaved] = useStickyState(\r\n  //   \"\",\r\n  //   \"toAccountSaved\"\r\n  // );\r\n  // const [amountSaved, setAmountSaved] = useStickyState(\"\", \"amountSaved\");\r\n\r\n  // useEffect(() => {\r\n  //   if (accountNumber === null) return;\r\n\r\n  //   setFromAccountSaved(\"\");\r\n  //   setToAccountSaved(\"\");\r\n  //   setAmountSaved(\"\");\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [accountNumber]);\r\n\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toAccount: yup.string().required(t(\"To Account is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} Form data\r\n   */\r\n  const transferToSelf = (data) => {\r\n    // console.log(\"TRANSFER U2S DATA:\", data);\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // console.log(\"BEFORE SEND\");\r\n\r\n    // onTransfer({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n\r\n    // setFromAccountSaved(\"\");\r\n    // setToAccountSaved(\"\");\r\n    // setAmountSaved(\"\");\r\n\r\n    setTransferAmount(\"\");\r\n\r\n    // console.log(\"AFTER SEND\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToSelf(data);\r\n  };\r\n\r\n  const TransferToSelfForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * To account\r\n         */}\r\n        <Form.Group controlId=\"validationToAccount\">\r\n          <Form.Label>{t(\"To account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"toAccount\"\r\n            value={values.toAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferToAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.toAccount && touched.toAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option value=\"acc_curr\" hidden={accountType === \"acc_curr\"}>\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option value=\"acc_cred\" hidden={accountType === \"acc_cred\"}>\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option value=\"acc_save\" hidden={accountType === \"acc_save\"}>\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.toAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setTransferAmount(e.target.value);\r\n              }}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"transfer U2S\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={TransferToSelfForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        fromAccount: transferFromAccount,\r\n        toAccount: transferToAccount,\r\n        amount: transferAmount,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\nimport ModalMessage from \"../modalMessage\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"TanInput\",\r\n    request: \"submit tan\",\r\n    show: false,\r\n    size: \"lg\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { tanRequired, userData, tanInputTAN } = props.barrelGetters;\r\n  const { setTanRequired, setTanInputTAN } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refTAN = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (refTAN.current !== null && tanInputTAN !== refTAN.current.value)\r\n        setTanInputTAN(refTAN.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    tan: yup.string().required(t(\"TAN is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    setTanRequired(false);\r\n    data.email = userData.email;\r\n    setTanInputTAN(\"\");\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div>\r\n        {t(\"A transaction number has been sent to your email account.\")}\r\n      </div>\r\n      <br />\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFormikTAN\">\r\n          <Form.Label>{t(\"TAN\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"tan\"\r\n              ref={refTAN}\r\n              value={values.tan}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.tan && touched.tan}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.tan}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  const message = (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        tan: tanInputTAN,\r\n      }}\r\n    />\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        message={message}\r\n        show={tanRequired}\r\n        size={props.size}\r\n        centered={true}\r\n        onHide={() => setTanRequired(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport TanInput from \"../tanInput\";\r\n\r\n/**\r\n * Component: TransferToPerson\r\n */\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2U\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const [transferDescriptionTemp, setTransferDescriptionTemp] = useStickyState(\r\n    \"\",\r\n    \"transferDescriptionTemp\"\r\n  );\r\n\r\n  const refPersonalID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setTransferToUID(refPersonalID.current.value);\r\n      setTransferDescription(refDescription.current.value);\r\n      setTransferAmount(refAmount.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toPersonalID: yup\r\n      .string()\r\n      .required(t(\"Recipients Personal ID is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Personal ID Regex\")),\r\n        t(\"Wrong Personal ID format\")\r\n      ),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToPerson = (data) => {\r\n    // console.log(\"TRANSFER U2U DATA:\", data);\r\n    data.transferType = props.request;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  // return <>test</>;\r\n\r\n  const onSubmit = (data) => {\r\n    transferToPerson(data);\r\n  };\r\n\r\n  const TransferToPersonForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Recipients Personal ID\r\n         */}\r\n        <Form.Group controlId=\"validationFormikToPersonalID\">\r\n          <Form.Label>{t(\"To Personal ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={t(\"XXXXXX-XXXXX\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"toPersonalID\"\r\n              ref={refPersonalID}\r\n              value={values.toPersonalID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.toPersonalID && touched.toPersonalID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.toPersonalID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Transfer Description\r\n         */}\r\n        <Form.Group controlId=\"validationFormikDescription\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Button: Next */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToPersonForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          toPersonalID: transferToUID,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport TanInput from \"../tanInput\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2B\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setTransferToPurpose(refPurposeID.current.value);\r\n      setTransferDescription(refDescription.current.value);\r\n      setTransferAmount(refAmount.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    // businessTitle: yup\r\n    //   .string()\r\n    //   .required(t(\"Recipients Business ID is required\")),\r\n    purposeID: yup.string().required(t(\"Purpose ID is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToBusiness = (data) => {\r\n    data.transferType = props.request;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.currency = currencyAbbr;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // data.amount = parseFloat(data.amount);\r\n    // data.amount = Number(data.amount.replace(/[^0-9.-]+/g, \"\"));\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToBusiness(data);\r\n  };\r\n\r\n  const TransferToBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      {/* From account */}\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Business ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"businessTitle\"\r\n              value={values.businessTitle}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.businessTitle}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n        */}\r\n\r\n        {/* To purpose */}\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Purpose ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"purposeID\"\r\n              ref={refPurposeID}\r\n              value={values.purposeID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.purposeID && touched.purposeID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.purposeID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Field: Description */}\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/* Amount */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"string\" // do NOT change to number!!\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          purposeID: transferToPurpose,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"BusinessRegistration\",\r\n    request: \"register business\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  const { onBusinessRegistration } = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refBusinessTitle = React.createRef();\r\n  const refBusinessDescription = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refBusinessTitle.current !== null &&\r\n        businessRegistrationAddTitle !== refBusinessTitle.current.value\r\n      )\r\n        setBusinessRegistrationAddTitle(refBusinessTitle.current.value);\r\n\r\n      if (\r\n        refBusinessDescription.current !== null &&\r\n        businessRegistrationAddDescription !==\r\n          refBusinessDescription.current.value\r\n      )\r\n        setBusinessRegistrationAddDescription(\r\n          refBusinessDescription.current.value\r\n        );\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [addOwnerAsShareholder, setAddOwnerAsShareholder] = useStickyState(\r\n  //   false,\r\n  //   \"addOwnerAsShareholder\"\r\n  // );\r\n\r\n  const schema = yup.object({\r\n    businessTitle: yup\r\n      .string()\r\n      .required(t(\"Business title is a required field\"))\r\n      .min(3, t(\"Business title too short\"))\r\n      .max(70, t(\"Business title too long\"))\r\n      .trim(),\r\n    businessDescription: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * On business registration\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n\r\n    // console.log(\"REGISTER BUSINESS DATA:\", data);\r\n\r\n    // onBusinessRegistration({ req: \"register business\", data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Business Title (Business ID) */}\r\n      <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n        <Form.Label>{t(\"Business Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"businessTitle\"\r\n            ref={refBusinessTitle}\r\n            value={values.businessTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.businessTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/* Business Description */}\r\n      <Form.Group controlId=\"businessDescription\">\r\n        <Form.Label>{t(\"Business Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"businessDescription\"\r\n          ref={refBusinessDescription}\r\n          value={values.businessDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={RegisterBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          businessTitle: businessRegistrationAddTitle,\r\n          businessDescription: businessRegistrationAddDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"PurposeRegistration\",\r\n    requestInsert: \"register purpose\",\r\n    requestUpdate: \"update purpose property\",\r\n    businessID: null,\r\n    purposeID: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    subcategory: \"\",\r\n    subcategory2: \"\",\r\n    keywords: \"\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"PURPOSE REGISTRATION PROPS:\", props);\r\n\r\n  const barrels = props;\r\n  const { businessID, purposeID, id } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    language,\r\n    businessPurposes,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    purposeRegistrationCategory,\r\n    purposeRegistrationSubcategory,\r\n    purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    setBusinessPurposes,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationCategory,\r\n    setPurposeRegistrationSubcategory,\r\n    setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n  } = barrels.barrelSetters;\r\n  const { getReviser, getWorkplace } = barrels.barrelFunctions;\r\n  const { onPurposeRegistration } = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeTitle = React.createRef();\r\n  const refPurposeDescription = React.createRef();\r\n  const refPurposeCategory = React.createRef();\r\n  const refPurposeSubcategory = React.createRef();\r\n  const refPurposeSubcategory2 = React.createRef();\r\n  const refPurposeKeywords = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refPurposeTitle.current !== null &&\r\n        purposeRegistrationTitle !== refPurposeTitle.current.value\r\n      )\r\n        setPurposeRegistrationTitle(refPurposeTitle.current.value);\r\n\r\n      if (\r\n        refPurposeDescription.current !== null &&\r\n        purposeRegistrationDescription !== refPurposeDescription.current.value\r\n      )\r\n        setPurposeRegistrationDescription(refPurposeDescription.current.value);\r\n\r\n      if (\r\n        refPurposeCategory.current !== null &&\r\n        purposeRegistrationCategory !== refPurposeCategory.current.value\r\n      )\r\n        setPurposeRegistrationCategory(refPurposeCategory.current.value);\r\n\r\n      if (\r\n        refPurposeSubcategory.current !== null &&\r\n        purposeRegistrationSubcategory !== refPurposeSubcategory.current.value\r\n      )\r\n        setPurposeRegistrationSubcategory(refPurposeSubcategory.current.value);\r\n\r\n      if (\r\n        refPurposeSubcategory2.current !== null &&\r\n        purposeRegistrationSubcategory2 !== refPurposeSubcategory2.current.value\r\n      )\r\n        setPurposeRegistrationSubcategory2(\r\n          refPurposeSubcategory2.current.value\r\n        );\r\n\r\n      if (\r\n        refPurposeKeywords.current !== null &&\r\n        purposeRegistrationKeywords !== refPurposeKeywords.current.value\r\n      )\r\n        setPurposeRegistrationKeywords(refPurposeKeywords.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const schema = yup.object({\r\n    purposeTitle: yup\r\n      .string()\r\n      .required(t(\"Purpose title is a required field\"))\r\n      .min(3, t(\"Purpose title too short\"))\r\n      .max(70, t(\"Purpose title too long\"))\r\n      .trim(),\r\n    purposeDescription: yup.string().optional(),\r\n    purposeCategory: yup\r\n      .string()\r\n      .required(t(\"Purpose category is a required field\"))\r\n      .max(70, t(\"Purpose category too long\"))\r\n      .trim(),\r\n    purposeSubcategory: yup.string().optional(),\r\n    purposeSubcategory2: yup.string().optional(),\r\n    purposeKeywords: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const RegisterPurpose = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.businessID = businessID;\r\n    data.id = id;\r\n    data.purposeID = purposeID;\r\n    data.uid = accountNumber;\r\n    data.language = language;\r\n\r\n    // console.log(\"REGISTER PURPOSE DATA:\", data);\r\n\r\n    onPurposeRegistration({\r\n      req: props.purposeID === null ? props.requestInsert : props.requestUpdate,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    RegisterPurpose(data);\r\n  };\r\n\r\n  const RegisterPurposeForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/*\r\n       * Purpose Title (Purpose ID)\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeID\">\r\n        <Form.Label>{t(\"Purpose Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"purposeTitle\"\r\n            ref={refPurposeTitle}\r\n            value={values.purposeTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeTitle && touched.purposeTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Description\r\n       */}\r\n      <Form.Group controlId=\"purposeDescription\">\r\n        <Form.Label>{t(\"Purpose Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"purposeDescription\"\r\n          ref={refPurposeDescription}\r\n          value={values.purposeDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Category\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeCategory\">\r\n        <Form.Label>{t(\"Purpose Category\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"purposeCategory\"\r\n            ref={refPurposeCategory}\r\n            value={values.purposeCategory}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeCategory && touched.purposeCategory}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeCategory}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Subcategory 1\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeSubcategory\">\r\n        <Form.Label>{t(\"Purpose Subcategory\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeSubcategory\"\r\n            ref={refPurposeSubcategory}\r\n            value={values.purposeSubcategory}\r\n            onChange={handleChange}\r\n            isInvalid={\r\n              !!errors.purposeSubcategory && touched.purposeSubcategory\r\n            }\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeSubcategory}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Subcategory 2\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeSubcategory2\">\r\n        <Form.Label>{t(\"Purpose Subcategory 2\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeSubcategory2\"\r\n            ref={refPurposeSubcategory2}\r\n            value={values.purposeSubcategory2}\r\n            onChange={handleChange}\r\n            isInvalid={\r\n              !!errors.purposeSubcategory2 && touched.purposeSubcategory2\r\n            }\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeSubcategory2}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Keywords\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeKeywords\">\r\n        <Form.Label>{t(\"Purpose Keywords\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeKeywords\"\r\n            ref={refPurposeKeywords}\r\n            value={values.purposeKeywords}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeKeywords && touched.purposeKeywords}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeKeywords}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Submit button\r\n       */}\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(props.purposeID === null ? \"Submit\" : \"Save\")}\r\n        request={\r\n          props.purposeID === null ? props.requestInsert : props.requestUpdate\r\n        }\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterPurposeForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        purposeTitle: purposeRegistrationTitle,\r\n        purposeDescription: purposeRegistrationDescription,\r\n        purposeCategory: purposeRegistrationCategory,\r\n        purposeSubcategory: purposeRegistrationSubcategory,\r\n        purposeSubcategory2: purposeRegistrationSubcategory2,\r\n        purposeKeywords: purposeRegistrationKeywords,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"register shareholder\",\r\n    namespace: \"ShareholderRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const barrels = props;\r\n  const { purposeID } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber } = barrels.barrelGetters;\r\n  // const {} = barrels.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n  } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const thisRef = createRef();\r\n\r\n  const schema = yup.object({\r\n    // personalID: yup\r\n    //   .string()\r\n    //   .required(t(\"Personal ID is required\"))\r\n    //   .matches(\r\n    //     new RegExp(t(\"Personal ID Regex\")),\r\n    //     t(\"Wrong Personal ID format\")\r\n    //   ),\r\n    shareholderRoles: yup.string().optional(),\r\n    shares: yup\r\n      .number()\r\n      .typeError(t(\"Shares must be a number\"))\r\n      .required(t(\"Shares is required\"))\r\n      .min(1, t(\"Shares too few\"))\r\n      .max(1000, t(\"Shares too many\")),\r\n  });\r\n\r\n  /**\r\n   * Send shareholder registration request\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.purposeID = purposeID;\r\n\r\n    // console.log(\"REGISTER SHAREHOLDER DATA:\", data);\r\n\r\n    // onShareholderRegistration({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterShareholderForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* id=\"shareholderRegistrationForm\" */}\r\n      <Toast style={{ minWidth: \"100%\" }}>\r\n        {/*\r\n        <Toast.Header closeButton={false}>\r\n          <strong className=\"mr-auto\">{t(\"Add Shareholder\")}</strong>\r\n        </Toast.Header>\r\n        */}\r\n        <Toast.Body>\r\n          <Form.Group controlId=\"validationFormikShareholderPersonalID\">\r\n            <Form.Label>{t(\"Shareholder Personal ID\")}</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={t(\"XXXXXX-XXXXX\")}\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"personalID\"\r\n                value={values.personalID}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.personalID && touched.personalID}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.personalID}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          {/* Shareholder Roles */}\r\n          <Form.Group controlId=\"validationFormikShareholderRoles\">\r\n            <Form.Label>{t(\"Shareholder Roles\")}</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"shareholderRoles\"\r\n                value={values.shareholderRoles}\r\n                onChange={handleChange}\r\n                isInvalid={\r\n                  !!errors.shareholderRoles && touched.shareholderRoles\r\n                }\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.shareholderRoles}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          {/* Shares */}\r\n          <Form.Group controlId=\"validationFormikShareholderRoles\">\r\n            <Form.Label>{t(\"Shares\")}</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type=\"number\"\r\n                min={1}\r\n                max={1000}\r\n                step={1}\r\n                placeholder=\"\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"shares\"\r\n                value={values.shares}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.shares && touched.shares}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.shares}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Toast.Body>\r\n      </Toast>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterShareholderForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        personalID: \"\",\r\n        shares: 1,\r\n        shareholderRoles: \"\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Card,\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  // Nav,\r\n  Form,\r\n  // Toast,\r\n  // Badge,\r\n  // Container,\r\n  // Button,\r\n} from \"react-bootstrap\";\r\n// import { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import Octicon, { Plus, PlusSmall, Gear } from \"@primer/octicons-react\";\r\nimport { Add, Extension, Store, Edit, Close } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Dropzone from \"../dropzone\";\r\nimport BusinessRegistration from \"../businessRegistration\";\r\nimport PurposeRegistration from \"../purposeRegistration\";\r\nimport PurposeProperty from \"../purposeProperty\";\r\nimport ShareholderRegistration from \"../shareholderRegistration\";\r\n// import shareholderRegistration from \"../shareholderRegistration\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"MyBusiness\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    userBusinesses,\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes,\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    purposeShareholders,\r\n    // purposeID,\r\n    activePurposeData,\r\n    language,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRedirectTo,\r\n    setBusinessPurposes,\r\n    setActiveBusiness,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePurposeData,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationCategory,\r\n    setPurposeRegistrationSubcategory,\r\n    setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    sendRequest,\r\n  } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // useEffect(() => {\r\n  //   // getBusinesses();\r\n  //   // getBusinesses();\r\n  //   // eslint-disable-next-line\r\n  // }, []);\r\n\r\n  /**\r\n   * Toggle business (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const ToggleBusiness = ({ eventKey, businessID }) => {\r\n    getBusinessPurposes(businessID, eventKey, 1);\r\n  };\r\n\r\n  /**\r\n   * Toggle purpose (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const TogglePurpose = ({ eventKey, purposeID }) => {\r\n    getPurposeShareholders(purposeID, eventKey);\r\n  };\r\n\r\n  /**\r\n   * Create:\r\n   * - business menu\r\n   * - business purposes menu\r\n   */\r\n  let menuItems = [];\r\n  let purposes = [];\r\n  let countShareholders = 0;\r\n  userBusinesses !== null &&\r\n    Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n      menuItems[keyBusiness] = [];\r\n      purposes[keyBusiness] = [];\r\n      businessPurposes !== null &&\r\n        Object.keys(businessPurposes).map((purpose, keyPurpose) => {\r\n          if (\r\n            businessPurposes[purpose].business_id ===\r\n            userBusinesses[business].business_id\r\n          ) {\r\n            menuItems[keyBusiness][keyPurpose] = (\r\n              <ListGroup.Item\r\n                action\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n                onClick={() =>\r\n                  TogglePurpose({\r\n                    eventKey: keyPurpose,\r\n                    purposeID: businessPurposes[purpose].purpose_id,\r\n                  })\r\n                }\r\n              >\r\n                <span style={{ whiteSpace: \"nowrap\" }}>\r\n                  {businessPurposes[purpose].title}\r\n                </span>\r\n\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={(e) => {\r\n                      // setPurposeID(businessPurposes[purpose].purpose_id);\r\n                      // console.log(\"edit:\", businessPurposes[purpose]);\r\n\r\n                      setPurposeRegistrationTitle(\r\n                        businessPurposes[purpose].title !== null\r\n                          ? businessPurposes[purpose].title\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationDescription(\r\n                        businessPurposes[purpose].description !== null\r\n                          ? businessPurposes[purpose].description\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationCategory(\r\n                        businessPurposes[purpose].category !== null\r\n                          ? businessPurposes[purpose].category\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationSubcategory(\r\n                        businessPurposes[purpose].subcategory !== null\r\n                          ? businessPurposes[purpose].subcategory\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationSubcategory2(\r\n                        businessPurposes[purpose].subcategory2 !== null\r\n                          ? businessPurposes[purpose].subcategory2\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationKeywords(\r\n                        businessPurposes[purpose].keywords !== null\r\n                          ? businessPurposes[purpose].keywords\r\n                          : \"\"\r\n                      );\r\n\r\n                      setActivePurposeData(\r\n                        JSON.stringify(businessPurposes[purpose])\r\n                      );\r\n                      setActiveBusinesPurpose(\"addPurpose\");\r\n                      e.stopPropagation();\r\n                    }}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </ListGroup.Item>\r\n            );\r\n\r\n            purposes[keyBusiness][keyPurpose] = (\r\n              <Tab.Pane\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n              >\r\n                <Accordion\r\n                  defaultActiveKey={\r\n                    activePurposeProperty !== null\r\n                      ? activePurposeProperty\r\n                      : \"shareholders\"\r\n                  }\r\n                >\r\n                  {/* Purpose shareholders */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"shareholders\"\r\n                      onClick={() => setActivePurposeProperty(\"shareholders\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Shareholders\")}\r\n                      </span>\r\n                      <span style={{ float: \"right\" }}>\r\n                        <Add\r\n                          onClick={(e) => {\r\n                            setActivePurposeProperty(\"addShareholder\");\r\n                            e.stopPropagation();\r\n                          }}\r\n                          fontSize=\"small\"\r\n                          style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                        />\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    {/* Toggle: Add shareholder */}\r\n                    <Accordion.Collapse eventKey=\"addShareholder\">\r\n                      <Card.Body>\r\n                        <ShareholderRegistration\r\n                          {...args}\r\n                          purposeID={businessPurposes[purpose].purpose_id}\r\n                        />\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n\r\n                    {/* Toggle: Shareholders list */}\r\n                    <Accordion.Collapse eventKey=\"shareholders\">\r\n                      <Card.Body>\r\n                        {typeof purposeShareholders !== \"undefined\" &&\r\n                          purposeShareholders !== null &&\r\n                          Object.keys(purposeShareholders).map(\r\n                            (shareholder, keyShareholder) => {\r\n                              if (\r\n                                purposeShareholders[shareholder].purpose_id ===\r\n                                businessPurposes[purpose].purpose_id\r\n                              ) {\r\n                                const { purpose_id } = purposeShareholders[\r\n                                  shareholder\r\n                                ];\r\n                                const {\r\n                                  shareholder_id,\r\n                                  firstname,\r\n                                  lastname,\r\n                                  // email,\r\n                                  roles,\r\n                                  share,\r\n                                } = purposeShareholders[shareholder];\r\n\r\n                                countShareholders++;\r\n\r\n                                const arrRoles =\r\n                                  roles !== null ? roles.split(\",\") : [];\r\n\r\n                                return (\r\n                                  <Shareholder\r\n                                    {...args}\r\n                                    key={keyShareholder}\r\n                                    id={keyShareholder}\r\n                                    shareholder={shareholder_id}\r\n                                    purpose={purpose_id}\r\n                                    firstname={firstname}\r\n                                    lastname={lastname}\r\n                                    share={share}\r\n                                    roles={arrRoles}\r\n                                  />\r\n                                );\r\n                              } else {\r\n                                return \"\"; // TODO: check if this works\r\n                              }\r\n                            }\r\n                          )}\r\n                        {countShareholders === 0 && (\r\n                          <Card.Text className=\"text-muted\">\r\n                            {t(\"No shareholders\")}\r\n                          </Card.Text>\r\n                        )}\r\n\r\n                        {/* End shareholders list */}\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Product status */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      eventKey=\"productStatus\"\r\n                      onClick={() => setActivePurposeProperty(\"productStatus\")}\r\n                    >\r\n                      {t(\"Product Status\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"productStatus\">\r\n                      <Card.Body\r\n                        onClick={(e) => {\r\n                          // console.log(\"Click\", e);\r\n\r\n                          const bp = businessPurposes;\r\n                          bp[purpose].status =\r\n                            businessPurposes[purpose].status === 0 ? 1 : 0;\r\n                          setBusinessPurposes(JSON.stringify(bp));\r\n\r\n                          let data = {};\r\n                          // data.business_id =\r\n                          //   businessPurposes[purpose].business_id;\r\n                          // data.language = language;\r\n                          data.purpose_id =\r\n                            businessPurposes[purpose].purpose_id;\r\n                          // data.purpose_title = businessPurposes[purpose].title;\r\n                          data.purpose_status =\r\n                            businessPurposes[purpose].status;\r\n                          return sendRequest({\r\n                            req: \"change purpose status\",\r\n                            data,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Form>\r\n                          {typeof purposeShareholders === \"undefined\" ||\r\n                            (purposeShareholders === null && (\r\n                              <Form.Text>\r\n                                {t(\r\n                                  \"To publish, please add at least one shareholder\"\r\n                                )}\r\n                                <br />\r\n                                <br />\r\n                              </Form.Text>\r\n                            ))}\r\n\r\n                          {typeof purposeShareholders !== \"undefined\" &&\r\n                            purposeShareholders !== null && (\r\n                              <Form.Check\r\n                                type=\"switch\"\r\n                                custom\r\n                                disabled={\r\n                                  typeof purposeShareholders === \"undefined\" ||\r\n                                  purposeShareholders === null\r\n                                }\r\n                                label={t(\r\n                                  businessPurposes[purpose].status === 0\r\n                                    ? \"Not published\"\r\n                                    : \"Published\"\r\n                                )}\r\n                                checked={businessPurposes[purpose].status === 1}\r\n                                onChange={(e) => {\r\n                                  console.log(e);\r\n                                }}\r\n                              />\r\n                            )}\r\n                        </Form>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose ID */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      eventKey=\"purpose_id\"\r\n                      onClick={() => setActivePurposeProperty(\"purpose_id\")}\r\n                    >\r\n                      {t(\"Purpose ID\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"purpose_id\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].purpose_id}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose title */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"title\"\r\n                      onClick={() => setActivePurposeProperty(\"title\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Title\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"title\">\r\n                      <Card.Body>\r\n                        <Card.Text>{businessPurposes[purpose].title}</Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose description\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"description\"\r\n                      onClick={() => setActivePurposeProperty(\"description\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Description\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"description\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].description}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose category\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"category\"\r\n                      onClick={() => setActivePurposeProperty(\"category\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Category\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"category\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].category}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose subcategory\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"subcategory\"\r\n                      onClick={() => setActivePurposeProperty(\"subcategory\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Subcategory\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"subcategory\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].subcategory}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose subcategory 2\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"subcategory2\"\r\n                      onClick={() => setActivePurposeProperty(\"subcategory2\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Subcategory 2\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"subcategory2\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].subcategory2}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Keywords\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"keywords\"\r\n                      onClick={() => setActivePurposeProperty(\"keywords\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Keywords\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"keywords\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].keywords}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* End of purpose properties */}\r\n                </Accordion>\r\n              </Tab.Pane>\r\n            );\r\n          }\r\n          countShareholders = 0;\r\n          return true;\r\n        });\r\n      return true;\r\n    });\r\n\r\n  const jsx = (\r\n    <>\r\n      <Accordion\r\n        defaultActiveKey={\r\n          activeBusiness !== null || !userBusinessesLoaded\r\n            ? activeBusiness\r\n            : \"myBusinesses\"\r\n        }\r\n      >\r\n        {/* Add business location top */}\r\n\r\n        {/* List user businesses */}\r\n        {userBusinesses !== null &&\r\n          Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n            const date = new Date(userBusinesses[business].created);\r\n            const businessSince = new Intl.DateTimeFormat(language).format(\r\n              date\r\n            );\r\n            // keyBusiness[3] = userBusinesses[business].business_id;\r\n            return (\r\n              <Card key={keyBusiness}>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey={keyBusiness}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    ToggleBusiness({\r\n                      eventKey: keyBusiness,\r\n                      businessID: userBusinesses[business].business_id,\r\n                    })\r\n                  }\r\n                >\r\n                  <Store style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                  {userBusinesses[business].title}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={keyBusiness}>\r\n                  <Card.Body>\r\n                    <Tab.Container\r\n                      id=\"left-tabs-example\"\r\n                      defaultActiveKey={\r\n                        activeBusinesPurpose !== null\r\n                          ? activeBusinesPurpose\r\n                          : \"aboutBusiness\"\r\n                      }\r\n                    >\r\n                      <Row>\r\n                        {/* Layout: Left side - Menu */}\r\n                        <Col sm={5}>\r\n                          <ListGroup variant=\"flush\">\r\n                            {/* Menu item: About business */}\r\n                            <ListGroup.Item action eventKey=\"aboutBusiness\">\r\n                              <span style={{ whiteSpace: \"nowrap\" }}>\r\n                                {t(\"About\")}\r\n                              </span>\r\n                              <span style={{ float: \"right\" }}>\r\n                                <Add\r\n                                  onClick={(e) => {\r\n                                    // setPurposeID(null);\r\n                                    setActivePurposeData(null);\r\n                                    setActiveBusinesPurpose(\"addPurpose\");\r\n                                    e.stopPropagation();\r\n                                  }}\r\n                                  fontSize=\"small\"\r\n                                  style={{\r\n                                    color: \"var(--dark)\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                />\r\n                              </span>\r\n                            </ListGroup.Item>\r\n\r\n                            {/* Menu item: Add purpose */}\r\n                            {false && (\r\n                              <ListGroup.Item action eventKey=\"addPurpose\">\r\n                                <span style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <Add\r\n                                    fontSize=\"small\"\r\n                                    style={{ color: \"var(--dark)\" }}\r\n                                  />\r\n                                  &nbsp;{t(\"Add Purpose\")}\r\n                                </span>\r\n                              </ListGroup.Item>\r\n                            )}\r\n\r\n                            {/* Menu items: Registered purposes */}\r\n                            {menuItems[keyBusiness]}\r\n\r\n                            {/* old add purpose */}\r\n                          </ListGroup>\r\n                          {countBusinessPurposes !== null && (\r\n                            <>\r\n                              <br />\r\n                              <Pagination\r\n                                {...args}\r\n                                size=\"sm\"\r\n                                countItems={countBusinessPurposes}\r\n                                itemsPerPage={businessPurposesPerPage}\r\n                                active={activePageBusinessPurposes}\r\n                                onClick={(number) =>\r\n                                  getBusinessPurposes(\r\n                                    activeBusinessID,\r\n                                    0,\r\n                                    number\r\n                                  )\r\n                                }\r\n                              />\r\n                            </>\r\n                          )}\r\n                        </Col>\r\n\r\n                        {/* Layout: Right side - Content */}\r\n                        <Col sm={7}>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"aboutBusiness\">\r\n                              <Accordion defaultActiveKey=\"businessID\">\r\n                                {/* Business logo */}\r\n\r\n                                {/*\r\n                              <Card>\r\n                                <Accordion.Toggle\r\n                                  as={Card.Header}\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  eventKey=\"businessLogo\"\r\n                                >\r\n                                  [LOGO]\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"businessLogo\">\r\n                                  <Card border=\"light\">\r\n                                    <Card.Body>\r\n                                      <Dropzone data={args} />\r\n                                    </Card.Body>\r\n                                  </Card>\r\n                                </Accordion.Collapse>\r\n                              </Card>\r\n                              */}\r\n\r\n                                {/* Business ID */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessID\"\r\n                                  >\r\n                                    {t(\"Business ID\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessID\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          {userBusinesses[business].business_id}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business description */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessDescription\"\r\n                                  >\r\n                                    {t(\"Business Description\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessDescription\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          {userBusinesses[business].description}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business Creation Date */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessCreationDate\"\r\n                                  >\r\n                                    {t(\"Business Created\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessCreationDate\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>{businessSince}</Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n\r\n                            {/* Start Business purposes */}\r\n                            {purposes[keyBusiness]}\r\n                            {/* End Business purposes */}\r\n\r\n                            {/*\r\n                             * Add new purpose / update existing purpose\r\n                             */}\r\n                            <Tab.Pane eventKey=\"addPurpose\">\r\n                              <Accordion defaultActiveKey=\"newPurpose\">\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    eventKey=\"newPurpose\"\r\n                                  >\r\n                                    {t(\r\n                                      activePurposeData === null\r\n                                        ? \"New Purpose\"\r\n                                        : \"Edit Purpose\"\r\n                                    )}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"newPurpose\">\r\n                                    <Card.Body>\r\n                                      <PurposeRegistration\r\n                                        {...args}\r\n                                        businessID={\r\n                                          userBusinesses[business].business_id\r\n                                        }\r\n                                        id={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.id\r\n                                            : null\r\n                                        }\r\n                                        purposeID={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.purpose_id\r\n                                            : null\r\n                                        }\r\n                                        title={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.title\r\n                                            : \"\"\r\n                                        }\r\n                                        description={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.description\r\n                                            : \"\"\r\n                                        }\r\n                                        category={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.category\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory2={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory2\r\n                                            : \"\"\r\n                                        }\r\n                                        keywords={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.keywords\r\n                                            : \"\"\r\n                                        }\r\n                                      />\r\n                                    </Card.Body>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>\r\n                        </Col>\r\n                      </Row>\r\n                    </Tab.Container>\r\n                    {/* pagination prev */}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            );\r\n            // console.log(\"BUSINESS:\", userBusinesses[business]);\r\n          })}\r\n\r\n        {/* add business location bottom */}\r\n\r\n        {/* Add business */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"addBusiness\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() =>\r\n              setActiveBusiness(\r\n                activeBusiness !== \"addBusiness\" ? \"addBusiness\" : null\r\n              )\r\n            }\r\n          >\r\n            <span>\r\n              <Add fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              &nbsp;\r\n              {t(\"Add Business\")}\r\n            </span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"addBusiness\">\r\n            <Card.Body>\r\n              <BusinessRegistration {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      {userBusinesses !== null && (\r\n        <>\r\n          <br />\r\n\r\n          <Pagination\r\n            {...args}\r\n            size=\"md\"\r\n            countItems={countBusinesses}\r\n            itemsPerPage={businessesPerPage}\r\n            active={activePageBusinesses}\r\n            onClick={(number) => getBusinesses(number)}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","import \"./UserEditor.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup, Form, InputGroup } from \"react-bootstrap\";\r\nimport {\r\n  Visibility,\r\n  VisibilityOff,\r\n  Close,\r\n  Edit,\r\n  // Done,\r\n} from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"UserEditor\",\r\n    request: \"update user\",\r\n    mode: \"label\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"USER EDITOR PROPS:\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    // currencies,\r\n    // currencyAbbr,\r\n    // language,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getReviser, getWorkplace } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refFirstName.current !== null &&\r\n        userEditorFirstname !== refFirstName.current.value\r\n      )\r\n        setUserEditorFirstname(refFirstName.current.value);\r\n\r\n      if (\r\n        refLastName.current !== null &&\r\n        userEditorLastname !== refLastName.current.value\r\n      )\r\n        setUserEditorLastname(refLastName.current.value);\r\n\r\n      if (\r\n        refEmail.current !== null &&\r\n        userEditorEmail !== refEmail.current.value\r\n      )\r\n        setUserEditorEmail(refEmail.current.value);\r\n\r\n      if (\r\n        refPassword.current !== null &&\r\n        userEditorPassword !== refPassword.current.value\r\n      )\r\n        setUserEditorPassword(refPassword.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userEditorEditFirstname ||\r\n      userEditorEditLastname ||\r\n      userEditorEditEmail ||\r\n      userEditorEditPassword\r\n    ) {\r\n      setUserEditorSubmitButtonVisible(true);\r\n    } else {\r\n      setUserEditorSubmitButtonVisible(false);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [\r\n    userEditorEditFirstname,\r\n    userEditorEditLastname,\r\n    userEditorEditEmail,\r\n    userEditorEditPassword,\r\n  ]);\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  const togglePassword = () => {\r\n    setUserEditorPasswordVisible(!userEditorPasswordVisible);\r\n  };\r\n\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    // data.language = language;\r\n    // data.email = userData.email;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.personalID = accountNumber;\r\n    if (!userEditorEditFirstname) data.firstname = null;\r\n    if (!userEditorEditLastname) data.lastname = null;\r\n    if (!userEditorEditEmail) data.email = userData.email;\r\n    if (!userEditorEditPassword) data.password = null;\r\n\r\n    // console.log(\"onSubmit:\", data);\r\n\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const yupObject = {\r\n    firstName: userEditorEditFirstname\r\n      ? yup.string().required(t(\"First name is required\"))\r\n      : yup.string().optional(),\r\n    lastName: userEditorEditLastname\r\n      ? yup.string().required(t(\"Last name is required\"))\r\n      : yup.string().optional(),\r\n    email: userEditorEditEmail\r\n      ? yup\r\n          .string()\r\n          .email(t(\"Invalid email address\"))\r\n          .required(t(\"Email is required\"))\r\n      : yup.string().optional(),\r\n    password: userEditorEditPassword\r\n      ? yup\r\n          .string()\r\n          .required(t(\"No password provided\"))\r\n          .min(8, t(\"Password is too short\"))\r\n          // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n          .matches(\r\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n            t(\"Password is too weak\")\r\n          )\r\n      : yup.string().optional(),\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object(yupObject);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (userData === null) return <></>;\r\n\r\n  /**\r\n   * Destructuring\r\n   */\r\n  const { mode } = props;\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    email,\r\n    // language,\r\n    // currency_name,\r\n    // currency_abbr,\r\n  } = userData;\r\n  // const currency = `${currency_name} (${currency_abbr})`;\r\n\r\n  const UserEditorForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Card title={t(\"Profile\")}>\r\n        {/* First name */}\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"First name\")}</Form.Label>\r\n            {!userEditorEditFirstname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditFirstname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{firstname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditFirstname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditFirstname && (\r\n              <Form.Group controlId=\"validationFormikFirstName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter first name\")}\r\n                    name=\"firstName\"\r\n                    ref={refFirstName}\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.firstName && touched.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Last name */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Last name\")}</Form.Label>\r\n            {!userEditorEditLastname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditLastname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{lastname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditLastname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditLastname && (\r\n              <Form.Group controlId=\"validationFormikLastName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter last name\")}\r\n                    name=\"lastName\"\r\n                    ref={refLastName}\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.lastName && touched.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Email */}\r\n          {false && accountNumber !== null && (\r\n            <ListGroup.Item as=\"div\" action>\r\n              <Form.Label>{t(\"Email address\")}</Form.Label>\r\n              {!userEditorEditEmail ? (\r\n                <>\r\n                  <span style={{ float: \"right\" }}>\r\n                    <Edit\r\n                      onClick={() => setUserEditorEditEmail(true)}\r\n                      fontSize=\"small\"\r\n                      style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                    />\r\n                  </span>\r\n                  <br />\r\n                  <small>{email}</small>\r\n                </>\r\n              ) : (\r\n                <span style={{ float: \"right\" }}>\r\n                  <Close\r\n                    onClick={() => setUserEditorEditEmail(false)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              )}\r\n\r\n              {userEditorEditEmail && (\r\n                <Form.Group controlId=\"validationFormikEmail\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      placeholder={t(\"Enter email\")}\r\n                      name=\"email\"\r\n                      value={values.email}\r\n                      ref={refEmail}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.email && touched.email}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.email}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              )}\r\n            </ListGroup.Item>\r\n          )}\r\n\r\n          {/* Password */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Password\")}</Form.Label>\r\n            {!userEditorEditPassword ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditPassword(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditPassword(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditPassword && (\r\n              <>\r\n                {/* New password */}\r\n                <Form.Group controlId=\"validationFormikPassword\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      type={userEditorPasswordVisible ? \"text\" : \"password\"}\r\n                      placeholder={t(\"Enter new password\")}\r\n                      name=\"password\"\r\n                      ref={refPassword}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.password && touched.password}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <InputGroup.Text\r\n                        id=\"inputGroupAppend\"\r\n                        onClick={togglePassword}\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        {userEditorPasswordVisible ? (\r\n                          <VisibilityOff\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        ) : (\r\n                          <Visibility\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        )}\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.password}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              </>\r\n            )}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n\r\n        <Form.Group controlId=\"validationSubmitButton\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            visible={userEditorSubmitButtonVisible}\r\n            marginTop={20}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n      </Card>\r\n    </Form>\r\n  );\r\n\r\n  const jsx =\r\n    mode === \"label\" ? (\r\n      <span style={{ whiteSpace: \"nowrap\" }}>\r\n        {firstname} {lastname}\r\n      </span>\r\n    ) : (\r\n      <Formik\r\n        component={UserEditorForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          // firstName: userData.firstname,\r\n          // lastName: userData.lastname,\r\n          // email: userData.email,\r\n          // password: \"\",\r\n          firstName: userEditorFirstname,\r\n          lastName: userEditorLastname,\r\n          email: userEditorEmail,\r\n          password: userEditorPassword,\r\n        }}\r\n      />\r\n    );\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import settings from \"../../settings.json\";\r\n// import Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    request: \"register currency\",\r\n    namespace: \"Currencies\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencies,\r\n    settings,\r\n    countCurrencies,\r\n    activePageCurrencies,\r\n    currenciesPerPage,\r\n    currencyAbbr,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  const { setCurrencyAbbr } = props.barrelSetters;\r\n  const {\r\n    // getReviser,\r\n    // getWorkplace,\r\n    sendRequest,\r\n    getCurrencies,\r\n    formatExchangeRate,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onCurrencySelected = (e) => {\r\n    setCurrencyAbbr(e.target.id);\r\n    sendRequest({\r\n      req: \"register user currency\",\r\n      data: { email: userData.email, currency_id: e.target.id },\r\n    });\r\n  };\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageCurrencies > 1 ? activePageCurrencies - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageCurrencies < Math.ceil(countCurrencies / currenciesPerPage)\r\n            ? activePageCurrencies + 1\r\n            : Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getCurrencies(number);\r\n  };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrenciesForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Table responsive striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Currency\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Abbr\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Region\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Rate\")}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currencies !== null &&\r\n            currencies.map((currency, keyCurrency) => {\r\n              // console.log(\"CURRENCY\", currency);\r\n\r\n              const { name, abbr, rate, region } = currency;\r\n\r\n              if (\r\n                typeof settings[\"currencies\"] === \"undefined\" ||\r\n                settings[\"currencies\"] === null ||\r\n                settings[\"currencies\"].length === 0 ||\r\n                settings[\"currencies\"].includes(abbr)\r\n              ) {\r\n                // valid currency - continue\r\n              } else {\r\n                return \"\"; // invalid currency\r\n              }\r\n\r\n              return (\r\n                <tr key={keyCurrency}>\r\n                  <td style={{ textAlign: \"left\" }}>\r\n                    <Form.Check\r\n                      id={abbr}\r\n                      type=\"radio\"\r\n                      checked={currencyAbbr === abbr}\r\n                      aria-label=\"option 1\"\r\n                      label={name}\r\n                      custom\r\n                      inline\r\n                      onChange={onCurrencySelected}\r\n                      name=\"selected-currency\"\r\n                    />\r\n                  </td>\r\n                  <td style={{ textAlign: \"center\" }}>{abbr}</td>\r\n                  <td style={{ textAlign: \"left\" }}>{region}</td>\r\n                  <td style={{ textAlign: \"right\" }}>\r\n                    {formatExchangeRate(rate)}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n      <Pagination\r\n        {...args}\r\n        pages={Math.ceil(countCurrencies / currenciesPerPage)}\r\n        active={activePageCurrencies}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  // onSubmit={onSubmit}\r\n  return (\r\n    <Formik\r\n      component={CurrenciesForm}\r\n      initialValues={{\r\n        curr_abbr: \"\",\r\n        curr_title: \"\",\r\n        curr_region: \"\",\r\n        curr_rate: 1.0,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"CurrencyRegistration\",\r\n    request: \"register currency\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    // getCurrencies,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([\"CurrencyRegistration\"]);\r\n\r\n  const refAbbr = React.createRef();\r\n  const refTitle = React.createRef();\r\n  const refRegion = React.createRef();\r\n  const refRate = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (refAbbr.current !== null && currencyCode !== refAbbr.current.value)\r\n        setCurrencyCode(refAbbr.current.value);\r\n\r\n      if (refTitle.current !== null && currencyName !== refTitle.current.value)\r\n        setCurrencyName(refTitle.current.value);\r\n\r\n      if (\r\n        refRegion.current !== null &&\r\n        currencyRegion !== refRegion.current.value\r\n      )\r\n        setCurrencyRegion(refRegion.current.value);\r\n\r\n      if (refRate.current !== null && currencyNewRate !== refRate.current.value)\r\n        setCurrencyNewRate(refRate.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    curr_abbr: yup\r\n      .string()\r\n      .required(t(\"Currency abbreviation is required\"))\r\n      .min(3, t(\"Currency abbreviation is too short\"))\r\n      .max(5, t(\"Currency abbreviation is too long\")),\r\n    curr_title: yup\r\n      .string()\r\n      .required(t(\"Currency name is required\"))\r\n      .min(3, t(\"Currency name is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency name is too long\")), // must be at most 70 characters\r\n    curr_region: yup\r\n      .string()\r\n      .required(t(\"Currency region is required\"))\r\n      .min(3, t(\"Currency region is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency region is too long\")), // must be at most 70 characters\r\n    curr_rate: yup\r\n      .string()\r\n      .required(t(\"Exchange rate is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Exchange Rate Regex\")),\r\n        t(\"Wrong exchange rate format\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrencyRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/* Currency abbreviation */}\r\n        <Form.Group controlId=\"validationFormikCurrAbbr\">\r\n          <Form.Label>{t(\"Abbreviation\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_abbr\"\r\n              ref={refAbbr}\r\n              value={values.curr_abbr}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_abbr && touched.curr_abbr}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_abbr}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency name */}\r\n        <Form.Group controlId=\"validationFormikCurrName\">\r\n          <Form.Label>{t(\"Currency Name\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_title\"\r\n              ref={refTitle}\r\n              value={values.curr_title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_title && touched.curr_title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_title}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency region */}\r\n        <Form.Group controlId=\"validationFormikCurrRegion\">\r\n          <Form.Label>{t(\"Currency Region\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_region\"\r\n              ref={refRegion}\r\n              value={values.curr_region}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_region && touched.curr_region}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_region}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Initial exchange rate */}\r\n        <Form.Group controlId=\"validationFormikCurrRate\">\r\n          <Form.Label>{t(\"Initial Exchange Rate\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_rate\"\r\n              value={values.curr_rate}\r\n              ref={refRate}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_rate && touched.curr_rate}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_rate}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={CurrencyRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        curr_abbr: currencyCode,\r\n        curr_title: currencyName,\r\n        curr_region: currencyRegion,\r\n        curr_rate: currencyNewRate,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AvTimer } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n//  let time = new Date().toLocaleString();\r\nimport { useInterval } from \"../../utils/useInterval\";\r\nimport { useEventListener } from \"../../utils/useEventListener\";\r\n\r\nimport ModalMessage from \"../modalMessage\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Constants\r\n     ============================================================================ */\r\n  const minute = 60; // seconds, for testing purposes > 60\r\n\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"IdleTimer\",\r\n    timeout: 5 * minute,\r\n    timestamp: null,\r\n    stage2: 60, // show seconds (vs minutes) in stage 2\r\n    stage3: 20, // show modal message on stage 3\r\n    onTick: () => {},\r\n    onTimerReset: () => {},\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { session } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { formatDate } = props.barrelFunctions;\r\n  const { onSessionTimeout } = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const [seconds, setSeconds] = useState(props.timeout);\r\n  const [modalMessageShow, setModalMessageShow] = React.useState(false);\r\n\r\n  useInterval(() => {\r\n    // Your custom logic here\r\n\r\n    setSeconds(seconds - 1);\r\n    props.onTick(seconds);\r\n  }, 1000);\r\n\r\n  useEventListener(() => {\r\n    setSeconds(props.timeout);\r\n    props.onTimerReset();\r\n  }, [\"mousedown\", \"click\", \"scroll\", \"keypress\"]); // \"click\",\r\n\r\n  useEffect(() => {\r\n    if (seconds === props.timeout) setModalMessageShow(false);\r\n    if (seconds === props.stage3) setModalMessageShow(true);\r\n    if (seconds === 0) onSessionTimeout();\r\n\r\n    // eslint-disable-next-line\r\n  }, [seconds]);\r\n\r\n  // useEffect(() => {\r\n  //   setSeconds(props.timeout);\r\n  //   props.onTimerReset();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [session]);\r\n\r\n  const getJSX = () => {\r\n    let currTime;\r\n    if (seconds > props.stage2) currTime = Math.ceil(seconds / minute);\r\n    else currTime = seconds;\r\n\r\n    const timeFormatted = formatDate(new Date(1970, 1, 1, 0, 0, currTime), {\r\n      minute: \"numeric\",\r\n      second: \"numeric\",\r\n    });\r\n\r\n    const onSessionContinue = () => {\r\n      // console.log(\"onSessionContinue\");\r\n      setSeconds(props.timeout);\r\n      setModalMessageShow(false);\r\n    };\r\n\r\n    const modalMessage = (\r\n      <>\r\n        <Trans\r\n          i18nKey=\"IdleTimer:Automatic logout\"\r\n          timeFormatted={timeFormatted}\r\n        >\r\n          <div className=\"text-center\">Automatic logout in</div>\r\n          <div\r\n            className=\"text-center\"\r\n            style={{ fontSize: \"4em\", fontWeight: \"bold\", color: \"#A93226\" }}\r\n          >\r\n            {{ timeFormatted }}\r\n          </div>\r\n          <div className=\"text-center\">\r\n            Do you want to continue the session?\r\n          </div>\r\n        </Trans>\r\n        <br />\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Continue now\")}\r\n          request=\"continue session\"\r\n          onSubmit={onSessionContinue}\r\n          namespace={props.namespace}\r\n        />\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <ModalMessage\r\n          show={modalMessageShow}\r\n          message={modalMessage}\r\n          onHide={() => setModalMessageShow(false)}\r\n        />\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip>\r\n              {seconds > props.stage2 ? (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Minutes to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  minutes.\r\n                </Trans>\r\n              ) : (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Seconds to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  seconds.\r\n                </Trans>\r\n              )}\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <div style={{ whiteSpace: \"nowrap\", cursor: \"default\" }}>\r\n            <AvTimer style={{ color: \"var(--dark)\" }} />\r\n            &nbsp;\r\n            {seconds > props.stage2 ? (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:minutes\" currTime={currTime}>\r\n                    {{ currTime }} minutes\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:min\" currTime={currTime}>\r\n                    {{ currTime }} min\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:seconds\" currTime={currTime}>\r\n                    {{ currTime }} seconds\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:sec\" currTime={currTime}>\r\n                    <span>{{ currTime }}</span> sec\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </OverlayTrigger>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useEventListener = (callback, events) => {\r\n  let defaults = {\r\n    namespace: \"EventListener\",\r\n\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, { events: events });\r\n\r\n  useEffect(() => {\r\n    const eventHandler = (e) => {\r\n      callback(e);\r\n    };\r\n\r\n    for (let i in props.events) {\r\n      window.addEventListener(props.events[i], eventHandler);\r\n    }\r\n\r\n    return () => {\r\n      for (let i in props.events) {\r\n        window.removeEventListener(props.events[i], eventHandler);\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  // Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Spinner,\r\n} from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Alert from \"../alert\";\r\n// import LanguageSelector from \"../language-selector\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"ALERT DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { ip, logInEmail, logInPassword } = props.barrelGetters;\r\n  const {\r\n    setLoggingIn,\r\n    setUpdateInterval,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    getUri,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"LogIn\");\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (refEmail.current !== null && logInEmail !== refEmail.current.value)\r\n        setLogInEmail(refEmail.current.value);\r\n\r\n      if (\r\n        refPassword.current !== null &&\r\n        logInPassword !== refPassword.current.value\r\n      )\r\n        setLogInPassword(refPassword.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup.string().required(t(\"No password provided\")),\r\n  });\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserLogInRequest = (data) => {\r\n    // data.pw = data.password;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.ip = ip;\r\n    data.uri = getUri();\r\n    sendRequest({ req: \"sign in user\", data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    setUpdateInterval(-1);\r\n    setLoggingIn(true);\r\n    sendUserLogInRequest(data);\r\n  };\r\n\r\n  const UserLogInForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Sign In\")}</h3>\r\n\r\n      {/**\r\n       * Email\r\n       */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Password\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"Password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            ref={refPassword}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Submit button\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"sign in user\"\r\n          namespace=\"LogIn\"\r\n        />\r\n      </Form.Group>\r\n\r\n      <Container fluid=\"md\">\r\n        <Row>\r\n          {/**\r\n           * Register\r\n           */}\r\n          <Col>\r\n            <p className=\"other-options text-left\">\r\n              <Trans i18nKey=\"LogIn:Not yet registered\">\r\n                Not yet <a href=\"/sign-up\">registered?</a>\r\n              </Trans>\r\n            </p>\r\n          </Col>\r\n\r\n          {/**\r\n           * Forgot password\r\n           */}\r\n          <Col>\r\n            <p className=\"other-options text-right\">\r\n              <Trans i18nKey=\"LogIn:Forgot password\">\r\n                Forgot <a href=\"/reset\">password?</a>\r\n              </Trans>\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={UserLogInForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          email: logInEmail,\r\n          password: logInPassword,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Button,\r\n  // Breadcrumb,\r\n  // NavDropdown,\r\n  // Alert,\r\n} from \"react-bootstrap\";\r\n// import Octicon, { SignOut } from \"@primer/octicons-react\";\r\nimport { PowerSettingsNew } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../../settings.json\";\r\nimport AccountRegistration from \"../../accountRegistration\";\r\n// import BusinessRegistration from \"../../businessRegistration\";\r\nimport { Balance, Transfer } from \"../../transfer\";\r\nimport MyBusiness from \"../../myBusiness\";\r\nimport UserEditor from \"../../userEditor\";\r\nimport CurrencyContainer from \"../../currencyContainer\";\r\nimport IdleTimer from \"../../idleTimer\";\r\nimport Login from \"../../login\";\r\nimport Contact from \"../../contact\";\r\n\r\n/**\r\n * Component: Summary\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"Summary\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    settings,\r\n    signedIn,\r\n    accountNumber,\r\n    sessionTimeout,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getBusinesses, sendRequest } = props.barrelFunctions;\r\n  const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (signedIn === false) {\r\n    // setRedirectTo(\"/sign-out\");\r\n    return <>User not logged in</>;\r\n  }\r\n\r\n  const location = useLocation();\r\n\r\n  const navigation = (\r\n    <>\r\n      <Container\r\n        fluid\r\n        style={{\r\n          paddingRight: \"0\",\r\n          paddingLeft: \"0\",\r\n        }}\r\n      >\r\n        <Row>\r\n          {/*\r\n           * Top Menu\r\n           */}\r\n          <Col>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                // background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"var(--light)\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src={\r\n                    settings !== null && typeof settings[\"logo\"] !== \"undefined\"\r\n                      ? settings[\"logo\"]\r\n                      : \"gfx/zlogo_light.png\"\r\n                  }\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link eventKey=\"profile\" href=\"/profile\">\r\n                  <UserEditor {...args} />\r\n                </Nav.Link>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link eventKey=\"sign-out\" href=\"/sign-out\">\r\n                  <span style={{ whiteSpace: \"nowrap\" }}>\r\n                    <span>\r\n                      <PowerSettingsNew style={{ color: \"var(--dark)\" }} />\r\n                    </span>\r\n\r\n                    <span className=\"d-none d-sm-inline\">\r\n                      &nbsp;\r\n                      {t(\"Sign out\")}\r\n                    </span>\r\n                  </span>\r\n                </Nav.Link>\r\n              </Nav>\r\n              {true && (\r\n                <Nav>\r\n                  <Nav.Item>\r\n                    <IdleTimer timeout={sessionTimeout} {...args} />\r\n                  </Nav.Item>\r\n                </Nav>\r\n              )}\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <div style={{ height: \"7px\" }}></div>\r\n            <Navbar\r\n              collapseOnSelect\r\n              expand=\"sm\"\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"dark\"\r\n              variant=\"dark\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                backgroundColor: \"var(--dark)\",\r\n                boxShadow: \"none\",\r\n              }}\r\n            >\r\n              <Nav>\r\n                <Nav.Link\r\n                  className=\"nav-link-2\"\r\n                  eventKey=\"balance\"\r\n                  href=\"/balance\"\r\n                  style={{\r\n                    fontWeight:\r\n                      location.pathname === \"/balance\" ? \"bold\" : \"normal\",\r\n                  }}\r\n                >\r\n                  {t(\"Balance\")}\r\n                </Nav.Link>\r\n              </Nav>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                  {accountNumber !== null && (\r\n                    <>\r\n                      <Nav.Link\r\n                        className=\"nav-link-2\"\r\n                        eventKey=\"transfer\"\r\n                        href=\"/transfer\"\r\n                        style={{\r\n                          fontWeight:\r\n                            location.pathname === \"/transfer\"\r\n                              ? \"bold\"\r\n                              : \"normal\",\r\n                        }}\r\n                      >\r\n                        {t(\"Transfer\")}\r\n                      </Nav.Link>\r\n                      <Nav.Link\r\n                        className=\"nav-link-2\"\r\n                        eventKey=\"my-business\"\r\n                        onClick={() => getBusinesses(1)}\r\n                        href=\"#\"\r\n                        style={{\r\n                          fontWeight:\r\n                            location.pathname === \"/my-business\"\r\n                              ? \"bold\"\r\n                              : \"normal\",\r\n                        }}\r\n                      >\r\n                        {t(\"Business\")}\r\n                      </Nav.Link>\r\n\r\n                      {/**\r\n                       * Currency\r\n                       */}\r\n                      {settings !== null &&\r\n                        typeof settings[\"currencies\"] !== \"undefined\" &&\r\n                        (settings[\"currencies\"] === null ||\r\n                          settings[\"currencies\"].length === 0 ||\r\n                          settings[\"currencies\"].length > 1) && (\r\n                          <Nav.Link\r\n                            className=\"nav-link-2\"\r\n                            eventKey=\"currency\"\r\n                            href=\"/currency\"\r\n                            style={{\r\n                              fontWeight:\r\n                                location.pathname === \"/currency\"\r\n                                  ? \"bold\"\r\n                                  : \"normal\",\r\n                            }}\r\n                          >\r\n                            {t(\"Currency\")}\r\n                          </Nav.Link>\r\n                        )}\r\n                    </>\r\n                  )}\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n\r\n  const pageBody = (\r\n    <Router>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/summary\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/account-registration\"\r\n          component={() => {\r\n            return AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/profile\"\r\n          component={() => {\r\n            return UserEditor({ ...args, mode: \"profile\" });\r\n          }}\r\n        />\r\n        {settings !== null &&\r\n          typeof settings[\"currencies\"] !== \"undefined\" &&\r\n          (settings[\"currencies\"] === null ||\r\n            settings[\"currencies\"].length === 0 ||\r\n            settings[\"currencies\"].length > 1) && (\r\n            <Route\r\n              exact\r\n              path=\"/currency\"\r\n              component={() => {\r\n                return CurrencyContainer({ ...args });\r\n              }}\r\n            />\r\n          )}\r\n\r\n        <Route\r\n          exact\r\n          path=\"/my-business\"\r\n          component={() => {\r\n            return MyBusiness(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/balance\"\r\n          component={() => {\r\n            return Balance(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/transfer\"\r\n          component={() => {\r\n            return Transfer(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/contact\"\r\n          component={() => {\r\n            return Contact(args);\r\n          }}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n\r\n      {/* Content */}\r\n      {/*<h3>{t(\"Summary\")}</h3>*/}\r\n\r\n      <Container fluid=\"md\">\r\n        <Row>\r\n          <Col>\r\n            {navigation}\r\n            <div style={{ height: \"7px\" }}></div>\r\n          </Col>\r\n        </Row>\r\n        {/*\r\n        <Row>{viewAccountRegistration}</Row>\r\n        */}\r\n        <Row>\r\n          <Col>{pageBody}</Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../settings.json\";\r\n// import Card from \"../card\";\r\nimport Currencies from \"../currencies\";\r\nimport CurrencyRegistration from \"../currencyRegistration\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    accordionViewCurrency,\r\n    activePageCurrencies,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const { setAccordionViewCurrency, setRedirectTo } = props.barrelSetters;\r\n  const { getCurrencies } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const ToggleCurrencies = () => {\r\n    // console.log(\"decorate\");\r\n    setAccordionViewCurrency(\"currencies\");\r\n    getCurrencies(activePageCurrencies);\r\n  };\r\n\r\n  const ToggleCurrencyRegistration = () => {\r\n    // console.log(\"decorate\");\r\n    setAccordionViewCurrency(\"currencyRegistration\");\r\n    // getTransactions(1);\r\n  };\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  if (\r\n    typeof settings[\"currencies\"] !== \"undefined\" &&\r\n    settings[\"currencies\"] !== null &&\r\n    settings[\"currencies\"].length < 2\r\n  ) {\r\n    return <></>; // currency creation is disabled\r\n  } else {\r\n    return (\r\n      <>\r\n        <Accordion defaultActiveKey={accordionViewCurrency}>\r\n          <Card>\r\n            <Accordion.Toggle\r\n              as={Card.Header}\r\n              eventKey=\"currencies\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={ToggleCurrencies}\r\n            >\r\n              {t(\"Currencies\")}\r\n            </Accordion.Toggle>\r\n\r\n            <Accordion.Collapse eventKey=\"currencies\">\r\n              <Card.Body>\r\n                <Currencies {...args} />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n\r\n          {typeof settings[\"currencyCreationAllowed\"] !== \"undefined\" &&\r\n            settings[\"currencyCreationAllowed\"] && (\r\n              <Card>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey=\"currencyRegistration\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={ToggleCurrencyRegistration}\r\n                >\r\n                  {t(\"Currency Registration\")}\r\n                </Accordion.Toggle>\r\n\r\n                <Accordion.Collapse eventKey=\"currencyRegistration\">\r\n                  <Card.Body>\r\n                    <CurrencyRegistration {...args} />\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            )}\r\n        </Accordion>\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { TransferToSelf, TransferToPerson, TransferToBusiness } from \"./index\";\r\n// import { Alert } from \"react-bootstrap\";\r\n\r\n// const navigation = [\r\n//   {\r\n//     name: \"U2S\",\r\n//     link: \"#u2s\",\r\n//   },\r\n//   {\r\n//     name: \"U2U\",\r\n//     link: \"#u2u\",\r\n//   },\r\n//   {\r\n//     name: \"U2B\",\r\n//     link: \"#u2b\",\r\n//   },\r\n// ];\r\n\r\n/**\r\n * Component: Transfer\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber, transferType } = props.barrelGetters;\r\n  const { setRedirectTo } = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  const { onTransferTypeChange } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"Transfer\");\r\n\r\n  const data = props.data;\r\n  const type = transferType;\r\n  // const onTypeChange = args.onTypeChange;\r\n\r\n  // console.log(\"TRANSFER DATA TYPE:\", type);\r\n\r\n  const [transferCard, setTransferCard] = useState(null);\r\n\r\n  const onNavigationClick = (id) => {\r\n    onTransferTypeChange(id);\r\n  };\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"U2S\"),\r\n      link: \"#u2s\",\r\n    },\r\n    {\r\n      name: t(\"U2U\"),\r\n      link: \"#u2u\",\r\n    },\r\n    {\r\n      name: t(\"U2B\"),\r\n      link: \"#u2b\",\r\n    },\r\n  ];\r\n\r\n  // console.log(\"TRANSFER DATA\", data);\r\n  // const title = t(\"Transfer to account\");\r\n\r\n  useEffect(() => {\r\n    if (type === null) return;\r\n\r\n    // setTransferCard()\r\n    switch (type) {\r\n      case \"#u2s\": // User to self\r\n        setTransferCard(\r\n          <TransferToSelf\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      case \"#u2u\": // User to user\r\n        setTransferCard(\r\n          <TransferToPerson\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      case \"#u2b\": // User to business\r\n        setTransferCard(\r\n          <TransferToBusiness\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [data, format, type]);\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  // return (\r\n  //   <>\r\n  //     <Alert variant=\"warning\">\r\n  //       <Alert.Heading>{t(\"Account not yet registered\")}</Alert.Heading>\r\n  //       <p>\r\n  //         <Trans i18nKey=\"Balance:Please set up your account first.\">\r\n  //           Please set up your account first. Use this{\" \"}\r\n  //           <a href=\"/account-registration\">link</a>.\r\n  //         </Trans>\r\n  //       </p>\r\n  //     </Alert>\r\n  //   </>\r\n  // );\r\n\r\n  return <>{transferCard}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Contact\", request: \"send message\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    language,\r\n    accountNumber,\r\n    contactSubject,\r\n    contactMessage,\r\n  } = props.barrelGetters;\r\n  const { setContactSubject, setContactMessage } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refSubject = React.createRef();\r\n  const refMessage = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // console.log(\"ON UNMOUNT:\", refSubject.current.value);\r\n      if (\r\n        refSubject.current !== null &&\r\n        contactSubject !== refSubject.current.value\r\n      )\r\n        setContactSubject(refSubject.current.value);\r\n\r\n      if (\r\n        refMessage.current !== null &&\r\n        contactMessage !== refMessage.current.value\r\n      )\r\n        setContactMessage(refMessage.current.value);\r\n      // console.log(\"CONTACT UNMOUNTS\");\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    subject: yup.string().required(t(\"Subject is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.sender = accountNumber;\r\n    data.language = language;\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  // const navigation = [\r\n  //   {\r\n  //     name: t(\"U2S\"),\r\n  //     link: \"#u2s\",\r\n  //   },\r\n  // ];\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card header={false}>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * Subject\r\n         */}\r\n        <Form.Group controlId=\"validationFormikSubject\">\r\n          <Form.Label>{t(\"Subject\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={t(\"Enter message subject\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"subject\"\r\n              ref={refSubject}\r\n              value={values.subject}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setContactSubject(e.target.value);\r\n              }}\r\n              isInvalid={!!errors.subject && touched.subject}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.subject}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Message\r\n         */}\r\n        <Form.Group controlId=\"validationFormikMessage\">\r\n          <Form.Label>{t(\"Message\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter message\")}\r\n            name=\"message\"\r\n            value={values.message}\r\n            ref={refMessage}\r\n            onChange={handleChange}\r\n            as=\"textarea\"\r\n            rows=\"10\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        subject: contactSubject,\r\n        message: contactMessage,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport config from \"./config\";\r\nimport openSocket from \"socket.io-client\";\r\n// import { useTimeout } from \"./useTimeout\";\r\n\r\nlet socket = openSocket.connect(config.uri.ENDPOINT, {\r\n  secure: true,\r\n  reconnect: true,\r\n});\r\n\r\n/**\r\n * Send request to the server\r\n * @param {*} param0\r\n */\r\nexport const sendData = (data, debug = false) => {\r\n  if (debug) console.log(`request: ${data.req}`, data);\r\n\r\n  // No data - do not send\r\n  // if (req.length === 0) return false;\r\n\r\n  // useTimeout(() => {\r\n  //   console.log(\"Socket timeout\");\r\n  // }, 3000);\r\n\r\n  socket.emit(`onDataReceived`, data);\r\n  return true;\r\n};\r\n\r\n// Start a session\r\nexport const startSession = (data, session, debug = false) => {\r\n  // console.log(\"startSession\");\r\n  if (debug) console.log(`request: start session`, data, session);\r\n\r\n  socket.emit(`start session`, {\r\n    data: data,\r\n    session: session,\r\n    req: \"start session\",\r\n  });\r\n};\r\n\r\n// End the session\r\nexport const endSession = (data, session, debug = false) => {\r\n  if (debug) console.log(`request: end session`, data, session);\r\n  socket.emit(`end session`, {\r\n    // char: data,\r\n    data: data,\r\n    // uid: uid,\r\n    session: session,\r\n    req: \"end session\",\r\n  });\r\n};\r\n\r\n// Custom hook: useSocket\r\nexport const useSocket = (callback) => {\r\n  const [responseData, setResponseData] = useState(null);\r\n\r\n  socket.on(`onDataReceived`, (data) => {\r\n    setResponseData(data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (responseData === null) return;\r\n\r\n    callback(responseData);\r\n    // eslint-disable-next-line\r\n  }, [responseData]);\r\n};\r\n\r\nexport const useSystemSocket = (callback, instance) => {\r\n  useEffect(() => {\r\n    // socket.on(\"onDataReceived\", (data) => {\r\n    //   callback(data);\r\n    // });\r\n\r\n    /**\r\n     * System error listeners\r\n     */\r\n    socket.on(\"connect_error\", () => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_error\",\r\n          context: {},\r\n          error: { code: \"none\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"connect_timeout\", (timeout) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_timeout\",\r\n          context: {},\r\n          error: { code: \"connect_timeout\", timeout },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_error\",\r\n          context: {},\r\n          error: { code: error.type, error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_failed\", () => {\r\n      // This should never occur\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_failed\",\r\n          context: {},\r\n          error: { code: \"reconnect_failed\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"error\",\r\n          context: {},\r\n          error: { code: \"error\", error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    /**\r\n     * System status listeners\r\n     */\r\n    socket.on(\"ping\", () => {\r\n      // callback({ data: \"ping\" }, true);\r\n    });\r\n    socket.on(\"pong\", (latency) => {\r\n      // callback({ data: \"pong\", latency }, true);\r\n    });\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n      if (reason === \"io server disconnect\") {\r\n        // the disconnection was initiated by the server, you need to reconnect manually\r\n        socket.connect();\r\n      } else {\r\n        // else the socket will automatically try to reconnect\r\n      }\r\n      // Reasons:\r\n      // - \"transport close\": Server was stopped\r\n      callback({ req: \"disconnect\", status: \"success\", reason }, true);\r\n    });\r\n    socket.on(\"reconnect\", (attemptNumber) => {\r\n      // Successfully reconnected on attempt: attemptNumber\r\n      callback({ req: \"reconnect\", status: \"success\", attemptNumber }, true);\r\n    });\r\n    socket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnect attempt\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnecting\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnecting\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n  }, [instance]);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"register user\", namespace: \"SignUp\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    language,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n  } = props.barrelSetters;\r\n  const { getReviser, getWorkplace, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refFirstName.current !== null &&\r\n        signUpFirstName !== refFirstName.current.value\r\n      )\r\n        setSignUpFirstName(refFirstName.current.value);\r\n\r\n      if (\r\n        refLastName.current !== null &&\r\n        signUpLastName !== refLastName.current.value\r\n      )\r\n        setSignUpLastName(refLastName.current.value);\r\n\r\n      if (refEmail.current !== null && signUpEmail !== refEmail.current.value)\r\n        setSignUpEmail(refEmail.current.value);\r\n\r\n      if (\r\n        refPassword.current !== null &&\r\n        signUpPassword !== refPassword.current.value\r\n      )\r\n        setSignUpPassword(refPassword.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    firstName: yup.string().required(t(\"First name is required\")),\r\n    lastName: yup.string().required(t(\"Last name is required\")),\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.language = language;\r\n    data.validateEmail = true;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const UserRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Sign Up\")}</h3>\r\n\r\n      {/**\r\n       * First name\r\n       */}\r\n      <Form.Group controlId=\"validationFormikFirstName\">\r\n        <Form.Label>{t(\"First name\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter first name\")}\r\n            name=\"firstName\"\r\n            ref={refFirstName}\r\n            value={values.firstName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.firstName && touched.firstName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.firstName}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Last name\r\n       */}\r\n      <Form.Group controlId=\"validationFormikLastName\">\r\n        <Form.Label>{t(\"Last name\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter last name\")}\r\n            name=\"lastName\"\r\n            ref={refLastName}\r\n            value={values.lastName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.lastName && touched.lastName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.lastName}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Email\r\n       */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Password\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"Password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            ref={refPassword}\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Submit button\r\n       */}\r\n      <Form.Group controlId=\"validationSubmitButton\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Login link\r\n       */}\r\n      <p className=\"other-options text-right\">\r\n        <Trans i18nKey=\"SignUp:Already registered\">\r\n          Already registered <a href=\"/sign-in\">sign in?</a>\r\n        </Trans>\r\n      </p>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={UserRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        firstName: signUpFirstName,\r\n        lastName: signUpLastName,\r\n        email: signUpEmail,\r\n        password: signUpPassword,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args.data);\r\n\r\n  // console.log(\"ALERT DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onAlertClose: onClose } = props.barrelEventHandlers;\r\n\r\n  // const autoClose = () => {\r\n  //   window.setTimeout(() => {\r\n  //     onClose();\r\n  //   }, 5000);\r\n  // };\r\n\r\n  let t;\r\n  const errorStrings = useTranslation(\"Errors\").t;\r\n  const infoStrings = useTranslation(\"Infos\").t;\r\n  if (error !== null && info !== null) {\r\n    // ({ t } = useTranslation(\"Errors\"));\r\n    const msgError = errorStrings(error);\r\n    // const msgError = useTranslation(\"Errors\").t(error);\r\n    // ({ t } = useTranslation(\"Infos\"));\r\n    const msgInfo = infoStrings(info);\r\n    // const msgInfo = useTranslation(\"Errors\").t(info);\r\n    return (\r\n      <>\r\n        <Alert variant=\"danger\" onClose={() => onClose(\"error\")} dismissible>\r\n          {msgError}\r\n        </Alert>\r\n\r\n        <Alert variant=\"info\" onClose={() => onClose(\"info\")} dismissible>\r\n          {msgInfo}\r\n        </Alert>\r\n      </>\r\n    );\r\n  } else if (error !== null) {\r\n    // ({ t } = useTranslation(\"Errors\"));\r\n    return (\r\n      <Alert variant=\"danger\" onClose={() => onClose()} dismissible>\r\n        {errorStrings(error)}\r\n      </Alert>\r\n    );\r\n  } else if (info !== null) {\r\n    // ({ t } = useTranslation(\"Infos\"));\r\n    // autoClose();\r\n    return (\r\n      <Alert variant=\"info\" onClose={() => onClose()} dismissible>\r\n        {infoStrings(info)}\r\n      </Alert>\r\n    );\r\n  }\r\n  return <></>;\r\n\r\n  // let ret = \"\";\r\n  // if (error !== null) {\r\n  //   let { t } = useTranslation(\"Errors\");\r\n  //   ret += Alert({variant: \"danger\", onClose: () => onClose()})\r\n  //     <Alert variant=\"danger\" onClose={() => onClose()} dismissible>\r\n  //       {t(error)}\r\n  //     </Alert>\r\n  //   );\r\n  // }\r\n\r\n  // if (info !== null) {\r\n  //   let { t } = useTranslation(\"Infos\");\r\n  //   ret += (\r\n  //     <Alert variant=\"info\" onClose={() => onClose()} dismissible>\r\n  //       {t(info)}\r\n  //     </Alert>\r\n  //   );\r\n  // }\r\n\r\n  // if (ret !== \"\") return ret;\r\n  // else return <></>;\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../../translations/i18n\";\r\n// import { withNamespaces } from \"react-i18next\";\r\nimport { Form, Badge } from \"react-bootstrap\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { userData } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"LanguageSelector\");\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n  const languages = [\r\n    { id: 1, language: \"Latviešu\", code: \"lv\" },\r\n    { id: 2, language: \"English\", code: \"en\" },\r\n  ];\r\n  const handleLanguageSelect = (e) => {\r\n    changeLanguage(e.target.value);\r\n  };\r\n  const selectLanguage = (language) => {\r\n    changeLanguage(language);\r\n\r\n    if (userData !== null) {\r\n      sendRequest({\r\n        req: \"register user language\",\r\n        data: { email: userData.email, language },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (1) {\r\n    return (\r\n      <>\r\n        <div style={{ height: \"7px\" }}></div>\r\n        <Badge\r\n          pill\r\n          variant=\"light\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            selectLanguage(\"en\");\r\n          }}\r\n        >\r\n          en\r\n        </Badge>{\" \"}\r\n        <Badge\r\n          pill\r\n          variant=\"light\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            selectLanguage(\"lv\");\r\n          }}\r\n        >\r\n          lv\r\n        </Badge>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <Form.Control\r\n        as=\"select\"\r\n        id=\"languageSelector\"\r\n        onChange={handleLanguageSelect}\r\n        custom\r\n      >\r\n        <option key=\"0\" value={props.language}>\r\n          {t(\"Language\")}\r\n        </option>\r\n        {languages.map((el) => (\r\n          <option key={el.id} value={el.code}>\r\n            {el.language}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    );\r\n  }\r\n};\r\n\r\n// function selectElement(id, valueToSelect) {\r\n//   let element = document.getElementById(id);\r\n//   if (!element) return;\r\n//   element.value = valueToSelect;\r\n// }\r\n\r\n// // catch the event and make changes accordingly\r\n// i18n.on(\"languageChanged\", function (lng) {\r\n//   selectElement(\"languageSelector\", lng);\r\n// });\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n// import moment from \"moment\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Summary from \"../summary\";\r\nimport {\r\n  useSocket,\r\n  sendData,\r\n  startSession,\r\n  endSession,\r\n} from \"../../../utils/sockets\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\nimport { useInterval } from \"../../../utils/useInterval\";\r\nimport Login from \"../../login\";\r\nimport Logout from \"../../logout\";\r\nimport SignUp from \"../../signup\";\r\nimport PasswordReset from \"../../passwordReset\";\r\n\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport ValidateEmail from \"../../validateEmail\";\r\nimport ChangePassword from \"../../changePassword\";\r\nimport Auth from \"../../auth\";\r\n// import UnderConstruction from \"../../underConstruction\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\nimport { useTimeout } from \"../../../utils/useTimeout\";\r\n\r\n/**\r\n * Component: Main\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const {\r\n    session,\r\n    instance,\r\n    debug,\r\n    serverResponseReceived,\r\n    // secureSession,\r\n    signedIn,\r\n    userData,\r\n    dailyAllowanceDispatched,\r\n    accountNumber,\r\n    updateInterval,\r\n    externalRequest,\r\n    cartContent,\r\n    validateTokenEmail,\r\n    passwordResetTokenValidated,\r\n    validateTokenPasswordReset,\r\n    connected,\r\n    isExternalRequest,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRequestTimedOut,\r\n    setUpdateInterval,\r\n    setDailyAllowanceDispatched,\r\n    // setSessionTimeoutApplied,\r\n    // setSecureSession,\r\n    setSignedIn,\r\n    setRedirectTo,\r\n    setRequest,\r\n    setIsExternalRequest,\r\n    setUserEditorFirstname,\r\n    setUserEditorLastname,\r\n    setUserEditorEmail,\r\n    setUserEditorPassword,\r\n  } = props.barrelSetters;\r\n  const {\r\n    processUserResponse,\r\n    getIP,\r\n    getCart,\r\n    getCartPurposes,\r\n    // updateLastSeenUser,\r\n    getAccountData,\r\n    sendRequest,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    getContainerClass,\r\n    getRedirect,\r\n    showMessage,\r\n  } = props.barrelFunctions;\r\n  const {\r\n    onRedirect,\r\n    onSessionStart,\r\n    onSessionEnd,\r\n  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  // useSocket((data) => {\r\n  //   processUserResponse({\r\n  //     args: data,\r\n  //     barrels: barrels,\r\n  //   });\r\n  // });\r\n\r\n  // useInterval(() => {\r\n  //   updateLastSeenUser();\r\n  //   setSessionTimeoutApplied(false);\r\n  //   // console.log(\"setSessionTimeoutApplied(false)\");\r\n  // }, updateInterval);\r\n\r\n  /** \r\n   * Effect hooks\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On mount / on unmount\r\n   */\r\n  useEffect(() => {\r\n    getIP();\r\n\r\n    getCart();\r\n\r\n    return () => {\r\n      // on unmount\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * On session ID change\r\n   */\r\n  useEffect(() => {\r\n    if (session === null) return;\r\n\r\n    onSessionStart();\r\n\r\n    // eslint-disable-next-line\r\n  }, [session]);\r\n\r\n  /**\r\n   * On connected\r\n   */\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n  }, [connected]);\r\n\r\n  /**\r\n   * On request timeout\r\n   */\r\n  useTimeout(\r\n    () => {\r\n      setRequestTimedOut(true);\r\n      setRequest(null);\r\n      showMessage(\"REQUEST_EXPIRED\", \"error\");\r\n    },\r\n    serverResponseReceived === false ? 7000 : -1 // 7 sec till socket request timeout\r\n  );\r\n\r\n  /**\r\n   * Map user data to user editor vars\r\n   */\r\n  useEffect(() => {\r\n    if (userData === null) return;\r\n    setUserEditorFirstname(userData.firstname);\r\n    setUserEditorLastname(userData.lastname);\r\n    setUserEditorEmail(userData.email);\r\n    setUserEditorPassword(\"\");\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(userData)]);\r\n\r\n  /**\r\n   * On signed in status change\r\n   */\r\n  useEffect(() => {\r\n    if (!signedIn) return;\r\n\r\n    setUpdateInterval(-1);\r\n\r\n    // Dispatch daily allowance\r\n    if (accountNumber !== null && !dailyAllowanceDispatched) {\r\n      getAccountData();\r\n      sendRequest({\r\n        req: \"dispatch daily allowance\",\r\n        data: { uid: accountNumber },\r\n      });\r\n      setDailyAllowanceDispatched(true);\r\n    }\r\n\r\n    /**\r\n     * Handle external request\r\n     */\r\n    // let redirectTarget;\r\n    if (accountNumber !== null) {\r\n      if (isExternalRequest) {\r\n        // redirectTarget = \"/auth\";\r\n        setIsExternalRequest(false);\r\n        onRedirect(\"/auth\");\r\n      } else {\r\n        // Dispatch daily allowance\r\n        // if (!dailyAllowanceDispatched) {\r\n        //   sendRequest({\r\n        //     req: \"dispatch daily allowance\",\r\n        //     data: { uid: accountNumber },\r\n        //   });\r\n        //   setDailyAllowanceDispatched(true);\r\n        // }\r\n        // redirectTarget = \"/summary\";\r\n        // onRedirect(\"/account-registration\");\r\n      }\r\n    } else {\r\n      // redirectTarget = \"/account-registration\";\r\n      onRedirect(\"/account-registration\");\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [signedIn]);\r\n\r\n  /**\r\n   * On account number change\r\n   */\r\n  useEffect(() => {\r\n    if (accountNumber === null) return;\r\n\r\n    // eslint-disable-next-line\r\n  }, [accountNumber]);\r\n\r\n  /**\r\n   * On external request\r\n   */\r\n  useEffect(() => {\r\n    if (externalRequest === null) return;\r\n\r\n    const data = {\r\n      customer: accountNumber,\r\n      cart: externalRequest.cart,\r\n    };\r\n\r\n    sendRequest({ req: \"get cart\", data: data });\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(externalRequest)]);\r\n\r\n  /**\r\n   * On cart content change\r\n   */\r\n  useEffect(() => {\r\n    if (cartContent === null) return;\r\n\r\n    getCartPurposes();\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(cartContent)]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenEmail === null) return;\r\n\r\n    sendEmailValidationRequest(JSON.parse(validateTokenEmail));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenEmail]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (passwordResetTokenValidated === null) return;\r\n\r\n    onRedirect(\"/password\");\r\n\r\n    // eslint-disable-next-line\r\n  }, [passwordResetTokenValidated]);\r\n\r\n  /**\r\n   * On password reset validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenPasswordReset === null) return;\r\n\r\n    sendPasswordResetRequest(JSON.parse(validateTokenPasswordReset));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenPasswordReset]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              <div>\r\n                <Alert data={barrels} />\r\n              </div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(barrels) : Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign in\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-in\"\r\n                  component={() => {\r\n                    return Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign up\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-up\"\r\n                  component={() => {\r\n                    return SignUp(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign up\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/auth\"\r\n                  component={() => (signedIn ? Auth(barrels) : Login(barrels))}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Validate mail\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/validate-email\"\r\n                  component={() => {\r\n                    return ValidateEmail(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Change password\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/password\"\r\n                  component={() => {\r\n                    return ChangePassword(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: User profile\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/profile\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(barrels) : Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Currency\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/currency\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(barrels) : Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign out\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-out\"\r\n                  component={() => {\r\n                    return Logout(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Password reset\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/reset\"\r\n                  component={() => {\r\n                    return PasswordReset(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Account registration\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/account-registration\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Business registration\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/business-registration\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: My business\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/my-business\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Balance\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/balance\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Transfer\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/transfer\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Contact\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/contact\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Summary\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/summary\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span style={{ width: \"40%\" }}>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n\r\n                <span\r\n                  className=\"text-muted\"\r\n                  style={{\r\n                    float: \"left\",\r\n                    marginLeft: \"18px\",\r\n                    width: \"30%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                >\r\n                  {signedIn && window.location.pathname != \"/contact\" && (\r\n                    <small>&nbsp;</small>\r\n                  )}\r\n                </span>\r\n\r\n                <span\r\n                  className=\"text-muted\"\r\n                  style={{\r\n                    float: \"right\",\r\n                    marginRight: \"18px\",\r\n                    width: \"30%\",\r\n                    textAlign: \"right\",\r\n                    // backgroundColor: \"red\",\r\n                  }}\r\n                >\r\n                  {signedIn && window.location.pathname != \"/contact\" && (\r\n                    <small>\r\n                      <a href=\"/contact\">{t(\"Contact\")}</a>\r\n                    </small>\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useTimeout = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setTimeout(tick, delay);\r\n      return () => clearTimeout(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Checkout\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    externalRequest,\r\n    accountNumber,\r\n    cartContent,\r\n    cartPurposes,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest, format } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const Cart = () => {\r\n    let priceTotal = 0;\r\n    let priceReal = 0;\r\n\r\n    return (\r\n      <>\r\n        {cartContent !== null &&\r\n          cartContent.map((element, key) => {\r\n            priceTotal += element.price * element.amount;\r\n            let product_found = \"N\";\r\n\r\n            if (cartPurposes !== null) {\r\n              let product = cartPurposes.find(\r\n                (products) => products.purpose_id === element.product\r\n              );\r\n\r\n              if (typeof product !== \"undefined\") {\r\n                product_found = \"Y\";\r\n                priceReal += element.price * element.amount;\r\n              }\r\n              // console.log(\"product:\", product);\r\n            }\r\n\r\n            //   if (typeof product !== \"undefined\") {\r\n            //     product_found = product.title;\r\n            //   }\r\n            // }\r\n            return (\r\n              <div key={key}>\r\n                <div>product: {element.product}</div>\r\n                <div>price: {element.price}</div>\r\n                <div>amount: {element.amount}</div>\r\n                <div>found: {product_found}</div>\r\n                <br />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        <div>Total: {format(priceTotal)}</div>\r\n        <div>Real: {format(priceReal)}</div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const cart = typeof externalRequest.cart ? externalRequest.cart : \"\";\r\n    // <div>External request: {JSON.stringify(externalRequest)}</div>\r\n    return (\r\n      <Card title={t(\"Checkout\")}>\r\n        <div>\r\n          <Cart />\r\n        </div>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Spinner, Form } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ValidateEmail\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    validateTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    language,\r\n  } = props.barrelGetters;\r\n  const { setValidateTokenEmail } = props.barrelSetters;\r\n  const { getUrlParam, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Hooks\r\n    ============================================================================ */\r\n\r\n  // setToken(getUrlParam(\"token\"));\r\n  // setEmail(getUrlParam(\"email\"));\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenEmail(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (data) => {\r\n    // const vte = JSON.parse(validateTokenEmail);\r\n    // if (vte === null) return;\r\n    // const { token, email } = vte;\r\n    // console.log(data, validationTokenEmail);\r\n    sendRequest({\r\n      req: \"resend validate email token\",\r\n      data: {\r\n        token: validationTokenEmail.token,\r\n        email: validationTokenEmail.email,\r\n        language,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const queryString = window.location.search;\r\n    // const urlParams = new URLSearchParams(queryString);\r\n\r\n    return token === null ? (\r\n      <>\r\n        <h4>{t(\"A verification link has been sent to your email account.\")}</h4>\r\n        <hr />\r\n        <p>\r\n          {t(\r\n            \"Please click on the link that has just been sent to your email account\"\r\n          )}\r\n        </p>\r\n        {validationTokenEmailResent < 5 && (\r\n          <>\r\n            <br />\r\n            <h5>{t(\"Didn't receive email?\")}</h5>\r\n\r\n            <SubmitButton\r\n              {...args}\r\n              caption={t(\"Submit\")}\r\n              visible={true}\r\n              marginTop={20}\r\n              request={\"resend validate email token\"}\r\n              namespace={props.namespace}\r\n              onSubmit={handleSubmit}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    ) : (\r\n      <div className=\"text-center\">\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"border\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={false}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ChangePassword\",\r\n    request: \"change password\",\r\n    email: null,\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([\r\n    passwordResetTokenValidated === true ? \"SignUp\" : \"ChangePassword\",\r\n  ]); // adjust namespace\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.email = passwordResetTokenEmail;\r\n    // console.log(data);\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ChangePasswordForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Password */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"New password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  if (passwordResetTokenValidated === true) {\r\n    // if (true) {\r\n    return (\r\n      <Formik\r\n        component={ChangePasswordForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          password: \"\",\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    // if (passwordResetTokenValidated === false)\r\n    return <>{t(\"Awaiting validation\")}</>;\r\n    // } else {\r\n    //   // null\r\n    //   return <>How did you land here???</>;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(\"Logout\");\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info, language } = props.barrelGetters;\r\n  const { setLanguage } = props.barrelSetters;\r\n  const { showMessage } = props.barrelFunctions;\r\n  const { onLogOut, onSessionStart } = props.barrelEventHandlers;\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Save vars\r\n     */\r\n    const tempError = error;\r\n    const tempInfo = info;\r\n    const tempLanguage = language;\r\n    // const tempSessionTimeoutApplied = sessionTimeoutApplied;\r\n\r\n    /**\r\n     * Log out\r\n     */\r\n    onLogOut();\r\n\r\n    /**\r\n     * Restore vars\r\n     */\r\n    setLanguage(tempLanguage);\r\n    // setSessionTimeoutApplied(tempSessionTimeoutApplied);\r\n    // onSessionStart();\r\n    // onSessionReset();\r\n\r\n    if (tempError !== null) {\r\n      showMessage(tempError, \"error\");\r\n    } else {\r\n      if (tempInfo !== null) {\r\n        showMessage(tempInfo, \"info\");\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, []); // logOut\r\n\r\n  return (\r\n    <>\r\n      <h4>{t(\"See you soon\")}</h4>\r\n      <hr />\r\n\r\n      <br />\r\n      <p className=\"text-center\">\r\n        <a href=\"/\">{t(\"Sign in\")}</a>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n  * Default export\r\n  ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ResetPassword\", request: \"reset password\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { language, passwordResetEmail } = props.barrelGetters;\r\n  const {\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetEmail,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getUrlParam } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  const refEmail = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refEmail.current !== null &&\r\n        passwordResetEmail !== refEmail.current.value\r\n      )\r\n        setPasswordResetEmail(refEmail.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenPasswordReset(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n    * Event listeners\r\n    ============================================================================ */\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    data.language = language;\r\n    sendRequest({\r\n      req: props.request,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n  });\r\n\r\n  const passwordResetForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Reset password\")}</h3>\r\n\r\n      {/* Email */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            ref={refEmail}\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n\r\n  // return (\r\n  //   <Formik\r\n  //     component={passwordResetForm}\r\n  //     validationSchema={schema}\r\n  //     onSubmit={onSubmit}\r\n  //     initialValues={{\r\n  //       email: \"\",\r\n  //     }}\r\n  //   />\r\n  // );\r\n\r\n  return token === null ? (\r\n    <Formik\r\n      component={passwordResetForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        email: passwordResetEmail,\r\n      }}\r\n    />\r\n  ) : (\r\n    <div className=\"text-center\">\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n        hidden={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport UnderConstruction from \"../../underConstruction\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n\r\n/**\r\n * Component: Main\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass, getRedirect } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const signedIn = false;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              <div>\r\n                <Alert data={barrels} />\r\n              </div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return UnderConstruction(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Build } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"UnderConstruction\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <Build style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"We are constructing\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport NotConnected from \"../../notConnected\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n\r\n/**\r\n * Component: Main\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass, getRedirect } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const signedIn = false;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              <div>\r\n                <Alert data={barrels} />\r\n              </div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return NotConnected(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { PowerOff } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"NotConnected\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <PowerOff style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"Not connected\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"RESPONSE HANDLER: \", props, barrels);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    debug,\r\n    // requestTS,\r\n    session,\r\n    sessionTimeout,\r\n    settings,\r\n    loggingIn,\r\n    isExternalRequest,\r\n    instance,\r\n    responseProps,\r\n    currencies,\r\n    transactions,\r\n    transferRequest,\r\n    shares,\r\n    // transactionsPerPage,\r\n    // sharesPerPage,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    // uid,\r\n    userBusinesses,\r\n    cartPurposes,\r\n    businessPurposes,\r\n    purposeShareholders,\r\n    activeBusinesPurpose,\r\n    lastInsertId,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setSession,\r\n    // setSessionTimeoutApplied,\r\n    setResponseProps,\r\n    setSettings,\r\n    setLoggingIn,\r\n    setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setConnected,\r\n    // setLanguage,\r\n    setUserData,\r\n    setSignedIn,\r\n    setIsExternalRequest,\r\n    setCartContent,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    // setTransferSuccess,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setCartPurposes,\r\n    setBusinessPurposes,\r\n    setCountBusinessPurposes,\r\n    setPurposeShareholders,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidateTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setActivePurposeData,\r\n    setTanRequired,\r\n    // setRedirect,\r\n  } = barrels.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    // processUserResponse,\r\n    getBusinesses,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    showMessage,\r\n    changeLanguage,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    // endSession,\r\n    // updateLastSeenUser,\r\n    showTanInput,\r\n    // updateTimestamp,\r\n    // hideMessage,\r\n  } = barrels.barrelFunctions;\r\n  const {\r\n    // onTransferSuccess,\r\n    onRedirect,\r\n    onSessionTimeout,\r\n    onSessionEnd,\r\n    // onLogOut,\r\n  } = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n  // const { userData, accountNumber } = barrels.barrelGetters;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  // console.log(\"USER DATA PARSED:\", userDataParsed);\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug) console.log(`response: ${req} (${props.status})`, props, barrels);\r\n\r\n  const saveResponseProps = ({ req, name, status }) => {\r\n    const res = typeof name !== \"undefined\" ? `${req} / ${name}` : req;\r\n    if (responseProps === null) {\r\n      setResponseProps(JSON.stringify([{ res, status }]));\r\n    } else {\r\n      let tempRP = responseProps;\r\n\r\n      tempRP = tempRP.filter(function (o) {\r\n        return o.res !== res;\r\n      });\r\n\r\n      setResponseProps(JSON.stringify([...tempRP, { res, status }]));\r\n    }\r\n  };\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (instance === props.reqData.instance &&\r\n        res === \"*\" &&\r\n        status === props.status &&\r\n        name === props.name) ||\r\n      (instance === props.reqData.instance &&\r\n        res === props.req &&\r\n        status === props.status) ||\r\n      (instance === props.reqData.instance && res === \"unknown\")\r\n    ) {\r\n      saveResponseProps({ req, name: props.name, status: props.status });\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n    if (typeof props.token !== \"undefined\") {\r\n      console.log(\"Renewing session...\");\r\n\r\n      onSessionEnd();\r\n      setSession(props.token);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Start session (success)\r\n   */\r\n  onResponse([\"start session\", \"success\"], () => {\r\n    setConnected(true);\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * End session (success)\r\n   */\r\n  onResponse([\"end session\", \"success\"], () => {\r\n    // console.log(\"ON END SESSION\");\r\n\r\n    setConnected(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM users\") {\r\n      setUserSequence(props.results.sequence);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"success\"], () => {\r\n    // register user\r\n    sendRequest({ req: \"register account\", data: props.reqData });\r\n  });\r\n\r\n  onResponse([\"get tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n    setTanRequired(true);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get cart\", \"continue\"], () => {\r\n    if (props.name === \"SELECT carts\") {\r\n      setCartContent(props.results.content);\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"pending\"], () => {\r\n    // setTanRequired(false);\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"finished\"], () => {\r\n    if (props.name === \"UPDATE tans\") {\r\n      if (props.queryCnt > 0) {\r\n        // setTanRequired(true);\r\n        return false;\r\n      } else {\r\n        // setTanRequired(false);\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n\r\n    sendRequest({ req: transferRequest.transferType, data: transferRequest });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (pending)\r\n   */\r\n  onResponse([\"register user\", \"pending\"], () => {\r\n    // Might show some user feedback\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register user\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO users\") {\r\n      if (props.results.insertId > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    } else if (props.name === \"INSERT INTO validation_tokens\") {\r\n      // const { token, email } = props.tags;\r\n      // setValidateTokenEmail(\r\n      //   JSON.stringify({\r\n      //     token,\r\n      //     email,\r\n      //   })\r\n      // );\r\n      setValidationTokenEmail({\r\n        token: props.tags.token,\r\n        email: props.tags.email,\r\n      });\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (success)\r\n   */\r\n  onResponse([\"register user\", \"success\"], () => {\r\n    // console.log(\"REGISTER USER PROPS:\", props);\r\n    const noEmailValidation = false;\r\n\r\n    if (noEmailValidation) {\r\n      setSignedIn(true);\r\n      setSession(props.email); // TODO: Might restore\r\n      onRedirect(\"/account-registration\");\r\n      sendRequest({ req: \"get user\", data: { email: props.email } }); // to not require a log in\r\n      return false;\r\n    } else {\r\n      onRedirect(\"/validate-email\");\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"continue\"], () => {\r\n    if (props.name === \"SELECT validation_tokens\") {\r\n      setValidationTokenEmailResent(props.results.resent);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"continue\"], () => {\r\n    if (props.name === \"UPDATE validation tokens\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        // onRedirect(\"/sign-in\");\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (props.name === \"UPDATE users\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        onRedirect(\"/sign-in\");\r\n        return true;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"success\"], () => {\r\n    setValidateTokenEmail(null); // email validation token not needed any more + prevent the unnecessary resend\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"validate password reset token\", \"continue\"], () => {\r\n  //   if (props.name === \"UPDATE validation tokens\") {\r\n  //     if (props.results.affectedRows > 0) {\r\n  //       // onRedirect(\"/password\");\r\n  //       setPasswordResetTokenValidated(true);\r\n  //       return true;\r\n  //     } else {\r\n  //       // No row was inserted - an error was returned\r\n  //       return true;\r\n  //     }\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"validate password reset token\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(true);\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get URI settings (continue)\r\n   */\r\n  onResponse([\"get uri settings\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM uri_settings\") {\r\n      const results = JSON.parse(props.results.settings);\r\n\r\n      // console.log(\"results.settings\", results);\r\n\r\n      setSettings(JSON.stringify(results));\r\n\r\n      // Force single currency\r\n      if (\r\n        typeof results[\"currency\"] !== \"undefined\" &&\r\n        results[\"currency\"] !== null\r\n      ) {\r\n        const abbr = results[\"currency\"];\r\n        // setCurrencyAbbr(abbr);\r\n        sendRequest({\r\n          req: \"register user currency\",\r\n          data: { email: userData.email, currency_id: abbr },\r\n        });\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user currency (success)\r\n   */\r\n  onResponse([\"register user currency\", \"success\"], () => {\r\n    setCurrencyAbbr(props.reqData.currency_id);\r\n    // return false;\r\n  });\r\n\r\n  /**\r\n   * Sign in user (continue)\r\n   */\r\n  onResponse([\"sign in user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      /**\r\n       * Validated user\r\n       */\r\n      if (props.results.status === 1) {\r\n        setUserData(JSON.stringify(props.results));\r\n        setAccountNumber(props.results.uid);\r\n        // setSession(props.results.email); // TODO: Might restore\r\n        setCurrencyAbbr(props.results.currency_abbr);\r\n        setCurrencyRate(\r\n          isNaN(props.results.currency_rate) ? 1 : props.results.currency_rate\r\n        );\r\n\r\n        changeLanguage(props.results.language);\r\n\r\n        return false;\r\n\r\n        /**\r\n         * Not yet validated user\r\n         */\r\n      } else if (props.results.status === 0) {\r\n        onRedirect(\"/validate-email\");\r\n        return true;\r\n\r\n        /**\r\n         * Suspended user\r\n         */\r\n      } else if (props.results.status === 2) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_SUSPENDED\", \"error\");\r\n        return true;\r\n\r\n        /**\r\n         * Deleted user\r\n         */\r\n      } else if (props.results.status === 3) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_DELETED\", \"error\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Sign in user (finished)\r\n   */\r\n  onResponse([\"sign in user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt > 0) {\r\n        return false;\r\n      } else {\r\n        showMessage(\"INVALID_SIGN_IN\", \"error\");\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"sign in user\", \"success\"], () => {\r\n    setSignedIn(true);\r\n    setLoggingIn(false);\r\n    onSessionEnd();\r\n    setSession(props.token);\r\n\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"update last seen user\", \"success\"], () => {\r\n  //   // onSessionEnd();\r\n  //   // setSession(props.token); // TODO: Might restore\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Update user (success)\r\n   */\r\n  onResponse([\"update user\", \"success\"], () => {\r\n    sendRequest({ req: \"get user\", data: { email: userData.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user (continue)\r\n   */\r\n  onResponse([\"get user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUserData(JSON.stringify(props.results));\r\n      setUID(props.results.uid);\r\n      setAccountNumber(props.results.uid);\r\n      if (accountNumber === null && props.results.uid !== null) {\r\n        setRedirectTo(\"/summary\");\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user (finished)\r\n   */\r\n  onResponse([\"get user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 1) {\r\n        // exactly one user found - all is good\r\n        return false;\r\n      } else if (props.queryCnt === 0) {\r\n        // Something wrong with (accessing) the user data\r\n        // Probable causes:\r\n        // - user was deleted from the DB\r\n        // - user status was set to >= 2\r\n        // - multiple users with the same email address, most improbable (db constraint)\r\n        // - user changed the email address or password\r\n        setRedirectTo(\"/sign-out\");\r\n        // showMessage(\"INVALID_DATA\", \"error\");\r\n        return true;\r\n      }\r\n      return true;\r\n    }\r\n    // if (props.rowNum === 1) {\r\n    //   return true;\r\n    // } else {\r\n    //   // Something wrong with (accessing) the user data\r\n    //   // Probable causes:\r\n    //   // - user was deleted from the DB\r\n    //   // - user status was set to >= 2\r\n    //   // - multiple users with the same email address, most improbable (db constraint)\r\n    //   // - user changed the email address or password\r\n    //   // onLogOut();\r\n    //   setRedirectTo(\"/sign-out\");\r\n    //   // showMessage(\"INVALID_DATA\", \"error\");\r\n    //   return true;\r\n    // }\r\n  });\r\n\r\n  onResponse([\"get user\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (continue)\r\n   */\r\n  onResponse([\"get user businesses\", \"continue\"], () => {\r\n    if (props.name === \"SELECT businesses\") {\r\n      const business = props.results;\r\n      const { business_id } = business;\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([business]));\r\n        getBusinessPurposes(business_id, 0, 1);\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, business]));\r\n      }\r\n    } else if (props.name === \"COUNT businesses\") {\r\n      setCountBusinesses(props.results.count_businesses);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (finished)\r\n   */\r\n  onResponse([\"get user businesses\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    setUserBusinessesLoaded(true);\r\n    setRedirectTo(\"/my-business\");\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get user businesses\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (continue)\r\n   */\r\n  onResponse([\"get cart purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (cartPurposes === null) {\r\n        setCartPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setCartPurposes(JSON.stringify([...cartPurposes, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      // setCartPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (success)\r\n   */\r\n  onResponse([\"get cart purposes\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (continue)\r\n   */\r\n  onResponse([\"get business purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (businessPurposes === null) {\r\n        setBusinessPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setBusinessPurposes(\r\n          JSON.stringify([...businessPurposes, props.results])\r\n        );\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      setCountBusinessPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (finished)\r\n   */\r\n  onResponse([\"get business purposes\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (continue)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"continue\"], () => {\r\n    if (props.name === \"SELECT shares\") {\r\n      if (purposeShareholders === null) {\r\n        setPurposeShareholders(JSON.stringify([props.results]));\r\n      } else {\r\n        setPurposeShareholders(\r\n          JSON.stringify([...purposeShareholders, props.results])\r\n        );\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (finished)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user business by id (continue)\r\n   */\r\n  // onResponse([\"get business by id\", \"continue\"], () => {\r\n  //   if (userBusinesses === null) {\r\n  //     setUserBusinesses(JSON.stringify([props.results]));\r\n  //   } else {\r\n  //     setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"get business by id\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.name === \"SELECT businesses\") {\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([props.results]));\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business by id (finished)\r\n   */\r\n  onResponse([\"get business by id\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.queryCnt > 0) {\r\n      // getting business was successful - query returned results\r\n      return false;\r\n    } else {\r\n      console.log(\"Error getting business by id\");\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get business by id\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (continue)\r\n   */\r\n  onResponse([\"get purpose by id\", \"continue\"], () => {\r\n    /**\r\n     * Replace the purpose if it is already there\r\n     */\r\n    const index = getObjectArrayElementIndex(\r\n      businessPurposes,\r\n      \"purpose_id\",\r\n      props.results.purpose_id\r\n    );\r\n    if (index > -1) {\r\n      businessPurposes.splice(index, 1);\r\n      let temp = [...businessPurposes, props.results];\r\n      temp = sortObjectArray(temp, \"title\");\r\n      setBusinessPurposes(JSON.stringify(temp));\r\n      setActivePurposeData(JSON.stringify(props.results));\r\n\r\n      /**\r\n       * ... otherwise add the purpose\r\n       */\r\n    } else {\r\n      if (props.name === \"SELECT purposes\") {\r\n        if (businessPurposes === null) {\r\n          setBusinessPurposes(JSON.stringify([props.results]));\r\n        } else {\r\n          setBusinessPurposes(\r\n            JSON.stringify([...businessPurposes, props.results])\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (finished)\r\n   */\r\n  onResponse([\"get purpose by id\", \"finished\"], () => {\r\n    if (props.queryCnt < 1) {\r\n      // Something went wrong\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (success)\r\n   */\r\n  onResponse([\"get purpose by id\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (continue)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"continue\"], () => {\r\n    if (purposeShareholders === null) {\r\n      setPurposeShareholders(JSON.stringify([props.results]));\r\n    } else {\r\n      setPurposeShareholders(\r\n        JSON.stringify([...purposeShareholders, props.results])\r\n      );\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (finished)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Upload file (ready)\r\n   */\r\n  onResponse([\"upload file\", \"continue\"], () => {\r\n    // console.log(\"UPLOAD FILE =========== \");\r\n\r\n    // if (props.name === \"SELECT 1\") {\r\n    // setAccountPhotoPath(props + \"?r=\" + Math.random());\r\n    setAccountPhotoPath(Date.now()); // ok\r\n    return false;\r\n    // }\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"finished\"], () => {\r\n    if (props.name === \"SELECT 1\") {\r\n      if (props.queryCnt === 0) {\r\n        // something went wrong\r\n        // setAccountPhotoPath(\"ok\");\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"continue\"], () => {\r\n    if (props.results.affectedRows < 1) {\r\n      // error registering account\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"INVALID_DATA\", \"error\");\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"success\"], () => {\r\n    // getAccountData();\r\n    sendRequest({ req: \"get user\", data: { email: props.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (continue)\r\n   */\r\n  onResponse([\"get account data\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUID(props.results.uid);\r\n      setUserData(JSON.stringify(props.results));\r\n      // } else if (props.name === \"VALIDATE SESSION\") {\r\n      //   if (typeof props.token !== \"undefined\") {\r\n      //     console.log(\"RESET SESSION\");\r\n\r\n      //     onSessionEnd();\r\n      //     // setSession(props.newToken);\r\n      //     // setSession(props.newToken);\r\n      //     setSession(props.token);\r\n      //   }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (finished)\r\n   */\r\n  onResponse([\"get account data\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 0) {\r\n        // Account not reachable\r\n        // - user session timed out\r\n        showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get account data\", \"success\"], () => {\r\n    if (userData === null) return true;\r\n\r\n    // if (!loggingIn && userData.seconds_since_last_seen >= sessionTimeout) {\r\n    //   // setSessionTimeoutApplied(true);\r\n    //   // setUpdateInterval(-1);\r\n    //   // onSessionTimeout();\r\n    // } else {\r\n    //   // setUpdateInterval(10000); // 30000 | 60000 = 1 minute\r\n    // }\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2S\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (continue)\r\n   */\r\n  onResponse([\"transfer U2S\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (success)\r\n   */\r\n  onResponse([\"transfer U2S\", \"success\"], () => {\r\n    getTransactionById(lastInsertId);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2U\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (continue)\r\n   */\r\n  onResponse([\"transfer U2U\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (success)\r\n   */\r\n  onResponse([\"transfer U2U\", \"success\"], () => {\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2B\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (continue)\r\n   */\r\n  onResponse([\"transfer U2B\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (success)\r\n   */\r\n  onResponse([\"transfer U2B\", \"success\"], () => {\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register business\r\n   ============================================================================================*/\r\n  onResponse([\"register business\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    if (props.name === \"INSERT INTO businesses\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register business\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    // <ModalConfirm\r\n    //   title=\"Add Shareholders\"\r\n    //   message=\"Do you want to add yourself as a shareholder?\"\r\n    // />;\r\n\r\n    sendRequest({\r\n      req: \"get business by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    // getBusinesses();\r\n    return false;\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"register currency\", \"continue\"], () => {\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    if (props.results.insertId > 0) {\r\n      setLastInsertId(props.results.insertId);\r\n\r\n      return false;\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register currency\", \"success\"], () => {\r\n    sendRequest({\r\n      req: \"get currency by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (continue)\r\n   */\r\n  onResponse([\"get currencies\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT currencies\") {\r\n      setCountCurrencies(props.results.count_currencies);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (finished)\r\n   */\r\n  onResponse([\"get currencies\", \"finished\"], () => {\r\n    setRedirectTo(\"/currency\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (continue)\r\n   */\r\n  onResponse([\"get currency by id\", \"continue\"], () => {\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get currency by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transactions (continue)\r\n   */\r\n  onResponse([\"get transactions\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT transactions\") {\r\n      if (transactions === null) {\r\n        setTransactions(JSON.stringify([props.results]));\r\n      } else {\r\n        setTransactions(JSON.stringify([...transactions, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT transactions\") {\r\n      setCountTransactions(props.results.count_transaction_positions);\r\n      // } else if (props.name === \"VALIDATE SESSION\") {\r\n      //   if (typeof props.token !== \"undefined\") {\r\n      //     console.log(\"RESET SESSION\");\r\n      //     onSessionEnd();\r\n      //     // setSession(props.newToken);\r\n      //     setSession(props.token);\r\n      //   }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get transactions (finished)\r\n   */\r\n  onResponse([\"get transactions\", \"finished\"], () => {\r\n    setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get shares (continue)\r\n   */\r\n  onResponse([\"get shares\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT shares\") {\r\n      if (shares === null) {\r\n        setShares(JSON.stringify([props.results]));\r\n      } else {\r\n        setShares(JSON.stringify([...shares, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT shares\") {\r\n      setCountShares(props.results.count_shares);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shares (finished)\r\n   */\r\n  onResponse([\"get shares\", \"finished\"], () => {\r\n    // setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transaction by id (continue)\r\n   */\r\n  onResponse([\"get transaction by id\", \"continue\"], () => {\r\n    if (transactions === null) {\r\n      setTransactions(JSON.stringify([props.results]));\r\n    } else {\r\n      setTransactions(JSON.stringify([...transactions, props.results]));\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get transaction by id\", \"finished\"], () => {\r\n    getAccountData();\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"send message\", \"success\"], () => {\r\n    showMessage(\"SEND_MESSAGE_SUCCESS\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"continue\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get purpose by id\",\r\n    //   data: { id: props.results.insertId },\r\n    // });\r\n    if (props.name === \"INSERT INTO purposes\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"success\"], () => {\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: lastInsertId, language: language },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"update purpose property\", \"success\"], () => {\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: props.reqData.id, language: language },\r\n    });\r\n    // getBusinessPurposes(props.reqData.business_id, 0, 1);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"continue\"], () => {\r\n    if (props.results.insertId > 0) {\r\n      // showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\");\r\n\r\n      // return sendRequest({\r\n      //   req: \"get shareholder by id\",\r\n      //   data: { id: props.results.insertId },\r\n      // });\r\n      setLastInsertId(props.results.insertId);\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"change share\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    // getPurposeShareholders(activeBusinesPurpose);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"remove shareholder\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"reset password\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"change password\", \"success\"], () => {\r\n    // TOTO: If NO_ROWS_CHANGE - probably the currently saved password was submitted\r\n    setPasswordResetTokenValidated(null);\r\n    setPasswordResetTokenEmail(null);\r\n    onRedirect(\"/sign-in\");\r\n    showMessage(\"PASSWORD_CHANGE_SUCCESS\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"unknown\"], () => {\r\n  //   if (\r\n  //     status === \"pending\" ||\r\n  //     status === \"continue\" ||\r\n  //     status === \"finished\" ||\r\n  //     status === \"success\"\r\n  //   ) {\r\n  //     return false;\r\n  //   } else {\r\n  //     showMessage(`${req}: ${status}`, \"info\");\r\n  //     return true;\r\n  //   }\r\n  // });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport i18n from \"./translations/i18n\";\r\nimport config from \"./utils/config\";\r\nimport { useStickyState } from \"./utils/state\";\r\nimport Main from \"./components/pages/main\";\r\nimport UnderConstruction from \"./components/pages/underConstruction\";\r\nimport NotConnected from \"./components/pages/notConnected\";\r\n\r\nimport {\r\n  useSocket,\r\n  useSystemSocket,\r\n  sendData,\r\n  startSession,\r\n  endSession,\r\n} from \"./utils/sockets\";\r\nimport { useInterval } from \"./utils/useInterval\";\r\nimport { useTimeout } from \"./utils/useTimeout\";\r\nimport requestHandler from \"./utils/requestHandler\";\r\nimport userErrorHandler from \"./utils/userErrorHandler\";\r\nimport userResponseHandler from \"./utils/userResponseHandler\";\r\nimport systemErrorHandler from \"./utils/systemErrorHandler\";\r\nimport systemResponseHandler from \"./utils/systemResponseHandler\";\r\n// import {\r\n//   useSocket,\r\n//   sendData,\r\n//   startSession,\r\n//   endSession,\r\n// } from \"../../../utils/sockets\";\r\n// import functions from \"./barrelFunctions\";\r\n\r\n/**\r\n * Component: Dispatcher\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Dispatcher\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const isLocalhost =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\";\r\n\r\n  /** \r\n   * Hooks\r\n   ============================================================================ */\r\n  const [debug, setDebug] = useState(isLocalhost);\r\n  const [loggingOut, setLoggingOut] = useState(false);\r\n  const [loggingIn, setLoggingIn] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(true);\r\n  const [request, setRequest] = useStickyState(null, \"request\");\r\n  const [serverResponseReceived, setServerResponseReceived] = useStickyState(\r\n    null,\r\n    \"serverResponseReceived\"\r\n  );\r\n  const [requestTimedOut, setRequestTimedOut] = useStickyState(\r\n    false,\r\n    \"requestTimedOut\"\r\n  );\r\n  const [instance, setInstance] = useState(Date.now());\r\n  const [session, setSession] = useStickyState(uuidv4(), \"session\");\r\n  const [settings, setSettings] = useStickyState(null, \"settings\");\r\n  const [responseProps, setResponseProps] = useStickyState(\r\n    null,\r\n    \"responseProps\"\r\n  );\r\n  const [sessionTimeout, setSessionTimeout] = useStickyState(\r\n    (!debug ? 5 : 120) * 60, // 30 | 5 * 60\r\n    \"sessionTimeout\"\r\n  );\r\n  const [connected, setConnected] = useStickyState(false, \"connected\");\r\n  const [reconnecting, setReconnecting] = useStickyState(false, \"reconnecting\");\r\n  const [ip, setIP] = useStickyState(\"\", \"ip\");\r\n  const [signedIn, setSignedIn] = useStickyState(false, \"signedIn\");\r\n  const [\r\n    dailyAllowanceDispatched,\r\n    setDailyAllowanceDispatched,\r\n  ] = useStickyState(false, \"dailyAllowanceDispatched\");\r\n  const [isExternalRequest, setIsExternalRequest] = useStickyState(\r\n    false,\r\n    \"isExternalRequest\"\r\n  );\r\n  const [externalRequest, setExternalRequest] = useStickyState(\r\n    null,\r\n    \"externalRequest\"\r\n  );\r\n  const [cartContent, setCartContent] = useStickyState(null, \"cartContent\");\r\n  const [updateInterval, setUpdateInterval] = useStickyState(\r\n    -1,\r\n    \"updateInterval\"\r\n  );\r\n  const [currencyAbbr, setCurrencyAbbr] = useStickyState(\"Z\", \"currencyAbbr\");\r\n  const [currencyRate, setCurrencyRate] = useState(1);\r\n  const [currencies, setCurrencies] = useStickyState(null, \"currencies\");\r\n  const [transactions, setTransactions] = useStickyState(null, \"transactions\");\r\n  const [shares, setShares] = useStickyState(null, \"shares\");\r\n  const [accordionView, setAccordionView] = useStickyState(\r\n    \"balance\",\r\n    \"accordionView\"\r\n  );\r\n  const [accordionViewCurrency, setAccordionViewCurrency] = useStickyState(\r\n    null,\r\n    \"accordionViewCurrency\"\r\n  );\r\n  const [countCurrencies, setCountCurrencies] = useStickyState(\r\n    null,\r\n    \"countCurrencies\"\r\n  );\r\n  const [countTransactions, setCountTransactions] = useStickyState(\r\n    null,\r\n    \"countTransactions\"\r\n  );\r\n  const [countShares, setCountShares] = useStickyState(null, \"countShares\");\r\n  const [activePageCurrencies, setActivePageCurrencies] = useStickyState(\r\n    1,\r\n    \"activePageCurrencies\"\r\n  );\r\n  const [activePageTransactions, setActivePageTransactions] = useStickyState(\r\n    1,\r\n    \"activePageTransactions\"\r\n  );\r\n  const [activePageShares, setActivePageShares] = useStickyState(\r\n    1,\r\n    \"activePageShares\"\r\n  );\r\n  const [currenciesPerPage, setCurrenciesPerPage] = useStickyState(\r\n    5,\r\n    \"currenciesPerPage\"\r\n  );\r\n  const [transactionsPerPage, setTransactionsPerPage] = useStickyState(\r\n    5,\r\n    \"transactionsPerPage\"\r\n  );\r\n  const [sharesPerPage, setSharesPerPage] = useStickyState(5, \"sharesPerPage\");\r\n  const [userData, setUserData] = useStickyState(null, \"userData\");\r\n  const [uid, setUID] = useStickyState(null, \"uid\");\r\n  const [accountNumber, setAccountNumber] = useStickyState(\r\n    null,\r\n    \"accountNumber\"\r\n  );\r\n  const [userSequence, setUserSequence] = useStickyState(null, \"userSequence\");\r\n  const [accountType, setAccountType] = useStickyState(null, \"accountType\");\r\n  const [userBusinesses, setUserBusinesses] = useStickyState(\r\n    null,\r\n    \"userBusinesses\"\r\n  );\r\n  const [countBusinesses, setCountBusinesses] = useStickyState(\r\n    null,\r\n    \"countBusinesses\"\r\n  );\r\n  const [businessesPerPage, setBusinessesPerPage] = useStickyState(\r\n    1,\r\n    \"businessesPerPage\"\r\n  );\r\n  const [activePageBusinesses, setActivePageBusinesses] = useStickyState(\r\n    1,\r\n    \"activePageBusinesses\"\r\n  );\r\n  const [userBusinessesLoaded, setUserBusinessesLoaded] = useStickyState(\r\n    false,\r\n    \"userBusinessesLoaded\"\r\n  );\r\n  const [activeBusiness, setActiveBusiness] = useStickyState(\r\n    null,\r\n    \"activeBusiness\"\r\n  );\r\n  const [activeBusinessID, setActiveBusinessID] = useStickyState(\r\n    null,\r\n    \"activeBusinessID\"\r\n  );\r\n\r\n  const [businessPurposes, setBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"businessPurposes\"\r\n  );\r\n\r\n  const [cartPurposes, setCartPurposes] = useStickyState(null, \"cartPurposes\");\r\n\r\n  const [countBusinessPurposes, setCountBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"countBusinessPurposes\"\r\n  );\r\n  const [businessPurposesPerPage, setBusinessPurposesPerPage] = useStickyState(\r\n    5,\r\n    \"businessPurposesPerPage\"\r\n  );\r\n  const [\r\n    activePageBusinessPurposes,\r\n    setActivePageBusinessPurposes,\r\n  ] = useStickyState(1, \"activePageBusinessPurposes\");\r\n\r\n  const [activeBusinesPurpose, setActiveBusinesPurpose] = useStickyState(\r\n    null,\r\n    \"activeBusinesPurpose\"\r\n  );\r\n\r\n  const [activePurposeData, setActivePurposeData] = useStickyState(\r\n    null,\r\n    \"activePurposeData\"\r\n  );\r\n\r\n  const [activePurposeProperty, setActivePurposeProperty] = useStickyState(\r\n    null,\r\n    \"activePurposeProperty\"\r\n  );\r\n\r\n  const [purposeShareholders, setPurposeShareholders] = useStickyState(\r\n    null,\r\n    \"purposeShareholders\"\r\n  );\r\n\r\n  /**\r\n   * Log in\r\n   */\r\n  const [logInEmail, setLogInEmail] = useStickyState(\"\", \"logInEmail\");\r\n  const [logInPassword, setLogInPassword] = useStickyState(\"\", \"logInPassword\");\r\n\r\n  /**\r\n   * Sign Up\r\n   */\r\n  const [signUpFirstName, setSignUpFirstName] = useStickyState(\r\n    \"\",\r\n    \"signUpFirstName\"\r\n  );\r\n  const [signUpLastName, setSignUpLastName] = useStickyState(\r\n    \"\",\r\n    \"signUpLastName\"\r\n  );\r\n  const [signUpEmail, setSignUpEmail] = useStickyState(\"\", \"signUpEmail\");\r\n  const [signUpPassword, setSignUpPassword] = useStickyState(\r\n    \"\",\r\n    \"signUpPassword\"\r\n  );\r\n\r\n  /**\r\n   * Business registration\r\n   */\r\n  const [\r\n    businessRegistrationAddTitle,\r\n    setBusinessRegistrationAddTitle,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddTitle\");\r\n  const [\r\n    businessRegistrationAddDescription,\r\n    setBusinessRegistrationAddDescription,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddDescription\");\r\n\r\n  /**\r\n   * Purpose registration\r\n   */\r\n  const [\r\n    purposeRegistrationTitle,\r\n    setPurposeRegistrationTitle,\r\n  ] = useStickyState(\"\", \"purposeRegistrationTitle\");\r\n  const [\r\n    purposeRegistrationDescription,\r\n    setPurposeRegistrationDescription,\r\n  ] = useStickyState(\"\", \"purposeRegistrationDescription\");\r\n  const [\r\n    purposeRegistrationCategory,\r\n    setPurposeRegistrationCategory,\r\n  ] = useStickyState(\"\", \"purposeRegistrationCategory\");\r\n  const [\r\n    purposeRegistrationSubcategory,\r\n    setPurposeRegistrationSubcategory,\r\n  ] = useStickyState(\"\", \"purposeRegistrationSubcategory\");\r\n  const [\r\n    purposeRegistrationSubcategory2,\r\n    setPurposeRegistrationSubcategory2,\r\n  ] = useStickyState(\"\", \"purposeRegistrationSubcategory2\");\r\n  const [\r\n    purposeRegistrationKeywords,\r\n    setPurposeRegistrationKeywords,\r\n  ] = useStickyState(\"\", \"purposeRegistrationKeywords\");\r\n\r\n  /**\r\n   * User editor\r\n   */\r\n  const [userEditorEditFirstname, setUserEditorEditFirstname] = useStickyState(\r\n    false,\r\n    \"userEditorEditFirstname\"\r\n  );\r\n  const [userEditorFirstname, setUserEditorFirstname] = useStickyState(\r\n    \"\",\r\n    \"userEditorFirstname\"\r\n  );\r\n  const [userEditorEditLastname, setUserEditorEditLastname] = useStickyState(\r\n    false,\r\n    \"userEditorEditLastname\"\r\n  );\r\n  const [userEditorLastname, setUserEditorLastname] = useStickyState(\r\n    \"\",\r\n    \"userEditorLastname\"\r\n  );\r\n  const [userEditorEditEmail, setUserEditorEditEmail] = useStickyState(\r\n    false,\r\n    \"userEditorEditEmail\"\r\n  );\r\n  const [userEditorEmail, setUserEditorEmail] = useStickyState(\r\n    \"\",\r\n    \"userEditorEmail\"\r\n  );\r\n  const [userEditorEditPassword, setUserEditorEditPassword] = useStickyState(\r\n    false,\r\n    \"userEditorEditPassword\"\r\n  );\r\n  const [userEditorPassword, setUserEditorPassword] = useStickyState(\r\n    \"\",\r\n    \"userEditorPassword\"\r\n  );\r\n  const [\r\n    userEditorPasswordVisible,\r\n    setUserEditorPasswordVisible,\r\n  ] = useStickyState(false, \"userEditorPasswordVisible\");\r\n  const [\r\n    userEditorSubmitButtonVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  ] = useStickyState(false, \"userEditorSubmitButtonVisible\");\r\n\r\n  /**\r\n   * Password reset\r\n   */\r\n  const [passwordResetEmail, setPasswordResetEmail] = useStickyState(\r\n    \"\",\r\n    \"passwordResetEmail\"\r\n  );\r\n\r\n  /**\r\n   * TAN input\r\n   */\r\n  const [tanInputTAN, setTanInputTAN] = useStickyState(\"\", \"tanInputTAN\");\r\n\r\n  /**\r\n   * Misc\r\n   */\r\n\r\n  // const [businessLoaded, setBusinessLoaded] = useState(null);\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [redirectTo, setRedirectTo] = useState(null);\r\n  const [lastInsertId, setLastInsertId] = useState(null);\r\n  // const [responseData, setResponseData] = useState(null);\r\n\r\n  const [validateTokenEmail, setValidateTokenEmail] = useState(null);\r\n  const [validateTokenPasswordReset, setValidateTokenPasswordReset] = useState(\r\n    null\r\n  );\r\n\r\n  const [\r\n    passwordResetTokenValidated,\r\n    setPasswordResetTokenValidated,\r\n  ] = useState(null);\r\n  const [passwordResetTokenEmail, setPasswordResetTokenEmail] = useState(null);\r\n\r\n  // const [tmrConnected] = useState(null);\r\n  const [validationTokenEmail, setValidationTokenEmail] = useStickyState(\r\n    null,\r\n    \"validationTokenEmail\"\r\n  ); //\r\n  const [\r\n    validationTokenEmailResent,\r\n    setValidationTokenEmailResent,\r\n  ] = useStickyState(0, \"validationTokenEmailResent\"); //\r\n  const [language, setLanguage] = useStickyState(\r\n    i18n.options.fallbackLng[0],\r\n    \"language\"\r\n  ); //\r\n  const [transferType, setTransferType] = useStickyState(\r\n    \"#u2s\",\r\n    \"transferType\"\r\n  );\r\n  const [transferRequest, setTransferRequest] = useStickyState(\r\n    null,\r\n    \"transferRequest\"\r\n  );\r\n  const [transferFromAccount, setTransferFromAccount] = useStickyState(\r\n    \"\",\r\n    \"transferFromAccount\"\r\n  );\r\n  const [transferToAccount, setTransferToAccount] = useStickyState(\r\n    \"\",\r\n    \"transferToAccount\"\r\n  );\r\n  const [transferAmount, setTransferAmount] = useStickyState(\r\n    \"\",\r\n    \"transferAmount\"\r\n  );\r\n  const [transferToUID, setTransferToUID] = useStickyState(\"\", \"transferToUID\");\r\n  const [transferToPurpose, setTransferToPurpose] = useStickyState(\r\n    \"\",\r\n    \"transferToPurpose\"\r\n  );\r\n  const [transferDescription, setTransferDescription] = useStickyState(\r\n    \"\",\r\n    \"transferDescription\"\r\n  );\r\n  const [contactSubject, setContactSubject] = useStickyState(\r\n    \"\",\r\n    \"contactSubject\"\r\n  );\r\n  const [contactMessage, setContactMessage] = useStickyState(\r\n    \"\",\r\n    \"contactMessage\"\r\n  );\r\n  const [userBirthYear, setUserBirthYear] = useStickyState(\"\", \"userBirthYear\");\r\n  const [userBirthMonth, setUserBirthMonth] = useStickyState(\r\n    \"\",\r\n    \"userBirthMonth\"\r\n  );\r\n  const [userBirthDay, setUserBirthDay] = useStickyState(\"\", \"userBirthDay\");\r\n  const [userBirthDateError, setUserBirthDateError] = useState(\r\n    \"\",\r\n    \"userBirthDateError\"\r\n  );\r\n  const [userTimezone, setUserTimezone] = useStickyState(\"\", \"userTimezone\");\r\n\r\n  const [currencyCode, setCurrencyCode] = useStickyState(\"\", \"currencyCode\");\r\n  const [currencyName, setCurrencyName] = useStickyState(\"\", \"currencyName\");\r\n  const [currencyRegion, setCurrencyRegion] = useStickyState(\r\n    \"\",\r\n    \"currencyRegion\"\r\n  );\r\n  const [currencyNewRate, setCurrencyNewRate] = useStickyState(\r\n    1.0,\r\n    \"currencyNewRate\"\r\n  );\r\n\r\n  const [tanRequired, setTanRequired] = useStickyState(false, \"tanRequired\");\r\n  // const [transferSuccess, setTransferSuccess] = useStickyState(\r\n  //   false,\r\n  //   \"transferSuccess\"\r\n  // );\r\n  const [accountPhotoPath, setAccountPhotoPath] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [info, setInfo] = useState(null);\r\n  // const [alertVisible, setAlertVisible] = useState(false);\r\n\r\n  // const gotEvent = useEventListener();\r\n  // console.log(gotEvent);\r\n\r\n  /**\r\n   * Barrel: Getters\r\n   */\r\n  const barrelGetters = {\r\n    debug,\r\n    // instance,\r\n    loggingOut,\r\n    loggingIn,\r\n    // timestamp,\r\n    // startTimestamp,\r\n    pageLoading,\r\n    request,\r\n    serverResponseReceived,\r\n    requestTimedOut,\r\n    // requestTS,\r\n    instance,\r\n    responseProps: JSON.parse(responseProps),\r\n    // lastRequest,\r\n    session,\r\n    // secureSession,\r\n    sessionTimeout,\r\n    // sessionTimeoutApplied,\r\n    settings: JSON.parse(settings),\r\n    ip,\r\n    updateInterval,\r\n    currencies: JSON.parse(currencies),\r\n    transactions: JSON.parse(transactions),\r\n    shares: JSON.parse(shares),\r\n    accordionView,\r\n    accordionViewCurrency,\r\n    countCurrencies,\r\n    countTransactions,\r\n    countShares,\r\n    activePageCurrencies,\r\n    activePageTransactions,\r\n    activePageShares,\r\n    currenciesPerPage,\r\n    transactionsPerPage,\r\n    sharesPerPage,\r\n    userData: JSON.parse(userData),\r\n    // redirect,\r\n    redirectTo,\r\n    lastInsertId,\r\n    connected,\r\n    reconnecting,\r\n    signedIn,\r\n    dailyAllowanceDispatched,\r\n    isExternalRequest,\r\n    externalRequest: JSON.parse(externalRequest),\r\n    cartContent: JSON.parse(cartContent),\r\n    currencyAbbr,\r\n    currencyRate,\r\n    // currencyStatus,\r\n    accountNumber,\r\n    userSequence,\r\n    accountType,\r\n    uid,\r\n    userBusinesses: JSON.parse(userBusinesses),\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes: JSON.parse(businessPurposes),\r\n    cartPurposes: JSON.parse(cartPurposes),\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    // purposeID,\r\n    activePurposeData: JSON.parse(activePurposeData),\r\n    purposeShareholders: JSON.parse(purposeShareholders),\r\n    logInEmail,\r\n    logInPassword,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    purposeRegistrationCategory,\r\n    purposeRegistrationSubcategory,\r\n    purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n    passwordResetEmail,\r\n    tanInputTAN,\r\n    // businessLoaded,\r\n    tanRequired,\r\n    // tmrConnected,\r\n    validateTokenEmail,\r\n    validateTokenPasswordReset,\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    transferRequest: JSON.parse(transferRequest),\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    contactSubject,\r\n    contactMessage,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n    language,\r\n    transferType,\r\n    // transferSuccess,\r\n    accountPhotoPath,\r\n    error,\r\n    info,\r\n    // alertVisible,\r\n  };\r\n\r\n  /**\r\n   * Barrel: Setters\r\n   */\r\n  const barrelSetters = {\r\n    setDebug,\r\n    setLoggingOut,\r\n    setLoggingIn,\r\n    // setTimestamp,\r\n    // setStartTimestamp,\r\n    setPageLoading,\r\n    setRequest,\r\n    setServerResponseReceived,\r\n    setRequestTimedOut,\r\n    // setRequestTS,\r\n    setInstance,\r\n    setResponseProps,\r\n    // setLastRequest,\r\n    setSession,\r\n    // setSecureSession,\r\n    setSessionTimeout,\r\n    // setSessionTimeoutApplied,\r\n    setSettings,\r\n    setIP,\r\n    setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setAccordionView,\r\n    setAccordionViewCurrency,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setActivePageCurrencies,\r\n    setActivePageTransactions,\r\n    setActivePageShares,\r\n    setCurrenciesPerPage,\r\n    setTransactionsPerPage,\r\n    setSharesPerPage,\r\n    setConnected,\r\n    setReconnecting,\r\n    setLanguage,\r\n    setUserData,\r\n    // sendRequest,\r\n    setSignedIn,\r\n    setDailyAllowanceDispatched,\r\n    setIsExternalRequest,\r\n    setExternalRequest,\r\n    setCartContent,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setAccountType,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setBusinessesPerPage,\r\n    setActivePageBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setActiveBusiness,\r\n    setActiveBusinessID,\r\n    setBusinessPurposes,\r\n    setCartPurposes,\r\n    setCountBusinessPurposes,\r\n    setBusinessPurposesPerPage,\r\n    setActivePageBusinessPurposes,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePurposeData,\r\n    setPurposeShareholders,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationCategory,\r\n    setPurposeRegistrationSubcategory,\r\n    setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n    setPasswordResetEmail,\r\n    setTanInputTAN,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setValidateTokenEmail,\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setContactSubject,\r\n    setContactMessage,\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n    setTanRequired,\r\n    // setTransferSuccess,\r\n    // setRedirect,\r\n    // showMessage,\r\n  };\r\n\r\n  /** \r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Sends requests to the server\r\n   * @param {string} request Request name\r\n   * @param {object} data Request data\r\n   */\r\n  const sendRequest = ({ req, data = null }) => {\r\n    if (processRequest({ req, data, session, uid: \"STA\", barrels })) {\r\n      // request processed successfully\r\n      setServerResponseReceived(false);\r\n      return true;\r\n    } else {\r\n      console.log(\"THIS SHOULD NEVER BE REACHED\");\r\n      return sendData({ req, uid: \"STA\", session, data }, debug);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Processes user request\r\n   * @param {*} param0\r\n   */\r\n  const processRequest = ({ req, data, session, uid, barrels }) => {\r\n    data.instance = instance;\r\n\r\n    // if (req !== \"update last seen user\") {\r\n    setRequest(req);\r\n    // }\r\n\r\n    return requestHandler({\r\n      req,\r\n      data,\r\n      session,\r\n      uid,\r\n      barrels,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Processes server response\r\n   *\r\n   * Chooses a handler depending on response status:\r\n   * Error or other (success | continue | finished | pending etc.)\r\n   *\r\n   * @param {*} param0\r\n   */\r\n  const processUserResponse = ({ args, barrels }) => {\r\n    return args.status === \"error\"\r\n      ? userErrorHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        })\r\n      : userResponseHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  const processSystemResponse = ({ args, barrels }) => {\r\n    // console.log(\"SYSTEM RESPONSE DATA:\", args);\r\n    return args.status === \"error\"\r\n      ? systemErrorHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        })\r\n      : systemResponseHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  /**\r\n   * Shows a messgae (error or info)\r\n   *\r\n   * @param {string} msg, Messgae text\r\n   * @param {string} type, Message type (\"error\" | \"info\")\r\n   */\r\n  const showMessage = (msg, type = \"error\") => {\r\n    type === \"error\" ? setError(msg) : setInfo(msg);\r\n  };\r\n\r\n  /**\r\n   * Hides the message\r\n   */\r\n  const hideMessage = (type = null) => {\r\n    if (type === \"error\") {\r\n      setError(null);\r\n    } else if (type === \"info\") {\r\n      setInfo(null);\r\n    } else {\r\n      setError(null);\r\n      setInfo(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the object-element of an array\r\n   * @param {object array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const getArrayObject = (array, property, value) => {\r\n    return array.find((o) => o[property] === value);\r\n  };\r\n\r\n  /**\r\n   * Changes the website language\r\n   */\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n    setLanguage(lng);\r\n  };\r\n\r\n  const roundTo = (n, digits) => {\r\n    var negative = false;\r\n    if (digits === undefined) {\r\n      digits = 0;\r\n    }\r\n    if (n < 0) {\r\n      negative = true;\r\n      n = n * -1;\r\n    }\r\n    var multiplicator = Math.pow(10, digits);\r\n    n = parseFloat((n * multiplicator).toFixed(11));\r\n    n = (Math.round(n) / multiplicator).toFixed(2);\r\n    if (negative) {\r\n      n = (n * -1).toFixed(2);\r\n    }\r\n    return n;\r\n  };\r\n\r\n  /**\r\n   * Format number\r\n   * @param {number} number\r\n   */\r\n  const format = (number, currency = currencyAbbr, useGrouping = true) => {\r\n    // const retEN = new Intl.NumberFormat(\"en\", {\r\n    //   notation: \"standard\",\r\n    //   minimumFractionDigits: 2,\r\n    //   useGrouping: useGrouping,\r\n    // }).format(number * currencyRate);\r\n\r\n    // const retEN = roundTo(number, 2);\r\n    // const retEN = number;\r\n\r\n    const retIntl = new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      useGrouping: useGrouping,\r\n    }).format(number * currencyRate);\r\n\r\n    if (parseFloat(number) !== 0 && number.toString().substr(0, 4) === \"0.00\")\r\n      return t(\"micro amount\");\r\n\r\n    return retIntl + \" \" + currency;\r\n  };\r\n  //\r\n\r\n  /**\r\n   * Format per cent\r\n   * @param {number} number\r\n   */\r\n  const formatPerCent = (number) => {\r\n    return (\r\n      new Intl.NumberFormat(language, {\r\n        notation: \"standard\",\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2,\r\n      }).format(number) + \"%\"\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   * @param {number} number\r\n   */\r\n  const formatExchangeRate = (number) => {\r\n    return new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 5,\r\n      maximumFractionDigits: 5,\r\n    }).format(number);\r\n  };\r\n\r\n  const parseLocaleNumber = (stringNumber, locale) => {\r\n    let num = 123456.789,\r\n      fmt_local = new Intl.NumberFormat(locale, {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n      }),\r\n      parts_local = fmt_local.formatToParts(num),\r\n      group = \"\",\r\n      decimal = \"\",\r\n      currency = \"\";\r\n\r\n    // separators\r\n    parts_local.forEach(function (i) {\r\n      switch (i.type) {\r\n        case \"group\":\r\n          group = i.value;\r\n          break;\r\n        case \"decimal\":\r\n          decimal = i.value;\r\n          break;\r\n        case \"currency\":\r\n          currency = i.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return parseFloat(\r\n      stringNumber\r\n        .replace(new RegExp(\"\\\\\" + group, \"g\"), \"\")\r\n        .replace(new RegExp(\"\\\\\" + decimal), \".\")\r\n        .replace(new RegExp(\"\\\\\" + currency, \"g\"), \"\")\r\n    );\r\n  };\r\n\r\n  const formatDate = (\r\n    ts,\r\n    options = {\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    },\r\n    isUTC = true,\r\n    locales = language\r\n  ) => {\r\n    let date = new Date(ts); // .toISOString()\r\n    if (isUTC) {\r\n      const diff = date.getTimezoneOffset();\r\n      date = moment(date).add(-diff, \"m\").toDate();\r\n    }\r\n    return new Intl.DateTimeFormat(locales, options).format(date);\r\n  };\r\n\r\n  /**\r\n   * Retrieves an URL parameter\r\n   */\r\n  const getUrlParam = (param) => {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    return urlParams.get(param);\r\n  };\r\n\r\n  // /**\r\n  //  * Clear local storage (URL param ?reset)\r\n  //  */\r\n  // if (getUrlParam(\"reset\") !== null) {\r\n  //   console.log(\"Reset\");\r\n\r\n  //   window.localStorage.clear();\r\n  //   console.log(\"Local storage cleared\");\r\n  // }\r\n\r\n  const sendEmailValidationRequest = ({ token, email }) => {\r\n    // console.log(\"sendEmailValidationRequest:\", token, email);\r\n\r\n    sendRequest({\r\n      req: \"validate email token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  const sendPasswordResetRequest = ({ token, email }) => {\r\n    // console.log(\"sendEmailValidationRequest:\", token, email);\r\n    setPasswordResetTokenEmail(email);\r\n    sendRequest({\r\n      req: \"validate password reset token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  const getUri = () => {\r\n    // return `${window.location.protocol}//${window.location.hostname}`;\r\n    return `${window.location.hostname}`;\r\n  };\r\n\r\n  const getIP = () => {\r\n    if (debug) return;\r\n    fetch(`${config.uri.ENDPOINT}/ip`, {\r\n      method: \"post\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((results) => results.json())\r\n      .then((data) => {\r\n        setIP(typeof data.ip === \"string\" ? data.ip : \"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  const getCart = () => {\r\n    const cart = getUrlParam(\"cart\");\r\n\r\n    // console.log(business, cart);\r\n\r\n    if (cart !== null) {\r\n      setExternalRequest(JSON.stringify({ cart }));\r\n      if (!signedIn) setIsExternalRequest(true);\r\n    }\r\n  };\r\n\r\n  const getCartPurposes = () => {\r\n    if (cartContent === null) return;\r\n\r\n    let cartPurposes = [];\r\n\r\n    barrelGetters.cartContent.map((element) => {\r\n      cartPurposes.push(element.product);\r\n    });\r\n\r\n    // purposes: '\"' + cartPurposes.join('\",\"') + '\"',\r\n\r\n    setCartPurposes(null);\r\n\r\n    sendRequest({\r\n      req: \"get cart purposes\",\r\n      data: {\r\n        purposes: JSON.stringify(cartPurposes),\r\n        language: language,\r\n        page: 1,\r\n        limit: 5,\r\n      },\r\n    });\r\n  };\r\n\r\n  const getCurrencies = (newPage) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: { page: newPage, limit: currenciesPerPage },\r\n    });\r\n    setActivePageCurrencies(newPage);\r\n  };\r\n\r\n  const getTransactions = (newPage) => {\r\n    setTransactions(null);\r\n    sendRequest({\r\n      req: \"get transactions\",\r\n      data: {\r\n        page: newPage,\r\n        limit: transactionsPerPage,\r\n        uid: accountNumber,\r\n        language: language,\r\n      },\r\n    });\r\n    setActivePageTransactions(newPage);\r\n  };\r\n\r\n  const getShares = (newPage) => {\r\n    setShares(null);\r\n    sendRequest({\r\n      req: \"get shares\",\r\n      data: {\r\n        page: newPage,\r\n        limit: sharesPerPage,\r\n        uid: accountNumber,\r\n        language: language,\r\n      },\r\n    });\r\n    setActivePageShares(newPage);\r\n  };\r\n\r\n  const getBusinesses = (newPage = 1) => {\r\n    setUserBusinesses(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(1);\r\n    setActiveBusinessID(null);\r\n    sendRequest({\r\n      req: \"get user businesses\",\r\n      data: { uid: accountNumber, page: newPage, limit: businessesPerPage },\r\n    });\r\n    setActivePageBusinesses(newPage);\r\n  };\r\n\r\n  const getBusinessPurposes = (business_id, selected = null, newPage = 1) => {\r\n    // console.log(\"BUSINESS PURPOSES FOR ID \" + business_id, businessPurposes);\r\n\r\n    if (selected !== null) {\r\n      setActiveBusiness(selected);\r\n      setActiveBusinesPurpose(null);\r\n      setActivePurposeProperty(null);\r\n    }\r\n    setBusinessPurposes(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(newPage);\r\n    setActiveBusinessID(business_id);\r\n    return sendRequest({\r\n      req: \"get business purposes\",\r\n      data: {\r\n        business_id: business_id,\r\n        language: language,\r\n        page: newPage,\r\n        limit: businessPurposesPerPage,\r\n      },\r\n    });\r\n  };\r\n\r\n  const getPurposeShareholders = (purpose_id, selected = null) => {\r\n    if (selected !== null) {\r\n      setActiveBusinesPurpose(purpose_id);\r\n    }\r\n    setPurposeShareholders(null);\r\n    return sendRequest({\r\n      req: \"get purpose shareholders\",\r\n      data: { purpose_id: purpose_id },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get account data\r\n   */\r\n  const getAccountData = () => {\r\n    if (accountNumber === null) return;\r\n    sendRequest({\r\n      req: \"get account data\",\r\n      data: {\r\n        uid: accountNumber,\r\n        // timeout: sessionTimeout,\r\n        // checkTimeout: !sessionTimeoutApplied,\r\n      },\r\n      // data: { email: barrelGetters.userData.email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get transaction by id\r\n   * @param {integer} id, The primary key\r\n   */\r\n  const getTransactionById = (id) => {\r\n    sendRequest({\r\n      req: \"get transaction by id\",\r\n      data: { id: id, language: language },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get conatainer class\r\n   *\r\n   * Returns object cantaining the classes for layout container appearance.\r\n   *\r\n   * @param {boolean} signedIn, True if user has signed in, otherwise false.\r\n   */\r\n  const getContainerClass = (signedIn) => {\r\n    return {\r\n      wrapperClass: signedIn\r\n        ? \"auth-wrapper auth-wrapper-summary\"\r\n        : \"auth-wrapper\",\r\n      innerClass: signedIn\r\n        ? \"auth-inner auth-inner-summary\"\r\n        : \"auth-inner autoWidth\",\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Get redirect\r\n   *\r\n   * Returns router redirect component.\r\n   */\r\n  const getRedirect = () => {\r\n    return redirectTo === null ? \"\" : <Redirect push to={redirectTo} />;\r\n  };\r\n\r\n  /**\r\n   * Update last seen user\r\n   *\r\n   * Sends a request to update the last-seen-user time\r\n   */\r\n  // const updateLastSeenUser = () => {\r\n  //   // let data = { email: barrelGetters.userData.email };\r\n  //   // return sendRequest({ req: \"update last seen user\", data });\r\n  // };\r\n\r\n  /**\r\n   * Sorts an object array by value of the property\r\n   * @param {array} array, the array\r\n   * @param {string} property, the property name\r\n   */\r\n  const sortObjectArray = (array, property) => {\r\n    return array.sort((a, b) =>\r\n      a[property] > b[property] ? 1 : b[property] > a[property] ? -1 : 0\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Returns an array index of the object\r\n   * containing the property with the certain value.\r\n   *\r\n   * @param {array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const getObjectArrayElementIndex = (array, property, value) => {\r\n    if (array === null) return -1;\r\n    return array\r\n      .map((properties) => {\r\n        return properties[property];\r\n      })\r\n      .indexOf(value);\r\n  };\r\n\r\n  const getReviser = () => {\r\n    return \"STA\";\r\n  };\r\n\r\n  const getWorkplace = () => {\r\n    return \"LAPSTA\";\r\n  };\r\n\r\n  const barrelFunctions = {\r\n    sendRequest,\r\n    processUserResponse,\r\n    showMessage,\r\n    hideMessage,\r\n    changeLanguage,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    getArrayObject,\r\n    format,\r\n    formatPerCent,\r\n    formatExchangeRate,\r\n    getContainerClass,\r\n    formatDate,\r\n    // updateLastSeenUser,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    getRedirect,\r\n    getUri,\r\n    getIP,\r\n    getCart,\r\n    getCartPurposes,\r\n    getUrlParam,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    getCurrencies,\r\n    getTransactions,\r\n    getShares,\r\n    parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n    // updateTimestamp,\r\n  };\r\n\r\n  /** \r\n   * Event handlers\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On language change\r\n   */\r\n  i18n.on(\"languageChanged\", function (lng) {\r\n    setLanguage(lng);\r\n  });\r\n\r\n  /**\r\n   * On redirect\r\n   * @param {string} to Redirect path (e.g. \"/sign-in\")\r\n   */\r\n  const onRedirect = (to) => {\r\n    setRedirectTo(to);\r\n  };\r\n\r\n  const onSessionStart = () => {\r\n    // start new session\r\n    let data = {};\r\n    data.request = \"hello\";\r\n    data.instance = instance;\r\n    startSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionEnd = () => {\r\n    // end current session\r\n    sendRequest({ req: \"end session\", data: {} });\r\n\r\n    let data = {};\r\n    data.request = \"bye\";\r\n    data.instance = instance;\r\n    endSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionReset = () => {\r\n    setSession(uuidv4());\r\n  };\r\n\r\n  /**\r\n   * On signup\r\n   * @param {object} data Signup data\r\n   */\r\n  const onSignUp = (data) => {\r\n    // console.log(\"SIGN UP (data):\", data);\r\n    /// setUserData(JSON.stringify(data));\r\n    return sendRequest({ req: \"register user\", data });\r\n  };\r\n\r\n  const onSessionTimeout = () => {\r\n    // if (debug) return;\r\n    console.log(\"Session timed out...\");\r\n    // endSession(\"bye\", session);\r\n    setLoggingOut(true);\r\n    setRedirectTo(\"/sign-out\");\r\n    // Logout();\r\n  };\r\n\r\n  /**\r\n   * On account registration\r\n   * @param {object} data The account registration data\r\n   */\r\n  // const onAccountRegistration = (data) => {\r\n  //   // console.log(\"ACCOUNT REGISTRATION (data):\", data);\r\n  //   // setAccountNumber(data.personalID);\r\n  //   return sendRequest({ req: \"register account\", data });\r\n  // };\r\n\r\n  /**\r\n   * On transfer type change\r\n   * @param {string} id The transfer type id (\"U2S\", \"U2U\", \"U2B\" etc.)\r\n   */\r\n  const onTransferTypeChange = (id) => {\r\n    // console.log(\"setTransferType: \" + id);\r\n    setTransferType(id);\r\n  };\r\n\r\n  const onTransferSuccess = () => {\r\n    // console.log(\"ON TRANSFER SUCCESS\", barrels);\r\n  };\r\n\r\n  /**\r\n   * On transfer\r\n   * @param {object} data Transfer data\r\n   */\r\n  const onTransfer = (data) => {\r\n    // console.log(\"ON TRANSFER (data):\", data);\r\n    // sendRequest({ req: \"register account\", data: data });\r\n    sendRequest(data);\r\n  };\r\n\r\n  // const onBusinessRegistration = (data) => {\r\n  //   // console.log(\"ON BUSINESS REGISTRATION (data):\", data);\r\n  //   // sendRequest({ req: \"register account\", data: data });\r\n  //   sendRequest(data);\r\n  // };\r\n\r\n  const onPurposeRegistration = (data) => {\r\n    sendRequest(data);\r\n  };\r\n\r\n  // const onShareholderRegistration = (data) => {\r\n  //   console.log(\"ON SHAREHOLDER REGISTRATION (data):\", data);\r\n  //   // sendRequest({ req: \"register account\", data: data });\r\n  //   sendRequest(data);\r\n  //   // getBusinesses();\r\n  // };\r\n\r\n  /**\r\n   * On logout\r\n   */\r\n  const onLogOut = () => {\r\n    // setSession(null);\r\n    setUpdateInterval(-1);\r\n\r\n    // TODO: refactor this to separate function (as well as the startSession)\r\n    // let data = {};\r\n    // data.request = \"bye\";\r\n    // data.instance = instance;\r\n    // endSession(data, session, debug);\r\n    // onSessionEnd();\r\n    setResponseProps(null);\r\n    // setSession(uuidv4()); // DO NOT SET SESSION HERE - infinite loop!!\r\n    // setSecureSession(false);\r\n    setServerResponseReceived(null);\r\n    setRequestTimedOut(false);\r\n    setReconnecting(false);\r\n    setSignedIn(false);\r\n    setDailyAllowanceDispatched(false);\r\n    setSettings(null);\r\n    // setSessionTimeoutApplied(false);\r\n    setIsExternalRequest(false);\r\n    setCurrencies(null);\r\n    setTransactions(null);\r\n    setShares(null);\r\n    setAccordionView(\"balance\");\r\n    setAccordionViewCurrency(null);\r\n    setAccountNumber(null);\r\n    setAccountType(null);\r\n    setTransferType(\"#u2s\");\r\n    setTransferRequest(null);\r\n    setTransferFromAccount(\"\");\r\n    setTransferToAccount(\"\");\r\n    setTransferAmount(\"\");\r\n    setTransferToUID(\"\");\r\n    setTransferToPurpose(\"\");\r\n    setTransferDescription(\"\");\r\n    setContactSubject(\"\");\r\n    setContactMessage(\"\");\r\n    setUserBirthYear(\"\");\r\n    setUserBirthMonth(\"\");\r\n    setUserBirthDay(\"\");\r\n    setUserBirthDateError(\"\");\r\n    setUserTimezone(\"\");\r\n    setCurrencyCode(\"\");\r\n    setCurrencyName(\"\");\r\n    setCurrencyRegion(\"\");\r\n    setCurrencyNewRate(\"\");\r\n    setCountTransactions(null);\r\n    setUserData(null);\r\n    setUserBusinesses(null);\r\n    setUserBusinessesLoaded(false);\r\n    setActiveBusiness(null);\r\n    setBusinessPurposes(null);\r\n    setCartPurposes(null);\r\n    setActiveBusinesPurpose(null);\r\n    setActivePurposeProperty(null);\r\n    setPurposeShareholders(null);\r\n    setLogInEmail(\"\");\r\n    setLogInPassword(\"\");\r\n    setSignUpFirstName(\"\");\r\n    setSignUpLastName(\"\");\r\n    setSignUpEmail(\"\");\r\n    setSignUpPassword(\"\");\r\n    setBusinessRegistrationAddTitle(\"\");\r\n    setBusinessRegistrationAddDescription(\"\");\r\n    setPurposeRegistrationTitle(\"\");\r\n    setPurposeRegistrationDescription(\"\");\r\n    setPurposeRegistrationCategory(\"\");\r\n    setPurposeRegistrationSubcategory(\"\");\r\n    setPurposeRegistrationSubcategory2(\"\");\r\n    setPurposeRegistrationKeywords(\"\");\r\n    setUserEditorEditFirstname(\"\");\r\n    setUserEditorFirstname(\"\");\r\n    setUserEditorEditLastname(\"\");\r\n    setUserEditorLastname(\"\");\r\n    setUserEditorEditEmail(\"\");\r\n    setUserEditorEmail(\"\");\r\n    setUserEditorEditPassword(\"\");\r\n    setUserEditorPassword(\"\");\r\n    setUserEditorPasswordVisible(\"\");\r\n    setUserEditorSubmitButtonVisible(\"\");\r\n    setPasswordResetEmail(\"\");\r\n    setTanInputTAN(\"\");\r\n    setAccountPhotoPath(\"\");\r\n    setPasswordResetTokenValidated(null);\r\n    setPasswordResetTokenEmail(null);\r\n    setTanRequired(false);\r\n    setError(null);\r\n    setInfo(null);\r\n  };\r\n\r\n  const onAlertClose = (type = null) => {\r\n    hideMessage(type);\r\n  };\r\n\r\n  /**\r\n   * Barrel: Event handlers\r\n   */\r\n  const barrelEventHandlers = {\r\n    onRedirect,\r\n    onSignUp,\r\n    onSessionTimeout,\r\n    onTransferTypeChange,\r\n    onTransferSuccess,\r\n    onTransfer,\r\n    onSessionStart,\r\n    onSessionEnd,\r\n    onSessionReset,\r\n    onPurposeRegistration,\r\n    onLogOut,\r\n    onAlertClose,\r\n  };\r\n\r\n  /**\r\n   * Barrel of barrels\r\n   */\r\n  const barrels = {\r\n    barrelGetters,\r\n    barrelSetters,\r\n    barrelFunctions,\r\n    barrelEventHandlers,\r\n  };\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  useSocket((data) => {\r\n    setServerResponseReceived(true);\r\n    setRequestTimedOut(false);\r\n    processUserResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  });\r\n\r\n  useSystemSocket((data) => {\r\n    processSystemResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  }, instance);\r\n\r\n  /** \r\n   * Return\r\n   ============================================================================ */\r\n\r\n  if (props.mode !== \"construction\") {\r\n    if (debug || !reconnecting) {\r\n      return <Main {...barrels} />;\r\n    } else {\r\n      return <NotConnected {...barrels} />;\r\n    }\r\n  } else {\r\n    return <UnderConstruction {...barrels} />;\r\n  }\r\n};\r\n","import { sendData } from \"../utils/sockets\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const { req, data, session, uid, barrels } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, userData, userSequence } = barrels.barrelGetters;\r\n  const {\r\n    setUserData,\r\n    setUID,\r\n    setAccountNumber,\r\n    // setRequest,\r\n    // setUserBusinesses,\r\n  } = barrels.barrelSetters;\r\n  const {} = barrels.barrelFunctions;\r\n  //   const {} = barrels.barrelEventHandlers;\r\n\r\n  let requestFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onRequest = (req, callback) => {\r\n    if (requestFound) return;\r\n    if (req === props.req || req === \"default\") {\r\n      callback();\r\n      requestFound = true;\r\n    }\r\n  };\r\n\r\n  /** \r\n   * Request handlers\r\n  ============================================================================ */\r\n\r\n  onRequest(\"sign in user\", () => {\r\n    setUserData(JSON.stringify(data));\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"get user sequence\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"register account\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const year = fullyear.slice(-2);\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n    const birthDate = `${day}${month}${year}`;\r\n    const timezone = data.timezone.slice(0, 2);\r\n    const initial = userData.lastname.slice(0, 1).toUpperCase();\r\n    const icode = initial.charCodeAt(0).toString().padStart(5, \"0\");\r\n\r\n    data.scode = `${timezone}${birthDate}${initial}`;\r\n    data.tcode = `${timezone}${birthDate}${icode}`;\r\n    data.timezone = data.timezone.slice(5);\r\n    data.sequence = userSequence.toString().padStart(5, \"0\");\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    setUID(data.personalID);\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"default\", () => {\r\n    sendData({ req, data, uid, session }, debug);\r\n\r\n    return true;\r\n  });\r\n\r\n  // onRequest(\"unknown\", () => {\r\n  //   showMessage(`UNKNOWN REQUEST ${req}`, \"info\");\r\n\r\n  //   return true;\r\n  // });\r\n\r\n  return requestFound;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setUID,\r\n    setAccountNumber,\r\n    setRedirectTo,\r\n  } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug) console.log(`ERROR: ${req}`, error, context, props, barrels);\r\n  // const { showMessage } = barrels.barrelFunctions;\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n    // console.log(res, status);\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onError([\"*\", \"INVALID_SESSION\"], () => {\r\n    showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n    setRedirectTo(\"/sign-out\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer errors\r\n   */\r\n  onError([\"transfer U2S\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2B\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_USER_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // user selected the same language again - just ignore\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate email token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate password reset token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"reset password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // showMessage(\"REQUEST_ALREADY_SENT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same language again - that's ok\r\n    return true;\r\n  });\r\n\r\n  onError([\"update user\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same password again - that's ok\r\n    return true;\r\n  });\r\n\r\n  // onError([\"update last seen user\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Same last seen time was submitted (shouldn't be possible) - ignore for now\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"sign in user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"change password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"SAME_PASSWORD_RESET\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"submit tan\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"INVALID_TAN\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"get cart\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User accessed the same cart again - it's fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer V2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Allowance already dispatched today - totally fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    // The same currency was selected again - no problem\r\n    return true;\r\n  });\r\n\r\n  onError([\"end session\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Session updated to the same data ??\r\n    return true;\r\n  });\r\n\r\n  onError([\"register currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_CURRENCY_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  // onError([\"get user sequence\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Session updated to the same data ??\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"register account\", \"ER_DUP_ENTRY\"], () => {\r\n    setUID(null);\r\n    setAccountNumber(null);\r\n    showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError(\r\n    [\"register account\", \"ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO\"],\r\n    () => {\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n      return true;\r\n    }\r\n  );\r\n\r\n  onError([\"register shareholder\", \"ER_NO_REFERENCED_ROW_2\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"*\", \"ER_CANT_CREATE_THREAD\"], () => {\r\n    showMessage(\"NO_RESPONSE_FROM_SERVER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug, error: msgError } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug)\r\n    console.log(`SYSTEM ERROR: ${req}`, error, context, props, barrels);\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onError([\"*\", \"INVALID_SESSION\"], () => {\r\n  //   showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n  //   setRedirectTo(\"/sign-out\");\r\n  //   return true;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_error\", \"none\"], () => {\r\n    if (msgError !== \"SERVER_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"reconnect_error\", \"TransportError\"], () => {\r\n    if (msgError !== \"SERVER_STILL_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_STILL_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, instance, info: msgInfo } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage, hideMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug)\r\n    console.log(`system response: ${req} (${props.status})`, props, barrels);\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (res === \"*\" && status === props.status && name === name) ||\r\n      (res === props.req && status === props.status) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n  //   if (typeof props.token !== \"undefined\") {\r\n  //     console.log(\"Renewing session...\");\r\n\r\n  //     onSessionEnd();\r\n  //     setSession(props.token);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect attempt\", \"continue\"], () => {\r\n    // if (msgInfo !== \"RECONNECT_ATTEMPT\")\r\n    //   showMessage(\"RECONNECT_ATTEMPT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnecting\", \"continue\"], () => {\r\n    if (msgInfo !== \"RECONNECTING\") {\r\n      setReconnecting(true);\r\n      showMessage(\"RECONNECTING\", \"info\");\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect\", \"success\"], () => {\r\n    setReconnecting(false);\r\n    hideMessage();\r\n    // hideMessage(\"error\");\r\n    // hideMessage(\"info\");\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Loading.css\";\r\nimport React from \"react\";\r\n// import MainSkeleton from \"../pages/main\";\r\n\r\nexport default () => {\r\n  //\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"lds-hourglass\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * User CSS\r\n */\r\nimport \"./normalize.css\";\r\nimport \"./index.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Loading from \"./components/loading\";\r\nimport UnderConstruction from \"./components/pages/underConstruction\";\r\n\r\n/**\r\n * Retrieves an URL parameter\r\n */\r\nconst getUrlParam = (param) => {\r\n  const queryString = window.location.search;\r\n  const urlParams = new URLSearchParams(queryString);\r\n  return urlParams.get(param);\r\n};\r\n\r\n/**\r\n * Clear local storage (URL param ?reset)\r\n */\r\nif (getUrlParam(\"reset\") !== null) {\r\n  window.localStorage.clear();\r\n  console.log(\"Local storage cleared\");\r\n}\r\n\r\n/**\r\n * Render (with suspense)\r\n * mode = default | construction\r\n */\r\nconst root = document.getElementById(\"root\");\r\nconst construction = document.getElementById(\"construction\");\r\nif (root) {\r\n  ReactDOM.render(\r\n    <Suspense fallback={<Loading />}>\r\n      <Dispatcher mode={!construction ? \"\" : \"construction\"} />\r\n    </Suspense>,\r\n    root\r\n  );\r\n}\r\n"],"sourceRoot":""}