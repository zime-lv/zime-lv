{"version":3,"sources":["components/locale lazy /^/.*$/ groupOptions: {} namespace object","translations/i18n.js","utils/config.js","utils/state.js","components/card/Card.js","components/submitButton/SubmitButton.js","components/errorBoundary/ErrorBoundary.js","components/modalMessage/ModalMessage.js","components/accountRegistration/AccountRegistration.js","components/pagination/Pagination.js","components/search/Search.js","components/datePicker/DatePickerWrapper.js","components/datePicker/DatePicker.js","components/dateRangePicker/DateRangePicker.js","components/transactions/Transactions.js","components/shareholder/Shareholder.js","components/shares/Shares.js","components/transfer/Balance.js","components/transfer/TransferToSelf.js","components/tanInput/TanInput.js","components/transfer/TransferToPerson.js","components/transfer/TransferToBusiness.js","components/businessRegistration/businessRegistration.js","components/purposeRegistration/PurposeRegistration.js","components/shareholderRegistration/shareholderRegistration.js","components/myBusiness/MyBusiness.js","components/userEditor/UserEditor.js","components/currencies/Currencies.js","components/currencyRegistration/CurrencyRegistration.js","components/idleTimer/IdleTimer.js","utils/useInterval.js","utils/useEventListener.js","components/pages/summary/Summary.js","components/currencyContainer/CurrencyContainer.js","components/transfer/Transfer.js","components/contact/Contact.js","components/login/LogIn.js","components/signup/SignUp.js","utils/useTimeout.js","components/overlay/Overlay.js","components/alertContainer/AlertContainer.js","components/alert/Alert.js","components/language-selector/LanguageSelector.js","components/pages/main/Main.js","components/auth/Auth.js","components/validateEmail/ValidateEmail.js","components/changePassword/ChangePassword.js","components/logout/Logout.js","components/passwordReset/passwordReset.js","components/pages/underConstruction/UnderConstruction.js","components/underConstruction/UnderConstruction.js","components/pages/notConnected/NotConnected.js","components/notConnected/NotConnected.js","utils/sockets.js","utils/userResponseHandler.js","Dispatcher.js","utils/requestHandler.js","utils/userErrorHandler.js","utils/systemErrorHandler.js","utils/systemResponseHandler.js","components/loading/Loading.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","defaultNS","keySeparator","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","config","dev","uri","ENDPOINT","SITEMODE","window","location","hostname","useStickyState","defaultValue","key","useState","stickyValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","args","defaults","title","navigation","undefined","footer","header","body","headerContent","onNavigationClick","props","assign","Footer","Header","className","length","Title","Nav","variant","defaultActiveKey","navigationdefaultActiveKey","item","Item","Link","href","link","onClick","style","color","name","Body","React","Children","children","child","cloneElement","styles","caption","request","namespace","visible","marginTop","timeout","onSubmit","barrelGetters","barrelSetters","setError","setInfo","requestExpired","Button","type","block","disabled","Spinner","as","animation","size","role","aria-hidden","hidden","ErrorBoundary","state","hasError","error","errorInfo","console","log","this","Component","centered","message","onHide","file","backdrop","useTranslation","ExternalFile","lazy","Modal","aria-labelledby","closeButton","Navbar","borderRadius","background","backgroundColor","boxShadow","Brand","src","width","height","alt","maxHeight","overflowY","signedIn","accountNumber","userData","language","userBirthYear","userBirthMonth","userBirthDay","userBirthDateError","userTimezone","setUserBirthYear","setUserBirthMonth","setUserBirthDay","setUserBirthDateError","setUserTimezone","barrelFunctions","getReviser","getWorkplace","sendRequest","userAgreementShow","setUserAgreementShow","privacyPolicyShow","setPrivacyPolicyShow","schema","yup","timezone","required","birthYear","birthMonth","birthDay","timezones_sorted","timezones","composeDate","year","month","day","newDate","dateString","match","datepart","split","parseInt","leapYear","isValidDate","yearNow","Date","getFullYear","Alert","Heading","Trans","i18nKey","ModalMessage","show","component","handleSubmit","handleChange","values","handleBlur","touched","errors","isValid","validateForm","setFieldValue","Form","noValidate","Row","margin","Group","Col","controlId","Label","Control","custom","onChange","target","isInvalid","Array","from","Feedback","monthName","toLocaleString","monthNumber","toString","padStart","dayNumber","element","Offset","Name","paddingBottom","KeyboardArrowRight","onMouseDown","SubmitButton","validationSchema","data","birthDate","reviser","workplace","email","sendAccountRegistrationRequest","initialValues","countItems","itemsPerPage","active","align","pages","Math","ceil","getPages","items","number","push","Pagination","Ellipsis","textAlign","display","padding","First","Prev","Next","Last","getJSX","advancedSearch","placeholder","captionAdvancedSearch","search","setSearch","refSearch","createRef","tempRefSearch","current","optional","InputGroup","ref","autoComplete","Append","Text","cursor","Search","refDatePicker","fp","flatpickr","options","destroy","datePicker","aria-describedby","open","DateRange","locale","showMonths","inline","shorthandCurrentMonth","allowInput","clickOpens","monthSelectorType","altInput","altFormat","dateFormat","maxDate","defaultDate","selectedDates","dateStr","instance","captionStartDate","captionEndDate","captionUpdate","dateRangeStart","dateRangeEnd","setDateRangeStart","setDateRangeEnd","getTransactions","formatDate","clearRequestStatus","dateStart","dateEnd","Replay","transactions","countTransactions","activePageTransactions","transactionsPerPage","findTransactions","showRequestStatus","format","formatPerCent","cnt","marginBottom","DateRangePicker","ListGroup","transaction","keyTransactions","business_title","comment","conv_amount","created","sender_firstname","sender_lastname","recipient_firstname","recipient_lastname","purpose_id","purpose_title","recipient_id","roles","share","share_per_cent","sender_id","from_account","to_account","i_am_sender","i_am_recipient","t_from_account","t_to_account","roles_available","arrRoles","shares_available","action","float","ArrowRightAlt","sender","Badge","pill","purpose","shareholder","rangeControl","sharePerCent","businessTitle","purposeTitle","businessOwnerFirstname","businessOwnerLastname","sharesCreated","purposeShareholders","setPurposeShareholders","userQuery","setUserQuery","delayedQuery","useRef","_","debounce","q","sendQuery","onClose","shareholder_id","ps","sharesLabelId","Toast","minWidth","firstname","lastname","Settings","fontSize","min","max","step","shares","countShares","activePageShares","sharesPerPage","getShares","keyShares","owner_firstname","owner_lastname","shares_created","shares_roles","shares_share","Shareholder","accordionView","setAccountType","setRedirectTo","setAccordionView","setResponseProps","getAccountData","showMessage","refAccountNumber","userDataParsed","onAccountTypeSelected","available","acc_curr","acc_cred","acc_save","toggleView","view","newView","Accordion","Toggle","Card","eventKey","Collapse","readOnly","border","document","queryCommandSupported","marginLeft","select","execCommand","blur","FileCopy","Transactions","Shares","accountType","currencyAbbr","transferFromAccount","transferToAccount","transferAmount","setTransferFromAccount","setTransferToAccount","setTransferAmount","parseLocaleNumber","refAmount","tempRefAmount","fromAccount","toAccount","amount","matches","RegExp","Prepend","uid","Intl","NumberFormat","notation","minimumFractionDigits","useGrouping","transferToSelf","tanRequired","tanInputTAN","setTanRequired","setTanInputTAN","refTAN","tempRef","tan","transferToUID","transferDescription","setTransferRequest","setTransferToUID","setTransferDescription","refPersonalID","refDescription","tempRefPersonalID","tempRefDescription","toPersonalID","TanInput","rows","description","transferType","transferToPerson","transferToPurpose","setTransferToPurpose","refPurposeID","tempRefPurposeID","purposeID","currency","transferToBusiness","businessRegistrationAddTitle","businessRegistrationAddDescription","setBusinessRegistrationAddTitle","setBusinessRegistrationAddDescription","refBusinessTitle","refBusinessDescription","tempRefBusinessTitle","tempRefBusinessDescription","trim","businessDescription","requestInsert","requestUpdate","businessID","category","subcategory","subcategory2","keywords","barrels","purposeRegistrationTitle","purposeRegistrationDescription","purposeRegistrationKeywords","setPurposeRegistrationTitle","setPurposeRegistrationDescription","setPurposeRegistrationKeywords","onPurposeRegistration","barrelEventHandlers","refPurposeTitle","refPurposeDescription","refPurposeKeywords","tempRefPurposeTitle","tempRefPurposeDescription","tempRefPurposeKeywords","purposeDescription","purposeKeywords","RegisterPurpose","shareholderRoles","typeError","personalID","userBusinesses","countBusinesses","businessesPerPage","activePageBusinesses","userBusinessesLoaded","activeBusiness","activeBusinessID","businessPurposes","countBusinessPurposes","businessPurposesPerPage","activePageBusinessPurposes","activeBusinesPurpose","activePurposeProperty","activePurposeData","setBusinessPurposes","setActiveBusiness","setActiveBusinesPurpose","setActivePurposeProperty","setActivePageBusinessPurposes","setActivePurposeData","setClearRefs","getBusinesses","getBusinessPurposes","getPurposeShareholders","menuItems","purposes","cntPurposes","countShareholders","business","keyBusiness","keyPurpose","business_id","TogglePurpose","whiteSpace","Edit","stopPropagation","Tab","Pane","bg","Add","keyShareholder","bp","status","purpose_status","Check","label","checked","jsx","date","businessSince","ToggleBusiness","Store","Container","sm","Content","PurposeRegistration","mode","userEditorEditFirstname","userEditorFirstname","userEditorEditLastname","userEditorLastname","userEditorEditEmail","userEditorEmail","userEditorEditPassword","userEditorPassword","userEditorPasswordVisible","userEditorSubmitButtonVisible","setUserEditorEditFirstname","setUserEditorFirstname","setUserEditorEditLastname","setUserEditorLastname","setUserEditorEmail","setUserEditorEditEmail","setUserEditorEditPassword","setUserEditorPassword","setUserEditorPasswordVisible","setUserEditorSubmitButtonVisible","refFirstName","refLastName","refEmail","refPassword","tempRefFirstName","tempRefLastName","tempRefEmail","tempRefPassword","togglePassword","yupObject","firstName","lastName","password","Close","VisibilityOff","Visibility","sendUserRegistrationRequest","currencies","settings","countCurrencies","activePageCurrencies","currenciesPerPage","setCurrencyAbbr","setCurrencyRate","getCurrencies","findCurrencies","formatExchangeRate","getObjectArrayElementIndex","onCurrencySelected","currency_id","rate","onPageSelect","Table","responsive","striped","bordered","hover","keyCurrency","abbr","region","includes","paddingLeft","aria-label","curr_abbr","curr_title","curr_region","curr_rate","currencyCode","currencyName","currencyRegion","currencyNewRate","setCurrencyCode","setCurrencyName","setCurrencyRegion","setCurrencyNewRate","refAbbr","refTitle","refRegion","refRate","tempRefAbbr","tempRefTitle","tempRefRegion","tempRefRate","timestamp","stage2","stage3","onTick","onTimerReset","onTimeout","events","onSessionTimeout","seconds","setSeconds","modalMessageShow","setModalMessageShow","callback","delay","savedCallback","setInterval","clearInterval","useInterval","eventHandler","i","addEventListener","removeEventListener","useEventListener","currTime","timeFormatted","minute","second","modalMessage","fontWeight","OverlayTrigger","placement","overlay","Tooltip","AvTimer","sessionTimeout","useLocation","fluid","paddingRight","PowerSettingsNew","IdleTimer","collapseOnSelect","expand","pathname","aria-controls","pageBody","exact","path","Balance","AccountRegistration","UserEditor","accordionViewCurrency","setAccordionViewCurrency","Currencies","CurrencyRegistration","CurrencyContainer","MyBusiness","onTransferTypeChange","transferCard","setTransferCard","TransferToSelf","TransferToPerson","TransferToBusiness","Transfer","contactSubject","contactMessage","setContactSubject","setContactMessage","refSubject","refMessage","tempRefSubject","tempRefMessage","subject","Contact","ip","logInEmail","logInPassword","setLoggingIn","setUpdateInterval","setLogInEmail","setLogInPassword","getUri","sendUserLogInRequest","signUpFirstName","signUpLastName","signUpEmail","signUpPassword","setSignUpFirstName","setSignUpLastName","setSignUpEmail","setSignUpPassword","passwordVisible","setPasswordVisible","validateEmail","useTimeout","setTimeout","clearTimeout","dismissible","info","onAlertClose","errorStrings","infoStrings","msgError","msg","msgInfo","changeLanguage","lng","selectLanguage","session","serverResponseReceived","dailyAllowanceDispatched","externalRequest","cartContent","validateTokenEmail","passwordResetTokenValidated","validateTokenPasswordReset","connected","isExternalRequest","clearRefs","setRequestTimedOut","setDailyAllowanceDispatched","setRequest","setIsExternalRequest","getIP","getCart","getCartPurposes","sendEmailValidationRequest","sendPasswordResetRequest","getContainerClass","getRedirect","onRedirect","onSessionStart","customer","cart","wrapperClass","innerClass","appClass","Summary","Login","SignUp","cartPurposes","Cart","priceTotal","priceReal","price","product_found","find","products","product","Auth","validationTokenEmail","validationTokenEmailResent","setValidateTokenEmail","getUrlParam","token","ValidateEmail","passwordResetTokenEmail","ChangePassword","setLanguage","onLogOut","tempError","tempInfo","tempLanguage","Logout","passwordResetEmail","setValidateTokenPasswordReset","setPasswordResetEmail","PasswordReset","LanguageSelector","marginRight","Build","UnderConstruction","PowerOff","NotConnected","socket","openSocket","connect","secure","reconnect","sendData","emit","responseProps","transferRequest","lastInsertId","setSession","setSettings","setCurrencies","setTransactions","setShares","setCountCurrencies","setCountTransactions","setCountShares","setConnected","setUserData","setSignedIn","setCartContent","setLastInsertId","setAccountNumber","setUserSequence","setUID","setUserBusinesses","setCountBusinesses","setUserBusinessesLoaded","setCartPurposes","setCountBusinessPurposes","setAccountPhotoPath","setPasswordResetTokenValidated","setPasswordResetTokenEmail","setValidationTokenEmail","setValidationTokenEmailResent","getTransactionById","sortObjectArray","deleteObjectArrayElement","onSessionEnd","responseFound","onResponse","res","reqData","tempRP","saveResponseProps","results","sequence","content","queryCnt","insertId","tags","resent","affectedRows","currency_abbr","isNaN","currency_rate","count_businesses","count_purposes","index","splice","temp","now","count_currencies","count_transaction_positions","count_shares","isLocalhost","setDebug","loggingOut","setLoggingOut","loggingIn","pageLoading","setPageLoading","setServerResponseReceived","requestTimedOut","setInstance","uuidv4","setSessionTimeout","reconnecting","setReconnecting","setIP","setExternalRequest","updateInterval","currencyRate","setActivePageCurrencies","setActivePageTransactions","setActivePageShares","setCurrenciesPerPage","setTransactionsPerPage","setSharesPerPage","userSequence","setBusinessesPerPage","setActivePageBusinesses","setActiveBusinessID","setBusinessPurposesPerPage","setDate","getDate","searchTransactions","setSearchTransactions","redirectTo","setTransferType","accountPhotoPath","processRequest","requestFound","onRequest","dt","fullyear","getMonth","slice","initial","toUpperCase","icode","charCodeAt","scode","tcode","requestHandler","processUserResponse","context","errorFound","onError","userErrorHandler","userResponseHandler","processSystemResponse","systemErrorHandler","hideMessage","systemResponseHandler","getArrayObject","array","property","getRequestStatus","obj","ts","hour","isUTC","locales","diff","getTimezoneOffset","moment","add","toDate","DateTimeFormat","param","queryString","URLSearchParams","get","newPage","page","limit","arr","filter","roundTo","n","digits","negative","multiplicator","pow","parseFloat","toFixed","round","sort","a","b","properties","indexOf","strLoading","strNotFound","finalStatus","retIntl","maximumFractionDigits","substr","to","fetch","method","headers","json","catch","selected","stringNumber","parts_local","formatToParts","group","decimal","forEach","replace","on","onSignUp","onTransferSuccess","onTransfer","startSession","endSession","onSessionReset","clear","responseData","setResponseData","useSocket","latency","reason","attemptNumber","useSystemSocket","root","getElementById","construction","ReactDOM","render","fallback","Dispatcher"],"mappings":"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iBACAe,qBACAd,uBACAsQ,kBACAC,kBACA1kB,iBACAC,kBACAC,gBACAC,sBACAC,gBACAsf,gBACAC,gBACAC,kBACAC,mBACA9f,YACAgV,gBAEA6c,oBACA7zB,MAAOtE,KAAKC,MAAMqE,IAClB4oB,KAAMltB,KAAKC,MAAMitB,KAOb9pB,GAAgB,CACpB6yB,WACAE,gBACAtK,eAGAyK,iBACA7H,aACA8H,4BACAhI,qBAEAkI,cACA5f,oBAGA2b,aAEAmE,qBAEAlE,eACAqE,SACAhL,qBACA4G,iBACAC,mBACAC,aACAhc,oBACAwT,4BACAyI,sBACAC,wBACAC,kBACAmE,2BACAC,6BACAC,uBACAC,wBACAC,0BACAC,oBACAvE,gBACA6D,mBACA/F,eACAmC,eAEAC,eACA1E,+BACAE,wBACAqI,sBACA5D,kBACA3O,mBACAC,mBAEA9N,iBACAyc,mBACAC,oBACAC,mBACA5c,kBACA6c,UACAC,qBACAC,sBACAgE,wBACAC,2BACAhE,2BACAtU,qBACAuY,uBACAxY,uBACAwU,mBACAC,4BACAgE,8BACArY,iCACAF,2BACAC,4BAEAE,wBACAjL,0BACAkL,gBACAsM,iBACAC,oBACAO,sBACAC,qBACAC,kBACAC,qBACAjc,qBACAC,mBACAuL,mCACAC,yCACAkB,+BACAC,qCAIAC,kCACAkF,8BACAC,0BACAC,6BACAC,yBACAE,0BACAD,sBACAE,6BACAC,yBACAC,gCACAC,oCACAqO,yBACAjX,kBACAtM,aACAiqB,yBACA30B,YACAC,WAEAuwB,uBACArD,yBACAa,iCACAyC,kCACAC,8BACAC,2BACAC,iCACAtZ,sBACA5B,0BACAC,wBACAC,qBACA2B,oBACAa,wBACAZ,0BACAqQ,qBACAC,qBACAvkB,oBACAC,qBACAC,mBACAC,yBACAC,mBACAqf,mBACAC,mBACAC,qBACAC,sBACApM,mBAeIhT,GAAc,SAAC,GAA0B,IAAxBrK,EAAuB,EAAvBA,IAAuB,IAAlBgP,YAAkB,MAAX,KAAW,EAC5C,OAAIqsB,GAAe,CAAEr7B,MAAKgP,OAAM6hB,UAASjU,IAAK,MAAOqD,cAEnDuZ,GAA0B,IACnB,IAEP/xB,QAAQC,IAAI,gCACL0tB,GAAS,CAAEp1B,MAAK4c,IAAK,MAAOiU,UAAS7hB,QAAQzN,KAQlD85B,GAAiB,SAAC,GAA0C,IAAxCr7B,EAAuC,EAAvCA,IAAKgP,EAAkC,EAAlCA,KAAM6hB,EAA4B,EAA5BA,QAASjU,EAAmB,EAAnBA,IAAKqD,EAAc,EAAdA,QAOjD,OANAjR,EAAKoE,SAAWA,EAGhBse,EAAW1xB,GCzxBA,SAACwD,GAId,IAKMU,EAAQrD,OAAOsD,OALN,GAKuBX,GAC9BxD,EAAqCkE,EAArClE,IAAKgP,EAAgC9K,EAAhC8K,KAAM6hB,EAA0B3sB,EAA1B2sB,QAASjU,EAAiB1Y,EAAjB0Y,IAAKqD,EAAY/b,EAAZ+b,QAVV,EAemBA,EAAQ7Z,cAA1C7E,EAfe,EAefA,MAAO+H,EAfQ,EAeRA,SAAUmxB,EAfF,EAeEA,aAfF,EAsBnBxa,EAAQ5Z,cALV6vB,EAjBqB,EAiBrBA,YACAM,EAlBqB,EAkBrBA,OAQE8E,GAAe,EAKbC,EAAY,SAACv7B,EAAK8qB,GAClBwQ,GACAt7B,IAAQkE,EAAMlE,KAAe,YAARA,IACvB8qB,IACAwQ,GAAe,IAyDnB,OAjDAC,EAAU,gBAAgB,WACxBrF,EAAYjzB,KAAKM,UAAUyL,IAC3BomB,GAAS,CAAEp1B,MAAKgP,OAAM4N,MAAKiU,WAAWtvB,MAGxCg6B,EAAU,qBAAqB,WAC7B,IAAMC,EAAK,IAAIxvB,KAAKgD,EAAKC,WACnBwsB,EAAWD,EAAGvvB,cAAcoC,WAC5BhD,GAASmwB,EAAGE,WAAa,GAAGrtB,WAAWC,SAAS,EAAG,KACnDhD,EAAMkwB,EAAGT,UAAU1sB,WAAWC,SAAS,EAAG,KAEhDU,EAAKC,UAAL,UAAoBwsB,EAApB,YAAgCpwB,EAAhC,YAAyCC,GAEzC8pB,GAAS,CAAEp1B,MAAKgP,OAAM4N,MAAKiU,WAAWtvB,MAGxCg6B,EAAU,oBAAoB,WAC5B,IAAMC,EAAK,IAAIxvB,KAAKgD,EAAKC,WACnBwsB,EAAWD,EAAGvvB,cAAcoC,WAC5BjD,EAAOqwB,EAASE,OAAO,GACvBtwB,GAASmwB,EAAGE,WAAa,GAAGrtB,WAAWC,SAAS,EAAG,KACnDhD,EAAMkwB,EAAGT,UAAU1sB,WAAWC,SAAS,EAAG,KAC1CW,EAAS,UAAM3D,GAAN,OAAYD,GAAZ,OAAoBD,GAC7BR,EAAWoE,EAAKpE,SAAS+wB,MAAM,EAAG,GAClCC,EAAUtyB,EAASkP,SAASmjB,MAAM,EAAG,GAAGE,cACxCC,EAAQF,EAAQG,WAAW,GAAG1tB,WAAWC,SAAS,EAAG,KAE3DU,EAAKgtB,MAAL,UAAgBpxB,GAAhB,OAA2BqE,GAA3B,OAAuC2sB,GACvC5sB,EAAKitB,MAAL,UAAgBrxB,GAAhB,OAA2BqE,GAA3B,OAAuC6sB,GACvC9sB,EAAKpE,SAAWoE,EAAKpE,SAAS+wB,MAAM,GACpC3sB,EAAK8oB,SAAW2C,EAAapsB,WAAWC,SAAS,EAAG,KACpDU,EAAKC,UAAL,UAAoBwsB,EAApB,YAAgCpwB,EAAhC,YAAyCC,GAEzCkrB,EAAOxnB,EAAKqS,YACZ+T,GAAS,CAAEp1B,MAAKgP,OAAM4N,MAAKiU,WAAWtvB,MAGxCg6B,EAAU,WAAW,WAGnB,OAFAnG,GAAS,CAAEp1B,MAAKgP,OAAM4N,MAAKiU,WAAWtvB,IAE/B,KASF+5B,EDgsBEY,CAAe,CACpBl8B,MACAgP,OACA6hB,UACAjU,MACAqD,aAYEkc,GAAsB,SAAC,GAAuB,IAArB34B,EAAoB,EAApBA,KAAMyc,EAAc,EAAdA,QACnC,MAAuB,UAAhBzc,EAAKwgB,OE9yBD,YAAwB,IAArBxgB,EAAoB,EAApBA,KAAMyc,EAAc,EAAdA,QAShB/b,EAAQrD,OAAOsD,OALN,GAKuBX,GAK9BjC,EAAU0e,EAAQ7Z,cAAlB7E,MAd4B,EAoBhC0e,EAAQ5Z,cAJVqrB,EAhBkC,EAgBlCA,WACA8E,EAjBkC,EAiBlCA,OACAF,EAlBkC,EAkBlCA,iBACA1c,EAnBkC,EAmBlCA,cAEMI,EAAgBiG,EAAQ/V,gBAAxB8P,YAIAha,EAAwBkE,EAAxBlE,IAAKuH,EAAmBrD,EAAnBqD,MAAO60B,EAAYl4B,EAAZk4B,QAChB76B,GAAOkG,QAAQC,IAAR,iBAAsB1H,GAAOuH,EAAO60B,EAASl4B,EAAO+b,GAG/D,IAAIoc,GAAa,EAKXC,EAAU,SAACttB,EAAM8b,GACrB,IAAIuR,EAAJ,CADkC,kBAEZrtB,EAFY,GAE3ByoB,EAF2B,KAEtBzT,EAFsB,KAKlC,OACGyT,IAAQz3B,GAAOgkB,IAAWzc,EAAM/G,MACxB,MAARi3B,GAAezT,IAAWzc,EAAM/G,MACzB,YAARi3B,KAEA3M,IACA4G,EAAW,MACX2K,GAAa,GACN,KAkKX,OAzJAC,EAAQ,CAAC,IAAK,oBAAoB,WAGhC,OAFAtiB,EAAY,oBAAqB,QAAQ,GACzCJ,EAAc,cACP,KAMT0iB,EAAQ,CAAC,eAAgB,oBAAoB,WAE3C,OADAtiB,EAAY,mBAAoB,UACzB,KAGTsiB,EAAQ,CAAC,eAAgB,oBAAoB,WAE3C,OADAtiB,EAAY,mBAAoB,UACzB,KAGTsiB,EAAQ,CAAC,eAAgB,oBAAoB,WAE3C,OADAtiB,EAAY,mBAAoB,UACzB,KAGTsiB,EAAQ,CAAC,gBAAiB,oBAAoB,WAE5C,OADAtiB,EAAY,4BAA6B,UAClC,KAGTsiB,EAAQ,CAAC,yBAA0B,oBAAoB,WAErD,OAAO,KAGTA,EAAQ,CAAC,uBAAwB,oBAAoB,WAEnD,OADAtiB,EAAY,0BAA2B,UAChC,KAGTsiB,EAAQ,CAAC,gCAAiC,oBAAoB,WAE5D,OADAtiB,EAAY,0BAA2B,UAChC,KAGTsiB,EAAQ,CAAC,iBAAkB,oBAAoB,WAE7C,OAAO,KAGTA,EAAQ,CAAC,yBAA0B,oBAAoB,WAErD,OAAO,KAGTA,EAAQ,CAAC,cAAe,oBAAoB,WAE1C,OAAO,KAQTA,EAAQ,CAAC,eAAgB,oBAAoB,WAE3C,OADAtiB,EAAY,iBAAkB,UACvB,KAGTsiB,EAAQ,CAAC,kBAAmB,oBAAoB,WAG9C,OADAtiB,EAAY,sBAAuB,SAC5B,KAGTsiB,EAAQ,CAAC,aAAc,oBAAoB,WAGzC,OADAtiB,EAAY,cAAe,SAAS,IAC7B,KAGTsiB,EAAQ,CAAC,WAAY,oBAAoB,WAEvC,OAAO,KAGTA,EAAQ,CAAC,eAAgB,oBAAoB,WAE3C,OAAO,KAGTA,EAAQ,CAAC,yBAA0B,oBAAoB,WAErD,OAAO,KAGTA,EAAQ,CAAC,cAAe,oBAAoB,WAE1C,OAAO,KAGTA,EAAQ,CAAC,oBAAqB,oBAAoB,WAEhD,OADAtiB,EAAY,kCAAmC,UACxC,KAGTsiB,EAAQ,CAAC,0BAA2B,oBAAoB,WAEtD,OADAtiB,EAAY,6BAA8B,UACnC,KAGTsiB,EAAQ,CAAC,mBAAoB,iBAAiB,WAE5C,OADAtiB,EAAY,6BAA8B,UACnC,KAQTsiB,EAAQ,CAAC,mBAAoB,iBAAiB,WAI5C,OAHA9F,EAAO,MACPF,EAAiB,MACjBtc,EAAY,iCAAkC,UACvC,KAGTsiB,EACE,CAAC,mBAAoB,6CACrB,WAIE,OAHA9F,EAAO,MACPF,EAAiB,MACjBtc,EAAY,iCAAkC,UACvC,KAIXsiB,EAAQ,CAAC,uBAAwB,2BAA2B,WAE1D,OADAtiB,EAAY,iBAAkB,UACvB,KAGTsiB,EAAQ,CAAC,IAAK,0BAA0B,WAEtC,OADAtiB,EAAY,0BAA2B,UAChC,KAGTsiB,EAAQ,CAAC,YAAY,WAEnB,OADAtiB,EAAYzS,EAAM/G,KAAM,UACjB,MAGF,EF8lBD+7B,CAAiB,CACf/4B,KAAMA,EACNoZ,IAAKA,GACLqD,QAASA,IAEXuc,GAAoB,CAClBh5B,KAAMA,EACNoZ,IAAKA,GACLqD,QAASA,KAIXwc,GAAwB,SAAC,GAAuB,IAArBj5B,EAAoB,EAApBA,KAAMyc,EAAc,EAAdA,QAErC,MAAuB,UAAhBzc,EAAKwgB,OG7zBD,YAAwB,IAArBxgB,EAAoB,EAApBA,KAAMyc,EAAc,EAAdA,QAShB/b,EAAQrD,OAAOsD,OALN,GAKuBX,GATF,EAcDyc,EAAQ7Z,cAAnC7E,EAd4B,EAc5BA,MAAcgvB,EAdc,EAcrBhpB,MAdqB,EAeI0Y,EAAQ5Z,cAAxCqrB,EAf4B,EAe5BA,WAAYoI,EAfgB,EAehBA,gBACZ9f,EAAgBiG,EAAQ/V,gBAAxB8P,YAIAha,EAAwBkE,EAAxBlE,IAAKuH,EAAmBrD,EAAnBqD,MAAO60B,EAAYl4B,EAAZk4B,QAChB76B,GACFkG,QAAQC,IAAR,wBAA6B1H,GAAOuH,EAAO60B,EAASl4B,EAAO+b,GAE7D,IAAIoc,GAAa,EAKXC,EAAU,SAACttB,EAAM8b,GACrB,IAAIuR,EAAJ,CADkC,kBAEZrtB,EAFY,GAE3ByoB,EAF2B,KAEtBzT,EAFsB,KAIlC,OACGyT,IAAQz3B,GAAOgkB,IAAWzc,EAAM/G,MACxB,MAARi3B,GAAezT,IAAWzc,EAAM/G,MACzB,YAARi3B,KAEA3M,IACA4G,EAAW,MACX2K,GAAa,GACN,KAmDX,OAjCAC,EAAQ,CAAC,gBAAiB,SAAS,WAMjC,MALiB,uBAAb/L,GAEFuJ,GAAgB,IAGX,KAMTwC,EAAQ,CAAC,kBAAmB,oBAAoB,WAC9C,OAAO,KAMTA,EAAQ,CAAC,kBAAmB,mBAAmB,WAM7C,MALiB,6BAAb/L,GAEFuJ,GAAgB,IAGX,KAGTwC,EAAQ,CAAC,YAAY,WAEnB,OADAtiB,EAAYzS,EAAM/G,KAAM,UACjB,MAGF,EHkuBDk8B,CAAmB,CACjBl5B,KAAMA,EACNyc,QAASA,IIh0BJ,YAAwB,IAArBzc,EAAoB,EAApBA,KAAMyc,EAAc,EAAdA,QAShB/b,EAAQrD,OAAOsD,OALN,GAKuBX,GATF,EAcHyc,EAAQ7Z,cAAjC7E,EAd4B,EAc5BA,MAAakvB,EAde,EAcrBN,KAdqB,EAeIlQ,EAAQ5Z,cAAxCqrB,EAf4B,EAe5BA,WAAYoI,EAfgB,EAehBA,gBAfgB,EAgBC7Z,EAAQ/V,gBAArC8P,EAhB4B,EAgB5BA,YAAa2iB,EAhBe,EAgBfA,YAMb38B,EAAQkE,EAARlE,IAKJuB,GACFkG,QAAQC,IAAR,2BAAgC1H,EAAhC,aAAwCkE,EAAM8f,OAA9C,KAAyD9f,EAAO+b,GAElE,IAAIsX,GAAgB,EAKdC,EAAa,SAACxoB,EAAM8b,GACxB,IAAIyM,EAAJ,CADqC,kBAEFvoB,EAFE,GAE9ByoB,EAF8B,KAEzBzT,EAFyB,YAEjB3e,OAFiB,MAEV,KAFU,GAK1B,MAARoyB,GAAezT,IAAW9f,EAAM8f,QAChCyT,IAAQvzB,EAAMlE,KAAOgkB,IAAW9f,EAAM8f,QAC/B,YAARyT,KAEI3M,KACF4G,EAAW,MAEA,OAATrsB,IAAekyB,GAAgB,MAwDvC,OAhCAC,EAAW,CAAC,oBAAqB,aAAa,WAG5C,OAAO,KAMTA,EAAW,CAAC,eAAgB,aAAa,WAKvC,MAJgB,iBAAZ/G,IACFqJ,GAAgB,GAChB9f,EAAY,eAAgB,UAEvB,KAMTwd,EAAW,CAAC,YAAa,YAAY,WAKnC,OAJAsC,GAAgB,GAChB6C,KAGO,KAGTnF,EAAW,CAAC,YAAY,WACtB,OAAO,KAGFD,EJ2tBDqF,CAAsB,CACpBp5B,KAAMA,EACNyc,QAASA,KAmBX0c,GAAc,WAAkB,IAAjBj2B,EAAgB,uDAAT,KACb,UAATA,EACFJ,GAAS,OACS,SAATI,GAGTJ,GAAS,MAFTC,GAAQ,QAaNs2B,GAAiB,SAACC,EAAOC,EAAU55B,GACvC,OAAc,OAAV25B,EAAuB,KACpBA,EAAM3J,MAAK,SAACjzB,GAAD,OAAOA,EAAE68B,KAAc55B,MAOrC65B,GAAmB,SAACh9B,GACxB,IAAMi9B,EAAMJ,GAAez2B,GAAckvB,cAAe,MAAOt1B,GAC/D,OAAY,OAARi9B,EAAqB,YACH,qBAARA,EAAsBA,EAAIjZ,OAAS,aA+J7CnQ,GAAa,SACjBqpB,GAWI,IAVJlrB,EAUG,uDAVO,CACR3G,MAAO,OACPC,IAAK,UACLF,KAAM,UACN+xB,KAAM,UACNxR,OAAQ,WAEVyR,IAGG,yDAFHC,EAEG,uDAFO9zB,GACViL,EACG,uDADM,KAEL8P,EAAO,IAAItY,KAAKkxB,GACpB,GAAIE,EAAO,CACT,IAAME,EAAOhZ,EAAKiZ,oBAClBjZ,EAAOkZ,IAAOlZ,GAAMmZ,KAAKH,EAAM,KAAKI,SAEtC,OAAkB,OAAXlpB,EACH,IAAIqI,KAAK8gB,eAAeN,EAASrrB,GAASwC,OAAO8P,GACjDkZ,IAAOlZ,GAAM9P,OAAOA,IAMpBkf,GAAc,SAACkK,GACnB,IAAMC,EAAct7B,OAAOC,SAASuO,OAEpC,OADkB,IAAI+sB,gBAAgBD,GACrBE,IAAIH,IA+HjBhqB,GAAkB,SAACoqB,GAA4B,IAAnBjtB,EAAkB,uDAAT,KACzC6kB,GAAgB,MAEhB,IAAI7hB,EAAYP,GACZQ,EAAUP,GACd,GAAgB,UAAZO,EAAqB,CACvB,IAAM6kB,EAAM,IAAI7sB,KAChBgI,EAAU6kB,EAAIiC,QAAQjC,EAAIkC,WAE5BhnB,EAAYF,GAAWE,EAAW,MAAM,EAAM,KAAM,cACpDC,EAAUH,GAAWG,EAAS,MAAM,EAAM,KAAM,cAEhD3J,GAAY,CACVrK,IAAK,mBACLgP,KAAM,CACJivB,KAAMD,EACNE,MAAO7pB,GACPuI,IAAKvT,GACLE,YACAwK,YACAC,UACAjD,OAAmB,OAAXA,EAAkBA,EAASiqB,MAGvCZ,GAA0B4D,IAoMtB3G,GAA2B,SAAC8G,EAAKpB,EAAU55B,GAC/C,OAAOg7B,EAAIC,QAAO,SAACnB,GACjB,OAAOA,EAAIF,KAAc55B,MAYvB+G,GAAkB,CACtBG,eACA8xB,uBACAniB,YA9kBkB,SAACwW,GAA6C,IAAxC9pB,EAAuC,uDAAhC,QAASwpB,IAAuB,yDACtD,UAATxpB,EACIJ,GAASrD,KAAKM,UAAU,CAAEitB,MAAKN,iBAC/B3pB,GAAQtD,KAAKM,UAAU,CAAEitB,MAAKN,kBA4kBlCyM,eACAjM,eAlgBqB,SAACC,GACtB3vB,EAAK0vB,eAAeC,GACpBoD,GAAYpD,IAigBZ0N,QA9fc,SAACC,EAAGC,GAClB,IAAIC,GAAW,OACA56B,IAAX26B,IACFA,EAAS,GAEPD,EAAI,IACNE,GAAW,EACXF,IAAS,GAEX,IAAMG,EAAgB7uB,KAAK8uB,IAAI,GAAIH,GAMnC,OALAD,EAAIK,YAAYL,EAAIG,GAAeG,QAAQ,KAC3CN,GAAK1uB,KAAKivB,MAAMP,GAAKG,GAAeG,QAAQ,GACxCJ,IACFF,IAAU,EAALA,GAAQM,QAAQ,IAEhBN,GAgfPlH,gBAnDsB,SAAC0F,EAAOC,GAC9B,OAAOD,EAAMgC,MAAK,SAACC,EAAGC,GAAJ,OAChBD,EAAEhC,GAAYiC,EAAEjC,GAAY,EAAIiC,EAAEjC,GAAYgC,EAAEhC,IAAa,EAAI,MAkDnEjV,2BAtCiC,SAACgV,EAAOC,EAAU55B,GACnD,OAAc,OAAV25B,GAAwB,EACrBA,EACJh9B,KAAI,SAACm/B,GACJ,OAAOA,EAAWlC,MAEnBmC,QAAQ/7B,IAiCXk0B,4BACAwF,kBACAG,oBACAlpB,mBA1iByB,SAAC9T,GAC1Bq3B,GAAyBjxB,GAAckvB,cAAe,MAAOt1B,IA0iB7DuU,kBAhiBwB,SACxBvU,EACA0U,EACAyqB,EACAC,GAEI,IADJC,EACG,uDADW,UAERrb,EAASgZ,GAAiBh9B,GAChC,MAAe,cAAXgkB,EAA+B,GAEpB,cAAXA,GAA0BA,IAAWqb,EAChC,uBAAG/6B,UAAU,0BAA0B66B,GACrCnb,IAAWqb,GAAuB,IAAR3qB,EAC5B,uBAAGpQ,UAAU,0BAA0B86B,GAEvC,IAkhBT5qB,OAhfa,SAACxE,GAAyD,IAAjD8O,EAAgD,uDAArClD,GAAcqB,IAAuB,yDAChEqiB,EAAU,IAAIziB,KAAKC,aAAavT,GAAU,CAC9CwT,SAAU,WACVC,sBAAuB,EACvBuiB,sBAAuB,EACvBtiB,YAAaA,IACZzI,OAAOxE,EAASkqB,IAEnB,OAA2B,IAAvByE,WAAW3uB,IAAoD,SAAnCA,EAAO3B,WAAWmxB,OAAO,EAAG,GACnD7+B,EAAE,gBAEJ2+B,EAAU,IAAMxgB,GAsevBrK,cA/doB,SAACzE,GACrB,OACE,IAAI6M,KAAKC,aAAavT,GAAU,CAC9BwT,SAAU,WACVC,sBAAuB,EACvBuiB,sBAAuB,IACtB/qB,OAAOxE,GAAU,KA0dtB6X,mBAjdyB,SAAC7X,GAC1B,OAAO,IAAI6M,KAAKC,aAAavT,GAAU,CACrCwT,SAAU,WACVC,sBAAuB,EACvBuiB,sBAAuB,IACtB/qB,OAAOxE,IA6cViiB,kBAvFwB,SAAC7oB,GACzB,MAAO,CACLmpB,aAAcnpB,EACV,oCACA,eACJopB,WAAYppB,EACR,gCACA,yBAiFNyK,cACAke,2BAzXiC,SAAC,GAAsB,IAApB4B,EAAmB,EAAnBA,MAAOvkB,EAAY,EAAZA,MAC3C/E,GAAY,CACVrK,IAAK,uBACLgP,KAAM,CAAE2kB,QAAOvkB,YAuXjB4iB,yBA7W+B,SAAC,GAAsB,IAApB2B,EAAmB,EAAnBA,MAAOvkB,EAAY,EAAZA,MACzC4nB,GAA2B5nB,GAC3B/E,GAAY,CACVrK,IAAK,gCACLgP,KAAM,CAAE2kB,QAAOvkB,YA0WjB8iB,YA3EkB,WAClB,OAAsB,OAAfgJ,GAAsB,GAAK,kBAAC,IAAD,CAAUjrB,MAAI,EAACwvB,GAAIvE,MA2ErDhM,OApWa,WACb,MAAM,GAAN,OAAU3sB,OAAOC,SAASC,WAoW1BmvB,MA9VY,WACRrwB,GACJm+B,MAAM,GAAD,OAAIx9B,EAAOE,IAAIC,SAAf,OAA8B,CACjCs9B,OAAQ,OACR7a,KAAM,UACN8a,QAAS,CACP,eAAgB,sBAGjBv/B,MAAK,SAACw3B,GAAD,OAAaA,EAAQgI,UAC1Bx/B,MAAK,SAAC2O,GACL+qB,GAAyB,kBAAZ/qB,EAAK2f,GAAkB3f,EAAK2f,GAAK,OAE/CmR,OAAM,SAACv4B,GACNE,QAAQF,MAAM,SAAUA,OAiV5BsqB,QA1Uc,WACd,IAAMS,EAAOoB,GAAY,QAEZ,OAATpB,IACF0H,GAAmB/2B,KAAKM,UAAU,CAAE+uB,UAC/BlpB,IAAUuoB,IAAqB,KAsUtCG,gBA/TsB,WACtB,GAAoB,OAAhBb,GAAJ,CAEA,IAAI4B,EAAe,GAEnBzsB,GAAc6qB,YAAYnxB,KAAI,SAAC0O,GAAD,OAC5BqkB,EAAa5iB,KAAKzB,EAAQ6kB,YAG5BuD,GAAgB,MAEhBvsB,GAAY,CACVrK,IAAK,oBACLgP,KAAM,CACJ+T,SAAU9f,KAAKM,UAAUsvB,GACzBtpB,SAAUA,GACV00B,KAAM,EACNC,MAAO,OA+SXxK,eACA3Z,eA9HqB,WACC,OAAlB1Q,IACJgB,GAAY,CACVrK,IAAK,mBACLgP,KAAM,CACJ4N,IAAKvT,OA0HT8tB,mBAhHyB,SAACz2B,GAC1B2J,GAAY,CACVrK,IAAK,wBACLgP,KAAM,CAAEtO,GAAIA,EAAI6I,SAAUA,OA8G5BoZ,cA9LoB,WAAkB,IAAjBqb,EAAgB,uDAAN,EAC/BvH,GAAkB,MAClBI,GAAyB,MACzBrU,GAA8B,GAC9BoY,GAAoB,MACpBvwB,GAAY,CACVrK,IAAK,sBACLgP,KAAM,CAAE4N,IAAKvT,GAAe40B,KAAMD,EAASE,MAAO1c,MAEpDmZ,GAAwBqD,IAsLxBpb,oBA5K0B,SAACS,GAA+C,IAAlC0c,EAAiC,uDAAtB,KAAM/B,EAAgB,uDAAN,EAYnE,OATiB,OAAb+B,IACF1d,GAAkB0d,GAClBzd,GAAwB,MACxBC,GAAyB,OAE3BH,GAAoB,MACpByU,GAAyB,MACzBrU,GAA8Bwb,GAC9BpD,GAAoBvX,GACbhZ,GAAY,CACjBrK,IAAK,wBACLgP,KAAM,CACJqU,YAAaA,EACb9Z,SAAUA,GACV00B,KAAMD,EACNE,MAAOnc,OA2JXc,uBAhJ6B,SAACrN,GAAiC,IAArBuqB,EAAoB,uDAAT,KAKrD,OAJiB,OAAbA,GACFzd,GAAwB9M,GAE1BgC,GAAuB,MAChBnN,GAAY,CACjBrK,IAAK,2BACLgP,KAAM,CAAEwG,WAAYA,MA0ItBmS,cA3SoB,SAACqW,GACrBrI,GAAc,MACdtrB,GAAY,CACVrK,IAAK,iBACLgP,KAAM,CAAE4N,IAAKvT,GAAe40B,KAAMD,EAASE,MAAO1W,MAEpD2S,GAAwB6D,IAsSxBpW,eA9RqB,SAAC7W,GACtB4kB,GAAc,MACdtrB,GAAY,CACVrK,IAAK,kBACLgP,KAAM,CACJ4N,IAAKvT,GACL0H,SACAktB,KAAM,EACNC,MAAO1W,MAGX2S,GAAwB,IAoRxBvmB,mBACAU,iBA7OuB,SAACvD,GACxBkqB,GAAsBlqB,GACtB6C,GAAgB,EAAG7C,IA4OnBmI,UAxNgB,SAAC8kB,GACjBnI,GAAU,MACVxrB,GAAY,CACVrK,IAAK,aACLgP,KAAM,CACJivB,KAAMD,EACNE,MAAOjlB,GACP2D,IAAKvT,GACLE,SAAUA,MAGd8wB,GAAoB2D,IA8MpB7hB,kBAxdwB,SAAC6jB,EAAc1tB,GACvC,IAKE2tB,EAJY,IAAIpjB,KAAKC,aAAaxK,EAAQ,CACxCnN,MAAO,WACP2Z,SAAU,QAEYohB,cALhB,YAMRC,EAAQ,GACRC,EAAU,GACVthB,EAAW,GAmBb,OAhBAmhB,EAAYI,SAAQ,SAAUhV,GAC5B,OAAQA,EAAE3kB,MACR,IAAK,QACHy5B,EAAQ9U,EAAEloB,MACV,MACF,IAAK,UACHi9B,EAAU/U,EAAEloB,MACZ,MACF,IAAK,WACH2b,EAAWuM,EAAEloB,UAOZw7B,WACLqB,EACGM,QAAQ,IAAI5jB,OAAO,KAAOyjB,EAAO,KAAM,IACvCG,QAAQ,IAAI5jB,OAAO,KAAO0jB,GAAU,KACpCE,QAAQ,IAAI5jB,OAAO,KAAOoC,EAAU,KAAM,MAyb/C3U,WA9CiB,WACjB,MAAO,OA8CPC,aA3CmB,WACnB,MAAO,WAoDTpJ,EAAKu/B,GAAG,mBAAmB,SAAU5P,GACnCoD,GAAYpD,MAOd,IAqGM1Q,GAAU,CACd7Z,iBACAC,iBACA6D,mBACAuW,oBAtB0B,CAC1B0R,WApFiB,SAACsN,GAClB7lB,GAAc6lB,IAoFde,SArDe,SAACxxB,GAChB,OAAO3E,GAAY,CAAErK,IAAK,gBAAiBgP,UAqD3Cyb,iBAlDuB,WAEvB2O,GAAc,GACdxf,GAAc,cAgDd8T,qBAzC2B,SAAChtB,GAE5By6B,GAAgBz6B,IAwChB+/B,kBArCwB,aAsCxBC,WA9BiB,SAAC1xB,GAGlB3E,GAAY2E,IA4BZojB,eAtFqB,WAErB,IAAIpjB,EAAO,CACXA,QAAe,SACfA,EAAKoE,SAAWA,EF/7CQ,SAACpE,EAAM6hB,GAA4B,IAAnBtvB,EAAkB,wDAExDA,GAAOkG,QAAQC,IAAR,yBAAsCsH,EAAM6hB,GAEvDkE,GAAOM,KAAP,gBAA6B,CAC3BrmB,KAAMA,EACN6hB,QAASA,EACT7wB,IAAK,kBEy7CL2gC,CAAa3xB,EAAM6hB,EAAStvB,GAC5Bi4B,GAA0B,IAiF1BlC,aA9EmB,WAEnBjtB,GAAY,CAAErK,IAAK,cAAegP,KAAM,KAExC,IAAIA,EAAO,CACXA,QAAe,OACfA,EAAKoE,SAAWA,EF97CM,SAACpE,EAAM6hB,GAA4B,IAAnBtvB,EAAkB,wDACtDA,GAAOkG,QAAQC,IAAR,uBAAoCsH,EAAM6hB,GACrDkE,GAAOM,KAAP,cAA2B,CAEzBrmB,KAAMA,EAEN6hB,QAASA,EACT7wB,IAAK,gBEw7CL4gC,CAAW5xB,EAAM6hB,EAAStvB,GAC1Bi4B,GAA0B,IAuE1BqH,eApEqB,WACrBpL,EAAWkE,gBAoEXnZ,sBA5B4B,SAACxR,GAC7B3E,GAAY2E,IA4BZglB,SAzBe,WACfzxB,OAAOQ,aAAa+9B,QACpB3K,IAAY,IAwBZ/F,aAnBmB,WAAkB,IAAjB1pB,EAAgB,uDAAT,KAC3Bi2B,GAAYj2B,MAuDd,OFniDuB,SAACokB,GAAc,IAAD,EACGjoB,mBAAS,MADZ,mBAC9Bk+B,EAD8B,KAChBC,EADgB,KAGrCjM,GAAOwL,GAAP,kBAA4B,SAACvxB,GAC3BgyB,EAAgBhyB,MAGlB3L,qBAAU,WACa,OAAjB09B,GAEJjW,EAASiW,KAER,CAACA,IEmgDJE,EAAU,SAACjyB,GACTwqB,GAA0B,GAC1BhI,GAAmB,GACnB2K,GAAoB,CAClB34B,KAAMwL,EACNiR,QAASA,QFrgDgB,SAAC6K,EAAU1X,GACxC/P,qBAAU,WAQR0xB,GAAOwL,GAAG,iBAAiB,WACzBzV,EACE,CACE9G,OAAQ,QACRhkB,IAAK,gBACLo8B,QAAS,GACT70B,MAAO,CAAE/G,KAAM,UAEjB,MAGJu0B,GAAOwL,GAAG,mBAAmB,SAACr6B,GAC5B4kB,EACE,CACE9G,OAAQ,QACRhkB,IAAK,kBACLo8B,QAAS,GACT70B,MAAO,CAAE/G,KAAM,kBAAmB0F,aAEpC,MAGJ6uB,GAAOwL,GAAG,mBAAmB,SAACh5B,GAC5BujB,EACE,CACE9G,OAAQ,QACRhkB,IAAK,kBACLo8B,QAAS,GACT70B,MAAO,CAAE/G,KAAM+G,EAAMb,KAAMa,WAE7B,MAGJwtB,GAAOwL,GAAG,oBAAoB,WAE5BzV,EACE,CACE9G,OAAQ,QACRhkB,IAAK,mBACLo8B,QAAS,GACT70B,MAAO,CAAE/G,KAAM,sBAEjB,MAGJu0B,GAAOwL,GAAG,SAAS,SAACh5B,GAClBujB,EACE,CACE9G,OAAQ,QACRhkB,IAAK,QACLo8B,QAAS,GACT70B,MAAO,CAAE/G,KAAM,QAAS+G,WAE1B,MAOJwtB,GAAOwL,GAAG,QAAQ,eAGlBxL,GAAOwL,GAAG,QAAQ,SAACW,OAInBnM,GAAOwL,GAAG,cAAc,SAACY,GACR,yBAAXA,GAEFpM,GAAOE,UAMTnK,EAAS,CAAE9qB,IAAK,aAAcgkB,OAAQ,UAAWmd,WAAU,MAE7DpM,GAAOwL,GAAG,aAAa,SAACa,GAEtBtW,EAAS,CAAE9qB,IAAK,YAAagkB,OAAQ,UAAWod,kBAAiB,MAEnErM,GAAOwL,GAAG,qBAAqB,SAACa,GAC9BtW,EACE,CAAE9qB,IAAK,oBAAqBgkB,OAAQ,WAAYod,kBAChD,MAGJrM,GAAOwL,GAAG,gBAAgB,SAACa,GACzBtW,EACE,CAAE9qB,IAAK,eAAgBgkB,OAAQ,WAAYod,kBAC3C,QAGH,CAAChuB,IEk6CJiuB,EAAgB,SAACryB,GACfytB,GAAsB,CACpBj5B,KAAMwL,EACNiR,QAASA,OAEV7M,GAMgB,iBAAflP,EAAM4gB,MACH+U,IAAgBt4B,EACZ,kBAAC,GAAS0e,IAEV,kBAAC,GAAiBA,IAGpB,kBAAC,GAAsBA,KK1lDnB,I,OAAA,WAEb,OACE,oCACE,yBAAK3b,UAAU,aACb,yBAAKA,UAAU,sBC2BM,OATT,SAACs5B,GACnB,IAAMC,EAAct7B,OAAOC,SAASuO,OAEpC,OADkB,IAAI+sB,gBAAgBD,GACrBE,IAAIH,GAMnBlK,CAAY,WACdnxB,OAAOQ,aAAa+9B,QACpBr5B,QAAQC,IAAI,0BAOd,IAAM45B,GAAOpmB,SAASqmB,eAAe,QAC/BC,GAAetmB,SAASqmB,eAAe,gBACzCD,IACFG,IAASC,OACP,kBAAC,WAAD,CAAUC,SAAU,kBAAC,GAAD,OAClB,kBAAC,EAAD,KACE,kBAACC,GAAD,CAAY9c,KAAO0c,GAAoB,eAAL,OAGtCF,M","file":"static/js/main.84aff00c.chunk.js","sourcesContent":["var map = {\n\t\"./document.css\": [\n\t\t267,\n\t\t7,\n\t\t7\n\t],\n\t\"./en/PrivacyPolicy\": [\n\t\t192,\n\t\t9,\n\t\t0\n\t],\n\t\"./en/PrivacyPolicy.js\": [\n\t\t192,\n\t\t9,\n\t\t0\n\t],\n\t\"./en/UserAgreement\": [\n\t\t193,\n\t\t9,\n\t\t1\n\t],\n\t\"./en/UserAgreement.js\": [\n\t\t193,\n\t\t9,\n\t\t1\n\t],\n\t\"./lv/PrivacyPolicy\": [\n\t\t194,\n\t\t9,\n\t\t2\n\t],\n\t\"./lv/PrivacyPolicy.js\": [\n\t\t194,\n\t\t9,\n\t\t2\n\t],\n\t\"./lv/UserAgreement\": [\n\t\t195,\n\t\t9,\n\t\t3\n\t],\n\t\"./lv/UserAgreement.js\": [\n\t\t195,\n\t\t9,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 215;\nmodule.exports = webpackAsyncContext;","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n// not like to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    // lng: \"lv\",\r\n    // ns: [\"LogIn\", \"SignUp\"],\r\n    defaultNS: \"Default\",\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: \"languageChanged loaded\",\r\n      bindStore: \"added removed\",\r\n      nsMode: \"default\",\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","const dev = {\r\n  uri: {\r\n    ENDPOINT: \"http://localhost:9000\",\r\n    SITEMODE: \"DEVELOPMENT\",\r\n    // ENDPOINT: \"http://192.168.2.100:9000\"\r\n  },\r\n};\r\n\r\nconst dev2 = {\r\n  uri: {\r\n    ENDPOINT: \"http://192.168.2.100:5000\",\r\n    SITEMODE: \"DEVELOPMENT2\",\r\n  },\r\n};\r\n\r\nconst staging = {\r\n  uri: {\r\n    ENDPOINT: \"https://dev.local-currency.com\",\r\n    SITEMODE: \"STAGING\",\r\n  },\r\n};\r\n\r\nconst prod = {\r\n  uri: {\r\n    ENDPOINT: \"https://local-currency.com\",\r\n    SITEMODE: \"PRODUCTION\",\r\n  },\r\n};\r\n\r\nconst hostname = window && window.location && window.location.hostname;\r\n\r\nlet config;\r\nswitch (hostname) {\r\n  case \"localhost\":\r\n    config = dev;\r\n    break;\r\n  case \"192.168.2.100\":\r\n    config = dev2;\r\n    break;\r\n  case \"dev.local-currency.com\":\r\n    config = staging;\r\n    break;\r\n  case \"local-currency.com\":\r\n    config = prod;\r\n    break;\r\n  default:\r\n    config = dev;\r\n    break;\r\n}\r\n\r\nexport default {\r\n  ...config,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nexport const useStickyState = (defaultValue, key) => {\r\n  const [value, setValue] = useState(() => {\r\n    const stickyValue = window.localStorage.getItem(key);\r\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n  return [value, setValue];\r\n};\r\n","import \"./Card.css\";\r\nimport React, { cloneElement } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n// import { Container, Row, Col, Button } from \"react-bootstrap\";\r\n// import Button from \"react-bootstrap/Button\";\r\n\r\nexport default (args) => {\r\n  let defaults = {\r\n    title: \"Untitled\",\r\n    navigation: undefined,\r\n    footer: undefined,\r\n    header: true,\r\n    body: true,\r\n    headerContent: null,\r\n    onNavigationClick: () => {},\r\n  };\r\n  let props = Object.assign(defaults, args);\r\n\r\n  let key = 0;\r\n\r\n  let footer = props.footer ? <Card.Footer>{props.footer}</Card.Footer> : \"\";\r\n\r\n  return (\r\n    <Card>\r\n      {/* <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" /> */}\r\n      {props.header && (\r\n        <Card.Header className=\"custom-card\">\r\n          {props.headerContent !== null ? (\r\n            props.headerContent\r\n          ) : (\r\n            <>\r\n              {props.title.length > 0 && <Card.Title>{props.title}</Card.Title>}\r\n              <Nav\r\n                variant=\"tabs\"\r\n                defaultActiveKey={props.navigationdefaultActiveKey}\r\n              >\r\n                {props.navigation &&\r\n                  props.navigation.map((item, key) => (\r\n                    <Nav.Item key={key}>\r\n                      <Nav.Link\r\n                        className=\"custom-card\"\r\n                        href={item.link}\r\n                        onClick={() => props.onNavigationClick(item.link)}\r\n                        style={{ color: \"black\" }}\r\n                      >\r\n                        {item.name}\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  ))}\r\n              </Nav>\r\n            </>\r\n          )}\r\n        </Card.Header>\r\n      )}\r\n\r\n      {props.body && (\r\n        <Card.Body className=\"custom-card\">\r\n          {React.Children.map(args.children, (child) => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                styles: null,\r\n                key: key,\r\n              });\r\n            }\r\n          })}\r\n        </Card.Body>\r\n      )}\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    caption: \"Submit\",\r\n    request: null,\r\n    namespace: \"Button\",\r\n    visible: true,\r\n    marginTop: 0,\r\n    timeout: 15000, // milliseconds\r\n    onSubmit: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { request } = props.barrelGetters;\r\n  const { setError, setInfo } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const [requestExpired] = useState(false);\r\n\r\n  const onSubmit = () => {\r\n    setError(null);\r\n    setInfo(null);\r\n    props.onSubmit();\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return !props.visible ? (\r\n      <></>\r\n    ) : (\r\n      <Button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        block\r\n        disabled={request === props.request && !requestExpired}\r\n        style={{ marginTop: props.marginTop + \"px\" }}\r\n      >\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={request !== props.request || requestExpired}\r\n        />\r\n        &nbsp;\r\n        {props.caption}\r\n        &nbsp;\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","import React from \"react\";\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n    console.log(\"Error boundary:\", error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      //   return <h1>Something went wrong.</h1>;\r\n      return <></>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Modal, Navbar, Nav } from \"react-bootstrap\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ModalMessage\",\r\n    centered: true,\r\n    message: \"\",\r\n    title: null,\r\n    footer: null,\r\n    // bodyStyle: { padding: \"1rem\" },\r\n    onHide: () => {},\r\n    size: \"sm\",\r\n    file: null,\r\n    backdrop: true, // \"static\"\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const ExternalFile =\r\n    props.file !== null\r\n      ? React.lazy(() => import(`../locale/${props.file}`))\r\n      : \"\";\r\n\r\n  // async function loadExternalFile() {\r\n  //   await React.preloadLazy(ExternalFile);\r\n  // }\r\n\r\n  // loadExternalFile();\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size={props.size}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered={props.centered}\r\n        backdrop={props.backdrop}\r\n      >\r\n        {props.title !== null && (\r\n          <Modal.Header closeButton>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src=\"gfx/zlogo_light.png\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  alt=\"\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                  {props.title}\r\n                </Modal.Title>\r\n              </Nav>\r\n            </Navbar>\r\n          </Modal.Header>\r\n        )}\r\n        <Modal.Body\r\n          style={{ maxHeight: \"calc(100vh - 210px)\", overflowY: \"auto\" }}\r\n        >\r\n          {props.message !== \"\" ? (\r\n            props.message\r\n          ) : (\r\n            <ErrorBoundary>\r\n              <ExternalFile />\r\n            </ErrorBoundary>\r\n          )}\r\n        </Modal.Body>\r\n        {props.footer !== null && (\r\n          <Modal.Footer>\r\n            <Button block onClick={props.onHide}>\r\n              {t(\"Close\")}\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","// System CSS\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// System imports\r\nimport React from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, Alert, Col } from \"react-bootstrap\";\r\n// import { Redirect } from \"react-router-dom\";\r\n// import ChevronRight from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\r\n// import moment from \"moment-timezone\";\r\n// import DatePicker from \"react-datepicker\";\r\n// import { Today } from \"@material-ui/icons\";\r\n// import { Today } from \"@material-ui/icons\";\r\n// import DatePicker from \"react-date-picker\";\r\n// import MomentUtils from \"@date-io/moment\";\r\n// import { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n// import { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n// import _ from \"lodash\";\r\n\r\n// User imports\r\nimport Card from \"../card\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n// import Dropzone from \"../dropzone\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport ModalMessage from \"../modalMessage\";\r\n// import { useStickyState } from \"../../utils/state\";\r\nimport timezones from \"./timezones.en.json\";\r\n\r\n// const UserAgreement = React.lazy(() => import(\"../locale/en/UserAgreement\"));\r\n\r\nexport default (args) => {\r\n  // console.log(\"ACCOUNT REGISTRATION ARGS:\", args);\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"get user sequence\", // \"register account\",\r\n    namespace: \"AccountRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    signedIn,\r\n    accountNumber,\r\n    // accountPhotoPath,\r\n    userData,\r\n    language,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    debug,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    // formatDate,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [userAgreementShow, setUserAgreementShow] = useStickyState(\r\n    false,\r\n    \"userAgreementShow\"\r\n  );\r\n  const [privacyPolicyShow, setPrivacyPolicyShow] = useStickyState(\r\n    false,\r\n    \"privacyPolicyShow\"\r\n  );\r\n\r\n  // const [offsetList, setOffsetList] = useStickyState(null, \"offsetList\");\r\n  // const [calenarVisible, setCalenarVisible] = useState(false);\r\n  // const [birthDateError, setBirthDateError] = useState(\"\");\r\n  // const [birthDate, setBirthDate] = useState(\"\");\r\n\r\n  // const [birthYear, setBirthYear] = useState(\"\");\r\n  // const [birthMonth, setBirthMonth] = useState(\"\");\r\n  // const [birthDay, setBirthDay] = useState(\"\");\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    // dropzoneHook: yup.string().required(t(\"Photo ID is required\")),\r\n    // dropzoneHook: yup.string().optional(),\r\n    // terms: yup.array().required(t(\"Terms is required\")),\r\n    timezone: yup.string().required(t(\"Timezone at birth is required\")),\r\n    birthYear: yup.number().required(t(\"Year is required\")),\r\n    birthMonth: yup.number().required(t(\"Month is required\")),\r\n    birthDay: yup.number().required(t(\"Day is required\")),\r\n    // birthDateHook: yup.string().required(t(\"Birth date is required\")).length(5),\r\n    // birthDate: yup\r\n    //   .string()\r\n    //   .required(t(\"Date of birth is required\"))\r\n    //   // .max(new Date(), t(\"Date of birth must be today or earlier\"))\r\n    //   // .string()\r\n    //   .matches(new RegExp(t(\"Date Regex\")), t(\"Wrong date format\")),\r\n\r\n    // .test({\r\n    //   name: \"regex\",\r\n    //   exclusive: true,\r\n    //   params: {},\r\n    //   message: t(\"Date must be valid\"),\r\n    //   test: (value) => {\r\n    //     if (typeof value === \"undefined\") return false;\r\n\r\n    //     // return Date.parse(value);\r\n    //     return value !== \"error\";\r\n\r\n    //     console.log(\"TEST\");\r\n\r\n    //     // Test regex\r\n    //     // if (!RegExp(t(\"Date Regex\")).test(value)) return false;\r\n\r\n    //     let date2en;\r\n    //     try {\r\n    //       date2en = formatDate(\r\n    //         value,\r\n    //         { month: \"numeric\", day: \"numeric\", year: \"numeric\" },\r\n    //         false,\r\n    //         \"en-US\"\r\n    //       );\r\n    //     } catch (error) {\r\n    //       console.log(\"error\", error);\r\n    //       return false;\r\n    //     }\r\n\r\n    //     // // console.log(\"date2en\", date2en);\r\n    //     // console.log(\"date2en\", date2en);\r\n\r\n    //     // // console.log(\"IS DATE\", _.isDate(new Date(date2en)));\r\n    //     // console.log(\"IS DATE\", _.isDate(new Date(date2en)));\r\n\r\n    //     return true;\r\n    //   },\r\n    // }),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  /**\r\n   * Send account registration request\r\n   * @param {object} data\r\n   */\r\n  const sendAccountRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.email = userData.email;\r\n\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    delete data.birthYear;\r\n    delete data.birthMonth;\r\n    delete data.birthDay;\r\n\r\n    const newDate = composeDate(userBirthYear, userBirthMonth, userBirthDay);\r\n    data.birthDate = newDate;\r\n\r\n    if (newDate !== \"\") {\r\n      // console.log(data);\r\n      if (sendAccountRegistrationRequest(data)) {\r\n        // Account registration request was submitted\r\n      }\r\n    }\r\n  };\r\n\r\n  // const timezones = 1;\r\n  // const timezones_sorted = timezones.sort((a, b) =>\r\n  //   (a.Offset + 12) % 24 > (b.Offset + 12) % 24\r\n  //     ? 1\r\n  //     : (a.Offset + 12) % 24 === (b.Offset + 12) % 24\r\n  //     ? a.Name > b.Name\r\n  //       ? 1\r\n  //       : -1\r\n  //     : -1\r\n  // );\r\n\r\n  const timezones_sorted = timezones;\r\n\r\n  const isValidDate = (dateString) => {\r\n    let dateformat = /^(0?[1-9]|1[0-2])[\\/](0?[1-9]|[1-2][0-9]|3[01])[\\/]\\d{4}$/;\r\n\r\n    // Match the date format through regular expression\r\n    if (dateString.match(dateformat)) {\r\n      let operator = dateString.split(\"/\");\r\n\r\n      // Extract the string into month, date and year\r\n      let datepart = [];\r\n      if (operator.length > 1) {\r\n        datepart = dateString.split(\"/\");\r\n      }\r\n      let month = parseInt(datepart[0]);\r\n      let day = parseInt(datepart[1]);\r\n      let year = parseInt(datepart[2]);\r\n\r\n      // Create list of days of a month\r\n      let ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n      if (month === 1 || month > 2) {\r\n        if (day > ListofDays[month - 1]) {\r\n          ///This check is for Confirming that the date is not out of its range\r\n          return false;\r\n        }\r\n      } else if (month === 2) {\r\n        let leapYear = false;\r\n        if ((!(year % 4) && year % 100) || !(year % 400)) {\r\n          leapYear = true;\r\n        }\r\n        if (leapYear === false && day >= 29) {\r\n          return false;\r\n        } else if (leapYear === true && day > 29) {\r\n          // console.log(\"Invalid date format!\");\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      // console.log(\"Invalid date format!\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const composeDate = (year, month, day) => {\r\n    // console.log(year, month, day);\r\n    const newDate = `${month}/${day}/${year}`;\r\n    // const newDate = `${year}-${month}-${day}`;\r\n    if (isValidDate(newDate)) {\r\n      // setBirthDateComposed(newDate);\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        // console.log(\"ok\");\r\n        setUserBirthDateError(\"\");\r\n        // setBirthDate(newDate);\r\n\r\n        // return \"ok\";\r\n        return newDate;\r\n      } else {\r\n        // console.log(\"incomplete\");\r\n        setUserBirthDateError(\"\");\r\n        // return \"incomplete\";\r\n        return \"\";\r\n      }\r\n    } else {\r\n      // setBirthDateComposed(\"error\");\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        // console.log(\"error\");\r\n        setUserBirthDateError(t(\"Date must be valid\"));\r\n        // return \"error\";\r\n        return \"\";\r\n      } else {\r\n        // console.log(\"incomplete\");\r\n        setUserBirthDateError(\"\");\r\n        // return \"incomplete\";\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  // let timeZoneID = 0;\r\n  // let prevTimeZoneID = 0;\r\n  const yearNow = new Date().getFullYear();\r\n\r\n  const AccountRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    setFieldValue,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Form.Row style={{ margin: \"0 0\" }}>\r\n        <Form.Group\r\n          as={Col}\r\n          controlId=\"formGridDateOfBirth\"\r\n          style={{ margin: \"0 0\" }}\r\n        >\r\n          <Form.Label>{t(\"Date of birth\")}</Form.Label>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridYear\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthYear\"\r\n            value={values.birthYear}\r\n            // autoFocus\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthYear(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthYear && touched.birthYear}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Year\")}\r\n            </option>\r\n            {Array.from(Array(120).keys()).map((key) => {\r\n              let year = yearNow - key;\r\n\r\n              return (\r\n                <option key={key} value={year}>\r\n                  {year}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthYear}\r\n          </Form.Control.Feedback>\r\n          <div className=\"invalid-feedback-custom\">{userBirthDateError}</div>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridMonth\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthMonth\"\r\n            value={values.birthMonth}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthMonth(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthMonth && touched.birthMonth}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Month\")}\r\n            </option>\r\n            {Array.from(Array(12).keys()).map((key) => {\r\n              let date = new Date(`${key + 1}/1/1970`);\r\n              let monthName = date.toLocaleString(language, { month: \"long\" });\r\n              let monthNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={monthNumber}>\r\n                  {monthNumber} - {monthName}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthMonth}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridDay\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthDay\"\r\n            value={values.birthDay}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthDay(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthDay && touched.birthDay}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Day\")}\r\n            </option>\r\n            {Array.from(Array(31).keys()).map((key) => {\r\n              let dayNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={dayNumber}>\r\n                  {dayNumber}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthDay}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Group controlId=\"validationFormikTimezone\">\r\n        <Form.Label>{t(\"Timezone at birth\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          custom\r\n          name=\"timezone\"\r\n          value={values.timezone}\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n            setUserTimezone(e.target.value);\r\n          }}\r\n          isInvalid={!!errors.timezone && touched.timezone}\r\n        >\r\n          <option value=\"\">{t(\"Choose...\")}</option>\r\n          {timezones_sorted.map((element, key) => (\r\n            <option\r\n              key={key}\r\n              value={`${(((element.Offset + 12) % 24) + 1)\r\n                .toString()\r\n                .padStart(2, \"0\")} - ${element.Name}`}\r\n            >\r\n              {element.Name}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.timezone}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <div style={{ paddingBottom: \"10px\" }}>\r\n        {t(\"Agree to terms and conditions\")}\r\n      </div>\r\n\r\n      <Trans i18nKey=\"AccountRegistration:The User Agreement and the Privacy Policy\">\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setUserAgreementShow(true)}>\r\n          User Agreement\r\n        </a>\r\n\r\n        <br />\r\n\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setPrivacyPolicyShow(true)}>\r\n          Privacy Policy\r\n        </a>\r\n      </Trans>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  if (signedIn === false)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"User not logged in\")}</Alert.Heading>\r\n          <p>\r\n            <Trans i18nKey=\"AccountRegistration:Please log in first\">\r\n              Please log in first.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  if (!debug && accountNumber !== null)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"Account successfully registered\")}</Alert.Heading>\r\n          <p>\r\n            <Trans\r\n              i18nKey=\"AccountRegistration:Account with your personal ID successfully registered\"\r\n              accountNumber={accountNumber}\r\n            >\r\n              Account with the personal ID\r\n              <strong>{{ accountNumber }}</strong>\r\n              successfully registered.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        show={userAgreementShow}\r\n        file={`${language}/UserAgreement`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"User Agreement\")}\r\n        footer=\"\"\r\n        onHide={() => setUserAgreementShow(false)}\r\n      />\r\n\r\n      <ModalMessage\r\n        show={privacyPolicyShow}\r\n        file={`${language}/PrivacyPolicy`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"Privacy Policy\")}\r\n        footer=\"\"\r\n        onHide={() => setPrivacyPolicyShow(false)}\r\n      />\r\n\r\n      <Card title={t(\"Open account\")}>\r\n        <Formik\r\n          component={AccountRegistrationForm}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            // personalID: \"\",\r\n            // terms: \"\",\r\n            // dropzoneHook: accountPhotoPath,\r\n            timezone: userTimezone,\r\n            // birthDate: \"\",\r\n            birthYear: userBirthYear,\r\n            birthMonth: userBirthMonth,\r\n            birthDay: userBirthDay,\r\n            // birthDateHook: \"\",\r\n          }}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Pagination\",\r\n    size: \"md\",\r\n    countItems: 0,\r\n    itemsPerPage: 5,\r\n    active: 0, // active page\r\n    onClick: () => {},\r\n    align: \"center\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const pages = Math.ceil(props.countItems / props.itemsPerPage);\r\n\r\n  if (pages < 2) return <></>;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  const onClick = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = props.active > 1 ? props.active - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          props.active < Math.ceil(props.countItems / props.itemsPerPage)\r\n            ? props.active + 1\r\n            : Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // getBusinesses(number);\r\n    props.onClick(number);\r\n  };\r\n\r\n  const getPages = () => {\r\n    let items = [];\r\n    for (let number = 1; number <= pages; number++) {\r\n      if (\r\n        number === 1 ||\r\n        number === pages ||\r\n        (number >= props.active - 1 && number <= props.active + 1)\r\n      ) {\r\n        items.push(\r\n          <Pagination.Item\r\n            key={number}\r\n            active={number === props.active}\r\n            onClick={() => onClick(number)}\r\n          >\r\n            {number}\r\n          </Pagination.Item>\r\n        );\r\n      } else if (number === 2 || number === pages - 1) {\r\n        items.push(<Pagination.Ellipsis key={number} disabled />);\r\n      }\r\n    }\r\n    return items;\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const { align } = props;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: `${align}`,\r\n          // backgroundColor: \"red\",\r\n        }}\r\n      >\r\n        <span style={{ display: \"inline-block\" }}>\r\n          <Pagination size={props.size} style={{ padding: 0, margin: 0 }}>\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.First onClick={() => props.onClick(\"First\")} />\r\n                <Pagination.Prev onClick={() => props.onClick(\"Prev\")} />\r\n              </>\r\n            )}\r\n\r\n            {getPages()}\r\n\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.Next onClick={() => props.onClick(\"Next\")} />\r\n                <Pagination.Last onClick={() => props.onClick(\"Last\")} />\r\n              </>\r\n            )}\r\n          </Pagination>\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"react-calendar/dist/Calendar.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Col, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search as SearchIcon, Replay as ReplayIcon } from \"@material-ui/icons\";\r\n// import Autosuggest from \"react-autosuggest\";\r\n// import Calendar from \"react-calendar\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n// import DatePicker from \"../datePicker\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Search\",\r\n    request: \"find currencies\",\r\n    advancedSearch: false,\r\n    placeholder: \"SEARCH...\",\r\n    captionAdvancedSearch: \"Advanced search\",\r\n    onSubmit: () => {},\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { search } = props.barrelGetters;\r\n  const { setSearch } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /** \r\n    * Hooks\r\n    ============================================================================ */\r\n  // const [suggestions, setSuggestions] = useStickyState([], \"suggestions\");\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  const refSearch = React.createRef();\r\n\r\n  /**\r\n    * Clear refs\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    const tempRefSearch = refSearch.current;\r\n    return () => {\r\n      if (tempRefSearch !== null && search !== tempRefSearch.value)\r\n        setSearch(tempRefSearch.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    search: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    // findCurrencies(data.search);\r\n    props.onSubmit(data.search);\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * Search\r\n         */}\r\n        <Form.Group\r\n          controlId=\"validationFormikSearch\"\r\n          style={{ padding: 0, margin: 0 }}\r\n        >\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={props.placeholder}\r\n              name=\"search\"\r\n              ref={refSearch}\r\n              value={values.search}\r\n              autoComplete=\"search\"\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.search && touched.search}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text\r\n                id=\"inputGroupAppend\"\r\n                onClick={() => onSubmit(values)}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <SearchIcon style={{ color: \"var(--dark)\" }} />\r\n              </InputGroup.Text>\r\n            </InputGroup.Append>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.search}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n          {props.advancedSearch && (\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <button\r\n                className=\"button-transparent\"\r\n                style={{ margin: \"0\", padding: \"0\" }}\r\n              >\r\n                <small className=\"text-muted\">\r\n                  {props.captionAdvancedSearch}\r\n                </small>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        search: search,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport flatpickr from \"flatpickr\";\r\n// import { Latvian } from \"flatpickr/dist/l10n/lv.js\";\r\nimport * as language from \"flatpickr/dist/l10n\"; // DO NOT REMOVE !!!\r\nimport { DateRange } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DatePickerWrapper\",\r\n    request: \"get something\",\r\n    value: \"\",\r\n    placeholder: \"Date\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  const refDatePicker = React.createRef();\r\n\r\n  /**\r\n    * States\r\n    ============================================================================ */\r\n  // const [isOpen, setIsOpen] = useState(false);\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  let fp = null; // flatPicker instance\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    fp = flatpickr(refDatePicker.current, props.options);\r\n\r\n    return () => {\r\n      // on unmount\r\n      fp.destroy();\r\n      fp = null;\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (fp === null) return;\r\n\r\n  //   console.log(\"isOpen:\", isOpen);\r\n\r\n  //   // isOpen ? fp.open() : fp.close();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [isOpen]);\r\n\r\n  // useEffect(() => {\r\n  //   if (fp !== null) return;\r\n\r\n  //   fp = flatpickr(refDatePicker.current, props.options);\r\n\r\n  //   // eslint-disable-next-line\r\n  // });\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    datePicker: yup.string().required(t(\"Date is required\")),\r\n  });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <InputGroup>\r\n      <Form.Control\r\n        type=\"string\"\r\n        placeholder={props.placeholder}\r\n        aria-describedby=\"inputGroupPrepend\"\r\n        ref={refDatePicker}\r\n        name=\"datePicker\"\r\n        autoComplete=\"off\"\r\n        value={values.datePicker}\r\n        onChange={handleChange}\r\n        isInvalid={!!errors.datePicker && touched.datePicker}\r\n      />\r\n      <InputGroup.Append>\r\n        <InputGroup.Text\r\n          onClick={() => {\r\n            // console.log(\"click\");\r\n            if (fp !== null) fp.open();\r\n\r\n            // setIsOpen(!isOpen);\r\n          }}\r\n          style={{\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <DateRange style={{ color: \"var(--dark)\" }} />\r\n        </InputGroup.Text>\r\n      </InputGroup.Append>\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        {errors.datePicker}\r\n      </Form.Control.Feedback>\r\n    </InputGroup>\r\n  );\r\n\r\n  /**\r\n     * Formik return\r\n     ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        datePicker: props.value,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"flatpickr/dist/themes/material_green.css\";\r\nimport \"./DatePicker.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { Form, InputGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import Flatpickr from \"react-flatpickr\";\r\n// eslint-disable-next-line\r\n// import { Latvian } from \"flatpickr/dist/l10n/lv.js\";\r\n// import { DateRange } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\nimport Flatpickr from \"./DatePickerWrapper\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DatePicker\",\r\n    request: \"get something\",\r\n    value: \"\",\r\n    onChange: () => {},\r\n    placeholder: \"Date\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  // const [placeholder, setPlaceholder] = useState(props.placeholder);\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  // const refFlatpickr = React.createRef();\r\n\r\n  // Flatpickr(myElem, {\r\n  //   locale: Latvian, // locale for this instance only\r\n  // });\r\n\r\n  // Flatpickr.localize(Latvian);\r\n  // Flatpickr.localize(Flatpickr.l10ns.lv);\r\n  // flatpickr(\"mySelector\");\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  // const schema = yup.object({\r\n  //   dateStart: yup.string().required(t(\"Start date is required\")),\r\n  // });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  // const onSubmit = (data) => {\r\n  //   console.log(data);\r\n  // };\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <Flatpickr\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      options={{\r\n        locale: language,\r\n        showMonths: 1,\r\n        inline: false,\r\n        shorthandCurrentMonth: false,\r\n        allowInput: true,\r\n        clickOpens: false,\r\n        monthSelectorType: \"static\",\r\n        altInput: true,\r\n        altFormat: t(\"Y-m-d\"),\r\n        dateFormat: \"Y-m-d\", // \"d.m.Y\",\r\n        // dateFormat: \"Y-m-d\",\r\n        // minDate: new Date().fp_incr(-7),\r\n        maxDate: \"today\",\r\n        // mode: \"range\",\r\n        defaultDate: props.value,\r\n        onChange: function (selectedDates, dateStr, instance) {\r\n          console.log(selectedDates, dateStr, instance);\r\n          props.onChange(dateStr);\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"react-calendar/dist/Calendar.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Col, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search as SearchIcon, Replay as ReplayIcon } from \"@material-ui/icons\";\r\n// import Autosuggest from \"react-autosuggest\";\r\n// import Calendar from \"react-calendar\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n// import { useStickyState } from \"../../utils/state\";\r\nimport DatePicker from \"../datePicker\";\r\n// import SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DateRangePicker\",\r\n    request: \"find currencies\",\r\n    caption: \"Period of time\",\r\n    captionStartDate: \"Start date\",\r\n    captionEndDate: \"End date\",\r\n    captionUpdate: \"Update\",\r\n    onSubmit: () => {},\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { search, dateRangeStart, dateRangeEnd } = props.barrelGetters;\r\n  const { setSearch, setDateRangeStart, setDateRangeEnd } = props.barrelSetters;\r\n  const {\r\n    getTransactions,\r\n    formatDate,\r\n    clearRequestStatus,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /** \r\n     * Hooks\r\n     ============================================================================ */\r\n  // const [suggestions, setSuggestions] = useStickyState([], \"suggestions\");\r\n\r\n  /**\r\n     * Create refs\r\n     ============================================================================ */\r\n  const refSearch = React.createRef();\r\n  // const refDateRangeStart = React.createRef();\r\n  // const refDateRangeEnd = React.createRef();\r\n\r\n  // useEffect(() => {\r\n  //   const tempRefDateRangeStart = refDateRangeStart.current;\r\n  //   const tempRefDateRangeEnd = refDateRangeEnd.current;\r\n  //   return () => {\r\n  //     if (\r\n  //       tempRefDateRangeStart !== null &&\r\n  //       dateRangeStart !== tempRefDateRangeStart.value\r\n  //     )\r\n  //       setDateRangeStart(tempRefDateRangeStart.value);\r\n\r\n  //     if (\r\n  //       tempRefDateRangeEnd !== null &&\r\n  //       dateRangeEnd !== tempRefDateRangeEnd.value\r\n  //     )\r\n  //       setDateRangeEnd(tempRefDateRangeEnd.value);\r\n  //   };\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, []);\r\n\r\n  /**\r\n     * Clear refs\r\n     ============================================================================ */\r\n  useEffect(() => {\r\n    const tempRefSearch = refSearch.current;\r\n    return () => {\r\n      if (tempRefSearch !== null && search !== tempRefSearch.value)\r\n        setSearch(tempRefSearch.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    dateStart: yup.string().required(t(\"Date start is required\")),\r\n    dateEnd: yup.string().required(t(\"Date end is required\")),\r\n  });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = () => {\r\n    getTransactions(1);\r\n\r\n    // findCurrencies(data.search);\r\n    // props.onSubmit(data.search);\r\n  };\r\n\r\n  // const handleChange = (data) => {\r\n  //   console.log(data);\r\n  // };\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const DateRangePickerForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * Caption: Period of time\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          <Form.Group\r\n            as={Col}\r\n            controlId=\"formGridPeriodOfTime\"\r\n            style={{ margin: \"0\", padding: \"0 0\" }}\r\n          >\r\n            <Form.Label>{props.caption}</Form.Label>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        {/**\r\n         * Date start / Date end\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          {/**\r\n           * Date start\r\n           */}\r\n          <Form.Group\r\n            as={Col}\r\n            style={{ margin: \"0\", padding: \"0\" }}\r\n            controlId=\"validationFormikDateStart\"\r\n          >\r\n            <DatePicker\r\n              name=\"dateStart\"\r\n              value={values.dateStart}\r\n              onChange={(data) => {\r\n                // console.log(data);\r\n                setDateRangeStart(data);\r\n              }}\r\n              isInvalid={!!errors.dateStart && touched.dateStart}\r\n              placeholder={props.captionStartDate}\r\n              {...args}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.dateStart}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          {/**\r\n           * Dash\r\n           */}\r\n          <span style={{ margin: \"0\", padding: \"0.4rem 0.5rem\" }}>-</span>\r\n\r\n          {/**\r\n           * Date end\r\n           */}\r\n          <Form.Group\r\n            as={Col}\r\n            style={{ padding: \"0 0\" }}\r\n            controlId=\"validationFormikDateEnd\"\r\n          >\r\n            <DatePicker\r\n              name=\"dateEnd\"\r\n              value={values.dateEnd}\r\n              onChange={(data) => {\r\n                // console.log(data);\r\n                setDateRangeEnd(data);\r\n              }}\r\n              isInvalid={!!errors.dateEnd && touched.dateEnd}\r\n              placeholder={props.captionEndDate}\r\n              {...args}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.dateEnd}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        {/**\r\n         * Update\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onSubmit}\r\n            className=\"button-transparent\"\r\n            style={{ margin: \"-0.5rem 0 0 0\", padding: \"0\" }}\r\n          >\r\n            <ReplayIcon className=\"sm\" style={{ color: \"var(--dark)\" }} />\r\n            <span\r\n              style={{\r\n                margin: \"0 0.5rem\",\r\n              }}\r\n            >\r\n              {props.captionUpdate}\r\n            </span>\r\n          </button>\r\n        </Form.Row>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n     * Formik return\r\n     ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={DateRangePickerForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        dateStart: dateRangeStart,\r\n        dateEnd: dateRangeEnd,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { ListGroup, Badge } from \"react-bootstrap\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { ArrowRightAlt } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\nimport DateRangePicker from \"../dateRangePicker\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    request: \"get transactions\",\r\n    namespace: \"Transactions\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    transactions,\r\n    countTransactions,\r\n    activePageTransactions,\r\n    transactionsPerPage,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const {\r\n    getTransactions,\r\n    findTransactions,\r\n    showRequestStatus,\r\n    format,\r\n    formatDate,\r\n    formatPerCent,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageTransactions > 1 ? activePageTransactions - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageTransactions <\r\n          Math.ceil(countTransactions / transactionsPerPage)\r\n            ? activePageTransactions + 1\r\n            : Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getTransactions(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <Search\r\n          advancedSearch={false}\r\n          placeholder={t(\"Find transactions...\")}\r\n          captionAdvancedSearch={t(\"Advanced search\")}\r\n          onSubmit={findTransactions}\r\n          {...args}\r\n        />\r\n        <br />\r\n        <DateRangePicker\r\n          caption={t(\"Period of time\")}\r\n          captionStartDate={t(\"Start date\")}\r\n          captionEndDate={t(\"End date\")}\r\n          captionUpdate={t(\"Update\")}\r\n          {...args}\r\n        />\r\n      </div>\r\n      <ListGroup variant=\"flush\">\r\n        {transactions !== null &&\r\n          transactions.map((transaction, keyTransactions) => {\r\n            cnt++;\r\n\r\n            const {\r\n              // business_description,\r\n              // business_id,\r\n              // business_image,\r\n              // business_link,\r\n              // business_status,\r\n              business_title,\r\n              comment,\r\n              conv_amount,\r\n              created,\r\n              // currency,\r\n              // exchange_rate,\r\n              sender_firstname,\r\n              sender_lastname,\r\n              recipient_firstname,\r\n              recipient_lastname,\r\n              // purpose_description,\r\n              purpose_id,\r\n              // purpose_image,\r\n              // purpose_link,\r\n              // purpose_status,\r\n              purpose_title,\r\n              recipient_id,\r\n              roles,\r\n              share,\r\n              share_per_cent,\r\n              sender_id,\r\n              // sender_status,\r\n              // recipient_status,\r\n              from_account,\r\n              to_account,\r\n              type,\r\n            } = transaction;\r\n\r\n            const i_am_sender = sender_id === accountNumber;\r\n            const i_am_recipient = recipient_id === accountNumber;\r\n            const t_from_account = t(from_account);\r\n            const t_to_account = t(to_account);\r\n\r\n            const roles_available =\r\n              roles !== null && roles !== \"-\" && typeof roles !== \"undefined\";\r\n            const arrRoles = roles_available ? roles.split(\",\") : [];\r\n\r\n            const shares_available =\r\n              typeof share !== \"undefined\" && share !== null && share !== \"-\";\r\n\r\n            if (type === \"transfer U2S\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n\r\n                  <Trans\r\n                    i18nKey=\"Transactions:fromAccountToAccount\"\r\n                    t_from_account={t_from_account}\r\n                    t_to_account={t_to_account}\r\n                  >\r\n                    {{ t_from_account }}{\" \"}\r\n                    <ArrowRightAlt style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                    {{ t_to_account }}\r\n                  </Trans>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {i_am_recipient ? (\r\n                    <>\r\n                      {sender_firstname} {sender_lastname}\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {recipient_firstname} {recipient_lastname}\r\n                    </>\r\n                  )}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  {comment !== \"\" && <br />}\r\n                  {comment}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer V2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {t(\"Daily allowance\")}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2B\") {\r\n              const sender = !i_am_sender ? (\r\n                <>\r\n                  <br />\r\n                  {sender_firstname} {sender_lastname}\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              );\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {purpose_id}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  {business_title} &middot; {purpose_title}\r\n                  {sender}\r\n                  {roles_available && (\r\n                    <>\r\n                      <br />\r\n                      {arrRoles.map((role, key) => {\r\n                        return (\r\n                          <span key={key}>\r\n                            {\" \"}\r\n                            <Badge pill variant=\"secondary\">\r\n                              {role}\r\n                            </Badge>\r\n                          </span>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  )}{\" \"}\r\n                  {shares_available && (\r\n                    <>\r\n                      <br />\r\n                      {share} {t(\"shares\")} ({formatPerCent(share_per_cent)})\r\n                    </>\r\n                  )}\r\n                  {comment !== \"\" && <br />}\r\n                  {comment}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n\r\n              // TODO: check if this works\r\n            } else {\r\n              console.log(\"Unknown transfer type:\", type);\r\n\r\n              return <></>;\r\n            }\r\n          })}\r\n      </ListGroup>\r\n\r\n      {showRequestStatus(\r\n        \"get transactions / SELECT transactions\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No transactions\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <br />\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countTransactions}\r\n        itemsPerPage={transactionsPerPage}\r\n        active={activePageTransactions}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Toast, Badge } from \"react-bootstrap\";\r\nimport { Settings } from \"@material-ui/icons\";\r\nimport _ from \"lodash\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Shareholder\",\r\n    request: \"change share\",\r\n    purpose: null,\r\n    shareholder: null,\r\n    closeButton: true,\r\n    rangeControl: true,\r\n    sharePerCent: null,\r\n    businessTitle: null,\r\n    purposeTitle: null,\r\n    businessOwnerFirstname: null,\r\n    businessOwnerLastname: null,\r\n    sharesCreated: null,\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { purposeShareholders } = props.barrelGetters;\r\n  const { setPurposeShareholders } = props.barrelSetters;\r\n  const { sendRequest, formatPerCent, formatDate } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const [userQuery, setUserQuery] = useState(props.share);\r\n  const delayedQuery = useRef(_.debounce((q) => sendQuery(q), 2000)).current;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const onChange = (e) => {\r\n    setUserQuery(e.target.value);\r\n    delayedQuery(e.target.value);\r\n  };\r\n\r\n  const onClose = () => {\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    return sendRequest({ req: \"remove shareholder\", data });\r\n  };\r\n\r\n  const sendQuery = (delayedQuery) => {\r\n    const ps = purposeShareholders;\r\n    ps[props.id].share = delayedQuery;\r\n    setPurposeShareholders(JSON.stringify(ps));\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    data.share = delayedQuery;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const sharesLabelId = `sharesLabel${props.key}`;\r\n    return (\r\n      <Toast key={props.key} onClose={onClose} style={{ minWidth: \"100%\" }}>\r\n        <Toast.Header closeButton={props.closeButton}>\r\n          <strong className=\"mr-auto\">\r\n            {props.firstname} {props.lastname}{\" \"}\r\n            <small>\r\n              <Settings\r\n                hidden={true}\r\n                fontSize=\"small\"\r\n                style={{ color: \"var(--dark)\" }}\r\n              />\r\n            </small>\r\n          </strong>\r\n          <small>\r\n            <span id={sharesLabelId}>{userQuery}</span> {t(\"shares\")}\r\n          </small>\r\n        </Toast.Header>\r\n        <Toast.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formRoles\">\r\n              <div>\r\n                {props.roles.map((role, key) => {\r\n                  return (\r\n                    <span key={key}>\r\n                      <Badge pill variant=\"secondary\">\r\n                        {role}\r\n                      </Badge>{\" \"}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Form.Group>\r\n\r\n            {props.rangeControl && (\r\n              <Form.Group controlId=\"formBasicRange\">\r\n                <Form.Control\r\n                  type=\"range\"\r\n                  custom\r\n                  variant=\"light\"\r\n                  // value={share}\r\n                  defaultValue={userQuery}\r\n                  // value={userQuery}\r\n                  min={1}\r\n                  max={1000}\r\n                  step={1}\r\n                  // ref={this.input}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            )}\r\n          </Form>\r\n          <span>\r\n            {props.sharePerCent !== null && formatPerCent(props.sharePerCent)}{\" \"}\r\n            {props.businessTitle !== null && props.businessTitle}{\" \"}\r\n            {props.businessTitle !== null && props.purposeTitle !== null && (\r\n              <> &middot; </>\r\n            )}\r\n            {props.purposeTitle !== null && props.purposeTitle}{\" \"}\r\n          </span>\r\n          {props.sharesCreated !== null && (\r\n            <>\r\n              <br />\r\n              {formatDate(props.sharesCreated, {\r\n                month: \"long\",\r\n                day: \"numeric\",\r\n                year: \"numeric\",\r\n              })}\r\n            </>\r\n          )}{\" \"}\r\n          {(props.businessOwnerFirstname !== null ||\r\n            props.businessOwnerLastname !== null) && <br />}\r\n          {props.businessOwnerFirstname !== null &&\r\n            props.businessOwnerFirstname}{\" \"}\r\n          {props.businessOwnerLastname !== null && props.businessOwnerLastname}{\" \"}\r\n        </Toast.Body>\r\n      </Toast>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Form, InputGroup, Button, Table, ListGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n// import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\nimport Shareholder from \"../shareholder\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    request: \"get shares\",\r\n    namespace: \"Shares\",\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    shares,\r\n    countShares,\r\n    activePageShares,\r\n    sharesPerPage,\r\n    // accountNumber,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  // const {  } = props.barrelSetters;\r\n  const {\r\n    getShares,\r\n    // getRequestStatus,\r\n    showRequestStatus,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onPageSelect = (number) => {\r\n    console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageShares > 1 ? activePageShares - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageShares < Math.ceil(countShares / sharesPerPage)\r\n            ? activePageShares + 1\r\n            : Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getShares(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <>\r\n      {shares !== null &&\r\n        shares.map((share, keyShares) => {\r\n          cnt++;\r\n\r\n          const {\r\n            // business_description,\r\n            // business_id,\r\n            // business_image,\r\n            // business_link,\r\n            // business_status,\r\n            business_title,\r\n            owner_firstname,\r\n            owner_lastname,\r\n            // owner_status,\r\n            // owner_uid,\r\n            // purpose_description,\r\n            purpose_id,\r\n            // purpose_image,\r\n            // purpose_link,\r\n            // purpose_status,\r\n            purpose_title,\r\n            shareholder_id,\r\n            shares_created,\r\n            // shares_description,\r\n            share_per_cent,\r\n            shares_roles,\r\n            shares_share,\r\n            // shares_status,\r\n            // shares_title,\r\n          } = share;\r\n\r\n          const arrRoles = shares_roles !== null ? shares_roles.split(\",\") : [];\r\n          // const content = `${owner_firstname} ${owner_lastname} / ${formatDate(\r\n          //   shares_created\r\n          // )}`;\r\n\r\n          // console.log(\"keyShares:\", keyShares);\r\n\r\n          return (\r\n            <Shareholder\r\n              {...args}\r\n              key={keyShares}\r\n              id={keyShares}\r\n              shareholder={shareholder_id}\r\n              purpose={purpose_id}\r\n              firstname={userData.firstname}\r\n              lastname={userData.lastname}\r\n              share={shares_share}\r\n              roles={arrRoles}\r\n              closeButton={false}\r\n              rangeControl={false}\r\n              sharePerCent={share_per_cent}\r\n              businessOwnerFirstname={owner_firstname}\r\n              businessOwnerLastname={owner_lastname}\r\n              businessTitle={business_title}\r\n              purposeTitle={purpose_title}\r\n              sharesCreated={shares_created}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {showRequestStatus(\r\n        \"get shares / SELECT shares\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No shares\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"md\"\r\n        countItems={countShares}\r\n        itemsPerPage={sharesPerPage}\r\n        active={activePageShares}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Badge, Accordion, Card } from \"react-bootstrap\";\r\n// import { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\n// import { Redirect } from \"react-router-dom\";\r\n// import Octicon, { ChevronRight } from \"@primer/octicons-react\";\r\n// import AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { FileCopy as FileCopyIcon } from \"@material-ui/icons\";\r\n\r\n// import ZCard from \"../card\";\r\nimport Transactions from \"../transactions\";\r\nimport Shares from \"../shares\";\r\n\r\nexport default (args) => {\r\n  // let defaults = {};\r\n  // const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    accordionView,\r\n    // currencyAbbr,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setAccountType,\r\n    setRedirectTo,\r\n    setAccordionView,\r\n    // setDeleteResponseProp,\r\n    setResponseProps,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    getAccountData,\r\n    getTransactions,\r\n    getShares,\r\n    showMessage,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userData = props.data.userData;\r\n  // let format = props.format;\r\n  const { t } = useTranslation(\"Balance\");\r\n  // const [redirect, setRedirect] = useState(false);\r\n\r\n  const refAccountNumber = useRef(null);\r\n\r\n  // console.log(\"BALANCE DATA:\", props);\r\n  // console.log(\"BALANCE userData\", userData);\r\n  // const userDataParsed = JSON.parse(userData);\r\n  const userDataParsed = userData;\r\n\r\n  // let footer = <small className=\"text-muted\">Last updated 3 mins ago</small>;\r\n\r\n  /**\r\n   *\r\n   * @param {*} type\r\n   */\r\n  const onAccountTypeSelected = (type) => {\r\n    setAccountType(type);\r\n    setRedirectTo(\"/transfer\");\r\n  };\r\n\r\n  const available =\r\n    userDataParsed !== null\r\n      ? format(\r\n          userDataParsed.acc_curr +\r\n            userDataParsed.acc_cred +\r\n            userDataParsed.acc_save\r\n        )\r\n      : null;\r\n  let acc_curr =\r\n    userDataParsed !== null ? format(userDataParsed.acc_curr) : null;\r\n  let acc_cred =\r\n    userDataParsed !== null ? format(userDataParsed.acc_cred) : null;\r\n  let acc_save =\r\n    userDataParsed !== null ? format(userDataParsed.acc_save) : null;\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n   *\r\n   * @param {*} view\r\n   */\r\n  const toggleView = (view) => {\r\n    const newView = accordionView !== view ? view : null;\r\n\r\n    setResponseProps(null);\r\n    setAccordionView(newView);\r\n\r\n    if (newView !== null) {\r\n      switch (view) {\r\n        case \"balance\":\r\n          getAccountData();\r\n          break;\r\n\r\n        case \"transactions\":\r\n          getTransactions(1);\r\n          break;\r\n\r\n        case \"shares\":\r\n          // setDeleteResponseProp(\"get shares\");\r\n          getShares(1);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    refAccountNumber.current.select();\r\n    document.execCommand(\"copy\");\r\n    refAccountNumber.current.blur();\r\n    showMessage(\"COPIED_TO_CLIPBOARD\", \"info\", false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Accordion defaultActiveKey={accordionView}>\r\n        {/**\r\n         * Account number\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"accountNumber\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"accountNumber\")}\r\n          >\r\n            {t(\"Account number\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"accountNumber\">\r\n            <Card.Body>\r\n              <Card.Text>\r\n                <input\r\n                  ref={refAccountNumber}\r\n                  className=\"no-focus\"\r\n                  readOnly\r\n                  style={{ border: 0, width: \"10rem\" }}\r\n                  type=\"text\"\r\n                  defaultValue={accountNumber}\r\n                />\r\n                {document.queryCommandSupported(\"copy\") && (\r\n                  <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n                    <button\r\n                      className=\"button-transparent\"\r\n                      onClick={copyToClipboard}\r\n                    >\r\n                      <FileCopyIcon style={{ color: \"var(--dark)\" }} />\r\n                    </button>\r\n                  </span>\r\n                )}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        {/**\r\n         * Balance\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"balance\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n              // backgroundColor: \"#e8f6f3\",\r\n            }}\r\n            onClick={() => toggleView(\"balance\")}\r\n          >\r\n            {t(\"Balance\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"balance\">\r\n            <Card.Body>\r\n              <Form noValidate>\r\n                <Form.Group>\r\n                  <Form.Label>{t(\"Available\")}</Form.Label>\r\n\r\n                  <Form.Text>\r\n                    <div style={{ fontSize: \"3em\" }}>{available}</div>\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Current account\")}</div>\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_curr\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_curr}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Credit account\")}</div>\r\n\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_cred\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_cred}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Savings account\")}</div>\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_save\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_save}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        {/**\r\n         * Transactions\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"transactions\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"transactions\")}\r\n          >\r\n            {t(\"Transactions\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"transactions\">\r\n            <Card.Body>\r\n              <Transactions {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        {/**\r\n         * Shares\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"shares\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"shares\")}\r\n          >\r\n            {t(\"Shares\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"shares\">\r\n            <Card.Body>\r\n              <Shares {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"transfer U2S\",\r\n    namespace: \"Transfer\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    accountType,\r\n    language,\r\n    currencyAbbr,\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userData = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [fromAccountSaved, setFromAccountSaved] = useStickyState(\r\n  //   \"\",\r\n  //   \"fromAccountSaved\"\r\n  // );\r\n  // const [toAccountSaved, setToAccountSaved] = useStickyState(\r\n  //   \"\",\r\n  //   \"toAccountSaved\"\r\n  // );\r\n  // const [amountSaved, setAmountSaved] = useStickyState(\"\", \"amountSaved\");\r\n\r\n  // useEffect(() => {\r\n  //   if (accountNumber === null) return;\r\n\r\n  //   setFromAccountSaved(\"\");\r\n  //   setToAccountSaved(\"\");\r\n  //   setAmountSaved(\"\");\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [accountNumber]);\r\n\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toAccount: yup.string().required(t(\"To Account is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} Form data\r\n   */\r\n  const transferToSelf = (data) => {\r\n    // console.log(\"TRANSFER U2S DATA:\", data);\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // console.log(\"BEFORE SEND\");\r\n\r\n    // onTransfer({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n\r\n    // setFromAccountSaved(\"\");\r\n    // setToAccountSaved(\"\");\r\n    // setAmountSaved(\"\");\r\n\r\n    setTransferAmount(\"\");\r\n\r\n    // console.log(\"AFTER SEND\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToSelf(data);\r\n  };\r\n\r\n  const TransferToSelfForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * To account\r\n         */}\r\n        <Form.Group controlId=\"validationToAccount\">\r\n          <Form.Label>{t(\"To account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"toAccount\"\r\n            value={values.toAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferToAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.toAccount && touched.toAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option value=\"acc_curr\" hidden={accountType === \"acc_curr\"}>\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option value=\"acc_cred\" hidden={accountType === \"acc_cred\"}>\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option value=\"acc_save\" hidden={accountType === \"acc_save\"}>\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.toAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setTransferAmount(e.target.value);\r\n              }}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"transfer U2S\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={TransferToSelfForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        fromAccount: transferFromAccount,\r\n        toAccount: transferToAccount,\r\n        amount: transferAmount,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\nimport ModalMessage from \"../modalMessage\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"TanInput\",\r\n    request: \"submit tan\",\r\n    show: false,\r\n    size: \"lg\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { tanRequired, userData, tanInputTAN } = props.barrelGetters;\r\n  const { setTanRequired, setTanInputTAN } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refTAN = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    const tempRef = refTAN.current;\r\n    return () => {\r\n      if (tempRef !== null && tanInputTAN !== tempRef.value)\r\n        setTanInputTAN(tempRef.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    tan: yup.string().required(t(\"TAN is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    setTanRequired(false);\r\n    data.email = userData.email;\r\n    setTanInputTAN(\"\");\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div>\r\n        {t(\"A transaction number has been sent to your email account.\")}\r\n      </div>\r\n      <br />\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFormikTAN\">\r\n          <Form.Label>{t(\"TAN\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"tan\"\r\n              ref={refTAN}\r\n              value={values.tan}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.tan && touched.tan}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.tan}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  const message = (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        tan: tanInputTAN,\r\n      }}\r\n    />\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        message={message}\r\n        show={tanRequired}\r\n        size={props.size}\r\n        centered={true}\r\n        onHide={() => setTanRequired(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport TanInput from \"../tanInput\";\r\n\r\n/**\r\n * Component: TransferToPerson\r\n */\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2U\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const [transferDescriptionTemp, setTransferDescriptionTemp] = useStickyState(\r\n  //   \"\",\r\n  //   \"transferDescriptionTemp\"\r\n  // );\r\n\r\n  const refPersonalID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPersonalID = refPersonalID.current;\r\n    const tempRefDescription = refDescription.current;\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      setTransferToUID(tempRefPersonalID.value);\r\n      setTransferDescription(tempRefDescription.value);\r\n      setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toPersonalID: yup\r\n      .string()\r\n      .required(t(\"Recipients Personal ID is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Personal ID Regex\")),\r\n        t(\"Wrong Personal ID format\")\r\n      ),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToPerson = (data) => {\r\n    // console.log(\"TRANSFER U2U DATA:\", data);\r\n    data.transferType = props.request;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  // return <>test</>;\r\n\r\n  const onSubmit = (data) => {\r\n    transferToPerson(data);\r\n  };\r\n\r\n  const TransferToPersonForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Recipients Personal ID\r\n         */}\r\n        <Form.Group controlId=\"validationFormikToPersonalID\">\r\n          <Form.Label>{t(\"To Personal ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={t(\"XXXXXX-XXXXX\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"toPersonalID\"\r\n              ref={refPersonalID}\r\n              value={values.toPersonalID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.toPersonalID && touched.toPersonalID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.toPersonalID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Transfer Description\r\n         */}\r\n        <Form.Group controlId=\"validationFormikDescription\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Button: Next */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToPersonForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          toPersonalID: transferToUID,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport TanInput from \"../tanInput\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2B\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPurposeID = refPurposeID.current;\r\n    const tempRefDescription = refDescription.current;\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      setTransferToPurpose(tempRefPurposeID.value);\r\n      setTransferDescription(tempRefDescription.value);\r\n      setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    // businessTitle: yup\r\n    //   .string()\r\n    //   .required(t(\"Recipients Business ID is required\")),\r\n    purposeID: yup.string().required(t(\"Purpose ID is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToBusiness = (data) => {\r\n    data.transferType = props.request;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.currency = currencyAbbr;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // data.amount = parseFloat(data.amount);\r\n    // data.amount = Number(data.amount.replace(/[^0-9.-]+/g, \"\"));\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToBusiness(data);\r\n  };\r\n\r\n  const TransferToBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      {/* From account */}\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Business ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"businessTitle\"\r\n              value={values.businessTitle}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.businessTitle}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n        */}\r\n\r\n        {/* To purpose */}\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Purpose ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"PXXXXXXXXXXXXXXXXXXXXXXX\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"purposeID\"\r\n              ref={refPurposeID}\r\n              value={values.purposeID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.purposeID && touched.purposeID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.purposeID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Field: Description */}\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/* Amount */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"string\" // do NOT change to number!!\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          purposeID: transferToPurpose,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"BusinessRegistration\",\r\n    request: \"register business\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refBusinessTitle = React.createRef();\r\n  const refBusinessDescription = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefBusinessTitle = refBusinessTitle.current;\r\n    const tempRefBusinessDescription = refBusinessDescription.current;\r\n    return () => {\r\n      if (\r\n        tempRefBusinessTitle !== null &&\r\n        businessRegistrationAddTitle !== tempRefBusinessTitle.value\r\n      )\r\n        setBusinessRegistrationAddTitle(tempRefBusinessTitle.value);\r\n\r\n      if (\r\n        tempRefBusinessDescription !== null &&\r\n        businessRegistrationAddDescription !== tempRefBusinessDescription.value\r\n      )\r\n        setBusinessRegistrationAddDescription(tempRefBusinessDescription.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [addOwnerAsShareholder, setAddOwnerAsShareholder] = useStickyState(\r\n  //   false,\r\n  //   \"addOwnerAsShareholder\"\r\n  // );\r\n\r\n  const schema = yup.object({\r\n    businessTitle: yup\r\n      .string()\r\n      .required(t(\"Business title is a required field\"))\r\n      .min(3, t(\"Business title too short\"))\r\n      .max(70, t(\"Business title too long\"))\r\n      .trim(),\r\n    businessDescription: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * On business registration\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n\r\n    // console.log(\"REGISTER BUSINESS DATA:\", data);\r\n\r\n    // onBusinessRegistration({ req: \"register business\", data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Business Title (Business ID) */}\r\n      <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n        <Form.Label>{t(\"Business Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"businessTitle\"\r\n            ref={refBusinessTitle}\r\n            value={values.businessTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.businessTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/* Business Description */}\r\n      <Form.Group controlId=\"businessDescription\">\r\n        <Form.Label>{t(\"Business Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"businessDescription\"\r\n          ref={refBusinessDescription}\r\n          value={values.businessDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={RegisterBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          businessTitle: businessRegistrationAddTitle,\r\n          businessDescription: businessRegistrationAddDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"PurposeRegistration\",\r\n    requestInsert: \"register purpose\",\r\n    requestUpdate: \"update purpose property\",\r\n    businessID: null,\r\n    purposeID: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    subcategory: \"\",\r\n    subcategory2: \"\",\r\n    keywords: \"\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"PURPOSE REGISTRATION PROPS:\", props);\r\n\r\n  const barrels = props;\r\n  const { businessID, purposeID, id } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    language,\r\n    // businessPurposes,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    // purposeRegistrationCategory,\r\n    // purposeRegistrationSubcategory,\r\n    // purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    // setBusinessPurposes,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n  } = barrels.barrelSetters;\r\n  const { getReviser, getWorkplace } = barrels.barrelFunctions;\r\n  const { onPurposeRegistration } = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeTitle = React.createRef();\r\n  const refPurposeDescription = React.createRef();\r\n  // const refPurposeCategory = React.createRef();\r\n  // const refPurposeSubcategory = React.createRef();\r\n  // const refPurposeSubcategory2 = React.createRef();\r\n  const refPurposeKeywords = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPurposeTitle = refPurposeTitle.current;\r\n    const tempRefPurposeDescription = refPurposeDescription.current;\r\n    const tempRefPurposeKeywords = refPurposeKeywords.current;\r\n    return () => {\r\n      if (\r\n        tempRefPurposeTitle !== null &&\r\n        purposeRegistrationTitle !== tempRefPurposeTitle.value\r\n      )\r\n        setPurposeRegistrationTitle(tempRefPurposeTitle.value);\r\n\r\n      if (\r\n        tempRefPurposeDescription !== null &&\r\n        purposeRegistrationDescription !== tempRefPurposeDescription.value\r\n      )\r\n        setPurposeRegistrationDescription(tempRefPurposeDescription.value);\r\n\r\n      if (\r\n        tempRefPurposeKeywords !== null &&\r\n        purposeRegistrationKeywords !== tempRefPurposeKeywords.value\r\n      )\r\n        setPurposeRegistrationKeywords(tempRefPurposeKeywords.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const schema = yup.object({\r\n    purposeTitle: yup\r\n      .string()\r\n      .required(t(\"Purpose title is a required field\"))\r\n      .min(3, t(\"Purpose title too short\"))\r\n      .max(70, t(\"Purpose title too long\"))\r\n      .trim(),\r\n    purposeDescription: yup.string().optional(),\r\n    // purposeCategory: yup\r\n    //   .string()\r\n    //   .required(t(\"Purpose category is a required field\"))\r\n    //   .max(70, t(\"Purpose category too long\"))\r\n    //   .trim(),\r\n    // purposeSubcategory: yup.string().optional(),\r\n    // purposeSubcategory2: yup.string().optional(),\r\n    purposeKeywords: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const RegisterPurpose = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.businessID = businessID;\r\n    data.id = id;\r\n    data.purposeID = purposeID;\r\n    data.uid = accountNumber;\r\n    data.language = language;\r\n\r\n    // console.log(\"REGISTER PURPOSE DATA:\", data);\r\n\r\n    onPurposeRegistration({\r\n      req: props.purposeID === null ? props.requestInsert : props.requestUpdate,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    RegisterPurpose(data);\r\n  };\r\n\r\n  const RegisterPurposeForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/*\r\n       * Purpose Title (Purpose ID)\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeID\">\r\n        <Form.Label>{t(\"Purpose Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"purposeTitle\"\r\n            ref={refPurposeTitle}\r\n            value={values.purposeTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeTitle && touched.purposeTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Description\r\n       */}\r\n      <Form.Group controlId=\"purposeDescription\">\r\n        <Form.Label>{t(\"Purpose Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"purposeDescription\"\r\n          ref={refPurposeDescription}\r\n          value={values.purposeDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Keywords\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeKeywords\">\r\n        <Form.Label>{t(\"Purpose Keywords\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeKeywords\"\r\n            ref={refPurposeKeywords}\r\n            value={values.purposeKeywords}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeKeywords && touched.purposeKeywords}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeKeywords}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Submit button\r\n       */}\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(props.purposeID === null ? \"Submit\" : \"Save\")}\r\n        request={\r\n          props.purposeID === null ? props.requestInsert : props.requestUpdate\r\n        }\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterPurposeForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        purposeTitle: purposeRegistrationTitle,\r\n        purposeDescription: purposeRegistrationDescription,\r\n        // purposeCategory: purposeRegistrationCategory,\r\n        // purposeSubcategory: purposeRegistrationSubcategory,\r\n        // purposeSubcategory2: purposeRegistrationSubcategory2,\r\n        purposeKeywords: purposeRegistrationKeywords,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"register shareholder\",\r\n    namespace: \"ShareholderRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const barrels = props;\r\n  const { purposeID } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber } = barrels.barrelGetters;\r\n  // const {} = barrels.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n  } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const thisRef = createRef();\r\n\r\n  const schema = yup.object({\r\n    // personalID: yup\r\n    //   .string()\r\n    //   .required(t(\"Personal ID is required\"))\r\n    //   .matches(\r\n    //     new RegExp(t(\"Personal ID Regex\")),\r\n    //     t(\"Wrong Personal ID format\")\r\n    //   ),\r\n    shareholderRoles: yup.string().optional(),\r\n    shares: yup\r\n      .number()\r\n      .typeError(t(\"Shares must be a number\"))\r\n      .required(t(\"Shares is required\"))\r\n      .min(1, t(\"Shares too few\"))\r\n      .max(1000, t(\"Shares too many\")),\r\n  });\r\n\r\n  /**\r\n   * Send shareholder registration request\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.purposeID = purposeID;\r\n\r\n    // console.log(\"REGISTER SHAREHOLDER DATA:\", data);\r\n\r\n    // onShareholderRegistration({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterShareholderForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* id=\"shareholderRegistrationForm\" */}\r\n      <Toast style={{ minWidth: \"100%\" }}>\r\n        {/*\r\n        <Toast.Header closeButton={false}>\r\n          <strong className=\"mr-auto\">{t(\"Add Shareholder\")}</strong>\r\n        </Toast.Header>\r\n        */}\r\n        <Toast.Body>\r\n          <Form.Group controlId=\"validationFormikShareholderPersonalID\">\r\n            <Form.Label>{t(\"Shareholder Personal ID\")}</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={t(\"XXXXXX-XXXXX\")}\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"personalID\"\r\n                value={values.personalID}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.personalID && touched.personalID}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.personalID}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          {/* Shareholder Roles */}\r\n          <Form.Group controlId=\"validationFormikShareholderRoles\">\r\n            <Form.Label>{t(\"Shareholder Roles\")}</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"shareholderRoles\"\r\n                value={values.shareholderRoles}\r\n                onChange={handleChange}\r\n                isInvalid={\r\n                  !!errors.shareholderRoles && touched.shareholderRoles\r\n                }\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.shareholderRoles}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          {/* Shares */}\r\n          <Form.Group controlId=\"validationFormikShareholderRoles\">\r\n            <Form.Label>{t(\"Shares\")}</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type=\"number\"\r\n                min={1}\r\n                max={1000}\r\n                step={1}\r\n                placeholder=\"\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"shares\"\r\n                value={values.shares}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.shares && touched.shares}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.shares}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Toast.Body>\r\n      </Toast>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterShareholderForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        personalID: \"\",\r\n        shares: 1,\r\n        shareholderRoles: \"\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport {\r\n  Accordion,\r\n  Card,\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  // Nav,\r\n  Form,\r\n  // Toast,\r\n  // Badge,\r\n  // Container,\r\n  // Button,\r\n} from \"react-bootstrap\";\r\n// import { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import Octicon, { Plus, PlusSmall, Gear } from \"@primer/octicons-react\";\r\nimport { Add, Store, Edit } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Dropzone from \"../dropzone\";\r\nimport BusinessRegistration from \"../businessRegistration\";\r\nimport PurposeRegistration from \"../purposeRegistration\";\r\n// import PurposeProperty from \"../purposeProperty\";\r\nimport ShareholderRegistration from \"../shareholderRegistration\";\r\n// import shareholderRegistration from \"../shareholderRegistration\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"MyBusiness\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    userBusinesses,\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes,\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    purposeShareholders,\r\n    // purposeID,\r\n    activePurposeData,\r\n    // language,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRedirectTo,\r\n    setResponseProps,\r\n    setBusinessPurposes,\r\n    setActiveBusiness,\r\n    setActiveBusinesPurpose,\r\n    // setActiveBusinessID,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePageBusinessPurposes,\r\n    setActivePurposeData,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    sendRequest,\r\n    showRequestStatus,\r\n    formatDate,\r\n  } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // useEffect(() => {\r\n  //   // getBusinesses();\r\n  //   // getBusinesses();\r\n  //   // eslint-disable-next-line\r\n  // }, []);\r\n\r\n  /**\r\n   * Toggle business (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const ToggleBusiness = ({ eventKey, businessID }) => {\r\n    if (activeBusiness === eventKey) {\r\n      setActiveBusiness(null);\r\n      setActivePageBusinessPurposes(null);\r\n    } else {\r\n      setResponseProps(null);\r\n      getBusinessPurposes(businessID, eventKey, 1);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Toggle purpose (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const TogglePurpose = ({ eventKey, purposeID }) => {\r\n    setResponseProps(null);\r\n    getPurposeShareholders(purposeID, eventKey);\r\n  };\r\n\r\n  /**\r\n   * Create:\r\n   * - business menu\r\n   * - business purposes menu\r\n   */\r\n  let menuItems = [];\r\n  let purposes = [];\r\n  let cntBusinesses = 0;\r\n  let cntPurposes = 0;\r\n  let countShareholders = 0;\r\n  userBusinesses !== null &&\r\n    Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n      cntBusinesses++;\r\n      menuItems[keyBusiness] = [];\r\n      purposes[keyBusiness] = [];\r\n      businessPurposes !== null &&\r\n        Object.keys(businessPurposes).map((purpose, keyPurpose) => {\r\n          cntPurposes++;\r\n          if (\r\n            businessPurposes[purpose].business_id ===\r\n            userBusinesses[business].business_id\r\n          ) {\r\n            menuItems[keyBusiness][keyPurpose] = (\r\n              <ListGroup.Item\r\n                action\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n                style={{ cursor: \"default\" }}\r\n                onClick={() =>\r\n                  TogglePurpose({\r\n                    eventKey: keyPurpose,\r\n                    purposeID: businessPurposes[purpose].purpose_id,\r\n                  })\r\n                }\r\n              >\r\n                <span style={{ whiteSpace: \"nowrap\", cursor: \"pointer\" }}>\r\n                  {businessPurposes[purpose].title}\r\n                </span>\r\n\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={(e) => {\r\n                      setPurposeRegistrationTitle(\r\n                        businessPurposes[purpose].title !== null\r\n                          ? businessPurposes[purpose].title\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationDescription(\r\n                        businessPurposes[purpose].description !== null\r\n                          ? businessPurposes[purpose].description\r\n                          : \"\"\r\n                      );\r\n                      // setPurposeRegistrationCategory(\r\n                      //   businessPurposes[purpose].category !== null\r\n                      //     ? businessPurposes[purpose].category\r\n                      //     : \"\"\r\n                      // );\r\n                      // setPurposeRegistrationSubcategory(\r\n                      //   businessPurposes[purpose].subcategory !== null\r\n                      //     ? businessPurposes[purpose].subcategory\r\n                      //     : \"\"\r\n                      // );\r\n                      // setPurposeRegistrationSubcategory2(\r\n                      //   businessPurposes[purpose].subcategory2 !== null\r\n                      //     ? businessPurposes[purpose].subcategory2\r\n                      //     : \"\"\r\n                      // );\r\n                      setPurposeRegistrationKeywords(\r\n                        businessPurposes[purpose].keywords !== null\r\n                          ? businessPurposes[purpose].keywords\r\n                          : \"\"\r\n                      );\r\n\r\n                      setActivePurposeData(\r\n                        JSON.stringify(businessPurposes[purpose])\r\n                      );\r\n                      setActiveBusinesPurpose(\"addPurpose\");\r\n                      e.stopPropagation();\r\n                    }}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </ListGroup.Item>\r\n            );\r\n\r\n            purposes[keyBusiness][keyPurpose] = (\r\n              <Tab.Pane\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n              >\r\n                <Accordion\r\n                  defaultActiveKey={\r\n                    activePurposeProperty !== null\r\n                      ? activePurposeProperty\r\n                      : \"shareholders\"\r\n                  }\r\n                >\r\n                  {/* Purpose shareholders */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"shareholders\"\r\n                      onClick={() => setActivePurposeProperty(\"shareholders\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Shareholders\")}\r\n                      </span>\r\n                      <span style={{ float: \"right\" }}>\r\n                        <Add\r\n                          onClick={(e) => {\r\n                            setActivePurposeProperty(\"addShareholder\");\r\n                            e.stopPropagation();\r\n                          }}\r\n                          fontSize=\"small\"\r\n                          style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                        />\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    {/* Toggle: Add shareholder */}\r\n                    <Accordion.Collapse eventKey=\"addShareholder\">\r\n                      <Card.Body>\r\n                        <ShareholderRegistration\r\n                          {...args}\r\n                          purposeID={businessPurposes[purpose].purpose_id}\r\n                        />\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n\r\n                    {/* Toggle: Shareholders list */}\r\n                    <Accordion.Collapse eventKey=\"shareholders\">\r\n                      <Card.Body>\r\n                        {typeof purposeShareholders !== \"undefined\" &&\r\n                          purposeShareholders !== null &&\r\n                          Object.keys(purposeShareholders).map(\r\n                            (shareholder, keyShareholder) => {\r\n                              if (\r\n                                purposeShareholders[shareholder].purpose_id ===\r\n                                businessPurposes[purpose].purpose_id\r\n                              ) {\r\n                                const { purpose_id } = purposeShareholders[\r\n                                  shareholder\r\n                                ];\r\n                                const {\r\n                                  shareholder_id,\r\n                                  firstname,\r\n                                  lastname,\r\n                                  // email,\r\n                                  roles,\r\n                                  share,\r\n                                } = purposeShareholders[shareholder];\r\n\r\n                                countShareholders++;\r\n\r\n                                const arrRoles =\r\n                                  roles !== null ? roles.split(\",\") : [];\r\n\r\n                                return (\r\n                                  <Shareholder\r\n                                    {...args}\r\n                                    key={keyShareholder}\r\n                                    id={keyShareholder}\r\n                                    shareholder={shareholder_id}\r\n                                    purpose={purpose_id}\r\n                                    firstname={firstname}\r\n                                    lastname={lastname}\r\n                                    share={share}\r\n                                    roles={arrRoles}\r\n                                  />\r\n                                );\r\n                              } else {\r\n                                return \"\"; // TODO: check if this works\r\n                              }\r\n                            }\r\n                          )}\r\n\r\n                        {showRequestStatus(\r\n                          \"get purpose shareholders / SELECT shares\",\r\n                          countShareholders,\r\n                          t(\"Loading shareholders...\"),\r\n                          t(\"No shareholders\"),\r\n                          \"finished\"\r\n                        )}\r\n\r\n                        {/* End shareholders list */}\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Product status */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      eventKey=\"productStatus\"\r\n                      onClick={() => setActivePurposeProperty(\"productStatus\")}\r\n                    >\r\n                      {t(\"Product Status\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"productStatus\">\r\n                      <Card.Body\r\n                        onClick={(e) => {\r\n                          // console.log(\"Click\", e);\r\n\r\n                          const bp = businessPurposes;\r\n                          bp[purpose].status =\r\n                            businessPurposes[purpose].status === 0 ? 1 : 0;\r\n                          setBusinessPurposes(JSON.stringify(bp));\r\n\r\n                          let data = {};\r\n                          // data.business_id =\r\n                          //   businessPurposes[purpose].business_id;\r\n                          // data.language = language;\r\n                          data.purpose_id =\r\n                            businessPurposes[purpose].purpose_id;\r\n                          // data.purpose_title = businessPurposes[purpose].title;\r\n                          data.purpose_status =\r\n                            businessPurposes[purpose].status;\r\n                          return sendRequest({\r\n                            req: \"change purpose status\",\r\n                            data,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Form>\r\n                          {typeof purposeShareholders === \"undefined\" ||\r\n                            (purposeShareholders === null && (\r\n                              <Form.Text>\r\n                                {t(\r\n                                  \"To publish, please add at least one shareholder\"\r\n                                )}\r\n                                <br />\r\n                                <br />\r\n                              </Form.Text>\r\n                            ))}\r\n\r\n                          {typeof purposeShareholders !== \"undefined\" &&\r\n                            purposeShareholders !== null && (\r\n                              <Form.Check\r\n                                type=\"switch\"\r\n                                custom\r\n                                disabled={\r\n                                  typeof purposeShareholders === \"undefined\" ||\r\n                                  purposeShareholders === null\r\n                                }\r\n                                label={t(\r\n                                  businessPurposes[purpose].status === 0\r\n                                    ? \"Not published\"\r\n                                    : \"Published\"\r\n                                )}\r\n                                checked={businessPurposes[purpose].status === 1}\r\n                                onChange={(e) => {\r\n                                  console.log(e);\r\n                                }}\r\n                              />\r\n                            )}\r\n                        </Form>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose ID */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      eventKey=\"purpose_id\"\r\n                      onClick={() => setActivePurposeProperty(\"purpose_id\")}\r\n                    >\r\n                      {t(\"Purpose ID\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"purpose_id\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].purpose_id}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose title */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"title\"\r\n                      onClick={() => setActivePurposeProperty(\"title\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Title\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"title\">\r\n                      <Card.Body>\r\n                        <Card.Text>{businessPurposes[purpose].title}</Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose description\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"description\"\r\n                      onClick={() => setActivePurposeProperty(\"description\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Description\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"description\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].description}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Keywords\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"keywords\"\r\n                      onClick={() => setActivePurposeProperty(\"keywords\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Keywords\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"keywords\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].keywords}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* End of purpose properties */}\r\n                </Accordion>\r\n              </Tab.Pane>\r\n            );\r\n          }\r\n          countShareholders = 0;\r\n          return true;\r\n        });\r\n\r\n      return true;\r\n    });\r\n\r\n  const jsx = (\r\n    <>\r\n      <Accordion\r\n        defaultActiveKey={\r\n          activeBusiness !== null || !userBusinessesLoaded\r\n            ? activeBusiness\r\n            : \"myBusinesses\"\r\n        }\r\n      >\r\n        {/* Add business location top */}\r\n\r\n        {/* List user businesses */}\r\n        {userBusinesses !== null &&\r\n          Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n            const date = new Date(userBusinesses[business].created);\r\n            // const businessSince = new Intl.DateTimeFormat(language).format(\r\n            //   date\r\n            // );\r\n            const businessSince = formatDate(date, {\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n              year: \"numeric\",\r\n            });\r\n\r\n            // keyBusiness[3] = userBusinesses[business].business_id;\r\n            return (\r\n              <Card key={keyBusiness}>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey={keyBusiness}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    ToggleBusiness({\r\n                      eventKey: keyBusiness,\r\n                      businessID: userBusinesses[business].business_id,\r\n                    })\r\n                  }\r\n                >\r\n                  <Store style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                  {userBusinesses[business].title}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={keyBusiness}>\r\n                  <Card.Body>\r\n                    <Tab.Container\r\n                      id=\"left-tabs-example\"\r\n                      defaultActiveKey={\r\n                        activeBusinesPurpose !== null\r\n                          ? activeBusinesPurpose\r\n                          : \"aboutBusiness\"\r\n                      }\r\n                    >\r\n                      <Row>\r\n                        {/* Layout: Left side - Menu */}\r\n                        <Col sm={5}>\r\n                          <ListGroup variant=\"flush\">\r\n                            {/* Menu item: About business */}\r\n                            <ListGroup.Item\r\n                              action\r\n                              eventKey=\"aboutBusiness\"\r\n                              style={{ cursor: \"default\" }}\r\n                              onClick={(e) => {\r\n                                setActivePurposeData(null);\r\n                                setActiveBusinesPurpose(null);\r\n                                e.stopPropagation();\r\n                              }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  whiteSpace: \"nowrap\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              >\r\n                                {t(\"About\")}\r\n                              </span>\r\n                              <span style={{ float: \"right\" }}>\r\n                                <Add\r\n                                  onClick={(e) => {\r\n                                    // console.log(\"CLICK\");\r\n\r\n                                    // setPurposeID(null);\r\n                                    setClearRefs(true);\r\n                                    setActivePurposeData(null);\r\n                                    setActiveBusinesPurpose(\"addPurpose\");\r\n                                    e.stopPropagation();\r\n                                  }}\r\n                                  fontSize=\"small\"\r\n                                  style={{\r\n                                    color: \"var(--dark)\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                />\r\n                              </span>\r\n                            </ListGroup.Item>\r\n\r\n                            {/* Menu items: Registered purposes */}\r\n                            {menuItems[keyBusiness]}\r\n\r\n                            {/* old add purpose */}\r\n                          </ListGroup>\r\n                          {countBusinessPurposes !== null && (\r\n                            <>\r\n                              <br />\r\n                              <Pagination\r\n                                {...args}\r\n                                size=\"sm\"\r\n                                countItems={countBusinessPurposes}\r\n                                itemsPerPage={businessPurposesPerPage}\r\n                                active={activePageBusinessPurposes}\r\n                                onClick={(number) =>\r\n                                  getBusinessPurposes(\r\n                                    activeBusinessID,\r\n                                    0,\r\n                                    number\r\n                                  )\r\n                                }\r\n                              />\r\n                            </>\r\n                          )}\r\n\r\n                          {showRequestStatus(\r\n                            \"get business purposes / SELECT purposes\",\r\n                            cntPurposes,\r\n                            t(\"Loading purposes...\"),\r\n                            t(\"No purposes\"),\r\n                            \"finished\"\r\n                          )}\r\n                        </Col>\r\n\r\n                        {/* Layout: Right side - Content */}\r\n                        <Col sm={7}>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"aboutBusiness\">\r\n                              <Accordion defaultActiveKey=\"businessID\">\r\n                                {/* Business logo */}\r\n\r\n                                {/*\r\n                              <Card>\r\n                                <Accordion.Toggle\r\n                                  as={Card.Header}\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  eventKey=\"businessLogo\"\r\n                                >\r\n                                  [LOGO]\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"businessLogo\">\r\n                                  <Card border=\"light\">\r\n                                    <Card.Body>\r\n                                      <Dropzone data={args} />\r\n                                    </Card.Body>\r\n                                  </Card>\r\n                                </Accordion.Collapse>\r\n                              </Card>\r\n                              */}\r\n\r\n                                {/* Business ID */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessID\"\r\n                                  >\r\n                                    {t(\"Business ID\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessID\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          {userBusinesses[business].business_id}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business description */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessDescription\"\r\n                                  >\r\n                                    {t(\"Business Description\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessDescription\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          {userBusinesses[business]\r\n                                            .description !== \"\" ? (\r\n                                            userBusinesses[business].description\r\n                                          ) : (\r\n                                            <span className=\"text-center text-muted\">\r\n                                              {t(\"No description\")}\r\n                                            </span>\r\n                                          )}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business Creation Date */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessCreationDate\"\r\n                                  >\r\n                                    {t(\"Business Created\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessCreationDate\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>{businessSince}</Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n\r\n                            {/* Start Business purposes */}\r\n                            {purposes[keyBusiness]}\r\n                            {/* End Business purposes */}\r\n\r\n                            {/*\r\n                             * Add new purpose / update existing purpose\r\n                             */}\r\n                            <Tab.Pane eventKey=\"addPurpose\">\r\n                              <Accordion defaultActiveKey=\"newPurpose\">\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    eventKey=\"newPurpose\"\r\n                                    style={{ cursor: \"default\" }}\r\n                                  >\r\n                                    {t(\r\n                                      activePurposeData === null\r\n                                        ? \"New Purpose\"\r\n                                        : \"Edit Purpose\"\r\n                                    )}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"newPurpose\">\r\n                                    <Card.Body>\r\n                                      <PurposeRegistration\r\n                                        {...args}\r\n                                        businessID={\r\n                                          userBusinesses[business].business_id\r\n                                        }\r\n                                        id={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.id\r\n                                            : null\r\n                                        }\r\n                                        purposeID={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.purpose_id\r\n                                            : null\r\n                                        }\r\n                                        title={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.title\r\n                                            : \"\"\r\n                                        }\r\n                                        description={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.description\r\n                                            : \"\"\r\n                                        }\r\n                                        category={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.category\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory2={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory2\r\n                                            : \"\"\r\n                                        }\r\n                                        keywords={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.keywords\r\n                                            : \"\"\r\n                                        }\r\n                                      />\r\n                                    </Card.Body>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>\r\n                        </Col>\r\n                      </Row>\r\n                    </Tab.Container>\r\n                    {/* pagination prev */}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            );\r\n            // console.log(\"BUSINESS:\", userBusinesses[business]);\r\n          })}\r\n\r\n        {/* add business location bottom */}\r\n\r\n        {/* Add business */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"addBusiness\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() =>\r\n              setActiveBusiness(\r\n                activeBusiness !== \"addBusiness\" ? \"addBusiness\" : null\r\n              )\r\n            }\r\n          >\r\n            <span>\r\n              <Add fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              &nbsp;\r\n              {t(\"Add Business\")}\r\n            </span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"addBusiness\">\r\n            <Card.Body>\r\n              <BusinessRegistration {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      {userBusinesses !== null && (\r\n        <>\r\n          <br />\r\n\r\n          <Pagination\r\n            {...args}\r\n            size=\"md\"\r\n            countItems={countBusinesses}\r\n            itemsPerPage={businessesPerPage}\r\n            active={activePageBusinesses}\r\n            onClick={(number) => getBusinesses(number)}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","import \"./UserEditor.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup, Form, InputGroup } from \"react-bootstrap\";\r\nimport {\r\n  Visibility,\r\n  VisibilityOff,\r\n  Close,\r\n  Edit,\r\n  // Done,\r\n} from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"UserEditor\",\r\n    request: \"update user\",\r\n    mode: \"label\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"USER EDITOR PROPS:\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    // currencies,\r\n    // currencyAbbr,\r\n    // language,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getReviser, getWorkplace } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefFirstName = refFirstName.current;\r\n    const tempRefLastName = refLastName.current;\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (\r\n        tempRefFirstName !== null &&\r\n        userEditorFirstname !== tempRefFirstName.value\r\n      )\r\n        setUserEditorFirstname(tempRefFirstName.value);\r\n\r\n      if (\r\n        tempRefLastName !== null &&\r\n        userEditorLastname !== tempRefLastName.value\r\n      )\r\n        setUserEditorLastname(tempRefLastName.value);\r\n\r\n      if (tempRefEmail !== null && userEditorEmail !== tempRefEmail.value)\r\n        setUserEditorEmail(tempRefEmail.value);\r\n\r\n      if (\r\n        tempRefPassword !== null &&\r\n        userEditorPassword !== tempRefPassword.value\r\n      )\r\n        setUserEditorPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userEditorEditFirstname ||\r\n      userEditorEditLastname ||\r\n      userEditorEditEmail ||\r\n      userEditorEditPassword\r\n    ) {\r\n      setUserEditorSubmitButtonVisible(true);\r\n    } else {\r\n      setUserEditorSubmitButtonVisible(false);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [\r\n    userEditorEditFirstname,\r\n    userEditorEditLastname,\r\n    userEditorEditEmail,\r\n    userEditorEditPassword,\r\n  ]);\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  const togglePassword = () => {\r\n    setUserEditorPasswordVisible(!userEditorPasswordVisible);\r\n  };\r\n\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    // data.language = language;\r\n    // data.email = userData.email;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.personalID = accountNumber;\r\n    if (!userEditorEditFirstname) data.firstname = null;\r\n    if (!userEditorEditLastname) data.lastname = null;\r\n    if (!userEditorEditEmail) data.email = userData.email;\r\n    if (!userEditorEditPassword) data.password = null;\r\n\r\n    // console.log(\"onSubmit:\", data);\r\n\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const yupObject = {\r\n    firstName: userEditorEditFirstname\r\n      ? yup.string().required(t(\"First name is required\"))\r\n      : yup.string().optional(),\r\n    lastName: userEditorEditLastname\r\n      ? yup.string().required(t(\"Last name is required\"))\r\n      : yup.string().optional(),\r\n    email: userEditorEditEmail\r\n      ? yup\r\n          .string()\r\n          .email(t(\"Invalid email address\"))\r\n          .required(t(\"Email is required\"))\r\n      : yup.string().optional(),\r\n    password: userEditorEditPassword\r\n      ? yup\r\n          .string()\r\n          .required(t(\"No password provided\"))\r\n          .min(8, t(\"Password is too short\"))\r\n          // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n          .matches(\r\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n            t(\"Password is too weak\")\r\n          )\r\n      : yup.string().optional(),\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object(yupObject);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (userData === null) return <></>;\r\n\r\n  /**\r\n   * Destructuring\r\n   */\r\n  const { mode } = props;\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    email,\r\n    // language,\r\n    // currency_name,\r\n    // currency_abbr,\r\n  } = userData;\r\n  // const currency = `${currency_name} (${currency_abbr})`;\r\n\r\n  const UserEditorForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Card title={t(\"Profile\")}>\r\n        {/* First name */}\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"First name\")}</Form.Label>\r\n            {!userEditorEditFirstname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditFirstname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{firstname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditFirstname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditFirstname && (\r\n              <Form.Group controlId=\"validationFormikFirstName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter first name\")}\r\n                    name=\"firstName\"\r\n                    ref={refFirstName}\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.firstName && touched.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Last name */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Last name\")}</Form.Label>\r\n            {!userEditorEditLastname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditLastname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{lastname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditLastname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditLastname && (\r\n              <Form.Group controlId=\"validationFormikLastName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter last name\")}\r\n                    name=\"lastName\"\r\n                    ref={refLastName}\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.lastName && touched.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Email */}\r\n          {false && accountNumber !== null && (\r\n            <ListGroup.Item as=\"div\" action>\r\n              <Form.Label>{t(\"Email address\")}</Form.Label>\r\n              {!userEditorEditEmail ? (\r\n                <>\r\n                  <span style={{ float: \"right\" }}>\r\n                    <Edit\r\n                      onClick={() => setUserEditorEditEmail(true)}\r\n                      fontSize=\"small\"\r\n                      style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                    />\r\n                  </span>\r\n                  <br />\r\n                  <small>{email}</small>\r\n                </>\r\n              ) : (\r\n                <span style={{ float: \"right\" }}>\r\n                  <Close\r\n                    onClick={() => setUserEditorEditEmail(false)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              )}\r\n\r\n              {userEditorEditEmail && (\r\n                <Form.Group controlId=\"validationFormikEmail\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      placeholder={t(\"Enter email\")}\r\n                      name=\"email\"\r\n                      value={values.email}\r\n                      ref={refEmail}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.email && touched.email}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.email}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              )}\r\n            </ListGroup.Item>\r\n          )}\r\n\r\n          {/* Password */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Password\")}</Form.Label>\r\n            {!userEditorEditPassword ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditPassword(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditPassword(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditPassword && (\r\n              <>\r\n                {/* New password */}\r\n                <Form.Group controlId=\"validationFormikPassword\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      type={userEditorPasswordVisible ? \"text\" : \"password\"}\r\n                      placeholder={t(\"Enter new password\")}\r\n                      name=\"password\"\r\n                      ref={refPassword}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.password && touched.password}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <InputGroup.Text\r\n                        id=\"inputGroupAppend\"\r\n                        onClick={togglePassword}\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        {userEditorPasswordVisible ? (\r\n                          <VisibilityOff\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        ) : (\r\n                          <Visibility\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        )}\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.password}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              </>\r\n            )}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n\r\n        <Form.Group controlId=\"validationSubmitButton\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            visible={userEditorSubmitButtonVisible}\r\n            marginTop={20}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n      </Card>\r\n    </Form>\r\n  );\r\n\r\n  const jsx =\r\n    mode === \"label\" ? (\r\n      <span style={{ whiteSpace: \"nowrap\" }}>\r\n        {firstname} {lastname}\r\n      </span>\r\n    ) : (\r\n      <Formik\r\n        component={UserEditorForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          // firstName: userData.firstname,\r\n          // lastName: userData.lastname,\r\n          // email: userData.email,\r\n          // password: \"\",\r\n          firstName: userEditorFirstname,\r\n          lastName: userEditorLastname,\r\n          email: userEditorEmail,\r\n          password: userEditorPassword,\r\n        }}\r\n      />\r\n    );\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    request: \"get currencies\", // \"register currency\",\r\n    namespace: \"Currencies\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencies,\r\n    settings,\r\n    countCurrencies,\r\n    activePageCurrencies,\r\n    currenciesPerPage,\r\n    currencyAbbr,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyAbbr,\r\n    setResponseProps,\r\n    setCurrencyRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    showRequestStatus,\r\n    getCurrencies,\r\n    findCurrencies,\r\n    formatExchangeRate,\r\n    getObjectArrayElementIndex,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onCurrencySelected = (e) => {\r\n    setCurrencyAbbr(e.target.id);\r\n    sendRequest({\r\n      req: \"register user currency\",\r\n      data: { email: userData.email, currency_id: e.target.id },\r\n    });\r\n\r\n    // Fetch the selected currency rate\r\n    const id = getObjectArrayElementIndex(currencies, \"abbr\", e.target.id);\r\n    setCurrencyRate(currencies[id].rate);\r\n  };\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    setResponseProps(null);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageCurrencies > 1 ? activePageCurrencies - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageCurrencies < Math.ceil(countCurrencies / currenciesPerPage)\r\n            ? activePageCurrencies + 1\r\n            : Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getCurrencies(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrenciesForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <Search\r\n          placeholder={t(\"Find currency...\")}\r\n          onSubmit={findCurrencies}\r\n          {...args}\r\n        />\r\n      </div>\r\n      <Table responsive striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Currency\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Abbr\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Region\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Rate\")}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currencies !== null &&\r\n            currencies.map((currency, keyCurrency) => {\r\n              cnt++;\r\n              // console.log(\"CURRENCY\", currency);\r\n\r\n              const { name, abbr, rate, region } = currency;\r\n\r\n              if (\r\n                typeof settings[\"currencies\"] === \"undefined\" ||\r\n                settings[\"currencies\"] === null ||\r\n                settings[\"currencies\"].length === 0 ||\r\n                settings[\"currencies\"].includes(abbr)\r\n              ) {\r\n                // valid currency - continue\r\n              } else {\r\n                return \"\"; // invalid currency\r\n              }\r\n\r\n              return (\r\n                <tr key={keyCurrency}>\r\n                  <td style={{ textAlign: \"left\", paddingLeft: \"1rem\" }}>\r\n                    <Form.Check\r\n                      id={abbr}\r\n                      type=\"radio\"\r\n                      checked={currencyAbbr === abbr}\r\n                      aria-label=\"option 1\"\r\n                      label={name}\r\n                      custom\r\n                      inline\r\n                      onChange={onCurrencySelected}\r\n                      name=\"selected-currency\"\r\n                    />\r\n                  </td>\r\n                  <td style={{ textAlign: \"center\" }}>{abbr}</td>\r\n                  <td style={{ textAlign: \"left\" }}>{region}</td>\r\n                  <td style={{ textAlign: \"right\" }}>\r\n                    {formatExchangeRate(rate)}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {showRequestStatus(\r\n        \"get currencies / SELECT currencies\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No currencies\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countCurrencies}\r\n        itemsPerPage={currenciesPerPage}\r\n        active={activePageCurrencies}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  // onSubmit={onSubmit}\r\n  return (\r\n    <Formik\r\n      component={CurrenciesForm}\r\n      initialValues={{\r\n        curr_abbr: \"\",\r\n        curr_title: \"\",\r\n        curr_region: \"\",\r\n        curr_rate: 1.0,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"CurrencyRegistration\",\r\n    request: \"register currency\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    formatExchangeRate,\r\n    // getCurrencies,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([\"CurrencyRegistration\"]);\r\n\r\n  const refAbbr = React.createRef();\r\n  const refTitle = React.createRef();\r\n  const refRegion = React.createRef();\r\n  const refRate = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefAbbr = refAbbr.current;\r\n    const tempRefTitle = refTitle.current;\r\n    const tempRefRegion = refRegion.current;\r\n    const tempRefRate = refRate.current;\r\n    return () => {\r\n      if (tempRefAbbr !== null && currencyCode !== tempRefAbbr.value)\r\n        setCurrencyCode(tempRefAbbr.value);\r\n\r\n      if (tempRefTitle !== null && currencyName !== tempRefTitle.value)\r\n        setCurrencyName(tempRefTitle.value);\r\n\r\n      if (tempRefRegion !== null && currencyRegion !== tempRefRegion.value)\r\n        setCurrencyRegion(tempRefRegion.value);\r\n\r\n      if (tempRefRate !== null && currencyNewRate !== tempRefRate.value)\r\n        setCurrencyNewRate(tempRefRate.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    curr_abbr: yup\r\n      .string()\r\n      .required(t(\"Currency abbreviation is required\"))\r\n      .min(3, t(\"Currency abbreviation is too short\"))\r\n      .max(5, t(\"Currency abbreviation is too long\")),\r\n    curr_title: yup\r\n      .string()\r\n      .required(t(\"Currency name is required\"))\r\n      .min(3, t(\"Currency name is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency name is too long\")), // must be at most 70 characters\r\n    curr_region: yup\r\n      .string()\r\n      .required(t(\"Currency region is required\"))\r\n      .min(3, t(\"Currency region is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency region is too long\")), // must be at most 70 characters\r\n    curr_rate: yup\r\n      .string()\r\n      .required(t(\"Exchange rate is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Exchange Rate Regex\")),\r\n        t(\"Wrong exchange rate format\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrencyRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/* Currency abbreviation */}\r\n        <Form.Group controlId=\"validationFormikCurrAbbr\">\r\n          <Form.Label>{t(\"Abbreviation\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_abbr\"\r\n              ref={refAbbr}\r\n              value={values.curr_abbr}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_abbr && touched.curr_abbr}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_abbr}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency name */}\r\n        <Form.Group controlId=\"validationFormikCurrName\">\r\n          <Form.Label>{t(\"Currency Name\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_title\"\r\n              ref={refTitle}\r\n              value={values.curr_title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_title && touched.curr_title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_title}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency region */}\r\n        <Form.Group controlId=\"validationFormikCurrRegion\">\r\n          <Form.Label>{t(\"Currency Region\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_region\"\r\n              ref={refRegion}\r\n              value={values.curr_region}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_region && touched.curr_region}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_region}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Initial exchange rate */}\r\n        <Form.Group controlId=\"validationFormikCurrRate\">\r\n          <Form.Label>{t(\"Initial Exchange Rate\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={formatExchangeRate(1)}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_rate\"\r\n              value={values.curr_rate}\r\n              ref={refRate}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_rate && touched.curr_rate}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_rate}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={CurrencyRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        curr_abbr: currencyCode,\r\n        curr_title: currencyName,\r\n        curr_region: currencyRegion,\r\n        curr_rate: currencyNewRate,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AvTimer } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n//  let time = new Date().toLocaleString();\r\nimport { useInterval } from \"../../utils/useInterval\";\r\nimport { useEventListener } from \"../../utils/useEventListener\";\r\n\r\nimport ModalMessage from \"../modalMessage\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Constants\r\n     ============================================================================ */\r\n  const minute = 60; // seconds, for testing purposes > 60\r\n\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"IdleTimer\",\r\n    timeout: 5 * minute,\r\n    timestamp: null,\r\n    stage2: 60, // show seconds (vs minutes) in stage 2\r\n    stage3: 20, // show modal message on stage 3\r\n    onTick: () => {},\r\n    onTimerReset: () => {},\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { formatDate } = props.barrelFunctions;\r\n  const { onSessionTimeout } = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const [seconds, setSeconds] = useState(props.timeout);\r\n  const [modalMessageShow, setModalMessageShow] = React.useState(false);\r\n\r\n  useInterval(() => {\r\n    // Your custom logic here\r\n\r\n    setSeconds(seconds - 1);\r\n    props.onTick(seconds);\r\n  }, 1000);\r\n\r\n  useEventListener(() => {\r\n    setSeconds(props.timeout);\r\n    props.onTimerReset();\r\n  }, [\"mousedown\", \"click\", \"scroll\", \"keypress\"]); // \"click\",\r\n\r\n  useEffect(() => {\r\n    if (seconds === props.timeout) setModalMessageShow(false);\r\n    if (seconds === props.stage3) setModalMessageShow(true);\r\n    if (seconds === 0) onSessionTimeout();\r\n\r\n    // eslint-disable-next-line\r\n  }, [seconds]);\r\n\r\n  // useEffect(() => {\r\n  //   setSeconds(props.timeout);\r\n  //   props.onTimerReset();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [session]);\r\n\r\n  const getJSX = () => {\r\n    let currTime;\r\n    if (seconds > props.stage2) currTime = Math.ceil(seconds / minute);\r\n    else currTime = seconds;\r\n\r\n    const timeFormatted = formatDate(new Date(1970, 1, 1, 0, 0, currTime), {\r\n      minute: \"numeric\",\r\n      second: \"numeric\",\r\n    });\r\n\r\n    const onSessionContinue = () => {\r\n      // console.log(\"onSessionContinue\");\r\n      setSeconds(props.timeout);\r\n      setModalMessageShow(false);\r\n    };\r\n\r\n    const modalMessage = (\r\n      <>\r\n        <Trans\r\n          i18nKey=\"IdleTimer:Automatic logout\"\r\n          timeFormatted={timeFormatted}\r\n        >\r\n          <div className=\"text-center\">Automatic logout in</div>\r\n          <div\r\n            className=\"text-center\"\r\n            style={{ fontSize: \"4em\", fontWeight: \"bold\", color: \"#A93226\" }}\r\n          >\r\n            {{ timeFormatted }}\r\n          </div>\r\n          <div className=\"text-center\">\r\n            Do you want to continue the session?\r\n          </div>\r\n        </Trans>\r\n        <br />\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Continue now\")}\r\n          request=\"continue session\"\r\n          onSubmit={onSessionContinue}\r\n          namespace={props.namespace}\r\n        />\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <ModalMessage\r\n          show={modalMessageShow}\r\n          message={modalMessage}\r\n          onHide={() => setModalMessageShow(false)}\r\n        />\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip>\r\n              {seconds > props.stage2 ? (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Minutes to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  minutes.\r\n                </Trans>\r\n              ) : (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Seconds to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  seconds.\r\n                </Trans>\r\n              )}\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <div style={{ whiteSpace: \"nowrap\", cursor: \"default\" }}>\r\n            <AvTimer style={{ color: \"var(--dark)\" }} />\r\n            &nbsp;\r\n            {seconds > props.stage2 ? (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:minutes\" currTime={currTime}>\r\n                    {{ currTime }} minutes\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:min\" currTime={currTime}>\r\n                    {{ currTime }} min\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:seconds\" currTime={currTime}>\r\n                    {{ currTime }} seconds\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:sec\" currTime={currTime}>\r\n                    <span>{{ currTime }}</span> sec\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </OverlayTrigger>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useEventListener = (callback, events) => {\r\n  let defaults = {\r\n    namespace: \"EventListener\",\r\n\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, { events: events });\r\n\r\n  useEffect(() => {\r\n    const eventHandler = (e) => {\r\n      callback(e);\r\n    };\r\n\r\n    for (let i in props.events) {\r\n      window.addEventListener(props.events[i], eventHandler);\r\n    }\r\n\r\n    return () => {\r\n      for (let i in props.events) {\r\n        window.removeEventListener(props.events[i], eventHandler);\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import _ from \"lodash\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Button,\r\n  // Breadcrumb,\r\n  // NavDropdown,\r\n  // Alert,\r\n} from \"react-bootstrap\";\r\n// import Octicon, { SignOut } from \"@primer/octicons-react\";\r\nimport { PowerSettingsNew } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../../settings.json\";\r\nimport AccountRegistration from \"../../accountRegistration\";\r\n// import BusinessRegistration from \"../../businessRegistration\";\r\nimport { Balance, Transfer } from \"../../transfer\";\r\nimport MyBusiness from \"../../myBusiness\";\r\nimport UserEditor from \"../../userEditor\";\r\nimport CurrencyContainer from \"../../currencyContainer\";\r\nimport IdleTimer from \"../../idleTimer\";\r\n// import Login from \"../../login\";\r\nimport Contact from \"../../contact\";\r\n\r\n/**\r\n * Component: Summary\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"Summary\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    settings,\r\n    signedIn,\r\n    accountNumber,\r\n    sessionTimeout,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getBusinesses } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (signedIn === false) {\r\n    // setRedirectTo(\"/sign-out\");\r\n    return <>User not logged in</>;\r\n  }\r\n\r\n  const location = useLocation();\r\n\r\n  const navigation = (\r\n    <>\r\n      <Container\r\n        fluid\r\n        style={{\r\n          paddingRight: \"0\",\r\n          paddingLeft: \"0\",\r\n        }}\r\n      >\r\n        <Row>\r\n          {/*\r\n           * Top Menu\r\n           */}\r\n          <Col>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                // background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"var(--light)\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src={\r\n                    settings !== null && typeof settings[\"logo\"] !== \"undefined\"\r\n                      ? settings[\"logo\"]\r\n                      : \"gfx/zlogo_light.png\"\r\n                  }\r\n                  alt=\"\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link eventKey=\"profile\" href=\"/profile\">\r\n                  <UserEditor {...args} />\r\n                </Nav.Link>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link eventKey=\"sign-out\" href=\"/sign-out\">\r\n                  <span style={{ whiteSpace: \"nowrap\" }}>\r\n                    <span>\r\n                      <PowerSettingsNew style={{ color: \"var(--dark)\" }} />\r\n                    </span>\r\n\r\n                    <span className=\"d-none d-sm-inline\">\r\n                      &nbsp;\r\n                      {t(\"Sign out\")}\r\n                    </span>\r\n                  </span>\r\n                </Nav.Link>\r\n              </Nav>\r\n              {true && (\r\n                <Nav>\r\n                  <Nav.Item>\r\n                    <IdleTimer timeout={sessionTimeout} {...args} />\r\n                  </Nav.Item>\r\n                </Nav>\r\n              )}\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <div style={{ height: \"7px\" }}></div>\r\n            <Navbar\r\n              collapseOnSelect\r\n              expand=\"sm\"\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"dark\"\r\n              variant=\"dark\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                backgroundColor: \"var(--dark)\",\r\n                boxShadow: \"none\",\r\n              }}\r\n            >\r\n              <Nav>\r\n                <Nav.Link\r\n                  className=\"nav-link-2\"\r\n                  eventKey=\"balance\"\r\n                  href=\"/balance\"\r\n                  style={{\r\n                    fontWeight:\r\n                      location.pathname === \"/balance\" ? \"bold\" : \"normal\",\r\n                  }}\r\n                >\r\n                  {t(\"Balance\")}\r\n                </Nav.Link>\r\n              </Nav>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                  {accountNumber !== null && (\r\n                    <>\r\n                      <Nav.Link\r\n                        className=\"nav-link-2\"\r\n                        eventKey=\"transfer\"\r\n                        href=\"/transfer\"\r\n                        style={{\r\n                          fontWeight:\r\n                            location.pathname === \"/transfer\"\r\n                              ? \"bold\"\r\n                              : \"normal\",\r\n                        }}\r\n                      >\r\n                        {t(\"Transfer\")}\r\n                      </Nav.Link>\r\n                      <Nav.Link\r\n                        className=\"nav-link-2\"\r\n                        eventKey=\"my-business\"\r\n                        onClick={() => getBusinesses(1)}\r\n                        href=\"#\"\r\n                        style={{\r\n                          fontWeight:\r\n                            location.pathname === \"/my-business\"\r\n                              ? \"bold\"\r\n                              : \"normal\",\r\n                        }}\r\n                      >\r\n                        {t(\"Business\")}\r\n                      </Nav.Link>\r\n\r\n                      {/**\r\n                       * Currency\r\n                       */}\r\n                      {settings !== null &&\r\n                        typeof settings[\"currencies\"] !== \"undefined\" &&\r\n                        (settings[\"currencies\"] === null ||\r\n                          settings[\"currencies\"].length === 0 ||\r\n                          settings[\"currencies\"].length > 1) && (\r\n                          <Nav.Link\r\n                            className=\"nav-link-2\"\r\n                            eventKey=\"currency\"\r\n                            href=\"/currency\"\r\n                            style={{\r\n                              fontWeight:\r\n                                location.pathname === \"/currency\"\r\n                                  ? \"bold\"\r\n                                  : \"normal\",\r\n                            }}\r\n                          >\r\n                            {t(\"Currency\")}\r\n                          </Nav.Link>\r\n                        )}\r\n                    </>\r\n                  )}\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n\r\n  const pageBody = (\r\n    <Router>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/summary\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/account-registration\"\r\n          component={() => {\r\n            return AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/profile\"\r\n          component={() => {\r\n            return UserEditor({ ...args, mode: \"profile\" });\r\n          }}\r\n        />\r\n        {settings !== null &&\r\n          typeof settings[\"currencies\"] !== \"undefined\" &&\r\n          (settings[\"currencies\"] === null ||\r\n            settings[\"currencies\"].length === 0 ||\r\n            settings[\"currencies\"].length > 1) && (\r\n            <Route\r\n              exact\r\n              path=\"/currency\"\r\n              component={() => {\r\n                return CurrencyContainer({ ...args });\r\n              }}\r\n            />\r\n          )}\r\n\r\n        <Route\r\n          exact\r\n          path=\"/my-business\"\r\n          component={() => {\r\n            return MyBusiness(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/balance\"\r\n          component={() => {\r\n            return Balance(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/transfer\"\r\n          component={() => {\r\n            return Transfer(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/contact\"\r\n          component={() => {\r\n            return Contact(args);\r\n          }}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n\r\n      {/* Content */}\r\n      {/*<h3>{t(\"Summary\")}</h3>*/}\r\n\r\n      <Container fluid=\"md\">\r\n        <Row>\r\n          <Col>\r\n            {navigation}\r\n            <div style={{ height: \"7px\" }}></div>\r\n          </Col>\r\n        </Row>\r\n        {/*\r\n        <Row>{viewAccountRegistration}</Row>\r\n        */}\r\n        <Row>\r\n          <Col>{pageBody}</Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../settings.json\";\r\n// import Card from \"../card\";\r\nimport Currencies from \"../currencies\";\r\nimport CurrencyRegistration from \"../currencyRegistration\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    accordionViewCurrency,\r\n    activePageCurrencies,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setAccordionViewCurrency,\r\n    setRedirectTo,\r\n    setResponseProps,\r\n  } = props.barrelSetters;\r\n  const { getCurrencies } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const ToggleCurrencies = () => {\r\n    if (accordionViewCurrency !== \"currencies\") {\r\n      setResponseProps(null);\r\n      setAccordionViewCurrency(\"currencies\");\r\n      getCurrencies(activePageCurrencies);\r\n    } else {\r\n      setAccordionViewCurrency(null);\r\n    }\r\n  };\r\n\r\n  const ToggleCurrencyRegistration = () => {\r\n    setAccordionViewCurrency(\r\n      accordionViewCurrency !== \"currencyRegistration\"\r\n        ? \"currencyRegistration\"\r\n        : null\r\n    );\r\n  };\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  if (\r\n    typeof settings[\"currencies\"] !== \"undefined\" &&\r\n    settings[\"currencies\"] !== null &&\r\n    settings[\"currencies\"].length < 2\r\n  ) {\r\n    return <></>; // currency creation is disabled\r\n  } else {\r\n    return (\r\n      <>\r\n        <Accordion defaultActiveKey={accordionViewCurrency}>\r\n          <Card>\r\n            <Accordion.Toggle\r\n              as={Card.Header}\r\n              eventKey=\"currencies\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={ToggleCurrencies}\r\n            >\r\n              {t(\"Currencies\")}\r\n            </Accordion.Toggle>\r\n\r\n            <Accordion.Collapse eventKey=\"currencies\">\r\n              <Card.Body>\r\n                <Currencies {...args} />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n\r\n          {typeof settings[\"currencyCreationAllowed\"] !== \"undefined\" &&\r\n            settings[\"currencyCreationAllowed\"] && (\r\n              <Card>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey=\"currencyRegistration\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={ToggleCurrencyRegistration}\r\n                >\r\n                  {t(\"Currency Registration\")}\r\n                </Accordion.Toggle>\r\n\r\n                <Accordion.Collapse eventKey=\"currencyRegistration\">\r\n                  <Card.Body>\r\n                    <CurrencyRegistration {...args} />\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            )}\r\n        </Accordion>\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { TransferToSelf, TransferToPerson, TransferToBusiness } from \"./index\";\r\n// import { Alert } from \"react-bootstrap\";\r\n\r\n// const navigation = [\r\n//   {\r\n//     name: \"U2S\",\r\n//     link: \"#u2s\",\r\n//   },\r\n//   {\r\n//     name: \"U2U\",\r\n//     link: \"#u2u\",\r\n//   },\r\n//   {\r\n//     name: \"U2B\",\r\n//     link: \"#u2b\",\r\n//   },\r\n// ];\r\n\r\n/**\r\n * Component: Transfer\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber, transferType } = props.barrelGetters;\r\n  const { setRedirectTo } = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  const { onTransferTypeChange } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"Transfer\");\r\n\r\n  const data = props.data;\r\n  const type = transferType;\r\n  // const onTypeChange = args.onTypeChange;\r\n\r\n  // console.log(\"TRANSFER DATA TYPE:\", type);\r\n\r\n  const [transferCard, setTransferCard] = useState(null);\r\n\r\n  const onNavigationClick = (id) => {\r\n    onTransferTypeChange(id);\r\n  };\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"U2S\"),\r\n      link: \"#u2s\",\r\n    },\r\n    {\r\n      name: t(\"U2U\"),\r\n      link: \"#u2u\",\r\n    },\r\n    {\r\n      name: t(\"U2B\"),\r\n      link: \"#u2b\",\r\n    },\r\n  ];\r\n\r\n  // console.log(\"TRANSFER DATA\", data);\r\n  // const title = t(\"Transfer to account\");\r\n\r\n  useEffect(() => {\r\n    if (type === null) return;\r\n\r\n    // setTransferCard()\r\n    switch (type) {\r\n      case \"#u2s\": // User to self\r\n        setTransferCard(\r\n          <TransferToSelf\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      case \"#u2u\": // User to user\r\n        setTransferCard(\r\n          <TransferToPerson\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      case \"#u2b\": // User to business\r\n        setTransferCard(\r\n          <TransferToBusiness\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [data, format, type]);\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  // return (\r\n  //   <>\r\n  //     <Alert variant=\"warning\">\r\n  //       <Alert.Heading>{t(\"Account not yet registered\")}</Alert.Heading>\r\n  //       <p>\r\n  //         <Trans i18nKey=\"Balance:Please set up your account first.\">\r\n  //           Please set up your account first. Use this{\" \"}\r\n  //           <a href=\"/account-registration\">link</a>.\r\n  //         </Trans>\r\n  //       </p>\r\n  //     </Alert>\r\n  //   </>\r\n  // );\r\n\r\n  return <>{transferCard}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Contact\", request: \"send message\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    language,\r\n    accountNumber,\r\n    contactSubject,\r\n    contactMessage,\r\n  } = props.barrelGetters;\r\n  const { setContactSubject, setContactMessage } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refSubject = React.createRef();\r\n  const refMessage = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefSubject = refSubject.current;\r\n    const tempRefMessage = refMessage.current;\r\n    return () => {\r\n      // console.log(\"ON UNMOUNT:\", tempRefSubject.value);\r\n      if (tempRefSubject !== null && contactSubject !== tempRefSubject.value)\r\n        setContactSubject(tempRefSubject.value);\r\n\r\n      if (tempRefMessage !== null && contactMessage !== tempRefMessage.value)\r\n        setContactMessage(tempRefMessage.value);\r\n      // console.log(\"CONTACT UNMOUNTS\");\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    subject: yup.string().required(t(\"Subject is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.sender = accountNumber;\r\n    data.language = language;\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  // const navigation = [\r\n  //   {\r\n  //     name: t(\"U2S\"),\r\n  //     link: \"#u2s\",\r\n  //   },\r\n  // ];\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card header={false}>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * Subject\r\n         */}\r\n        <Form.Group controlId=\"validationFormikSubject\">\r\n          <Form.Label>{t(\"Subject\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={t(\"Enter message subject\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"subject\"\r\n              ref={refSubject}\r\n              value={values.subject}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setContactSubject(e.target.value);\r\n              }}\r\n              isInvalid={!!errors.subject && touched.subject}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.subject}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Message\r\n         */}\r\n        <Form.Group controlId=\"validationFormikMessage\">\r\n          <Form.Label>{t(\"Message\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter message\")}\r\n            name=\"message\"\r\n            value={values.message}\r\n            ref={refMessage}\r\n            onChange={handleChange}\r\n            as=\"textarea\"\r\n            rows=\"10\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        subject: contactSubject,\r\n        message: contactMessage,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  // Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Spinner,\r\n} from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Alert from \"../alert\";\r\n// import LanguageSelector from \"../language-selector\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"ALERT DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { ip, logInEmail, logInPassword } = props.barrelGetters;\r\n  const {\r\n    setLoggingIn,\r\n    setUpdateInterval,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    getUri,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"LogIn\");\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (tempRefEmail !== null && logInEmail !== tempRefEmail.value)\r\n        setLogInEmail(tempRefEmail.value);\r\n\r\n      if (tempRefPassword !== null && logInPassword !== tempRefPassword.value)\r\n        setLogInPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup.string().required(t(\"No password provided\")),\r\n  });\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserLogInRequest = (data) => {\r\n    // data.pw = data.password;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.ip = ip;\r\n    data.uri = getUri();\r\n    sendRequest({ req: \"sign in user\", data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    setUpdateInterval(-1);\r\n    setLoggingIn(true);\r\n    sendUserLogInRequest(data);\r\n  };\r\n\r\n  const UserLogInForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Sign In\")}</h3>\r\n\r\n      {/**\r\n       * Email\r\n       */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            // autoFocus\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Password\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"Password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            ref={refPassword}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Submit button\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"sign in user\"\r\n          namespace=\"LogIn\"\r\n        />\r\n      </Form.Group>\r\n\r\n      <Container fluid=\"md\">\r\n        <Row>\r\n          {/**\r\n           * Register\r\n           */}\r\n          <Col>\r\n            <p className=\"other-options text-left\">\r\n              <Trans i18nKey=\"LogIn:Not yet registered\">\r\n                Not yet <a href=\"/sign-up\">registered?</a>\r\n              </Trans>\r\n            </p>\r\n          </Col>\r\n\r\n          {/**\r\n           * Forgot password\r\n           */}\r\n          <Col>\r\n            <p className=\"other-options text-right\">\r\n              <Trans i18nKey=\"LogIn:Forgot password\">\r\n                Forgot <a href=\"/reset\">password?</a>\r\n              </Trans>\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={UserLogInForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          email: logInEmail,\r\n          password: logInPassword,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"register user\", namespace: \"SignUp\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    language,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n  } = props.barrelSetters;\r\n  const { getReviser, getWorkplace, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefFirstName = refFirstName.current;\r\n    const tempRefLastName = refLastName.current;\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (\r\n        tempRefFirstName !== null &&\r\n        signUpFirstName !== tempRefFirstName.value\r\n      )\r\n        setSignUpFirstName(tempRefFirstName.value);\r\n\r\n      if (tempRefLastName !== null && signUpLastName !== tempRefLastName.value)\r\n        setSignUpLastName(tempRefLastName.value);\r\n\r\n      if (tempRefEmail !== null && signUpEmail !== tempRefEmail.value)\r\n        setSignUpEmail(tempRefEmail.value);\r\n\r\n      if (tempRefPassword !== null && signUpPassword !== tempRefPassword.value)\r\n        setSignUpPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    firstName: yup.string().required(t(\"First name is required\")),\r\n    lastName: yup.string().required(t(\"Last name is required\")),\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.language = language;\r\n    data.validateEmail = true;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const UserRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Sign Up\")}</h3>\r\n\r\n      {/**\r\n       * First name\r\n       */}\r\n      <Form.Group controlId=\"validationFormikFirstName\">\r\n        <Form.Label>{t(\"First name\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter first name\")}\r\n            name=\"firstName\"\r\n            ref={refFirstName}\r\n            // autoFocus\r\n            value={values.firstName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.firstName && touched.firstName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.firstName}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Last name\r\n       */}\r\n      <Form.Group controlId=\"validationFormikLastName\">\r\n        <Form.Label>{t(\"Last name\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter last name\")}\r\n            name=\"lastName\"\r\n            ref={refLastName}\r\n            value={values.lastName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.lastName && touched.lastName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.lastName}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Email\r\n       */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Password\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"Password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            ref={refPassword}\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Submit button\r\n       */}\r\n      <Form.Group controlId=\"validationSubmitButton\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Login link\r\n       */}\r\n      <p className=\"other-options text-right\">\r\n        <Trans i18nKey=\"SignUp:Already registered\">\r\n          Already registered <a href=\"/sign-in\">sign in?</a>\r\n        </Trans>\r\n      </p>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={UserRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        firstName: signUpFirstName,\r\n        lastName: signUpLastName,\r\n        email: signUpEmail,\r\n        password: signUpPassword,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useTimeout = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setTimeout(tick, delay);\r\n      return () => clearTimeout(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Overlay.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { cloneElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Overlay\",\r\n    visible: false,\r\n    variant: \"info\",\r\n    dismissible: false,\r\n    onClose: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"dismissible:\", props.dismissible);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  useTimeout(\r\n    () => {\r\n      props.onClose();\r\n    },\r\n    !props.dismissible ? 5000 : -1 // millisec till overlay closes, -1 never\r\n  );\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      let className = \"custom-overlay\";\r\n\r\n      /**\r\n       * Implement property: dismissible\r\n       */\r\n      if (props.dismissible) {\r\n        className += \" alert-dismissible\";\r\n      }\r\n\r\n      /**\r\n       * Implement property: variant\r\n       */\r\n      switch (props.variant) {\r\n        case \"danger\":\r\n          className += \" alert-danger\";\r\n          break;\r\n\r\n        default:\r\n          className += \" alert-info\";\r\n          break;\r\n      }\r\n      let key = 0;\r\n      return (\r\n        <div className={className}>\r\n          {props.dismissible && (\r\n            <button type=\"button\" className=\"close\" onMouseDown={props.onClose}>\r\n              <span aria-hidden=\"true\">×</span>\r\n              <span className=\"sr-only\">Close alert</span>\r\n            </button>\r\n          )}\r\n          {React.Children.map(args.children, (child) => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                ...args,\r\n                styles: null,\r\n                key: key,\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./AlertContainer.css\";\r\n\r\n/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = { namespace: \"AlertContainer\", visible: false }; // TODO: adjust namespace\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      return (\r\n        <div className=\"alert-container\">\r\n          {React.Children.map(args.children, (child) => child)}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Alert } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Overlay from \"../overlay\";\r\nimport AlertContainer from \"../alertContainer\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args.data);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onAlertClose: onClose } = props.barrelEventHandlers;\r\n\r\n  // let t;\r\n  const errorStrings = useTranslation(\"Errors\").t;\r\n  const infoStrings = useTranslation(\"Infos\").t;\r\n\r\n  if (error !== null && info !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <>\r\n        <AlertContainer visible={true}>\r\n          {msgError !== \"\" && msgError !== null && (\r\n            <Overlay\r\n              visible={true}\r\n              variant=\"danger\"\r\n              onClose={() => onClose(\"error\")}\r\n              dismissible={error.dismissible}\r\n            >\r\n              {msgError}\r\n            </Overlay>\r\n          )}\r\n\r\n          {msgInfo !== \"\" && msgInfo !== null && (\r\n            <Overlay\r\n              visible={true}\r\n              variant=\"info\"\r\n              onClose={() => onClose(\"info\")}\r\n              dismissible={info.dismissible}\r\n            >\r\n              {msgInfo}\r\n            </Overlay>\r\n          )}\r\n        </AlertContainer>\r\n      </>\r\n    );\r\n  } else if (error !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        {msgError !== \"\" && msgError !== null && (\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"danger\"\r\n            onClose={() => onClose(\"error\")}\r\n            dismissible={error.dismissible}\r\n          >\r\n            {msgError}\r\n          </Overlay>\r\n        )}\r\n      </AlertContainer>\r\n    );\r\n  } else if (info !== null) {\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        {msgInfo !== \"\" && msgInfo !== null && (\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"info\"\r\n            onClose={() => onClose(\"info\")}\r\n            dismissible={info.dismissible}\r\n          >\r\n            {msgInfo}\r\n          </Overlay>\r\n        )}\r\n      </AlertContainer>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../../translations/i18n\";\r\n// import { withNamespaces } from \"react-i18next\";\r\nimport { Form, Badge } from \"react-bootstrap\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { userData } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"LanguageSelector\");\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n  const languages = [\r\n    { id: 1, language: \"Latviešu\", code: \"lv\" },\r\n    { id: 2, language: \"English\", code: \"en\" },\r\n  ];\r\n  const handleLanguageSelect = (e) => {\r\n    changeLanguage(e.target.value);\r\n  };\r\n  const selectLanguage = (language) => {\r\n    changeLanguage(language);\r\n\r\n    if (userData !== null) {\r\n      sendRequest({\r\n        req: \"register user language\",\r\n        data: { email: userData.email, language },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (1) {\r\n    return (\r\n      <>\r\n        <div style={{ height: \"7px\" }}></div>\r\n        <Badge\r\n          pill\r\n          variant=\"light\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            selectLanguage(\"en\");\r\n          }}\r\n        >\r\n          en\r\n        </Badge>{\" \"}\r\n        <Badge\r\n          pill\r\n          variant=\"light\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            selectLanguage(\"lv\");\r\n          }}\r\n        >\r\n          lv\r\n        </Badge>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <Form.Control\r\n        as=\"select\"\r\n        id=\"languageSelector\"\r\n        onChange={handleLanguageSelect}\r\n        custom\r\n      >\r\n        <option key=\"0\" value={props.language}>\r\n          {t(\"Language\")}\r\n        </option>\r\n        {languages.map((el) => (\r\n          <option key={el.id} value={el.code}>\r\n            {el.language}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    );\r\n  }\r\n};\r\n\r\n// function selectElement(id, valueToSelect) {\r\n//   let element = document.getElementById(id);\r\n//   if (!element) return;\r\n//   element.value = valueToSelect;\r\n// }\r\n\r\n// // catch the event and make changes accordingly\r\n// i18n.on(\"languageChanged\", function (lng) {\r\n//   selectElement(\"languageSelector\", lng);\r\n// });\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\n// import { Overlay } from \"react-bootstrap\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n// import moment from \"moment\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Summary from \"../summary\";\r\n// import {\r\n//   useSocket,\r\n//   sendData,\r\n//   startSession,\r\n//   endSession,\r\n// } from \"../../../utils/sockets\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n// import { useInterval } from \"../../../utils/useInterval\";\r\nimport Login from \"../../login\";\r\nimport Logout from \"../../logout\";\r\nimport SignUp from \"../../signup\";\r\nimport PasswordReset from \"../../passwordReset\";\r\n\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport ValidateEmail from \"../../validateEmail\";\r\nimport ChangePassword from \"../../changePassword\";\r\nimport Auth from \"../../auth\";\r\n// import UnderConstruction from \"../../underConstruction\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\nimport { useTimeout } from \"../../../utils/useTimeout\";\r\n// import Overlay from \"../../overlay\";\r\n\r\n/**\r\n * Component: Main\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const {\r\n    session,\r\n    // instance,\r\n    // debug,\r\n    serverResponseReceived,\r\n    // secureSession,\r\n    signedIn,\r\n    userData,\r\n    dailyAllowanceDispatched,\r\n    accountNumber,\r\n    // updateInterval,\r\n    externalRequest,\r\n    cartContent,\r\n    validateTokenEmail,\r\n    passwordResetTokenValidated,\r\n    validateTokenPasswordReset,\r\n    connected,\r\n    // deleteResponseProp,\r\n    isExternalRequest,\r\n    clearRefs,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRequestTimedOut,\r\n    setUpdateInterval,\r\n    setDailyAllowanceDispatched,\r\n    // setSessionTimeoutApplied,\r\n    // setSecureSession,\r\n    // setSignedIn,\r\n    // setRedirectTo,\r\n    setRequest,\r\n    setIsExternalRequest,\r\n    setUserEditorFirstname,\r\n    setUserEditorLastname,\r\n    setUserEditorEmail,\r\n    setUserEditorPassword,\r\n\r\n    // Currency registration\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n\r\n    // Business registration\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n\r\n    // Purpose registration\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationKeywords,\r\n\r\n    // Contact\r\n    setContactSubject,\r\n    setContactMessage,\r\n\r\n    // Date range\r\n    setDateRangeStart,\r\n    setDateRangeEnd,\r\n\r\n    //\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // processUserResponse,\r\n    getIP,\r\n    getCart,\r\n    getCartPurposes,\r\n    // updateLastSeenUser,\r\n    getAccountData,\r\n    sendRequest,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    getContainerClass,\r\n    getRedirect,\r\n    showMessage,\r\n  } = props.barrelFunctions;\r\n  const {\r\n    onRedirect,\r\n    onSessionStart,\r\n    // onSessionEnd,\r\n  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  // useSocket((data) => {\r\n  //   processUserResponse({\r\n  //     args: data,\r\n  //     barrels: barrels,\r\n  //   });\r\n  // });\r\n\r\n  // useInterval(() => {\r\n  //   updateLastSeenUser();\r\n  //   setSessionTimeoutApplied(false);\r\n  //   // console.log(\"setSessionTimeoutApplied(false)\");\r\n  // }, updateInterval);\r\n\r\n  /** \r\n   * Effect hooks\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On mount / on unmount\r\n   */\r\n  useEffect(() => {\r\n    getIP();\r\n\r\n    getCart();\r\n\r\n    return () => {\r\n      // on unmount\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * On session ID change\r\n   */\r\n  useEffect(() => {\r\n    if (session === null) return;\r\n\r\n    onSessionStart();\r\n\r\n    // eslint-disable-next-line\r\n  }, [session]);\r\n\r\n  /**\r\n   * On connected\r\n   */\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n  }, [connected]);\r\n\r\n  /**\r\n   * On request timeout\r\n   */\r\n  useTimeout(\r\n    () => {\r\n      setRequestTimedOut(true);\r\n      setRequest(null);\r\n      showMessage(\"REQUEST_EXPIRED\", \"info\");\r\n    },\r\n    serverResponseReceived === false ? 7000 : -1 // 7 sec till socket request timeout\r\n  );\r\n\r\n  /**\r\n   * Map user data to user editor vars\r\n   */\r\n  useEffect(() => {\r\n    if (userData === null) return;\r\n    setUserEditorFirstname(userData.firstname);\r\n    setUserEditorLastname(userData.lastname);\r\n    setUserEditorEmail(userData.email);\r\n    setUserEditorPassword(\"\");\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(userData)]);\r\n\r\n  /**\r\n   * On signed in status change\r\n   */\r\n  useEffect(() => {\r\n    if (!signedIn) return;\r\n\r\n    setUpdateInterval(-1);\r\n\r\n    // Dispatch daily allowance\r\n    if (accountNumber !== null && !dailyAllowanceDispatched) {\r\n      getAccountData();\r\n      sendRequest({\r\n        req: \"dispatch daily allowance\",\r\n        data: { uid: accountNumber },\r\n      });\r\n      setDailyAllowanceDispatched(true);\r\n    }\r\n\r\n    /**\r\n     * Handle external request\r\n     */\r\n    // let redirectTarget;\r\n    if (accountNumber !== null) {\r\n      if (isExternalRequest) {\r\n        // redirectTarget = \"/auth\";\r\n        setIsExternalRequest(false);\r\n        onRedirect(\"/auth\");\r\n      } else {\r\n        // Dispatch daily allowance\r\n        // if (!dailyAllowanceDispatched) {\r\n        //   sendRequest({\r\n        //     req: \"dispatch daily allowance\",\r\n        //     data: { uid: accountNumber },\r\n        //   });\r\n        //   setDailyAllowanceDispatched(true);\r\n        // }\r\n        // redirectTarget = \"/summary\";\r\n        // onRedirect(\"/account-registration\");\r\n      }\r\n    } else {\r\n      // redirectTarget = \"/account-registration\";\r\n      onRedirect(\"/account-registration\");\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [signedIn]);\r\n\r\n  /**\r\n   * On account number change\r\n   */\r\n  useEffect(() => {\r\n    if (accountNumber === null) return;\r\n\r\n    // eslint-disable-next-line\r\n  }, [accountNumber]);\r\n\r\n  /**\r\n   * Clear refs\r\n   */\r\n  useEffect(() => {\r\n    if (clearRefs === false) return;\r\n\r\n    // Business registration\r\n    setBusinessRegistrationAddTitle(\"\");\r\n    setBusinessRegistrationAddDescription(\"\");\r\n\r\n    // Purpose registration\r\n    setPurposeRegistrationTitle(\"\");\r\n    setPurposeRegistrationDescription(\"\");\r\n    setPurposeRegistrationKeywords(\"\");\r\n\r\n    // Currency registration\r\n    setCurrencyCode(\"\");\r\n    setCurrencyName(\"\");\r\n    setCurrencyRegion(\"\");\r\n    setCurrencyNewRate(\"\");\r\n\r\n    // Contact\r\n    setContactSubject(\"\");\r\n    setContactMessage(\"\");\r\n\r\n    // Date range\r\n    setDateRangeStart(\"\");\r\n    setDateRangeEnd(\"\");\r\n\r\n    setClearRefs(false);\r\n\r\n    // eslint-disable-next-line\r\n  }, [clearRefs]);\r\n\r\n  /**\r\n   * On external request\r\n   */\r\n  useEffect(() => {\r\n    if (externalRequest === null) return;\r\n\r\n    const data = {\r\n      customer: accountNumber,\r\n      cart: externalRequest.cart,\r\n    };\r\n\r\n    sendRequest({ req: \"get cart\", data: data });\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(externalRequest)]);\r\n\r\n  /**\r\n   * On cart content change\r\n   */\r\n  useEffect(() => {\r\n    if (cartContent === null) return;\r\n\r\n    getCartPurposes();\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(cartContent)]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenEmail === null) return;\r\n\r\n    sendEmailValidationRequest(JSON.parse(validateTokenEmail));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenEmail]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (passwordResetTokenValidated === null) return;\r\n\r\n    onRedirect(\"/password\");\r\n\r\n    // eslint-disable-next-line\r\n  }, [passwordResetTokenValidated]);\r\n\r\n  /**\r\n   * On password reset validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenPasswordReset === null) return;\r\n\r\n    sendPasswordResetRequest(JSON.parse(validateTokenPasswordReset));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenPasswordReset]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  // const [show, setShow] = React.useState(true);\r\n  // const target = React.useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          <Alert data={barrels} />\r\n\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              {false && (\r\n                <div>\r\n                  <Alert data={barrels} />\r\n                </div>\r\n              )}\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(barrels) : Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign in\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-in\"\r\n                  component={() => {\r\n                    return !signedIn ? Login(barrels) : Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign up\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-up\"\r\n                  component={() => {\r\n                    return SignUp(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign up\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/auth\"\r\n                  component={() => (signedIn ? Auth(barrels) : Login(barrels))}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Validate mail\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/validate-email\"\r\n                  component={() => {\r\n                    return ValidateEmail(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Change password\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/password\"\r\n                  component={() => {\r\n                    return ChangePassword(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: User profile\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/profile\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(barrels) : Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Currency\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/currency\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(barrels) : Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign out\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-out\"\r\n                  component={() => {\r\n                    return Logout(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Password reset\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/reset\"\r\n                  component={() => {\r\n                    return PasswordReset(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Account registration\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/account-registration\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Business registration\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/business-registration\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: My business\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/my-business\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Balance\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/balance\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Transfer\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/transfer\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Contact\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/contact\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Summary\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/summary\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span style={{ width: \"40%\" }}>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n\r\n                <span\r\n                  className=\"text-muted\"\r\n                  style={{\r\n                    float: \"left\",\r\n                    marginLeft: \"18px\",\r\n                    width: \"30%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                >\r\n                  {signedIn &&\r\n                    window.location.pathname !== \"/contact\" &&\r\n                    window.location.pathname !== \"/account-registration\" && (\r\n                      <small>&nbsp;</small>\r\n                    )}\r\n                </span>\r\n\r\n                <span\r\n                  className=\"text-muted\"\r\n                  style={{\r\n                    float: \"right\",\r\n                    marginRight: \"18px\",\r\n                    width: \"30%\",\r\n                    textAlign: \"right\",\r\n                    // backgroundColor: \"red\",\r\n                  }}\r\n                >\r\n                  {signedIn &&\r\n                    window.location.pathname !== \"/contact\" &&\r\n                    window.location.pathname !== \"/account-registration\" && (\r\n                      <small>\r\n                        <a href=\"/contact\">{t(\"Contact\")}</a>\r\n                      </small>\r\n                    )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Checkout\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    // externalRequest,\r\n    // accountNumber,\r\n    cartContent,\r\n    cartPurposes,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const Cart = () => {\r\n    let priceTotal = 0;\r\n    let priceReal = 0;\r\n\r\n    return (\r\n      <>\r\n        {cartContent !== null &&\r\n          cartContent.map((element, key) => {\r\n            priceTotal += element.price * element.amount;\r\n            let product_found = \"N\";\r\n\r\n            if (cartPurposes !== null) {\r\n              let product = cartPurposes.find(\r\n                (products) => products.purpose_id === element.product\r\n              );\r\n\r\n              if (typeof product !== \"undefined\") {\r\n                product_found = \"Y\";\r\n                priceReal += element.price * element.amount;\r\n              }\r\n              // console.log(\"product:\", product);\r\n            }\r\n\r\n            //   if (typeof product !== \"undefined\") {\r\n            //     product_found = product.title;\r\n            //   }\r\n            // }\r\n            return (\r\n              <div key={key}>\r\n                <div>product: {element.product}</div>\r\n                <div>price: {element.price}</div>\r\n                <div>amount: {element.amount}</div>\r\n                <div>found: {product_found}</div>\r\n                <br />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        <div>Total: {format(priceTotal)}</div>\r\n        <div>Real: {format(priceReal)}</div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const cart = typeof externalRequest.cart ? externalRequest.cart : \"\";\r\n    // <div>External request: {JSON.stringify(externalRequest)}</div>\r\n    return (\r\n      <Card title={t(\"Checkout\")}>\r\n        <div>\r\n          <Cart />\r\n        </div>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ValidateEmail\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    // validateTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    language,\r\n  } = props.barrelGetters;\r\n  const { setValidateTokenEmail } = props.barrelSetters;\r\n  const { getUrlParam, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Hooks\r\n    ============================================================================ */\r\n\r\n  // setToken(getUrlParam(\"token\"));\r\n  // setEmail(getUrlParam(\"email\"));\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenEmail(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (data) => {\r\n    // const vte = JSON.parse(validateTokenEmail);\r\n    // if (vte === null) return;\r\n    // const { token, email } = vte;\r\n    // console.log(data, validationTokenEmail);\r\n    sendRequest({\r\n      req: \"resend validate email token\",\r\n      data: {\r\n        token: validationTokenEmail.token,\r\n        email: validationTokenEmail.email,\r\n        language,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const queryString = window.location.search;\r\n    // const urlParams = new URLSearchParams(queryString);\r\n\r\n    return token === null ? (\r\n      <>\r\n        <h4>{t(\"A verification link has been sent to your email account.\")}</h4>\r\n        <hr />\r\n        <p>\r\n          {t(\r\n            \"Please click on the link that has just been sent to your email account\"\r\n          )}\r\n        </p>\r\n        {validationTokenEmailResent < 5 && (\r\n          <>\r\n            <br />\r\n            <h5>{t(\"Didn't receive email?\")}</h5>\r\n\r\n            <SubmitButton\r\n              {...args}\r\n              caption={t(\"Submit\")}\r\n              visible={true}\r\n              marginTop={20}\r\n              request={\"resend validate email token\"}\r\n              namespace={props.namespace}\r\n              onSubmit={handleSubmit}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    ) : (\r\n      <div className=\"text-center\">\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"border\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={false}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ChangePassword\",\r\n    request: \"change password\",\r\n    email: null,\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([\r\n    passwordResetTokenValidated === true ? \"SignUp\" : \"ChangePassword\",\r\n  ]); // adjust namespace\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.email = passwordResetTokenEmail;\r\n    // console.log(data);\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ChangePasswordForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Password */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"New password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  if (passwordResetTokenValidated === true) {\r\n    // if (true) {\r\n    return (\r\n      <Formik\r\n        component={ChangePasswordForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          password: \"\",\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    // if (passwordResetTokenValidated === false)\r\n    return <>{t(\"Awaiting validation\")}</>;\r\n    // } else {\r\n    //   // null\r\n    //   return <>How did you land here???</>;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(\"Logout\");\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info, language } = props.barrelGetters;\r\n  const { setLanguage, setInfo, setError } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onLogOut } = props.barrelEventHandlers;\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Save vars\r\n     */\r\n    const tempError = error;\r\n    const tempInfo = info;\r\n    const tempLanguage = language;\r\n    // const tempSessionTimeoutApplied = sessionTimeoutApplied;\r\n\r\n    /**\r\n     * Log out\r\n     */\r\n    onLogOut();\r\n\r\n    /**\r\n     * Restore vars\r\n     */\r\n    setLanguage(tempLanguage);\r\n    // setSessionTimeoutApplied(tempSessionTimeoutApplied);\r\n    // onSessionStart();\r\n    // onSessionReset();\r\n\r\n    // console.log(\"tempInfo: \", tempInfo);\r\n\r\n    // if (tempError !== null) {\r\n    //   showMessage(tempError, \"error\");\r\n    // } else {\r\n    //   if (tempInfo !== null) {\r\n    //     showMessage(tempInfo, \"info\");\r\n    //   }\r\n    // }\r\n\r\n    if (tempError !== null) {\r\n      // showMessage(tempError, \"error\");\r\n      setError(JSON.stringify(tempError));\r\n    } else {\r\n      setError(null);\r\n    }\r\n\r\n    if (tempInfo !== null) {\r\n      // showMessage(tempInfo, \"info\");\r\n      setInfo(JSON.stringify(tempInfo));\r\n    } else {\r\n      setInfo(null);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, []); // JSON.stringify(error), JSON.stringify(info) - logOut\r\n\r\n  return (\r\n    <>\r\n      <h4>{t(\"See you soon\")}</h4>\r\n      <hr />\r\n\r\n      <br />\r\n      <p className=\"text-center\">\r\n        <a href=\"/\">{t(\"Sign in\")}</a>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n  * Default export\r\n  ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ResetPassword\", request: \"reset password\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { language, passwordResetEmail } = props.barrelGetters;\r\n  const {\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetEmail,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getUrlParam } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  const refEmail = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    const tempRefEmail = refEmail.current;\r\n    return () => {\r\n      if (tempRefEmail !== null && passwordResetEmail !== tempRefEmail.value)\r\n        setPasswordResetEmail(tempRefEmail.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenPasswordReset(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n    * Event listeners\r\n    ============================================================================ */\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    data.language = language;\r\n    sendRequest({\r\n      req: props.request,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n  });\r\n\r\n  const passwordResetForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Reset password\")}</h3>\r\n\r\n      {/* Email */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            ref={refEmail}\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n\r\n  // return (\r\n  //   <Formik\r\n  //     component={passwordResetForm}\r\n  //     validationSchema={schema}\r\n  //     onSubmit={onSubmit}\r\n  //     initialValues={{\r\n  //       email: \"\",\r\n  //     }}\r\n  //   />\r\n  // );\r\n\r\n  return token === null ? (\r\n    <Formik\r\n      component={passwordResetForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        email: passwordResetEmail,\r\n      }}\r\n    />\r\n  ) : (\r\n    <div className=\"text-center\">\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n        hidden={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport UnderConstruction from \"../../underConstruction\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n\r\n/**\r\n * Component: Main\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass, getRedirect } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const signedIn = false;\r\n\r\n  // const { t } = useTranslation(props.namespace);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              <div>\r\n                <Alert data={barrels} />\r\n              </div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return UnderConstruction(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Build } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"UnderConstruction\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <Build style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"We are constructing\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport NotConnected from \"../../notConnected\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n\r\n/**\r\n * Component: Main\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass, getRedirect } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const signedIn = false;\r\n\r\n  // const { t } = useTranslation(props.namespace);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              <div>\r\n                <Alert data={barrels} />\r\n              </div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return NotConnected(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { PowerOff } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"NotConnected\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <PowerOff style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"Not connected\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport config from \"./config\";\r\nimport openSocket from \"socket.io-client\";\r\n// import { useTimeout } from \"./useTimeout\";\r\n\r\nlet socket = openSocket.connect(config.uri.ENDPOINT, {\r\n  secure: true,\r\n  reconnect: true,\r\n});\r\n\r\n/**\r\n * Send request to the server\r\n * @param {*} param0\r\n */\r\nexport const sendData = (data, debug = false) => {\r\n  if (debug) console.log(`request: ${data.req}`, data);\r\n\r\n  // No data - do not send\r\n  // if (req.length === 0) return false;\r\n\r\n  // useTimeout(() => {\r\n  //   console.log(\"Socket timeout\");\r\n  // }, 3000);\r\n\r\n  socket.emit(`onDataReceived`, data);\r\n  return true;\r\n};\r\n\r\n// Start a session\r\nexport const startSession = (data, session, debug = false) => {\r\n  // console.log(\"startSession\");\r\n  if (debug) console.log(`request: start session`, data, session);\r\n\r\n  socket.emit(`start session`, {\r\n    data: data,\r\n    session: session,\r\n    req: \"start session\",\r\n  });\r\n};\r\n\r\n// End the session\r\nexport const endSession = (data, session, debug = false) => {\r\n  if (debug) console.log(`request: end session`, data, session);\r\n  socket.emit(`end session`, {\r\n    // char: data,\r\n    data: data,\r\n    // uid: uid,\r\n    session: session,\r\n    req: \"end session\",\r\n  });\r\n};\r\n\r\n// Custom hook: useSocket\r\nexport const useSocket = (callback) => {\r\n  const [responseData, setResponseData] = useState(null);\r\n\r\n  socket.on(`onDataReceived`, (data) => {\r\n    setResponseData(data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (responseData === null) return;\r\n\r\n    callback(responseData);\r\n    // eslint-disable-next-line\r\n  }, [responseData]);\r\n};\r\n\r\nexport const useSystemSocket = (callback, instance) => {\r\n  useEffect(() => {\r\n    // socket.on(\"onDataReceived\", (data) => {\r\n    //   callback(data);\r\n    // });\r\n\r\n    /**\r\n     * System error listeners\r\n     */\r\n    socket.on(\"connect_error\", () => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_error\",\r\n          context: {},\r\n          error: { code: \"none\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"connect_timeout\", (timeout) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_timeout\",\r\n          context: {},\r\n          error: { code: \"connect_timeout\", timeout },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_error\",\r\n          context: {},\r\n          error: { code: error.type, error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_failed\", () => {\r\n      // This should never occur\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_failed\",\r\n          context: {},\r\n          error: { code: \"reconnect_failed\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"error\",\r\n          context: {},\r\n          error: { code: \"error\", error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    /**\r\n     * System status listeners\r\n     */\r\n    socket.on(\"ping\", () => {\r\n      // callback({ data: \"ping\" }, true);\r\n    });\r\n    socket.on(\"pong\", (latency) => {\r\n      // callback({ data: \"pong\", latency }, true);\r\n    });\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n      if (reason === \"io server disconnect\") {\r\n        // the disconnection was initiated by the server, you need to reconnect manually\r\n        socket.connect();\r\n      } else {\r\n        // else the socket will automatically try to reconnect\r\n      }\r\n      // Reasons:\r\n      // - \"transport close\": Server was stopped\r\n      callback({ req: \"disconnect\", status: \"success\", reason }, true);\r\n    });\r\n    socket.on(\"reconnect\", (attemptNumber) => {\r\n      // Successfully reconnected on attempt: attemptNumber\r\n      callback({ req: \"reconnect\", status: \"success\", attemptNumber }, true);\r\n    });\r\n    socket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnect attempt\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnecting\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnecting\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n  }, [instance]);\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"RESPONSE HANDLER: \", props, barrels);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    debug,\r\n    // requestTS,\r\n    // session,\r\n    // sessionTimeout,\r\n    // settings,\r\n    // loggingIn,\r\n    // isExternalRequest,\r\n    signedIn,\r\n    instance,\r\n    responseProps,\r\n    currencies,\r\n    transactions,\r\n    transferRequest,\r\n    shares,\r\n    // transactionsPerPage,\r\n    // sharesPerPage,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    // uid,\r\n    userBusinesses,\r\n    cartPurposes,\r\n    businessPurposes,\r\n    purposeShareholders,\r\n    activeBusinesPurpose,\r\n    lastInsertId,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setSession,\r\n    // setSessionTimeoutApplied,\r\n    setResponseProps,\r\n    setSettings,\r\n    setLoggingIn,\r\n    // setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setConnected,\r\n    // setLanguage,\r\n    setUserData,\r\n    setSignedIn,\r\n    // setIsExternalRequest,\r\n    setCartContent,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    // setTransferSuccess,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setCartPurposes,\r\n    setBusinessPurposes,\r\n    setCountBusinessPurposes,\r\n    setPurposeShareholders,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidateTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setActivePurposeData,\r\n    setTanRequired,\r\n    // setRedirect,\r\n    setClearRefs,\r\n  } = barrels.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    // processUserResponse,\r\n    // getBusinesses,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    showMessage,\r\n    changeLanguage,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    // endSession,\r\n    // updateLastSeenUser,\r\n    // showTanInput,\r\n    // updateTimestamp,\r\n    // hideMessage,\r\n  } = barrels.barrelFunctions;\r\n  const {\r\n    // onTransferSuccess,\r\n    onRedirect,\r\n    // onSessionTimeout,\r\n    onSessionEnd,\r\n    // onLogOut,\r\n  } = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug) console.log(`response: ${req} (${props.status})`, props, barrels);\r\n\r\n  /**\r\n   * Save response properties\r\n   * @param {string} req\r\n   * @param {string} name\r\n   * @param {string} status\r\n   */\r\n  const saveResponseProps = ({ req, name, status }) => {\r\n    const res = typeof name !== \"undefined\" ? `${req} / ${name}` : req;\r\n    if (responseProps === null) {\r\n      setResponseProps(JSON.stringify([{ res, status }]));\r\n    } else {\r\n      const tempRP = deleteObjectArrayElement(responseProps, \"res\", res);\r\n      setResponseProps(JSON.stringify([...tempRP, { res, status }]));\r\n    }\r\n  };\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (instance === props.reqData.instance &&\r\n        res === \"*\" &&\r\n        status === props.status &&\r\n        name === props.name) ||\r\n      (instance === props.reqData.instance &&\r\n        res === props.req &&\r\n        status === props.status) ||\r\n      (instance === props.reqData.instance && res === \"unknown\")\r\n    ) {\r\n      saveResponseProps({ req, name: props.name, status: props.status });\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n    if (typeof props.token !== \"undefined\") {\r\n      console.log(\"Renewing session...\");\r\n\r\n      onSessionEnd();\r\n      setSession(props.token);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Start session (success)\r\n   */\r\n  onResponse([\"start session\", \"success\"], () => {\r\n    if (signedIn) {\r\n      sendRequest({ req: \"validate session\", data: {} });\r\n    }\r\n    setConnected(true);\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * End session (success)\r\n   */\r\n  onResponse([\"end session\", \"success\"], () => {\r\n    // console.log(\"ON END SESSION\");\r\n\r\n    setConnected(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM users\") {\r\n      setUserSequence(props.results.sequence);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"success\"], () => {\r\n    // register user\r\n    sendRequest({ req: \"register account\", data: props.reqData });\r\n  });\r\n\r\n  onResponse([\"get tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n    setTanRequired(true);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get cart\", \"continue\"], () => {\r\n    if (props.name === \"SELECT carts\") {\r\n      setCartContent(props.results.content);\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"pending\"], () => {\r\n    // setTanRequired(false);\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"finished\"], () => {\r\n    if (props.name === \"UPDATE tans\") {\r\n      if (props.queryCnt > 0) {\r\n        // setTanRequired(true);\r\n        return false;\r\n      } else {\r\n        // setTanRequired(false);\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n\r\n    sendRequest({ req: transferRequest.transferType, data: transferRequest });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (pending)\r\n   */\r\n  onResponse([\"register user\", \"pending\"], () => {\r\n    // Might show some user feedback\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register user\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO users\") {\r\n      if (props.results.insertId > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    } else if (props.name === \"INSERT INTO validation_tokens\") {\r\n      // const { token, email } = props.tags;\r\n      // setValidateTokenEmail(\r\n      //   JSON.stringify({\r\n      //     token,\r\n      //     email,\r\n      //   })\r\n      // );\r\n      setValidationTokenEmail({\r\n        token: props.tags.token,\r\n        email: props.tags.email,\r\n      });\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (success)\r\n   */\r\n  onResponse([\"register user\", \"success\"], () => {\r\n    // console.log(\"REGISTER USER PROPS:\", props);\r\n    const noEmailValidation = false;\r\n\r\n    if (noEmailValidation) {\r\n      setSignedIn(true);\r\n      setSession(props.email); // TODO: Might restore\r\n      onRedirect(\"/account-registration\");\r\n      sendRequest({ req: \"get user\", data: { email: props.email } }); // to not require a log in\r\n      return false;\r\n    } else {\r\n      onRedirect(\"/validate-email\");\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"continue\"], () => {\r\n    if (props.name === \"SELECT validation_tokens\") {\r\n      setValidationTokenEmailResent(props.results.resent);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"continue\"], () => {\r\n    if (props.name === \"UPDATE validation tokens\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        // onRedirect(\"/sign-in\");\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (props.name === \"UPDATE users\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        onRedirect(\"/sign-in\");\r\n        return true;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"success\"], () => {\r\n    setValidateTokenEmail(null); // email validation token not needed any more + prevent the unnecessary resend\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"validate password reset token\", \"continue\"], () => {\r\n  //   if (props.name === \"UPDATE validation tokens\") {\r\n  //     if (props.results.affectedRows > 0) {\r\n  //       // onRedirect(\"/password\");\r\n  //       setPasswordResetTokenValidated(true);\r\n  //       return true;\r\n  //     } else {\r\n  //       // No row was inserted - an error was returned\r\n  //       return true;\r\n  //     }\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"validate password reset token\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(true);\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get URI settings (continue)\r\n   */\r\n  onResponse([\"get uri settings\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM uri_settings\") {\r\n      const results = JSON.parse(props.results.settings);\r\n\r\n      // console.log(\"results.settings\", results);\r\n\r\n      setSettings(JSON.stringify(results));\r\n\r\n      // Force single currency\r\n      if (\r\n        typeof results[\"currency\"] !== \"undefined\" &&\r\n        results[\"currency\"] !== null\r\n      ) {\r\n        const abbr = results[\"currency\"];\r\n        // setCurrencyAbbr(abbr);\r\n        sendRequest({\r\n          req: \"register user currency\",\r\n          data: { email: userData.email, currency_id: abbr },\r\n        });\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user currency (success)\r\n   */\r\n  onResponse([\"register user currency\", \"success\"], () => {\r\n    setCurrencyAbbr(props.reqData.currency_id);\r\n    // return false;\r\n  });\r\n\r\n  /**\r\n   * Sign in user (continue)\r\n   */\r\n  onResponse([\"sign in user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      /**\r\n       * Validated user\r\n       */\r\n      if (props.results.status === 1) {\r\n        setUserData(JSON.stringify(props.results));\r\n        setAccountNumber(props.results.uid);\r\n        // setSession(props.results.email); // TODO: Might restore\r\n        setCurrencyAbbr(props.results.currency_abbr);\r\n        setCurrencyRate(\r\n          isNaN(props.results.currency_rate) ? 1 : props.results.currency_rate\r\n        );\r\n\r\n        changeLanguage(props.results.language);\r\n\r\n        return false;\r\n\r\n        /**\r\n         * Not yet validated user\r\n         */\r\n      } else if (props.results.status === 0) {\r\n        onRedirect(\"/validate-email\");\r\n        return true;\r\n\r\n        /**\r\n         * Suspended user\r\n         */\r\n      } else if (props.results.status === 2) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_SUSPENDED\", \"error\");\r\n        return true;\r\n\r\n        /**\r\n         * Deleted user\r\n         */\r\n      } else if (props.results.status === 3) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_DELETED\", \"error\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Sign in user (finished)\r\n   */\r\n  onResponse([\"sign in user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt > 0) {\r\n        return false;\r\n      } else {\r\n        showMessage(\"INVALID_SIGN_IN\", \"error\");\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"sign in user\", \"success\"], () => {\r\n    setSignedIn(true);\r\n    setLoggingIn(false);\r\n    onSessionEnd();\r\n    setSession(props.token);\r\n    setRedirectTo(\"/balance\");\r\n\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"update last seen user\", \"success\"], () => {\r\n  //   // onSessionEnd();\r\n  //   // setSession(props.token); // TODO: Might restore\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Update user (success)\r\n   */\r\n  onResponse([\"update user\", \"success\"], () => {\r\n    sendRequest({ req: \"get user\", data: { email: userData.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user (continue)\r\n   */\r\n  onResponse([\"get user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUserData(JSON.stringify(props.results));\r\n      setUID(props.results.uid);\r\n      setAccountNumber(props.results.uid);\r\n      if (accountNumber === null && props.results.uid !== null) {\r\n        setRedirectTo(\"/summary\");\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user (finished)\r\n   */\r\n  onResponse([\"get user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 1) {\r\n        // exactly one user found - all is good\r\n        return false;\r\n      } else if (props.queryCnt === 0) {\r\n        // Something wrong with (accessing) the user data\r\n        // Probable causes:\r\n        // - user was deleted from the DB\r\n        // - user status was set to >= 2\r\n        // - multiple users with the same email address, most improbable (db constraint)\r\n        // - user changed the email address or password\r\n        setRedirectTo(\"/sign-out\");\r\n        // showMessage(\"INVALID_DATA\", \"error\");\r\n        return true;\r\n      }\r\n      return true;\r\n    }\r\n    // if (props.rowNum === 1) {\r\n    //   return true;\r\n    // } else {\r\n    //   // Something wrong with (accessing) the user data\r\n    //   // Probable causes:\r\n    //   // - user was deleted from the DB\r\n    //   // - user status was set to >= 2\r\n    //   // - multiple users with the same email address, most improbable (db constraint)\r\n    //   // - user changed the email address or password\r\n    //   // onLogOut();\r\n    //   setRedirectTo(\"/sign-out\");\r\n    //   // showMessage(\"INVALID_DATA\", \"error\");\r\n    //   return true;\r\n    // }\r\n  });\r\n\r\n  onResponse([\"get user\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (continue)\r\n   */\r\n  onResponse([\"get user businesses\", \"continue\"], () => {\r\n    if (props.name === \"SELECT businesses\") {\r\n      const business = props.results;\r\n      const { business_id } = business;\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([business]));\r\n        getBusinessPurposes(business_id, 0, 1);\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, business]));\r\n      }\r\n    } else if (props.name === \"COUNT businesses\") {\r\n      setCountBusinesses(props.results.count_businesses);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (finished)\r\n   */\r\n  onResponse([\"get user businesses\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    setUserBusinessesLoaded(true);\r\n    setRedirectTo(\"/my-business\");\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get user businesses\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (continue)\r\n   */\r\n  onResponse([\"get cart purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (cartPurposes === null) {\r\n        setCartPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setCartPurposes(JSON.stringify([...cartPurposes, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      // setCartPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (success)\r\n   */\r\n  onResponse([\"get cart purposes\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (continue)\r\n   */\r\n  onResponse([\"get business purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (businessPurposes === null) {\r\n        setBusinessPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setBusinessPurposes(\r\n          JSON.stringify([...businessPurposes, props.results])\r\n        );\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      setCountBusinessPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (finished)\r\n   */\r\n  onResponse([\"get business purposes\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (continue)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"continue\"], () => {\r\n    if (props.name === \"SELECT shares\") {\r\n      if (purposeShareholders === null) {\r\n        setPurposeShareholders(JSON.stringify([props.results]));\r\n      } else {\r\n        setPurposeShareholders(\r\n          JSON.stringify([...purposeShareholders, props.results])\r\n        );\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (finished)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user business by id (continue)\r\n   */\r\n  // onResponse([\"get business by id\", \"continue\"], () => {\r\n  //   if (userBusinesses === null) {\r\n  //     setUserBusinesses(JSON.stringify([props.results]));\r\n  //   } else {\r\n  //     setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"get business by id\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.name === \"SELECT businesses\") {\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([props.results]));\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business by id (finished)\r\n   */\r\n  onResponse([\"get business by id\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.queryCnt > 0) {\r\n      // getting business was successful - query returned results\r\n      return false;\r\n    } else {\r\n      console.log(\"Error getting business by id\");\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get business by id\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (continue)\r\n   */\r\n  onResponse([\"get purpose by id\", \"continue\"], () => {\r\n    /**\r\n     * Replace the purpose if it is already there\r\n     */\r\n    const index = getObjectArrayElementIndex(\r\n      businessPurposes,\r\n      \"purpose_id\",\r\n      props.results.purpose_id\r\n    );\r\n    if (index > -1) {\r\n      businessPurposes.splice(index, 1);\r\n      let temp = [...businessPurposes, props.results];\r\n      temp = sortObjectArray(temp, \"title\");\r\n      setBusinessPurposes(JSON.stringify(temp));\r\n      setActivePurposeData(JSON.stringify(props.results));\r\n\r\n      /**\r\n       * ... otherwise add the purpose\r\n       */\r\n    } else {\r\n      if (props.name === \"SELECT purposes\") {\r\n        if (businessPurposes === null) {\r\n          setBusinessPurposes(JSON.stringify([props.results]));\r\n        } else {\r\n          setBusinessPurposes(\r\n            JSON.stringify([...businessPurposes, props.results])\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (finished)\r\n   */\r\n  onResponse([\"get purpose by id\", \"finished\"], () => {\r\n    if (props.queryCnt < 1) {\r\n      // Something went wrong\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (success)\r\n   */\r\n  onResponse([\"get purpose by id\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (continue)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"continue\"], () => {\r\n    if (purposeShareholders === null) {\r\n      setPurposeShareholders(JSON.stringify([props.results]));\r\n    } else {\r\n      setPurposeShareholders(\r\n        JSON.stringify([...purposeShareholders, props.results])\r\n      );\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (finished)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Upload file (ready)\r\n   */\r\n  onResponse([\"upload file\", \"continue\"], () => {\r\n    // console.log(\"UPLOAD FILE =========== \");\r\n\r\n    // if (props.name === \"SELECT 1\") {\r\n    // setAccountPhotoPath(props + \"?r=\" + Math.random());\r\n    setAccountPhotoPath(Date.now()); // ok\r\n    return false;\r\n    // }\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"finished\"], () => {\r\n    if (props.name === \"SELECT 1\") {\r\n      if (props.queryCnt === 0) {\r\n        // something went wrong\r\n        // setAccountPhotoPath(\"ok\");\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"continue\"], () => {\r\n    if (props.results.affectedRows < 1) {\r\n      // error registering account\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"INVALID_DATA\", \"error\");\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"success\"], () => {\r\n    // getAccountData();\r\n    sendRequest({ req: \"get user\", data: { email: props.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (continue)\r\n   */\r\n  onResponse([\"get account data\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUID(props.results.uid);\r\n      setUserData(JSON.stringify(props.results));\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (finished)\r\n   */\r\n  onResponse([\"get account data\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 0) {\r\n        // Account not reachable\r\n        // - user session timed out\r\n        showMessage(\"SESSION_TIMED_OUT\", \"info\", false);\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get account data\", \"success\"], () => {\r\n    if (userData === null) return true;\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2S\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (continue)\r\n   */\r\n  onResponse([\"transfer U2S\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (success)\r\n   */\r\n  onResponse([\"transfer U2S\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2U\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (continue)\r\n   */\r\n  onResponse([\"transfer U2U\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (success)\r\n   */\r\n  onResponse([\"transfer U2U\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2B\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (continue)\r\n   */\r\n  onResponse([\"transfer U2B\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (success)\r\n   */\r\n  onResponse([\"transfer U2B\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register business\r\n   ============================================================================================*/\r\n  onResponse([\"register business\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    if (props.name === \"INSERT INTO businesses\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register business\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    // <ModalConfirm\r\n    //   title=\"Add Shareholders\"\r\n    //   message=\"Do you want to add yourself as a shareholder?\"\r\n    // />;\r\n\r\n    setClearRefs(true);\r\n\r\n    showMessage(\"REGISTER_BUSINESS_SUCCESS\", \"info\", false);\r\n\r\n    sendRequest({\r\n      req: \"get business by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    // getBusinesses();\r\n    return false;\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"register currency\", \"continue\"], () => {\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    if (props.results.insertId > 0) {\r\n      setLastInsertId(props.results.insertId);\r\n\r\n      return false;\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register currency\", \"success\"], () => {\r\n    showMessage(\"REGISTER_CURRENCY_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get currency by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (continue)\r\n   */\r\n  onResponse([\"get currencies\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT currencies\") {\r\n      setCountCurrencies(props.results.count_currencies);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (finished)\r\n   */\r\n  onResponse([\"get currencies\", \"finished\"], () => {\r\n    // setRedirectTo(\"/currency\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Find currencies (continue)\r\n   */\r\n  onResponse([\"find currencies\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT currencies\") {\r\n      setCountCurrencies(props.results.count_currencies);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (continue)\r\n   */\r\n  onResponse([\"get currency by id\", \"continue\"], () => {\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get currency by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transactions (continue)\r\n   */\r\n  onResponse([\"get transactions\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT transactions\") {\r\n      if (transactions === null) {\r\n        setTransactions(JSON.stringify([props.results]));\r\n      } else {\r\n        setTransactions(JSON.stringify([...transactions, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT transactions\") {\r\n      setCountTransactions(props.results.count_transaction_positions);\r\n      // } else if (props.name === \"VALIDATE SESSION\") {\r\n      //   if (typeof props.token !== \"undefined\") {\r\n      //     console.log(\"RESET SESSION\");\r\n      //     onSessionEnd();\r\n      //     // setSession(props.newToken);\r\n      //     setSession(props.token);\r\n      //   }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get transactions (finished)\r\n   */\r\n  onResponse([\"get transactions\", \"finished\"], () => {\r\n    setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Find transactions (continue)\r\n   */\r\n  onResponse([\"find transactions\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT transactions\") {\r\n      if (transactions === null) {\r\n        setTransactions(JSON.stringify([props.results]));\r\n      } else {\r\n        setTransactions(JSON.stringify([...transactions, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT transactions\") {\r\n      setCountTransactions(props.results.count_transaction_positions);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shares (continue)\r\n   */\r\n  onResponse([\"get shares\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT shares\") {\r\n      if (shares === null) {\r\n        setShares(JSON.stringify([props.results]));\r\n      } else {\r\n        setShares(JSON.stringify([...shares, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT shares\") {\r\n      setCountShares(props.results.count_shares);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shares (finished)\r\n   */\r\n  onResponse([\"get shares\", \"finished\"], () => {\r\n    // setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transaction by id (continue)\r\n   */\r\n  onResponse([\"get transaction by id\", \"continue\"], () => {\r\n    if (transactions === null) {\r\n      setTransactions(JSON.stringify([props.results]));\r\n    } else {\r\n      setTransactions(JSON.stringify([...transactions, props.results]));\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get transaction by id\", \"finished\"], () => {\r\n    getAccountData();\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"send message\", \"success\"], () => {\r\n    setClearRefs(true);\r\n    showMessage(\"SEND_MESSAGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"continue\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get purpose by id\",\r\n    //   data: { id: props.results.insertId },\r\n    // });\r\n    if (props.name === \"INSERT INTO purposes\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"success\"], () => {\r\n    showMessage(\"REGISTER_PURPOSE_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: lastInsertId, language: language },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"update purpose property\", \"success\"], () => {\r\n    showMessage(\"UPDATE_PURPOSE_SUCCESS\", \"info\", false);\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: props.reqData.id, language: language },\r\n    });\r\n    // getBusinessPurposes(props.reqData.business_id, 0, 1);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"continue\"], () => {\r\n    if (props.results.insertId > 0) {\r\n      // showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\");\r\n\r\n      // return sendRequest({\r\n      //   req: \"get shareholder by id\",\r\n      //   data: { id: props.results.insertId },\r\n      // });\r\n      setLastInsertId(props.results.insertId);\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"success\"], () => {\r\n    showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\", false);\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"change share\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    // getPurposeShareholders(activeBusinesPurpose);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"remove shareholder\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"reset password\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"change password\", \"success\"], () => {\r\n    // TOTO: If NO_ROWS_CHANGE - probably the currently saved password was submitted\r\n    setPasswordResetTokenValidated(null);\r\n    setPasswordResetTokenEmail(null);\r\n    onRedirect(\"/sign-in\");\r\n    showMessage(\"PASSWORD_CHANGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"unknown\"], () => {\r\n  //   if (\r\n  //     status === \"pending\" ||\r\n  //     status === \"continue\" ||\r\n  //     status === \"finished\" ||\r\n  //     status === \"success\"\r\n  //   ) {\r\n  //     return false;\r\n  //   } else {\r\n  //     showMessage(`${req}: ${status}`, \"info\");\r\n  //     return true;\r\n  //   }\r\n  // });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport {\r\n  // BrowserRouter as Router,\r\n  // Switch,\r\n  // Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport i18n from \"./translations/i18n\";\r\nimport config from \"./utils/config\";\r\nimport { useStickyState } from \"./utils/state\";\r\nimport Main from \"./components/pages/main\";\r\nimport UnderConstruction from \"./components/pages/underConstruction\";\r\nimport NotConnected from \"./components/pages/notConnected\";\r\n\r\nimport {\r\n  useSocket,\r\n  useSystemSocket,\r\n  sendData,\r\n  startSession,\r\n  endSession,\r\n} from \"./utils/sockets\";\r\n// import { useInterval } from \"./utils/useInterval\";\r\n// import { useTimeout } from \"./utils/useTimeout\";\r\nimport requestHandler from \"./utils/requestHandler\";\r\nimport userErrorHandler from \"./utils/userErrorHandler\";\r\nimport userResponseHandler from \"./utils/userResponseHandler\";\r\nimport systemErrorHandler from \"./utils/systemErrorHandler\";\r\nimport systemResponseHandler from \"./utils/systemResponseHandler\";\r\n// import {\r\n//   useSocket,\r\n//   sendData,\r\n//   startSession,\r\n//   endSession,\r\n// } from \"../../../utils/sockets\";\r\n// import functions from \"./barrelFunctions\";\r\n\r\n/**\r\n * Component: Dispatcher\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Dispatcher\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const isLocalhost =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\";\r\n\r\n  /** \r\n   * Hooks\r\n   ============================================================================ */\r\n  const [debug, setDebug] = useState(\r\n    isLocalhost || config.uri.SITEMODE === \"STAGING\"\r\n  );\r\n  const [loggingOut, setLoggingOut] = useState(false);\r\n  const [loggingIn, setLoggingIn] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(true);\r\n  const [request, setRequest] = useStickyState(null, \"request\");\r\n  const [serverResponseReceived, setServerResponseReceived] = useStickyState(\r\n    null,\r\n    \"serverResponseReceived\"\r\n  );\r\n  const [requestTimedOut, setRequestTimedOut] = useStickyState(\r\n    false,\r\n    \"requestTimedOut\"\r\n  );\r\n  const [instance, setInstance] = useState(Date.now());\r\n  const [session, setSession] = useStickyState(uuidv4(), \"session\");\r\n  const [settings, setSettings] = useStickyState(null, \"settings\");\r\n  const [responseProps, setResponseProps] = useStickyState(\r\n    null,\r\n    \"responseProps\"\r\n  );\r\n  const [sessionTimeout, setSessionTimeout] = useStickyState(\r\n    (!debug ? 5 : 120) * 60, // 30 | 5 * 60\r\n    \"sessionTimeout\"\r\n  );\r\n  const [connected, setConnected] = useStickyState(false, \"connected\");\r\n  const [reconnecting, setReconnecting] = useStickyState(false, \"reconnecting\");\r\n  const [ip, setIP] = useStickyState(\"\", \"ip\");\r\n  const [signedIn, setSignedIn] = useStickyState(false, \"signedIn\");\r\n  const [\r\n    dailyAllowanceDispatched,\r\n    setDailyAllowanceDispatched,\r\n  ] = useStickyState(false, \"dailyAllowanceDispatched\");\r\n  const [isExternalRequest, setIsExternalRequest] = useStickyState(\r\n    false,\r\n    \"isExternalRequest\"\r\n  );\r\n  const [externalRequest, setExternalRequest] = useStickyState(\r\n    null,\r\n    \"externalRequest\"\r\n  );\r\n  const [cartContent, setCartContent] = useStickyState(null, \"cartContent\");\r\n  const [updateInterval, setUpdateInterval] = useStickyState(\r\n    -1,\r\n    \"updateInterval\"\r\n  );\r\n  const [currencyAbbr, setCurrencyAbbr] = useStickyState(\"Z\", \"currencyAbbr\");\r\n  const [currencyRate, setCurrencyRate] = useStickyState(1.0, \"currencyRate\");\r\n  const [currencies, setCurrencies] = useStickyState(null, \"currencies\");\r\n  const [transactions, setTransactions] = useStickyState(null, \"transactions\");\r\n  const [shares, setShares] = useStickyState(null, \"shares\");\r\n  const [accordionView, setAccordionView] = useStickyState(\r\n    \"balance\",\r\n    \"accordionView\"\r\n  );\r\n  const [accordionViewCurrency, setAccordionViewCurrency] = useStickyState(\r\n    null,\r\n    \"accordionViewCurrency\"\r\n  );\r\n  const [countCurrencies, setCountCurrencies] = useStickyState(\r\n    null,\r\n    \"countCurrencies\"\r\n  );\r\n  const [countTransactions, setCountTransactions] = useStickyState(\r\n    null,\r\n    \"countTransactions\"\r\n  );\r\n  const [countShares, setCountShares] = useStickyState(null, \"countShares\");\r\n  const [activePageCurrencies, setActivePageCurrencies] = useStickyState(\r\n    1,\r\n    \"activePageCurrencies\"\r\n  );\r\n  const [activePageTransactions, setActivePageTransactions] = useStickyState(\r\n    1,\r\n    \"activePageTransactions\"\r\n  );\r\n  const [activePageShares, setActivePageShares] = useStickyState(\r\n    1,\r\n    \"activePageShares\"\r\n  );\r\n  const [currenciesPerPage, setCurrenciesPerPage] = useStickyState(\r\n    5,\r\n    \"currenciesPerPage\"\r\n  );\r\n  const [transactionsPerPage, setTransactionsPerPage] = useStickyState(\r\n    5,\r\n    \"transactionsPerPage\"\r\n  );\r\n  const [sharesPerPage, setSharesPerPage] = useStickyState(5, \"sharesPerPage\");\r\n  const [userData, setUserData] = useStickyState(null, \"userData\");\r\n  const [uid, setUID] = useStickyState(null, \"uid\");\r\n  const [accountNumber, setAccountNumber] = useStickyState(\r\n    null,\r\n    \"accountNumber\"\r\n  );\r\n  const [userSequence, setUserSequence] = useStickyState(null, \"userSequence\");\r\n  const [accountType, setAccountType] = useStickyState(null, \"accountType\");\r\n  const [userBusinesses, setUserBusinesses] = useStickyState(\r\n    null,\r\n    \"userBusinesses\"\r\n  );\r\n  const [countBusinesses, setCountBusinesses] = useStickyState(\r\n    null,\r\n    \"countBusinesses\"\r\n  );\r\n  const [businessesPerPage, setBusinessesPerPage] = useStickyState(\r\n    1,\r\n    \"businessesPerPage\"\r\n  );\r\n  const [activePageBusinesses, setActivePageBusinesses] = useStickyState(\r\n    1,\r\n    \"activePageBusinesses\"\r\n  );\r\n  const [userBusinessesLoaded, setUserBusinessesLoaded] = useStickyState(\r\n    false,\r\n    \"userBusinessesLoaded\"\r\n  );\r\n  const [activeBusiness, setActiveBusiness] = useStickyState(\r\n    null,\r\n    \"activeBusiness\"\r\n  );\r\n  const [activeBusinessID, setActiveBusinessID] = useStickyState(\r\n    null,\r\n    \"activeBusinessID\"\r\n  );\r\n\r\n  const [businessPurposes, setBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"businessPurposes\"\r\n  );\r\n\r\n  const [cartPurposes, setCartPurposes] = useStickyState(null, \"cartPurposes\");\r\n\r\n  const [countBusinessPurposes, setCountBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"countBusinessPurposes\"\r\n  );\r\n  const [businessPurposesPerPage, setBusinessPurposesPerPage] = useStickyState(\r\n    5,\r\n    \"businessPurposesPerPage\"\r\n  );\r\n  const [\r\n    activePageBusinessPurposes,\r\n    setActivePageBusinessPurposes,\r\n  ] = useStickyState(1, \"activePageBusinessPurposes\");\r\n\r\n  const [activeBusinesPurpose, setActiveBusinesPurpose] = useStickyState(\r\n    null,\r\n    \"activeBusinesPurpose\"\r\n  );\r\n\r\n  const [activePurposeData, setActivePurposeData] = useStickyState(\r\n    null,\r\n    \"activePurposeData\"\r\n  );\r\n\r\n  const [activePurposeProperty, setActivePurposeProperty] = useStickyState(\r\n    null,\r\n    \"activePurposeProperty\"\r\n  );\r\n\r\n  const [purposeShareholders, setPurposeShareholders] = useStickyState(\r\n    null,\r\n    \"purposeShareholders\"\r\n  );\r\n\r\n  const [clearRefs, setClearRefs] = useStickyState(false, \"clearRefs\");\r\n\r\n  /**\r\n   * Log in\r\n   */\r\n  const [logInEmail, setLogInEmail] = useStickyState(\"\", \"logInEmail\");\r\n  const [logInPassword, setLogInPassword] = useStickyState(\"\", \"logInPassword\");\r\n\r\n  /**\r\n   * Sign Up\r\n   */\r\n  const [signUpFirstName, setSignUpFirstName] = useStickyState(\r\n    \"\",\r\n    \"signUpFirstName\"\r\n  );\r\n  const [signUpLastName, setSignUpLastName] = useStickyState(\r\n    \"\",\r\n    \"signUpLastName\"\r\n  );\r\n  const [signUpEmail, setSignUpEmail] = useStickyState(\"\", \"signUpEmail\");\r\n  const [signUpPassword, setSignUpPassword] = useStickyState(\r\n    \"\",\r\n    \"signUpPassword\"\r\n  );\r\n\r\n  /**\r\n   * Transactions\r\n   */\r\n  const [dateRangeStart, setDateRangeStart] = useStickyState(\r\n    now.setDate(now.getDate() - 7), // new Date().fp_incr(-7),\r\n    \"dateRangeStart\"\r\n  );\r\n  const [dateRangeEnd, setDateRangeEnd] = useStickyState(\r\n    \"today\",\r\n    \"dateRangeEnd\"\r\n  );\r\n\r\n  /**\r\n   * Business registration\r\n   */\r\n  const [\r\n    businessRegistrationAddTitle,\r\n    setBusinessRegistrationAddTitle,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddTitle\");\r\n  const [\r\n    businessRegistrationAddDescription,\r\n    setBusinessRegistrationAddDescription,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddDescription\");\r\n\r\n  /**\r\n   * Purpose registration\r\n   */\r\n  const [\r\n    purposeRegistrationTitle,\r\n    setPurposeRegistrationTitle,\r\n  ] = useStickyState(\"\", \"purposeRegistrationTitle\");\r\n  const [\r\n    purposeRegistrationDescription,\r\n    setPurposeRegistrationDescription,\r\n  ] = useStickyState(\"\", \"purposeRegistrationDescription\");\r\n  const [\r\n    purposeRegistrationKeywords,\r\n    setPurposeRegistrationKeywords,\r\n  ] = useStickyState(\"\", \"purposeRegistrationKeywords\");\r\n\r\n  /**\r\n   * User editor\r\n   */\r\n  const [userEditorEditFirstname, setUserEditorEditFirstname] = useStickyState(\r\n    false,\r\n    \"userEditorEditFirstname\"\r\n  );\r\n  const [userEditorFirstname, setUserEditorFirstname] = useStickyState(\r\n    \"\",\r\n    \"userEditorFirstname\"\r\n  );\r\n  const [userEditorEditLastname, setUserEditorEditLastname] = useStickyState(\r\n    false,\r\n    \"userEditorEditLastname\"\r\n  );\r\n  const [userEditorLastname, setUserEditorLastname] = useStickyState(\r\n    \"\",\r\n    \"userEditorLastname\"\r\n  );\r\n  const [userEditorEditEmail, setUserEditorEditEmail] = useStickyState(\r\n    false,\r\n    \"userEditorEditEmail\"\r\n  );\r\n  const [userEditorEmail, setUserEditorEmail] = useStickyState(\r\n    \"\",\r\n    \"userEditorEmail\"\r\n  );\r\n  const [userEditorEditPassword, setUserEditorEditPassword] = useStickyState(\r\n    false,\r\n    \"userEditorEditPassword\"\r\n  );\r\n  const [userEditorPassword, setUserEditorPassword] = useStickyState(\r\n    \"\",\r\n    \"userEditorPassword\"\r\n  );\r\n  const [\r\n    userEditorPasswordVisible,\r\n    setUserEditorPasswordVisible,\r\n  ] = useStickyState(false, \"userEditorPasswordVisible\");\r\n  const [\r\n    userEditorSubmitButtonVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  ] = useStickyState(false, \"userEditorSubmitButtonVisible\");\r\n\r\n  /**\r\n   * Password reset\r\n   */\r\n  const [passwordResetEmail, setPasswordResetEmail] = useStickyState(\r\n    \"\",\r\n    \"passwordResetEmail\"\r\n  );\r\n\r\n  /**\r\n   * TAN input\r\n   */\r\n  const [tanInputTAN, setTanInputTAN] = useStickyState(\"\", \"tanInputTAN\");\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  const [search, setSearch] = useStickyState(\"\", \"search\");\r\n  const [searchTransactions, setSearchTransactions] = useStickyState(\r\n    \"\",\r\n    \"searchTransactions\"\r\n  );\r\n\r\n  /**\r\n   * Misc\r\n   */\r\n\r\n  // const [businessLoaded, setBusinessLoaded] = useState(null);\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [redirectTo, setRedirectTo] = useState(null);\r\n  const [lastInsertId, setLastInsertId] = useState(null);\r\n  // const [responseData, setResponseData] = useState(null);\r\n\r\n  const [validateTokenEmail, setValidateTokenEmail] = useState(null);\r\n  const [validateTokenPasswordReset, setValidateTokenPasswordReset] = useState(\r\n    null\r\n  );\r\n\r\n  const [\r\n    passwordResetTokenValidated,\r\n    setPasswordResetTokenValidated,\r\n  ] = useState(null);\r\n  const [passwordResetTokenEmail, setPasswordResetTokenEmail] = useState(null);\r\n\r\n  // const [tmrConnected] = useState(null);\r\n  const [validationTokenEmail, setValidationTokenEmail] = useStickyState(\r\n    null,\r\n    \"validationTokenEmail\"\r\n  ); //\r\n  const [\r\n    validationTokenEmailResent,\r\n    setValidationTokenEmailResent,\r\n  ] = useStickyState(0, \"validationTokenEmailResent\"); //\r\n  const [language, setLanguage] = useStickyState(\r\n    i18n.options.fallbackLng[0],\r\n    \"language\"\r\n  ); //\r\n  const [transferType, setTransferType] = useStickyState(\r\n    \"#u2s\",\r\n    \"transferType\"\r\n  );\r\n  const [transferRequest, setTransferRequest] = useStickyState(\r\n    null,\r\n    \"transferRequest\"\r\n  );\r\n  const [transferFromAccount, setTransferFromAccount] = useStickyState(\r\n    \"\",\r\n    \"transferFromAccount\"\r\n  );\r\n  const [transferToAccount, setTransferToAccount] = useStickyState(\r\n    \"\",\r\n    \"transferToAccount\"\r\n  );\r\n  const [transferAmount, setTransferAmount] = useStickyState(\r\n    \"\",\r\n    \"transferAmount\"\r\n  );\r\n  const [transferToUID, setTransferToUID] = useStickyState(\"\", \"transferToUID\");\r\n  const [transferToPurpose, setTransferToPurpose] = useStickyState(\r\n    \"\",\r\n    \"transferToPurpose\"\r\n  );\r\n  const [transferDescription, setTransferDescription] = useStickyState(\r\n    \"\",\r\n    \"transferDescription\"\r\n  );\r\n  const [contactSubject, setContactSubject] = useStickyState(\r\n    \"\",\r\n    \"contactSubject\"\r\n  );\r\n  const [contactMessage, setContactMessage] = useStickyState(\r\n    \"\",\r\n    \"contactMessage\"\r\n  );\r\n  const [userBirthYear, setUserBirthYear] = useStickyState(\"\", \"userBirthYear\");\r\n  const [userBirthMonth, setUserBirthMonth] = useStickyState(\r\n    \"\",\r\n    \"userBirthMonth\"\r\n  );\r\n  const [userBirthDay, setUserBirthDay] = useStickyState(\"\", \"userBirthDay\");\r\n  const [userBirthDateError, setUserBirthDateError] = useState(\r\n    \"\",\r\n    \"userBirthDateError\"\r\n  );\r\n  const [userTimezone, setUserTimezone] = useStickyState(\"\", \"userTimezone\");\r\n\r\n  const [currencyCode, setCurrencyCode] = useStickyState(\"\", \"currencyCode\");\r\n  const [currencyName, setCurrencyName] = useStickyState(\"\", \"currencyName\");\r\n  const [currencyRegion, setCurrencyRegion] = useStickyState(\r\n    \"\",\r\n    \"currencyRegion\"\r\n  );\r\n  const [currencyNewRate, setCurrencyNewRate] = useStickyState(\r\n    1.0,\r\n    \"currencyNewRate\"\r\n  );\r\n\r\n  const [tanRequired, setTanRequired] = useStickyState(false, \"tanRequired\");\r\n  // const [transferSuccess, setTransferSuccess] = useStickyState(\r\n  //   false,\r\n  //   \"transferSuccess\"\r\n  // );\r\n  const [accountPhotoPath, setAccountPhotoPath] = useState(\"\");\r\n  const [error, setError] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  const [info, setInfo] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  // const [alertVisible, setAlertVisible] = useState(false);\r\n\r\n  // const gotEvent = useEventListener();\r\n  // console.log(gotEvent);\r\n\r\n  /**\r\n   * Barrel: Getters\r\n   */\r\n  const barrelGetters = {\r\n    debug,\r\n    // instance,\r\n    loggingOut,\r\n    loggingIn,\r\n    // timestamp,\r\n    // startTimestamp,\r\n    pageLoading,\r\n    request,\r\n    serverResponseReceived,\r\n    requestTimedOut,\r\n    // requestTS,\r\n    instance,\r\n    responseProps: JSON.parse(responseProps),\r\n    // deleteResponseProp,\r\n    // lastRequest,\r\n    session,\r\n    // secureSession,\r\n    sessionTimeout,\r\n    // sessionTimeoutApplied,\r\n    settings: JSON.parse(settings),\r\n    ip,\r\n    updateInterval,\r\n    currencies: JSON.parse(currencies),\r\n    transactions: JSON.parse(transactions),\r\n    shares: JSON.parse(shares),\r\n    accordionView,\r\n    accordionViewCurrency,\r\n    countCurrencies,\r\n    countTransactions,\r\n    countShares,\r\n    activePageCurrencies,\r\n    activePageTransactions,\r\n    activePageShares,\r\n    currenciesPerPage,\r\n    transactionsPerPage,\r\n    sharesPerPage,\r\n    userData: JSON.parse(userData),\r\n    // redirect,\r\n    redirectTo,\r\n    lastInsertId,\r\n    connected,\r\n    reconnecting,\r\n    signedIn,\r\n    dailyAllowanceDispatched,\r\n    isExternalRequest,\r\n    externalRequest: JSON.parse(externalRequest),\r\n    cartContent: JSON.parse(cartContent),\r\n    currencyAbbr,\r\n    currencyRate,\r\n    // currencyStatus,\r\n    accountNumber,\r\n    userSequence,\r\n    accountType,\r\n    uid,\r\n    userBusinesses: JSON.parse(userBusinesses),\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes: JSON.parse(businessPurposes),\r\n    cartPurposes: JSON.parse(cartPurposes),\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    // purposeID,\r\n    activePurposeData: JSON.parse(activePurposeData),\r\n    purposeShareholders: JSON.parse(purposeShareholders),\r\n    clearRefs,\r\n    logInEmail,\r\n    logInPassword,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n    dateRangeStart,\r\n    dateRangeEnd,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    // purposeRegistrationCategory,\r\n    // purposeRegistrationSubcategory,\r\n    // purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n    passwordResetEmail,\r\n    tanInputTAN,\r\n    search,\r\n    searchTransactions,\r\n    // businessLoaded,\r\n    tanRequired,\r\n    // tmrConnected,\r\n    validateTokenEmail,\r\n    validateTokenPasswordReset,\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    transferRequest: JSON.parse(transferRequest),\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    contactSubject,\r\n    contactMessage,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n    language,\r\n    transferType,\r\n    // transferSuccess,\r\n    accountPhotoPath,\r\n    error: JSON.parse(error),\r\n    info: JSON.parse(info),\r\n    // alertVisible,\r\n  };\r\n\r\n  /**\r\n   * Barrel: Setters\r\n   */\r\n  const barrelSetters = {\r\n    setDebug,\r\n    setLoggingOut,\r\n    setLoggingIn,\r\n    // setTimestamp,\r\n    // setStartTimestamp,\r\n    setPageLoading,\r\n    setRequest,\r\n    setServerResponseReceived,\r\n    setRequestTimedOut,\r\n    // setRequestTS,\r\n    setInstance,\r\n    setResponseProps,\r\n    // setDeleteResponseProp,\r\n    // setLastRequest,\r\n    setSession,\r\n    // setSecureSession,\r\n    setSessionTimeout,\r\n    // setSessionTimeoutApplied,\r\n    setSettings,\r\n    setIP,\r\n    setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setAccordionView,\r\n    setAccordionViewCurrency,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setActivePageCurrencies,\r\n    setActivePageTransactions,\r\n    setActivePageShares,\r\n    setCurrenciesPerPage,\r\n    setTransactionsPerPage,\r\n    setSharesPerPage,\r\n    setConnected,\r\n    setReconnecting,\r\n    setLanguage,\r\n    setUserData,\r\n    // sendRequest,\r\n    setSignedIn,\r\n    setDailyAllowanceDispatched,\r\n    setIsExternalRequest,\r\n    setExternalRequest,\r\n    setCartContent,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setAccountType,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setBusinessesPerPage,\r\n    setActivePageBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setActiveBusiness,\r\n    setActiveBusinessID,\r\n    setBusinessPurposes,\r\n    setCartPurposes,\r\n    setCountBusinessPurposes,\r\n    setBusinessPurposesPerPage,\r\n    setActivePageBusinessPurposes,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePurposeData,\r\n    setPurposeShareholders,\r\n    setClearRefs,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n    setDateRangeStart,\r\n    setDateRangeEnd,\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n    setPasswordResetEmail,\r\n    setTanInputTAN,\r\n    setSearch,\r\n    setSearchTransactions,\r\n    setError,\r\n    setInfo,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setValidateTokenEmail,\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setContactSubject,\r\n    setContactMessage,\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n    setTanRequired,\r\n    // setTransferSuccess,\r\n    // setRedirect,\r\n    // showMessage,\r\n  };\r\n\r\n  /** \r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Sends requests to the server\r\n   * @param {string} request Request name\r\n   * @param {object} data Request data\r\n   */\r\n  const sendRequest = ({ req, data = null }) => {\r\n    if (processRequest({ req, data, session, uid: \"STA\", barrels })) {\r\n      // request processed successfully\r\n      setServerResponseReceived(false);\r\n      return true;\r\n    } else {\r\n      console.log(\"THIS SHOULD NEVER BE REACHED\");\r\n      return sendData({ req, uid: \"STA\", session, data }, debug);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Processes user request\r\n   * @param {*} param0\r\n   */\r\n  const processRequest = ({ req, data, session, uid, barrels }) => {\r\n    data.instance = instance;\r\n\r\n    // if (req !== \"update last seen user\") {\r\n    setRequest(req);\r\n    // }\r\n\r\n    return requestHandler({\r\n      req,\r\n      data,\r\n      session,\r\n      uid,\r\n      barrels,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Processes server response\r\n   *\r\n   * Chooses a handler depending on response status:\r\n   * Error or other (success | continue | finished | pending etc.)\r\n   *\r\n   * @param {*} param0\r\n   */\r\n  const processUserResponse = ({ args, barrels }) => {\r\n    return args.status === \"error\"\r\n      ? userErrorHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        })\r\n      : userResponseHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  const processSystemResponse = ({ args, barrels }) => {\r\n    // console.log(\"SYSTEM RESPONSE DATA:\", args);\r\n    return args.status === \"error\"\r\n      ? systemErrorHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        })\r\n      : systemResponseHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  /**\r\n   * Shows a messgae (error or info)\r\n   *\r\n   * @param {string} msg, Messgae text\r\n   * @param {string} type, Message type (\"error\" | \"info\")\r\n   */\r\n  const showMessage = (msg, type = \"error\", dismissible = true) => {\r\n    type === \"error\"\r\n      ? setError(JSON.stringify({ msg, dismissible }))\r\n      : setInfo(JSON.stringify({ msg, dismissible }));\r\n  };\r\n\r\n  /**\r\n   * Hides the message\r\n   */\r\n  const hideMessage = (type = null) => {\r\n    if (type === \"error\") {\r\n      setError(null);\r\n    } else if (type === \"info\") {\r\n      setInfo(null);\r\n    } else {\r\n      setError(null);\r\n      setInfo(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the object-element of an array\r\n   * @param {object array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const getArrayObject = (array, property, value) => {\r\n    if (array === null) return null;\r\n    return array.find((o) => o[property] === value);\r\n  };\r\n\r\n  /**\r\n   * Returns the current processing status of the request\r\n   * @param {string} req\r\n   */\r\n  const getRequestStatus = (req) => {\r\n    const obj = getArrayObject(barrelGetters.responseProps, \"res\", req);\r\n    if (obj === null) return \"undefined\";\r\n    return typeof obj !== \"undefined\" ? obj.status : \"undefined\";\r\n  };\r\n\r\n  /**\r\n   * Clears the current processing status of the request\r\n   * @param {string} req\r\n   */\r\n  const clearRequestStatus = (req) => {\r\n    deleteObjectArrayElement(barrelGetters.responseProps, \"res\", req);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {*} status\r\n   * @param {*} cnt\r\n   * @param {*} strLoading\r\n   * @param {*} strNotFound\r\n   */\r\n  const showRequestStatus = (\r\n    req,\r\n    cnt,\r\n    strLoading,\r\n    strNotFound,\r\n    finalStatus = \"success\"\r\n  ) => {\r\n    const status = getRequestStatus(req);\r\n    if (status === \"undefined\") return \"\";\r\n\r\n    if (status === \"undefined\" || status !== finalStatus) {\r\n      return <p className=\"text-center text-muted\">{strLoading}</p>;\r\n    } else if (status === finalStatus && cnt === 0) {\r\n      return <p className=\"text-center text-muted\">{strNotFound}</p>;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Changes the website language\r\n   */\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n    setLanguage(lng);\r\n  };\r\n\r\n  const roundTo = (n, digits) => {\r\n    let negative = false;\r\n    if (digits === undefined) {\r\n      digits = 0;\r\n    }\r\n    if (n < 0) {\r\n      negative = true;\r\n      n = n * -1;\r\n    }\r\n    const multiplicator = Math.pow(10, digits);\r\n    n = parseFloat((n * multiplicator).toFixed(11));\r\n    n = (Math.round(n) / multiplicator).toFixed(2);\r\n    if (negative) {\r\n      n = (n * -1).toFixed(2);\r\n    }\r\n    return n;\r\n  };\r\n\r\n  /**\r\n   * Format number\r\n   * @param {number} number\r\n   */\r\n  const format = (number, currency = currencyAbbr, useGrouping = true) => {\r\n    const retIntl = new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      useGrouping: useGrouping,\r\n    }).format(number * currencyRate);\r\n\r\n    if (parseFloat(number) !== 0 && number.toString().substr(0, 4) === \"0.00\")\r\n      return t(\"micro amount\");\r\n\r\n    return retIntl + \" \" + currency;\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   * @param {number} number\r\n   */\r\n  const formatPerCent = (number) => {\r\n    return (\r\n      new Intl.NumberFormat(language, {\r\n        notation: \"standard\",\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2,\r\n      }).format(number) + \"%\"\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   *\r\n   * @param {number} number\r\n   */\r\n  const formatExchangeRate = (number) => {\r\n    return new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 5,\r\n      maximumFractionDigits: 5,\r\n    }).format(number);\r\n  };\r\n\r\n  /**\r\n   * Parses a number according to a locale\r\n   *\r\n   * @param {string} stringNumber\r\n   * @param {string} locale\r\n   */\r\n  const parseLocaleNumber = (stringNumber, locale) => {\r\n    let num = 123456.789,\r\n      fmt_local = new Intl.NumberFormat(locale, {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n      }),\r\n      parts_local = fmt_local.formatToParts(num),\r\n      group = \"\",\r\n      decimal = \"\",\r\n      currency = \"\";\r\n\r\n    // separators\r\n    parts_local.forEach(function (i) {\r\n      switch (i.type) {\r\n        case \"group\":\r\n          group = i.value;\r\n          break;\r\n        case \"decimal\":\r\n          decimal = i.value;\r\n          break;\r\n        case \"currency\":\r\n          currency = i.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return parseFloat(\r\n      stringNumber\r\n        .replace(new RegExp(\"\\\\\" + group, \"g\"), \"\")\r\n        .replace(new RegExp(\"\\\\\" + decimal), \".\")\r\n        .replace(new RegExp(\"\\\\\" + currency, \"g\"), \"\")\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Formates a date\r\n   *\r\n   * @param {date} ts A timestamp.\r\n   * @param {object} options The date options.\r\n   * @param {boolean} isUTC\r\n   * @param {string} locales e.g. \"lv\"\r\n   * @param {string} format e.g. \"YYYY-MM-DD HH:mm:ss\"\r\n   */\r\n  const formatDate = (\r\n    ts,\r\n    options = {\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    },\r\n    isUTC = true,\r\n    locales = language,\r\n    format = null\r\n  ) => {\r\n    let date = new Date(ts);\r\n    if (isUTC) {\r\n      const diff = date.getTimezoneOffset();\r\n      date = moment(date).add(-diff, \"m\").toDate();\r\n    }\r\n    return format === null\r\n      ? new Intl.DateTimeFormat(locales, options).format(date)\r\n      : moment(date).format(format);\r\n  };\r\n\r\n  /**\r\n   * Retrieves an URL parameter\r\n   */\r\n  const getUrlParam = (param) => {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    return urlParams.get(param);\r\n  };\r\n\r\n  const sendEmailValidationRequest = ({ token, email }) => {\r\n    sendRequest({\r\n      req: \"validate email token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Sends the password reset request\r\n   *\r\n   * @param {string} token The password reset token\r\n   * @param {string} email User's email\r\n   */\r\n  const sendPasswordResetRequest = ({ token, email }) => {\r\n    setPasswordResetTokenEmail(email);\r\n    sendRequest({\r\n      req: \"validate password reset token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets client URI\r\n   */\r\n  const getUri = () => {\r\n    return `${window.location.hostname}`;\r\n  };\r\n\r\n  /**\r\n   * Gets client IP\r\n   */\r\n  const getIP = () => {\r\n    if (debug) return;\r\n    fetch(`${config.uri.ENDPOINT}/ip`, {\r\n      method: \"post\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((results) => results.json())\r\n      .then((data) => {\r\n        setIP(typeof data.ip === \"string\" ? data.ip : \"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Gets the cart\r\n   */\r\n  const getCart = () => {\r\n    const cart = getUrlParam(\"cart\");\r\n\r\n    if (cart !== null) {\r\n      setExternalRequest(JSON.stringify({ cart }));\r\n      if (!signedIn) setIsExternalRequest(true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets cart purposses\r\n   */\r\n  const getCartPurposes = () => {\r\n    if (cartContent === null) return;\r\n\r\n    let cartPurposes = [];\r\n\r\n    barrelGetters.cartContent.map((element) =>\r\n      cartPurposes.push(element.product)\r\n    );\r\n\r\n    setCartPurposes(null);\r\n\r\n    sendRequest({\r\n      req: \"get cart purposes\",\r\n      data: {\r\n        purposes: JSON.stringify(cartPurposes),\r\n        language: language,\r\n        page: 1,\r\n        limit: 5,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the currencies\r\n   *\r\n   * @param {*} newPage\r\n   */\r\n  const getCurrencies = (newPage) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: { uid: accountNumber, page: newPage, limit: currenciesPerPage },\r\n    });\r\n    setActivePageCurrencies(newPage);\r\n  };\r\n\r\n  /**\r\n   * Finds currencies\r\n   *\r\n   * @param {string} search The search sring.\r\n   */\r\n  const findCurrencies = (search) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"find currencies\",\r\n      data: {\r\n        uid: accountNumber,\r\n        search,\r\n        page: 1,\r\n        limit: currenciesPerPage,\r\n      },\r\n    });\r\n    setActivePageCurrencies(1);\r\n  };\r\n\r\n  /**\r\n   * Gets user transactions\r\n   *\r\n   * @param {integer} newPage\r\n   */\r\n  const getTransactions = (newPage, search = null) => {\r\n    setTransactions(null);\r\n\r\n    let dateStart = dateRangeStart;\r\n    let dateEnd = dateRangeEnd;\r\n    if (dateEnd === \"today\") {\r\n      const now = new Date();\r\n      dateEnd = now.setDate(now.getDate());\r\n    }\r\n    dateStart = formatDate(dateStart, null, true, null, \"YYYY-MM-DD\");\r\n    dateEnd = formatDate(dateEnd, null, true, null, \"YYYY-MM-DD\");\r\n\r\n    sendRequest({\r\n      req: \"get transactions\",\r\n      data: {\r\n        page: newPage,\r\n        limit: transactionsPerPage,\r\n        uid: accountNumber,\r\n        language,\r\n        dateStart,\r\n        dateEnd,\r\n        search: search !== null ? search : searchTransactions,\r\n      },\r\n    });\r\n    setActivePageTransactions(newPage);\r\n  };\r\n\r\n  /**\r\n   * Finds transactions\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findTransactions = (search) => {\r\n    setSearchTransactions(search);\r\n    getTransactions(1, search);\r\n\r\n    // setTransactions(null);\r\n    // sendRequest({\r\n    //   req: \"find transactions\",\r\n    //   data: {\r\n    //     page: 1,\r\n    //     limit: transactionsPerPage,\r\n    //     uid: accountNumber,\r\n    //     search: search,\r\n    //   },\r\n    // });\r\n    // setActivePageTransactions(1);\r\n  };\r\n\r\n  /**\r\n   * Gets user shares\r\n   *\r\n   * @param {*} newPage\r\n   */\r\n  const getShares = (newPage) => {\r\n    setShares(null);\r\n    sendRequest({\r\n      req: \"get shares\",\r\n      data: {\r\n        page: newPage,\r\n        limit: sharesPerPage,\r\n        uid: accountNumber,\r\n        language: language,\r\n      },\r\n    });\r\n    setActivePageShares(newPage);\r\n  };\r\n\r\n  /**\r\n   * Gets user businesses\r\n   *\r\n   * @param {integer} newPage\r\n   */\r\n  const getBusinesses = (newPage = 1) => {\r\n    setUserBusinesses(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(1);\r\n    setActiveBusinessID(null);\r\n    sendRequest({\r\n      req: \"get user businesses\",\r\n      data: { uid: accountNumber, page: newPage, limit: businessesPerPage },\r\n    });\r\n    setActivePageBusinesses(newPage);\r\n  };\r\n\r\n  /**\r\n   * Gets the business purposes\r\n   *\r\n   * @param {*} business_id\r\n   * @param {*} selected\r\n   * @param {*} newPage\r\n   */\r\n  const getBusinessPurposes = (business_id, selected = null, newPage = 1) => {\r\n    // console.log(\"BUSINESS PURPOSES FOR ID \" + business_id, businessPurposes);\r\n\r\n    if (selected !== null) {\r\n      setActiveBusiness(selected);\r\n      setActiveBusinesPurpose(null);\r\n      setActivePurposeProperty(null);\r\n    }\r\n    setBusinessPurposes(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(newPage);\r\n    setActiveBusinessID(business_id);\r\n    return sendRequest({\r\n      req: \"get business purposes\",\r\n      data: {\r\n        business_id: business_id,\r\n        language: language,\r\n        page: newPage,\r\n        limit: businessPurposesPerPage,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the purpose shareholders\r\n   *\r\n   * @param {*} purpose_id\r\n   * @param {*} selected\r\n   */\r\n  const getPurposeShareholders = (purpose_id, selected = null) => {\r\n    if (selected !== null) {\r\n      setActiveBusinesPurpose(purpose_id);\r\n    }\r\n    setPurposeShareholders(null);\r\n    return sendRequest({\r\n      req: \"get purpose shareholders\",\r\n      data: { purpose_id: purpose_id },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get account data\r\n   */\r\n  const getAccountData = () => {\r\n    if (accountNumber === null) return;\r\n    sendRequest({\r\n      req: \"get account data\",\r\n      data: {\r\n        uid: accountNumber,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get transaction by id\r\n   *\r\n   * @param {integer} id The primary key\r\n   */\r\n  const getTransactionById = (id) => {\r\n    sendRequest({\r\n      req: \"get transaction by id\",\r\n      data: { id: id, language: language },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get conatainer class\r\n   *\r\n   * Returns object cantaining the classes for layout container appearance.\r\n   *\r\n   * @param {boolean} signedIn, True if user has signed in, otherwise false.\r\n   */\r\n  const getContainerClass = (signedIn) => {\r\n    return {\r\n      wrapperClass: signedIn\r\n        ? \"auth-wrapper auth-wrapper-summary\"\r\n        : \"auth-wrapper\",\r\n      innerClass: signedIn\r\n        ? \"auth-inner auth-inner-summary\"\r\n        : \"auth-inner autoWidth\",\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Get redirect\r\n   *\r\n   * Returns router redirect component.\r\n   */\r\n  const getRedirect = () => {\r\n    return redirectTo === null ? \"\" : <Redirect push to={redirectTo} />;\r\n  };\r\n\r\n  /**\r\n   * Sorts an object array by value of the property\r\n   *\r\n   * @param {array} array The array\r\n   * @param {string} property The property name\r\n   */\r\n  const sortObjectArray = (array, property) => {\r\n    return array.sort((a, b) =>\r\n      a[property] > b[property] ? 1 : b[property] > a[property] ? -1 : 0\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Returns an array index of the object\r\n   * containing the property with the certain value.\r\n   *\r\n   * @param {array} array The array\r\n   * @param {string} property The property name\r\n   * @param {any} value The property value\r\n   */\r\n  const getObjectArrayElementIndex = (array, property, value) => {\r\n    if (array === null) return -1;\r\n    return array\r\n      .map((properties) => {\r\n        return properties[property];\r\n      })\r\n      .indexOf(value);\r\n  };\r\n\r\n  /**\r\n   * Deletes an object array element\r\n   *\r\n   * @param {array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const deleteObjectArrayElement = (arr, property, value) => {\r\n    return arr.filter((obj) => {\r\n      return obj[property] !== value;\r\n    });\r\n  };\r\n\r\n  const getReviser = () => {\r\n    return \"STA\";\r\n  };\r\n\r\n  const getWorkplace = () => {\r\n    return \"LAPSTA\";\r\n  };\r\n\r\n  const barrelFunctions = {\r\n    sendRequest,\r\n    processUserResponse,\r\n    showMessage,\r\n    hideMessage,\r\n    changeLanguage,\r\n    roundTo,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    getArrayObject,\r\n    getRequestStatus,\r\n    clearRequestStatus,\r\n    showRequestStatus,\r\n    format,\r\n    formatPerCent,\r\n    formatExchangeRate,\r\n    getContainerClass,\r\n    formatDate,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    getRedirect,\r\n    getUri,\r\n    getIP,\r\n    getCart,\r\n    getCartPurposes,\r\n    getUrlParam,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    getCurrencies,\r\n    findCurrencies,\r\n    getTransactions,\r\n    findTransactions,\r\n    getShares,\r\n    parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n  };\r\n\r\n  /** \r\n   * Event handlers\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On language change\r\n   */\r\n  i18n.on(\"languageChanged\", function (lng) {\r\n    setLanguage(lng);\r\n  });\r\n\r\n  /**\r\n   * On redirect\r\n   * @param {string} to Redirect path (e.g. \"/sign-in\")\r\n   */\r\n  const onRedirect = (to) => {\r\n    setRedirectTo(to);\r\n  };\r\n\r\n  const onSessionStart = () => {\r\n    // start new session\r\n    let data = {};\r\n    data.request = \"hello\";\r\n    data.instance = instance;\r\n    startSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionEnd = () => {\r\n    // end current session\r\n    sendRequest({ req: \"end session\", data: {} });\r\n\r\n    let data = {};\r\n    data.request = \"bye\";\r\n    data.instance = instance;\r\n    endSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionReset = () => {\r\n    setSession(uuidv4());\r\n  };\r\n\r\n  /**\r\n   * On signup\r\n   * @param {object} data Signup data\r\n   */\r\n  const onSignUp = (data) => {\r\n    return sendRequest({ req: \"register user\", data });\r\n  };\r\n\r\n  const onSessionTimeout = () => {\r\n    // console.log(\"Session timed out...\");\r\n    setLoggingOut(true);\r\n    setRedirectTo(\"/sign-out\");\r\n  };\r\n\r\n  /**\r\n   * On transfer type change\r\n   * @param {string} id The transfer type id (\"U2S\", \"U2U\", \"U2B\" etc.)\r\n   */\r\n  const onTransferTypeChange = (id) => {\r\n    // console.log(\"setTransferType: \" + id);\r\n    setTransferType(id);\r\n  };\r\n\r\n  const onTransferSuccess = () => {\r\n    // console.log(\"ON TRANSFER SUCCESS\", barrels);\r\n  };\r\n\r\n  /**\r\n   * On transfer\r\n   * @param {object} data Transfer data\r\n   */\r\n  const onTransfer = (data) => {\r\n    // console.log(\"ON TRANSFER (data):\", data);\r\n    // sendRequest({ req: \"register account\", data: data });\r\n    sendRequest(data);\r\n  };\r\n\r\n  const onPurposeRegistration = (data) => {\r\n    sendRequest(data);\r\n  };\r\n\r\n  const onLogOut = () => {\r\n    window.localStorage.clear();\r\n    setSignedIn(false);\r\n    // onSessionEnd(); // DO NOT ACTIVATE THIS HERE - EXECUTING MULTIPLE TIMES\r\n    // setSession(uuidv4()); // DO NOT SET SESSION HERE - INFINITE LOOP!!\r\n  };\r\n\r\n  const onAlertClose = (type = null) => {\r\n    hideMessage(type);\r\n  };\r\n\r\n  /**\r\n   * Barrel: Event handlers\r\n   */\r\n  const barrelEventHandlers = {\r\n    onRedirect,\r\n    onSignUp,\r\n    onSessionTimeout,\r\n    onTransferTypeChange,\r\n    onTransferSuccess,\r\n    onTransfer,\r\n    onSessionStart,\r\n    onSessionEnd,\r\n    onSessionReset,\r\n    onPurposeRegistration,\r\n    onLogOut,\r\n    onAlertClose,\r\n  };\r\n\r\n  /**\r\n   * Barrel of barrels\r\n   */\r\n  const barrels = {\r\n    barrelGetters,\r\n    barrelSetters,\r\n    barrelFunctions,\r\n    barrelEventHandlers,\r\n  };\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  useSocket((data) => {\r\n    setServerResponseReceived(true);\r\n    setRequestTimedOut(false);\r\n    processUserResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  });\r\n\r\n  useSystemSocket((data) => {\r\n    processSystemResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  }, instance);\r\n\r\n  /** \r\n   * Return\r\n   ============================================================================ */\r\n\r\n  if (props.mode !== \"construction\") {\r\n    if (!reconnecting || debug) {\r\n      return <Main {...barrels} />;\r\n    } else {\r\n      return <NotConnected {...barrels} />;\r\n    }\r\n  } else {\r\n    return <UnderConstruction {...barrels} />;\r\n  }\r\n};\r\n","import { sendData } from \"../utils/sockets\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const { req, data, session, uid, barrels } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, userData, userSequence } = barrels.barrelGetters;\r\n  const {\r\n    setUserData,\r\n    setUID,\r\n    // setAccountNumber,\r\n    // setRequest,\r\n    // setUserBusinesses,\r\n  } = barrels.barrelSetters;\r\n  // const {} = barrels.barrelFunctions;\r\n  //   const {} = barrels.barrelEventHandlers;\r\n\r\n  let requestFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onRequest = (req, callback) => {\r\n    if (requestFound) return;\r\n    if (req === props.req || req === \"default\") {\r\n      callback();\r\n      requestFound = true;\r\n    }\r\n  };\r\n\r\n  /** \r\n   * Request handlers\r\n  ============================================================================ */\r\n\r\n  onRequest(\"sign in user\", () => {\r\n    setUserData(JSON.stringify(data));\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"get user sequence\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"register account\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const year = fullyear.slice(-2);\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n    const birthDate = `${day}${month}${year}`;\r\n    const timezone = data.timezone.slice(0, 2);\r\n    const initial = userData.lastname.slice(0, 1).toUpperCase();\r\n    const icode = initial.charCodeAt(0).toString().padStart(5, \"0\");\r\n\r\n    data.scode = `${timezone}${birthDate}${initial}`;\r\n    data.tcode = `${timezone}${birthDate}${icode}`;\r\n    data.timezone = data.timezone.slice(5);\r\n    data.sequence = userSequence.toString().padStart(5, \"0\");\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    setUID(data.personalID);\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"default\", () => {\r\n    sendData({ req, data, uid, session }, debug);\r\n\r\n    return true;\r\n  });\r\n\r\n  // onRequest(\"unknown\", () => {\r\n  //   showMessage(`UNKNOWN REQUEST ${req}`, \"info\");\r\n\r\n  //   return true;\r\n  // });\r\n\r\n  return requestFound;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setUID,\r\n    setAccountNumber,\r\n    setRedirectTo,\r\n  } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug) console.log(`ERROR: ${req}`, error, context, props, barrels);\r\n  // const { showMessage } = barrels.barrelFunctions;\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n    // console.log(res, status);\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onError([\"*\", \"INVALID_SESSION\"], () => {\r\n    showMessage(\"SESSION_TIMED_OUT\", \"info\", false);\r\n    setRedirectTo(\"/sign-out\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer errors\r\n   */\r\n  onError([\"transfer U2S\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2B\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_USER_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // user selected the same language again - just ignore\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate email token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate password reset token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"reset password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // showMessage(\"REQUEST_ALREADY_SENT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same language again - that's ok\r\n    return true;\r\n  });\r\n\r\n  onError([\"update user\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same password again - that's ok\r\n    return true;\r\n  });\r\n\r\n  // onError([\"update last seen user\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Same last seen time was submitted (shouldn't be possible) - ignore for now\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"sign in user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"change password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"SAME_PASSWORD_RESET\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"submit tan\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"INVALID_TAN\", \"error\", false);\r\n    return true;\r\n  });\r\n\r\n  onError([\"get cart\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User accessed the same cart again - it's fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer V2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Allowance already dispatched today - totally fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    // The same currency was selected again - no problem\r\n    return true;\r\n  });\r\n\r\n  onError([\"end session\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Session updated to the same data ??\r\n    return true;\r\n  });\r\n\r\n  onError([\"register currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_CURRENCY_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"update purpose property\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register purpose\", \"ER_DUP_ENTRY\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  // onError([\"get user sequence\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Session updated to the same data ??\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"register account\", \"ER_DUP_ENTRY\"], () => {\r\n    setUID(null);\r\n    setAccountNumber(null);\r\n    showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError(\r\n    [\"register account\", \"ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO\"],\r\n    () => {\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n      return true;\r\n    }\r\n  );\r\n\r\n  onError([\"register shareholder\", \"ER_NO_REFERENCED_ROW_2\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"*\", \"ER_CANT_CREATE_THREAD\"], () => {\r\n    showMessage(\"NO_RESPONSE_FROM_SERVER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug, error: msgError } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug)\r\n    console.log(`SYSTEM ERROR: ${req}`, error, context, props, barrels);\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onError([\"*\", \"INVALID_SESSION\"], () => {\r\n  //   showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n  //   setRedirectTo(\"/sign-out\");\r\n  //   return true;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_error\", \"none\"], () => {\r\n    if (msgError !== \"SERVER_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_timeout\", \"connect_timeout\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"reconnect_error\", \"TransportError\"], () => {\r\n    if (msgError !== \"SERVER_STILL_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_STILL_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, info: msgInfo } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage, hideMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug)\r\n    console.log(`system response: ${req} (${props.status})`, props, barrels);\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (res === \"*\" && status === props.status) ||\r\n      (res === props.req && status === props.status) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n  //   if (typeof props.token !== \"undefined\") {\r\n  //     console.log(\"Renewing session...\");\r\n\r\n  //     onSessionEnd();\r\n  //     setSession(props.token);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect attempt\", \"continue\"], () => {\r\n    // if (msgInfo !== \"RECONNECT_ATTEMPT\")\r\n    //   showMessage(\"RECONNECT_ATTEMPT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnecting\", \"continue\"], () => {\r\n    if (msgInfo !== \"RECONNECTING\") {\r\n      setReconnecting(true);\r\n      showMessage(\"RECONNECTING\", \"info\");\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect\", \"success\"], () => {\r\n    setReconnecting(false);\r\n    hideMessage();\r\n    // hideMessage(\"error\");\r\n    // hideMessage(\"info\");\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Loading.css\";\r\nimport React from \"react\";\r\n// import MainSkeleton from \"../pages/main\";\r\n\r\nexport default () => {\r\n  //\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"lds-hourglass\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * User CSS\r\n */\r\nimport \"./normalize.css\";\r\nimport \"./index.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Loading from \"./components/loading\";\r\n// import UnderConstruction from \"./components/pages/underConstruction\";\r\nimport ErrorBoundary from \"./components/errorBoundary\";\r\n\r\n/**\r\n * Retrieves an URL parameter\r\n */\r\nconst getUrlParam = (param) => {\r\n  const queryString = window.location.search;\r\n  const urlParams = new URLSearchParams(queryString);\r\n  return urlParams.get(param);\r\n};\r\n\r\n/**\r\n * Clear local storage (URL param ?reset)\r\n */\r\nif (getUrlParam(\"reset\") !== null) {\r\n  window.localStorage.clear();\r\n  console.log(\"Local storage cleared\");\r\n}\r\n\r\n/**\r\n * Render (with suspense)\r\n * mode = default | construction\r\n */\r\nconst root = document.getElementById(\"root\");\r\nconst construction = document.getElementById(\"construction\");\r\nif (root) {\r\n  ReactDOM.render(\r\n    <Suspense fallback={<Loading />}>\r\n      <ErrorBoundary>\r\n        <Dispatcher mode={!construction ? \"\" : \"construction\"} />\r\n      </ErrorBoundary>\r\n    </Suspense>,\r\n    root\r\n  );\r\n}\r\n"],"sourceRoot":""}