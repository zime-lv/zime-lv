{"version":3,"sources":["components/locale lazy /^/.*$/ groupOptions: {} namespace object","translations/i18n.js","utils/config.js","utils/state.js","components/card/Card.js","components/submitButton/SubmitButton.js","utils/useTimeout.js","components/errorBoundary/ErrorBoundary.js","components/modalMessage/ModalMessage.js","components/accountRegistration/AccountRegistration.js","components/pagination/Pagination.js","components/transactions/Transactions.js","components/shareholder/Shareholder.js","components/shares/Shares.js","components/transfer/Balance.js","components/transfer/TransferToSelf.js","components/tanInput/TanInput.js","components/transfer/TransferToPerson.js","components/transfer/TransferToBusiness.js","components/businessRegistration/businessRegistration.js","components/purposeRegistration/PurposeRegistration.js","components/shareholderRegistration/shareholderRegistration.js","components/myBusiness/MyBusiness.js","components/userEditor/UserEditor.js","components/currencies/Currencies.js","components/currencyRegistration/CurrencyRegistration.js","components/idleTimer/IdleTimer.js","utils/useInterval.js","utils/useEventListener.js","components/login/LogIn.js","components/pages/summary/Summary.js","components/currencyContainer/CurrencyContainer.js","components/transfer/Transfer.js","components/contact/Contact.js","utils/sockets.js","components/signup/SignUp.js","components/alert/Alert.js","components/language-selector/LanguageSelector.js","components/pages/main/Main.js","components/auth/Auth.js","components/validateEmail/ValidateEmail.js","components/changePassword/ChangePassword.js","components/logout/Logout.js","components/passwordReset/passwordReset.js","components/pages/underConstruction/UnderConstruction.js","components/underConstruction/UnderConstruction.js","components/pages/notConnected/NotConnected.js","components/notConnected/NotConnected.js","Dispatcher.js","utils/requestHandler.js","utils/userErrorHandler.js","utils/userResponseHandler.js","utils/systemErrorHandler.js","utils/systemResponseHandler.js","components/loading/Loading.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","defaultNS","keySeparator","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","config","dev","uri","ENDPOINT","window","location","hostname","useStickyState","defaultValue","key","useState","stickyValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","args","defaults","title","navigation","undefined","footer","header","body","headerContent","onNavigationClick","props","assign","Footer","Header","className","length","Title","Nav","variant","defaultActiveKey","navigationdefaultActiveKey","item","Item","Link","href","link","onClick","style","color","name","Body","React","Children","children","child","cloneElement","styles","caption","request","namespace","visible","marginTop","timeout","onSubmit","barrelGetters","setRequest","barrelSetters","showMessage","barrelFunctions","requestExpired","setRequestExpired","callback","delay","savedCallback","useRef","current","setTimeout","clearTimeout","useTimeout","Button","type","block","disabled","Spinner","as","animation","size","role","aria-hidden","hidden","ErrorBoundary","state","hasError","error","errorInfo","console","log","this","Component","centered","message","onHide","file","backdrop","useTranslation","ExternalFile","lazy","Modal","aria-labelledby","closeButton","Navbar","borderRadius","background","backgroundColor","boxShadow","Brand","src","width","height","maxHeight","overflowY","signedIn","accountNumber","userData","accountPhotoPath","language","userBirthYear","userBirthMonth","userBirthDay","userBirthDateError","userTimezone","setUserBirthYear","setUserBirthMonth","setUserBirthDay","setUserBirthDateError","setUserTimezone","getReviser","getWorkplace","sendRequest","formatDate","userAgreementShow","setUserAgreementShow","privacyPolicyShow","setPrivacyPolicyShow","schema","yup","timezone","required","birthYear","birthMonth","birthDay","timezones_sorted","timezones","composeDate","year","month","day","newDate","dateString","match","datepart","split","parseInt","leapYear","isValidDate","yearNow","Date","getFullYear","Alert","Heading","Trans","i18nKey","ModalMessage","show","component","handleSubmit","handleChange","values","handleBlur","touched","errors","isValid","validateForm","setFieldValue","Form","noValidate","Row","Group","Col","controlId","Label","Control","custom","onChange","target","isInvalid","Array","from","Feedback","monthName","toLocaleString","monthNumber","toString","padStart","dayNumber","element","Offset","Name","paddingBottom","KeyboardArrowRight","onMouseDown","SubmitButton","validationSchema","data","birthDate","reviser","workplace","email","sendAccountRegistrationRequest","initialValues","countItems","itemsPerPage","active","align","pages","Math","ceil","getPages","items","number","push","Pagination","Ellipsis","textAlign","display","padding","margin","First","Prev","Next","Last","getJSX","transactions","countTransactions","activePageTransactions","transactionsPerPage","getTransactions","format","formatPerCent","cnt","ListGroup","transaction","keyTransactions","business_title","conv_amount","created","sender_firstname","sender_lastname","purpose_id","purpose_title","recipient_id","roles","share","share_per_cent","from_account","to_account","i_am_recipient","t_from_account","t_to_account","roles_available","arrRoles","shares_available","action","float","ArrowRightAlt","Badge","pill","purpose","shareholder","rangeControl","sharePerCent","businessTitle","purposeTitle","businessOwnerFirstname","businessOwnerLastname","sharesCreated","purposeShareholders","setPurposeShareholders","userQuery","setUserQuery","delayedQuery","_","debounce","q","sendQuery","onClose","shareholder_id","ps","sharesLabelId","Toast","minWidth","firstname","lastname","Settings","fontSize","min","max","step","shares","countShares","activePageShares","sharesPerPage","getShares","keyShares","owner_firstname","owner_lastname","shares_created","shares_roles","shares_share","Shareholder","accordionView","setAccountType","setRedirectTo","setAccordionView","getAccountData","userDataParsed","onAccountTypeSelected","available","acc_curr","acc_cred","acc_save","toggleView","view","newView","Accordion","Toggle","Card","eventKey","cursor","Collapse","Text","Transactions","Shares","accountType","currencyAbbr","transferFromAccount","transferToAccount","transferAmount","setTransferFromAccount","setTransferToAccount","setTransferAmount","parseLocaleNumber","refAmount","createRef","fromAccount","toAccount","amount","matches","RegExp","InputGroup","Prepend","placeholder","aria-describedby","ref","uid","Intl","NumberFormat","notation","minimumFractionDigits","useGrouping","transferToSelf","tanRequired","tanInputTAN","setTanRequired","setTanInputTAN","refTAN","tan","transferToUID","transferDescription","setTransferRequest","setTransferToUID","setTransferDescription","refPersonalID","refDescription","toPersonalID","TanInput","rows","description","transferType","transferToPerson","transferToPurpose","setTransferToPurpose","refPurposeID","purposeID","currency","transferToBusiness","businessRegistrationAddTitle","businessRegistrationAddDescription","setBusinessRegistrationAddTitle","setBusinessRegistrationAddDescription","barrelEventHandlers","onBusinessRegistration","refBusinessTitle","refBusinessDescription","trim","businessDescription","optional","requestInsert","requestUpdate","businessID","category","subcategory","subcategory2","keywords","barrels","purposeRegistrationTitle","businessPurposes","purposeRegistrationDescription","purposeRegistrationCategory","purposeRegistrationSubcategory","purposeRegistrationSubcategory2","purposeRegistrationKeywords","setPurposeRegistrationTitle","setBusinessPurposes","setPurposeRegistrationDescription","setPurposeRegistrationCategory","setPurposeRegistrationSubcategory","setPurposeRegistrationSubcategory2","setPurposeRegistrationKeywords","onPurposeRegistration","refPurposeTitle","refPurposeDescription","refPurposeCategory","refPurposeSubcategory","refPurposeSubcategory2","refPurposeKeywords","purposeDescription","purposeCategory","purposeSubcategory","purposeSubcategory2","purposeKeywords","RegisterPurpose","shareholderRoles","typeError","personalID","userBusinesses","countBusinesses","businessesPerPage","activePageBusinesses","userBusinessesLoaded","activeBusiness","activeBusinessID","countBusinessPurposes","businessPurposesPerPage","activePageBusinessPurposes","activeBusinesPurpose","activePurposeProperty","activePurposeData","setActiveBusiness","setActiveBusinesPurpose","setActivePurposeProperty","setActivePurposeData","getBusinesses","getBusinessPurposes","getPurposeShareholders","menuItems","purposes","countShareholders","business","keyBusiness","keyPurpose","business_id","TogglePurpose","whiteSpace","Edit","stopPropagation","Tab","Pane","bg","Add","keyShareholder","bp","status","purpose_status","Check","label","checked","jsx","date","businessSince","DateTimeFormat","ToggleBusiness","Store","Container","sm","Content","border","PurposeRegistration","mode","userEditorEditFirstname","userEditorFirstname","userEditorEditLastname","userEditorLastname","userEditorEditEmail","userEditorEmail","userEditorEditPassword","userEditorPassword","userEditorPasswordVisible","userEditorSubmitButtonVisible","setUserEditorEditFirstname","setUserEditorFirstname","setUserEditorEditLastname","setUserEditorLastname","setUserEditorEmail","setUserEditorEditEmail","setUserEditorEditPassword","setUserEditorPassword","setUserEditorPasswordVisible","setUserEditorSubmitButtonVisible","refFirstName","refLastName","refEmail","refPassword","togglePassword","yupObject","firstName","lastName","password","Close","Append","VisibilityOff","Visibility","sendUserRegistrationRequest","currencies","settings","countCurrencies","activePageCurrencies","currenciesPerPage","setCurrencyAbbr","getCurrencies","formatExchangeRate","onCurrencySelected","currency_id","onPageSelect","Table","responsive","striped","bordered","hover","keyCUrrency","abbr","rate","region","includes","aria-label","curr_abbr","curr_title","curr_region","curr_rate","currencyCode","currencyName","currencyRegion","currencyNewRate","setCurrencyCode","setCurrencyName","setCurrencyRegion","setCurrencyNewRate","refAbbr","refTitle","refRegion","refRate","timestamp","stage2","stage3","onTick","onTimerReset","onTimeout","events","session","onSessionTimeout","seconds","setSeconds","modalMessageShow","setModalMessageShow","setInterval","clearInterval","useInterval","eventHandler","i","addEventListener","removeEventListener","useEventListener","currTime","timeFormatted","minute","second","modalMessage","fontWeight","OverlayTrigger","placement","overlay","Tooltip","AvTimer","ip","logInEmail","logInPassword","setLoggingIn","setUpdateInterval","setLogInEmail","setLogInPassword","getUri","fluid","sendUserLogInRequest","sessionTimeout","useLocation","paddingRight","paddingLeft","PowerSettingsNew","IdleTimer","collapseOnSelect","expand","pathname","aria-controls","pageBody","exact","path","Balance","AccountRegistration","UserEditor","accordionViewCurrency","setAccordionViewCurrency","Currencies","CurrencyRegistration","CurrencyContainer","MyBusiness","onTransferTypeChange","transferCard","setTransferCard","TransferToSelf","TransferToPerson","TransferToBusiness","Transfer","contactSubject","contactMessage","setContactSubject","setContactMessage","refSubject","refMessage","subject","sender","Contact","socket","openSocket","connect","secure","reconnect","sendData","emit","signUpFirstName","signUpLastName","signUpEmail","signUpPassword","setSignUpFirstName","setSignUpLastName","setSignUpEmail","setSignUpPassword","passwordVisible","setPasswordVisible","validateEmail","info","onAlertClose","errorStrings","infoStrings","msgError","msgInfo","dismissible","changeLanguage","lng","selectLanguage","instance","dailyAllowanceDispatched","externalRequest","updateInterval","cartContent","validateTokenEmail","passwordResetTokenValidated","validateTokenPasswordReset","connected","isExternalRequest","setDailyAllowanceDispatched","setIsExternalRequest","setSignedIn","getIP","processUserResponse","getCart","getCartPurposes","sendEmailValidationRequest","sendPasswordResetRequest","getContainerClass","getRedirect","onRedirect","onSessionStart","onSessionEnd","customer","cart","wrapperClass","innerClass","appClass","Summary","Login","SignUp","cartPurposes","Cart","priceTotal","priceReal","price","product_found","find","products","product","Auth","validationTokenEmail","validationTokenEmailResent","setValidateTokenEmail","getUrlParam","token","ValidateEmail","passwordResetTokenEmail","ChangePassword","setLanguage","onLogOut","tempError","tempInfo","tempLanguage","Logout","passwordResetEmail","setValidateTokenPasswordReset","setPasswordResetEmail","PasswordReset","LanguageSelector","marginLeft","marginRight","Build","UnderConstruction","PowerOff","NotConnected","isLocalhost","setDebug","loggingOut","setLoggingOut","loggingIn","pageLoading","setPageLoading","now","setInstance","uuidv4","setSession","setSettings","setSessionTimeout","setConnected","reconnecting","setReconnecting","setIP","setExternalRequest","setCartContent","currencyRate","setCurrencyRate","setCurrencies","setTransactions","setShares","setCountCurrencies","setCountTransactions","setCountShares","setActivePageCurrencies","setActivePageTransactions","setActivePageShares","setCurrenciesPerPage","setTransactionsPerPage","setSharesPerPage","setUserData","setUID","setAccountNumber","userSequence","setUserSequence","setUserBusinesses","setCountBusinesses","setBusinessesPerPage","setActivePageBusinesses","setUserBusinessesLoaded","setActiveBusinessID","setCartPurposes","setCountBusinessPurposes","setBusinessPurposesPerPage","setActivePageBusinessPurposes","redirectTo","lastInsertId","setLastInsertId","setPasswordResetTokenValidated","setPasswordResetTokenEmail","tmrConnected","setValidationTokenEmail","setValidationTokenEmailResent","options","setTransferType","transferRequest","setAccountPhotoPath","setError","setInfo","processRequest","requestFound","onRequest","dt","fullyear","getMonth","getDate","slice","initial","toUpperCase","icode","charCodeAt","scode","tcode","sequence","requestHandler","context","errorFound","onError","res","userErrorHandler","getTransactionById","sortObjectArray","getObjectArrayElementIndex","showTanInput","responseFound","onResponse","reqData","results","content","queryCnt","insertId","tags","resent","affectedRows","currency_abbr","isNaN","currency_rate","count_businesses","count_purposes","index","splice","temp","count_currencies","count_transaction_positions","count_shares","userResponseHandler","processSystemResponse","systemErrorHandler","hideMessage","systemResponseHandler","param","queryString","search","URLSearchParams","get","msg","array","property","sort","a","b","properties","indexOf","maximumFractionDigits","ts","hour","isUTC","locales","diff","getTimezoneOffset","moment","add","toDate","to","fetch","method","headers","json","catch","page","limit","newPage","selected","stringNumber","locale","parts_local","formatToParts","group","decimal","forEach","parseFloat","replace","on","endSession","onSignUp","onTransferSuccess","onTransfer","startSession","onSessionReset","responseData","setResponseData","useSocket","latency","reason","attemptNumber","useSystemSocket","clear","root","document","getElementById","construction","ReactDOM","render","fallback","Dispatcher"],"mappings":"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AAKC,MAAMgR,IAChC8T,cACAC,iBACAqD,mBACAC,kBACAC,eACAC,kBACAzQ,gCACAC,sCACAkB,4BACAE,kCACAC,+BACAC,kCACAC,mCACAC,+BACA8E,2BACAC,uBACAC,0BACAC,sBACAC,uBACAC,mBACAC,0BACAC,sBACAC,6BACAC,iCACAmO,sBACA3W,eAEAD,eACA4a,gBACAnH,sBACAE,8BACAD,+BACA0C,2BACAN,wBACAC,8BACAkF,gBAAiBvxB,KAAKC,MAAMsxB,IAC5B3c,uBACAC,qBACAC,kBACA8B,iBACAa,qBACAZ,uBACAwQ,kBACAC,kBACArgB,iBACAC,kBACAC,gBACAC,sBACAC,gBACA6a,gBACAC,gBACAC,kBACAC,mBACArb,YACAuQ,gBAEAxQ,oBACA/B,SACAgkB,SAOI3lB,GAAgB,CACpByqB,WAEAE,gBACA/I,eAGAkJ,iBACA/qB,aAEAirB,cAEAE,aAEAE,oBAEAD,cACAK,SACA3J,qBACAgK,iBACAC,mBACAC,aACA9b,oBACAmT,4BACA4I,sBACAC,wBACAC,kBACAC,2BACAC,6BACAC,uBACAC,wBACAC,0BACAC,oBACAnB,eACAE,mBACAhC,eACAkD,eAEAxF,eACAF,+BACAC,wBACAyE,sBACAC,kBACAlO,mBACAoO,mBAEA5b,iBACA0d,mBACAf,oBACAE,mBACA9c,kBACA2c,UACAI,qBACAC,sBACAC,wBACAC,2BACAC,2BACA1U,qBACA2U,uBACA9W,uBACA+W,mBACAC,4BACAC,8BACAC,iCACA9U,2BACAC,4BAEAC,wBACA9K,0BACAiU,iBACAC,oBACAqD,sBACAC,qBACAC,kBACAC,qBACA3Q,mCACAC,yCACAuB,+BACAE,qCACAC,kCACAC,qCACAC,sCACAC,kCACAiF,8BACAC,0BACAC,6BACAC,yBACAE,0BACAD,sBACAE,6BACAC,yBACAC,gCACAC,oCACA2N,yBACA3W,kBAEA+a,uBACAlF,yBACAa,iCACA6D,kCACAC,8BACAE,2BACAC,iCACAta,sBACA/B,0BACAC,wBACAC,qBACA8B,oBACAW,wBACAV,0BACAuQ,qBACAC,qBA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","file":"static/js/main.58289782.chunk.js","sourcesContent":["var map = {\n\t\"./document.css\": [\n\t\t268,\n\t\t7,\n\t\t7\n\t],\n\t\"./en/PrivacyPolicy\": [\n\t\t195,\n\t\t9,\n\t\t0\n\t],\n\t\"./en/PrivacyPolicy.js\": [\n\t\t195,\n\t\t9,\n\t\t0\n\t],\n\t\"./en/UserAgreement\": [\n\t\t196,\n\t\t9,\n\t\t1\n\t],\n\t\"./en/UserAgreement.js\": [\n\t\t196,\n\t\t9,\n\t\t1\n\t],\n\t\"./lv/PrivacyPolicy\": [\n\t\t197,\n\t\t9,\n\t\t2\n\t],\n\t\"./lv/PrivacyPolicy.js\": [\n\t\t197,\n\t\t9,\n\t\t2\n\t],\n\t\"./lv/UserAgreement\": [\n\t\t198,\n\t\t9,\n\t\t3\n\t],\n\t\"./lv/UserAgreement.js\": [\n\t\t198,\n\t\t9,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 222;\nmodule.exports = webpackAsyncContext;","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n// not like to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    // lng: \"lv\",\r\n    // ns: [\"LogIn\", \"SignUp\"],\r\n    defaultNS: \"Default\",\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: \"languageChanged loaded\",\r\n      bindStore: \"added removed\",\r\n      nsMode: \"default\",\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","const dev = {\r\n  uri: {\r\n    ENDPOINT: \"http://localhost:9000\",\r\n    // ENDPOINT: \"http://192.168.2.100:9000\"\r\n  },\r\n};\r\n\r\nconst dev2 = {\r\n  uri: {\r\n    ENDPOINT: \"http://192.168.2.100:5000\",\r\n  },\r\n};\r\n\r\nconst staging = {\r\n  uri: {\r\n    ENDPOINT: \"https://dev.zime.lv\",\r\n  },\r\n};\r\n\r\nconst prod = {\r\n  uri: {\r\n    ENDPOINT: \"https://zime.lv\",\r\n  },\r\n};\r\n\r\nconst hostname = window && window.location && window.location.hostname;\r\n\r\nlet config;\r\nswitch (hostname) {\r\n  case \"localhost\":\r\n    config = dev;\r\n    break;\r\n  case \"192.168.2.100\":\r\n    config = dev2;\r\n    break;\r\n  case \"dev.zime.lv\":\r\n    config = staging;\r\n    break;\r\n  case \"zime.lv\":\r\n    config = prod;\r\n    break;\r\n  default:\r\n    config = dev;\r\n    break;\r\n}\r\n\r\nexport default {\r\n  ...config,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nexport const useStickyState = (defaultValue, key) => {\r\n  const [value, setValue] = useState(() => {\r\n    const stickyValue = window.localStorage.getItem(key);\r\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n  return [value, setValue];\r\n};\r\n","import \"./Card.css\";\r\nimport React, { cloneElement } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n// import { Container, Row, Col, Button } from \"react-bootstrap\";\r\n// import Button from \"react-bootstrap/Button\";\r\n\r\nexport default (args) => {\r\n  let defaults = {\r\n    title: \"Untitled\",\r\n    navigation: undefined,\r\n    footer: undefined,\r\n    header: true,\r\n    body: true,\r\n    headerContent: null,\r\n    onNavigationClick: () => {},\r\n  };\r\n  let props = Object.assign(defaults, args);\r\n\r\n  let key = 0;\r\n\r\n  let footer = props.footer ? <Card.Footer>{props.footer}</Card.Footer> : \"\";\r\n\r\n  return (\r\n    <Card>\r\n      {/* <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" /> */}\r\n      {props.header && (\r\n        <Card.Header className=\"custom-card\">\r\n          {props.headerContent !== null ? (\r\n            props.headerContent\r\n          ) : (\r\n            <>\r\n              {props.title.length > 0 && <Card.Title>{props.title}</Card.Title>}\r\n              <Nav\r\n                variant=\"tabs\"\r\n                defaultActiveKey={props.navigationdefaultActiveKey}\r\n              >\r\n                {props.navigation &&\r\n                  props.navigation.map((item, key) => (\r\n                    <Nav.Item key={key}>\r\n                      <Nav.Link\r\n                        className=\"custom-card\"\r\n                        href={item.link}\r\n                        onClick={() => props.onNavigationClick(item.link)}\r\n                        style={{ color: \"black\" }}\r\n                      >\r\n                        {item.name}\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  ))}\r\n              </Nav>\r\n            </>\r\n          )}\r\n        </Card.Header>\r\n      )}\r\n\r\n      {props.body && (\r\n        <Card.Body className=\"custom-card\">\r\n          {React.Children.map(args.children, (child) => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                styles: null,\r\n                key: key,\r\n              });\r\n            }\r\n          })}\r\n        </Card.Body>\r\n      )}\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    caption: \"Submit\",\r\n    request: null,\r\n    namespace: \"Button\",\r\n    visible: true,\r\n    marginTop: 0,\r\n    timeout: 15000, // milliseconds\r\n    onSubmit: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { request } = props.barrelGetters;\r\n  const { setRequest } = props.barrelSetters;\r\n  const { showMessage } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const [requestExpired, setRequestExpired] = useState(false);\r\n\r\n  useTimeout(() => {\r\n    if (request !== props.request) return;\r\n    // console.log(\"useTimeout\");\r\n\r\n    // Your custom logic here\r\n    // setSeconds(seconds - 1);\r\n    setRequestExpired(true);\r\n    setRequest(null);\r\n    showMessage(\"REQUEST_EXPIRED\", \"error\");\r\n  }, props.timeout);\r\n\r\n  // useEffect(() => {\r\n  //   if (requestExpired)\r\n  // }, [requestExpired]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return !props.visible ? (\r\n      <></>\r\n    ) : (\r\n      <Button\r\n        type=\"submit\"\r\n        onClick={props.onSubmit}\r\n        block\r\n        disabled={request === props.request && !requestExpired}\r\n        style={{ marginTop: props.marginTop + \"px\" }}\r\n      >\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"border\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={request !== props.request || requestExpired}\r\n        />\r\n        &nbsp;\r\n        {props.caption}\r\n        &nbsp;\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useTimeout = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setTimeout(tick, delay);\r\n      return () => clearTimeout(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","import React from \"react\";\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n    console.log(\"Error boundary:\", error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      //   return <h1>Something went wrong.</h1>;\r\n      return <></>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Modal, Navbar, Nav } from \"react-bootstrap\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ModalMessage\",\r\n    centered: true,\r\n    message: \"\",\r\n    title: null,\r\n    footer: null,\r\n    // bodyStyle: { padding: \"1rem\" },\r\n    onHide: () => {},\r\n    size: \"sm\",\r\n    file: null,\r\n    backdrop: true, // \"static\"\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const ExternalFile =\r\n    props.file !== null\r\n      ? React.lazy(() => import(`../locale/${props.file}`))\r\n      : \"\";\r\n\r\n  // async function loadExternalFile() {\r\n  //   await React.preloadLazy(ExternalFile);\r\n  // }\r\n\r\n  // loadExternalFile();\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size={props.size}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered={props.centered}\r\n        backdrop={props.backdrop}\r\n      >\r\n        {props.title !== null && (\r\n          <Modal.Header closeButton>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src=\"gfx/zlogo_light.png\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                  {props.title}\r\n                </Modal.Title>\r\n              </Nav>\r\n            </Navbar>\r\n          </Modal.Header>\r\n        )}\r\n        <Modal.Body\r\n          style={{ maxHeight: \"calc(100vh - 210px)\", overflowY: \"auto\" }}\r\n        >\r\n          {props.message !== \"\" ? (\r\n            props.message\r\n          ) : (\r\n            <ErrorBoundary>\r\n              <ExternalFile />\r\n            </ErrorBoundary>\r\n          )}\r\n        </Modal.Body>\r\n        {props.footer !== null && (\r\n          <Modal.Footer>\r\n            <Button block onClick={props.onHide}>\r\n              {t(\"Close\")}\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","// System CSS\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// System imports\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, InputGroup, Alert, Col } from \"react-bootstrap\";\r\n// import { Redirect } from \"react-router-dom\";\r\n// import ChevronRight from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\r\nimport moment from \"moment-timezone\";\r\n// import DatePicker from \"react-datepicker\";\r\nimport { Today } from \"@material-ui/icons\";\r\n// import { Today } from \"@material-ui/icons\";\r\n// import DatePicker from \"react-date-picker\";\r\n// import MomentUtils from \"@date-io/moment\";\r\n// import { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n// import { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport _ from \"lodash\";\r\n\r\n// User imports\r\nimport Card from \"../card\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useStickyState } from \"../../utils/state\";\r\nimport Dropzone from \"../dropzone\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport ModalMessage from \"../modalMessage\";\r\n// import { useStickyState } from \"../../utils/state\";\r\nimport timezones from \"./timezones.en.json\";\r\n\r\n// const UserAgreement = React.lazy(() => import(\"../locale/en/UserAgreement\"));\r\n\r\nexport default (args) => {\r\n  // console.log(\"ACCOUNT REGISTRATION ARGS:\", args);\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"get user sequence\", // \"register account\",\r\n    namespace: \"AccountRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    signedIn,\r\n    accountNumber,\r\n    accountPhotoPath,\r\n    userData,\r\n    language,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    debug,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    formatDate,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [userAgreementShow, setUserAgreementShow] = useStickyState(\r\n    false,\r\n    \"userAgreementShow\"\r\n  );\r\n  const [privacyPolicyShow, setPrivacyPolicyShow] = useStickyState(\r\n    false,\r\n    \"privacyPolicyShow\"\r\n  );\r\n\r\n  const [offsetList, setOffsetList] = useStickyState(null, \"offsetList\");\r\n  const [calenarVisible, setCalenarVisible] = useState(false);\r\n  // const [birthDateError, setBirthDateError] = useState(\"\");\r\n  // const [birthDate, setBirthDate] = useState(\"\");\r\n\r\n  // const [birthYear, setBirthYear] = useState(\"\");\r\n  // const [birthMonth, setBirthMonth] = useState(\"\");\r\n  // const [birthDay, setBirthDay] = useState(\"\");\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    // dropzoneHook: yup.string().required(t(\"Photo ID is required\")),\r\n    // dropzoneHook: yup.string().optional(),\r\n    // terms: yup.array().required(t(\"Terms is required\")),\r\n    timezone: yup.string().required(t(\"Timezone at birth is required\")),\r\n    birthYear: yup.number().required(t(\"Year is required\")),\r\n    birthMonth: yup.number().required(t(\"Month is required\")),\r\n    birthDay: yup.number().required(t(\"Day is required\")),\r\n    // birthDateHook: yup.string().required(t(\"Birth date is required\")).length(5),\r\n    // birthDate: yup\r\n    //   .string()\r\n    //   .required(t(\"Date of birth is required\"))\r\n    //   // .max(new Date(), t(\"Date of birth must be today or earlier\"))\r\n    //   // .string()\r\n    //   .matches(new RegExp(t(\"Date Regex\")), t(\"Wrong date format\")),\r\n\r\n    // .test({\r\n    //   name: \"regex\",\r\n    //   exclusive: true,\r\n    //   params: {},\r\n    //   message: t(\"Date must be valid\"),\r\n    //   test: (value) => {\r\n    //     if (typeof value === \"undefined\") return false;\r\n\r\n    //     // return Date.parse(value);\r\n    //     return value !== \"error\";\r\n\r\n    //     console.log(\"TEST\");\r\n\r\n    //     // Test regex\r\n    //     // if (!RegExp(t(\"Date Regex\")).test(value)) return false;\r\n\r\n    //     let date2en;\r\n    //     try {\r\n    //       date2en = formatDate(\r\n    //         value,\r\n    //         { month: \"numeric\", day: \"numeric\", year: \"numeric\" },\r\n    //         false,\r\n    //         \"en-US\"\r\n    //       );\r\n    //     } catch (error) {\r\n    //       console.log(\"error\", error);\r\n    //       return false;\r\n    //     }\r\n\r\n    //     // // console.log(\"date2en\", date2en);\r\n    //     // console.log(\"date2en\", date2en);\r\n\r\n    //     // // console.log(\"IS DATE\", _.isDate(new Date(date2en)));\r\n    //     // console.log(\"IS DATE\", _.isDate(new Date(date2en)));\r\n\r\n    //     return true;\r\n    //   },\r\n    // }),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  /**\r\n   * Send account registration request\r\n   * @param {object} data\r\n   */\r\n  const sendAccountRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.email = userData.email;\r\n\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    delete data.birthYear;\r\n    delete data.birthMonth;\r\n    delete data.birthDay;\r\n\r\n    const newDate = composeDate(userBirthYear, userBirthMonth, userBirthDay);\r\n    data.birthDate = newDate;\r\n\r\n    if (newDate !== \"\") {\r\n      // console.log(data);\r\n      if (sendAccountRegistrationRequest(data)) {\r\n        // Account registration request was submitted\r\n      }\r\n    }\r\n  };\r\n\r\n  // const timezones = 1;\r\n  // const timezones_sorted = timezones.sort((a, b) =>\r\n  //   (a.Offset + 12) % 24 > (b.Offset + 12) % 24\r\n  //     ? 1\r\n  //     : (a.Offset + 12) % 24 === (b.Offset + 12) % 24\r\n  //     ? a.Name > b.Name\r\n  //       ? 1\r\n  //       : -1\r\n  //     : -1\r\n  // );\r\n\r\n  const timezones_sorted = timezones;\r\n\r\n  const isValidDate = (dateString) => {\r\n    let dateformat = /^(0?[1-9]|1[0-2])[\\/](0?[1-9]|[1-2][0-9]|3[01])[\\/]\\d{4}$/;\r\n\r\n    // Match the date format through regular expression\r\n    if (dateString.match(dateformat)) {\r\n      let operator = dateString.split(\"/\");\r\n\r\n      // Extract the string into month, date and year\r\n      let datepart = [];\r\n      if (operator.length > 1) {\r\n        datepart = dateString.split(\"/\");\r\n      }\r\n      let month = parseInt(datepart[0]);\r\n      let day = parseInt(datepart[1]);\r\n      let year = parseInt(datepart[2]);\r\n\r\n      // Create list of days of a month\r\n      let ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n      if (month == 1 || month > 2) {\r\n        if (day > ListofDays[month - 1]) {\r\n          ///This check is for Confirming that the date is not out of its range\r\n          return false;\r\n        }\r\n      } else if (month == 2) {\r\n        let leapYear = false;\r\n        if ((!(year % 4) && year % 100) || !(year % 400)) {\r\n          leapYear = true;\r\n        }\r\n        if (leapYear == false && day >= 29) {\r\n          return false;\r\n        } else if (leapYear == true && day > 29) {\r\n          // console.log(\"Invalid date format!\");\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      // console.log(\"Invalid date format!\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const composeDate = (year, month, day) => {\r\n    // console.log(year, month, day);\r\n    const newDate = `${month}/${day}/${year}`;\r\n    // const newDate = `${year}-${month}-${day}`;\r\n    if (isValidDate(newDate)) {\r\n      // setBirthDateComposed(newDate);\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        // console.log(\"ok\");\r\n        setUserBirthDateError(\"\");\r\n        // setBirthDate(newDate);\r\n\r\n        // return \"ok\";\r\n        return newDate;\r\n      } else {\r\n        // console.log(\"incomplete\");\r\n        setUserBirthDateError(\"\");\r\n        // return \"incomplete\";\r\n        return \"\";\r\n      }\r\n    } else {\r\n      // setBirthDateComposed(\"error\");\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        // console.log(\"error\");\r\n        setUserBirthDateError(t(\"Date must be valid\"));\r\n        // return \"error\";\r\n        return \"\";\r\n      } else {\r\n        // console.log(\"incomplete\");\r\n        setUserBirthDateError(\"\");\r\n        // return \"incomplete\";\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  let timeZoneID = 0;\r\n  let prevTimeZoneID = 0;\r\n  const yearNow = new Date().getFullYear();\r\n\r\n  const AccountRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    setFieldValue,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridYear\">\r\n          <Form.Label>{t(\"Date of birth\")}</Form.Label>\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthYear\"\r\n            value={values.birthYear}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthYear(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthYear && touched.birthYear}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Year\")}\r\n            </option>\r\n            {Array.from(Array(120).keys()).map((key) => {\r\n              let year = yearNow - key;\r\n\r\n              return (\r\n                <option key={key} value={year}>\r\n                  {year}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthYear}\r\n          </Form.Control.Feedback>\r\n          <div className=\"invalid-feedback-custom\">{userBirthDateError}</div>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridMonth\">\r\n          <Form.Label>&nbsp;</Form.Label>\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthMonth\"\r\n            value={values.birthMonth}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthMonth(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthMonth && touched.birthMonth}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Month\")}\r\n            </option>\r\n            {Array.from(Array(12).keys()).map((key) => {\r\n              let date = new Date(`${key + 1}/1/1970`);\r\n              let monthName = date.toLocaleString(language, { month: \"long\" });\r\n              let monthNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={monthNumber}>\r\n                  {monthNumber} - {monthName}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthMonth}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridDay\">\r\n          <Form.Label>&nbsp;</Form.Label>\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthDay\"\r\n            value={values.birthDay}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthDay(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthDay && touched.birthDay}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Day\")}\r\n            </option>\r\n            {Array.from(Array(31).keys()).map((key) => {\r\n              let dayNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={dayNumber}>\r\n                  {dayNumber}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthDay}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Group controlId=\"validationFormikTimezone\">\r\n        <Form.Label>{t(\"Timezone at birth\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          custom\r\n          name=\"timezone\"\r\n          value={values.timezone}\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n            setUserTimezone(e.target.value);\r\n          }}\r\n          isInvalid={!!errors.timezone && touched.timezone}\r\n        >\r\n          <option value=\"\">{t(\"Choose...\")}</option>\r\n          {timezones_sorted.map((element, key) => (\r\n            <option\r\n              key={key}\r\n              value={`${(((element.Offset + 12) % 24) + 1)\r\n                .toString()\r\n                .padStart(2, \"0\")} - ${element.Name}`}\r\n            >\r\n              {element.Name}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.timezone}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <div style={{ paddingBottom: \"10px\" }}>\r\n        {t(\"Agree to terms and conditions\")}\r\n      </div>\r\n\r\n      <Trans i18nKey=\"AccountRegistration:The User Agreement and the Privacy Policy\">\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setUserAgreementShow(true)}>\r\n          User Agreement\r\n        </a>\r\n\r\n        <br />\r\n\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setPrivacyPolicyShow(true)}>\r\n          Privacy Policy\r\n        </a>\r\n      </Trans>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  if (signedIn === false)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"User not logged in\")}</Alert.Heading>\r\n          <p>\r\n            <Trans i18nKey=\"AccountRegistration:Please log in first\">\r\n              Please log in first.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  if (!debug && accountNumber !== null)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"Account successfully registered\")}</Alert.Heading>\r\n          <p>\r\n            <Trans\r\n              i18nKey=\"AccountRegistration:Account with your personal ID successfully registered\"\r\n              accountNumber={accountNumber}\r\n            >\r\n              Account with the personal ID\r\n              <strong>{{ accountNumber }}</strong>\r\n              successfully registered.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        show={userAgreementShow}\r\n        file={`${language}/UserAgreement`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"User Agreement\")}\r\n        footer=\"\"\r\n        onHide={() => setUserAgreementShow(false)}\r\n      />\r\n\r\n      <ModalMessage\r\n        show={privacyPolicyShow}\r\n        file={`${language}/PrivacyPolicy`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"Privacy Policy\")}\r\n        footer=\"\"\r\n        onHide={() => setPrivacyPolicyShow(false)}\r\n      />\r\n\r\n      <Card title={t(\"Open account\")}>\r\n        <Formik\r\n          component={AccountRegistrationForm}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            // personalID: \"\",\r\n            // terms: \"\",\r\n            // dropzoneHook: accountPhotoPath,\r\n            timezone: userTimezone,\r\n            // birthDate: \"\",\r\n            birthYear: userBirthYear,\r\n            birthMonth: userBirthMonth,\r\n            birthDay: userBirthDay,\r\n            // birthDateHook: \"\",\r\n          }}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Pagination\",\r\n    size: \"md\",\r\n    countItems: 0,\r\n    itemsPerPage: 5,\r\n    active: 0, // active page\r\n    onClick: () => {},\r\n    align: \"center\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const pages = Math.ceil(props.countItems / props.itemsPerPage);\r\n\r\n  if (pages < 2) return <></>;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  const onClick = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = props.active > 1 ? props.active - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          props.active < Math.ceil(props.countItems / props.itemsPerPage)\r\n            ? props.active + 1\r\n            : Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // getBusinesses(number);\r\n    props.onClick(number);\r\n  };\r\n\r\n  const getPages = () => {\r\n    let items = [];\r\n    for (let number = 1; number <= pages; number++) {\r\n      if (\r\n        number === 1 ||\r\n        number === pages ||\r\n        (number >= props.active - 1 && number <= props.active + 1)\r\n      ) {\r\n        items.push(\r\n          <Pagination.Item\r\n            key={number}\r\n            active={number === props.active}\r\n            onClick={() => onClick(number)}\r\n          >\r\n            {number}\r\n          </Pagination.Item>\r\n        );\r\n      } else if (number === 2 || number === pages - 1) {\r\n        items.push(<Pagination.Ellipsis key={number} disabled />);\r\n      }\r\n    }\r\n    return items;\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const { align } = props;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: `${align}`,\r\n          // backgroundColor: \"red\",\r\n        }}\r\n      >\r\n        <span style={{ display: \"inline-block\" }}>\r\n          <Pagination size={props.size} style={{ padding: 0, margin: 0 }}>\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.First onClick={() => props.onClick(\"First\")} />\r\n                <Pagination.Prev onClick={() => props.onClick(\"Prev\")} />\r\n              </>\r\n            )}\r\n\r\n            {getPages()}\r\n\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.Next onClick={() => props.onClick(\"Next\")} />\r\n                <Pagination.Last onClick={() => props.onClick(\"Last\")} />\r\n              </>\r\n            )}\r\n          </Pagination>\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport {\r\n  // Form,\r\n  // InputGroup,\r\n  // Button,\r\n  // Table,\r\n  ListGroup,\r\n  Badge,\r\n} from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { ArrowRightAlt } from \"@material-ui/icons\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    request: \"get transactions\",\r\n    namespace: \"Transactions\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    transactions,\r\n    countTransactions,\r\n    activePageTransactions,\r\n    transactionsPerPage,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  // const { setActivePageTransactions } = props.barrelSetters;\r\n  const {\r\n    // getReviser,\r\n    // getWorkplace,\r\n    // sendRequest,\r\n    getTransactions,\r\n    format,\r\n    formatDate,\r\n    formatPerCent,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageTransactions > 1 ? activePageTransactions - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageTransactions <\r\n          Math.ceil(countTransactions / transactionsPerPage)\r\n            ? activePageTransactions + 1\r\n            : Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getTransactions(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <ListGroup variant=\"flush\">\r\n        {transactions !== null &&\r\n          transactions.map((transaction, keyTransactions) => {\r\n            cnt++;\r\n\r\n            const {\r\n              // business_description,\r\n              // business_id,\r\n              // business_image,\r\n              // business_link,\r\n              // business_status,\r\n              business_title,\r\n              // comment,\r\n              conv_amount,\r\n              created,\r\n              // currency,\r\n              // exchange_rate,\r\n              sender_firstname,\r\n              sender_lastname,\r\n              // recipient_firstname,\r\n              // recipient_lastname,\r\n              // purpose_description,\r\n              purpose_id,\r\n              // purpose_image,\r\n              // purpose_link,\r\n              // purpose_status,\r\n              purpose_title,\r\n              recipient_id,\r\n              roles,\r\n              share,\r\n              share_per_cent,\r\n              // sender_id,\r\n              // sender_status,\r\n              // recipient_status,\r\n              from_account,\r\n              to_account,\r\n              type,\r\n            } = transaction;\r\n\r\n            // const i_am_sender = sender_id === accountNumber;\r\n            const i_am_recipient = recipient_id === accountNumber;\r\n            const t_from_account = t(from_account);\r\n            const t_to_account = t(to_account);\r\n\r\n            const roles_available =\r\n              roles !== null && roles !== \"-\" && typeof roles !== \"undefined\";\r\n            const arrRoles = roles_available ? roles.split(\",\") : [];\r\n\r\n            const shares_available =\r\n              typeof share !== \"undefined\" && share !== null && share !== \"-\";\r\n\r\n            if (type === \"transfer U2S\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {sender_firstname} {sender_lastname}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <Trans\r\n                    i18nKey=\"Transactions:fromAccountToAccount\"\r\n                    t_from_account={t_from_account}\r\n                    t_to_account={t_to_account}\r\n                  >\r\n                    {{ t_from_account }}{\" \"}\r\n                    <ArrowRightAlt style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                    {{ t_to_account }}\r\n                  </Trans>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {sender_firstname} {sender_lastname}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer V2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {t(\"Daily allowance\")}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2B\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {purpose_id}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  {business_title} &middot; {purpose_title}\r\n                  <br />\r\n                  {sender_firstname} {sender_lastname}\r\n                  {roles_available && (\r\n                    <>\r\n                      <br />\r\n                      {arrRoles.map((role, key) => {\r\n                        return (\r\n                          <span key={key}>\r\n                            {\" \"}\r\n                            <Badge pill variant=\"secondary\">\r\n                              {role}\r\n                            </Badge>\r\n                          </span>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  )}{\" \"}\r\n                  {shares_available && (\r\n                    <>\r\n                      <br />\r\n                      {share} {t(\"shares\")} ({formatPerCent(share_per_cent)})\r\n                    </>\r\n                  )}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n\r\n              // TODO: check if this works\r\n            } else {\r\n              console.log(\"Unknown transfer type:\", type);\r\n\r\n              return <></>;\r\n            }\r\n          })}\r\n      </ListGroup>\r\n      {cnt === 0 && (\r\n        <p className=\"text-center text-muted\">{t(\"No transactions\")}</p>\r\n      )}\r\n      <br />\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countTransactions}\r\n        itemsPerPage={transactionsPerPage}\r\n        active={activePageTransactions}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Toast, Badge } from \"react-bootstrap\";\r\nimport { Settings } from \"@material-ui/icons\";\r\nimport _ from \"lodash\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Shareholder\",\r\n    request: \"change share\",\r\n    purpose: null,\r\n    shareholder: null,\r\n    closeButton: true,\r\n    rangeControl: true,\r\n    sharePerCent: null,\r\n    businessTitle: null,\r\n    purposeTitle: null,\r\n    businessOwnerFirstname: null,\r\n    businessOwnerLastname: null,\r\n    sharesCreated: null,\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { purposeShareholders } = props.barrelGetters;\r\n  const { setPurposeShareholders } = props.barrelSetters;\r\n  const { sendRequest, formatPerCent, formatDate } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const [userQuery, setUserQuery] = useState(props.share);\r\n  const delayedQuery = useRef(_.debounce((q) => sendQuery(q), 2000)).current;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const onChange = (e) => {\r\n    setUserQuery(e.target.value);\r\n    delayedQuery(e.target.value);\r\n  };\r\n\r\n  const onClose = () => {\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    return sendRequest({ req: \"remove shareholder\", data });\r\n  };\r\n\r\n  const sendQuery = (delayedQuery) => {\r\n    const ps = purposeShareholders;\r\n    ps[props.id].share = delayedQuery;\r\n    setPurposeShareholders(JSON.stringify(ps));\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    data.share = delayedQuery;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const sharesLabelId = `sharesLabel${props.key}`;\r\n    return (\r\n      <Toast key={props.key} onClose={onClose} style={{ minWidth: \"100%\" }}>\r\n        <Toast.Header closeButton={props.closeButton}>\r\n          <strong className=\"mr-auto\">\r\n            {props.firstname} {props.lastname}{\" \"}\r\n            <small>\r\n              <Settings\r\n                hidden={true}\r\n                fontSize=\"small\"\r\n                style={{ color: \"var(--dark)\" }}\r\n              />\r\n            </small>\r\n          </strong>\r\n          <small>\r\n            <span id={sharesLabelId}>{userQuery}</span> {t(\"shares\")}\r\n          </small>\r\n        </Toast.Header>\r\n        <Toast.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formRoles\">\r\n              <div>\r\n                {props.roles.map((role, key) => {\r\n                  return (\r\n                    <span key={key}>\r\n                      <Badge pill variant=\"secondary\">\r\n                        {role}\r\n                      </Badge>{\" \"}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Form.Group>\r\n\r\n            {props.rangeControl && (\r\n              <Form.Group controlId=\"formBasicRange\">\r\n                <Form.Control\r\n                  type=\"range\"\r\n                  variant=\"light\"\r\n                  // value={share}\r\n                  defaultValue={userQuery}\r\n                  // value={userQuery}\r\n                  min={1}\r\n                  max={1000}\r\n                  step={1}\r\n                  // ref={this.input}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            )}\r\n          </Form>\r\n          <span>\r\n            {props.sharePerCent !== null && formatPerCent(props.sharePerCent)}{\" \"}\r\n            {props.businessTitle !== null && props.businessTitle}{\" \"}\r\n            {props.businessTitle !== null && props.purposeTitle !== null && (\r\n              <> &middot; </>\r\n            )}\r\n            {props.purposeTitle !== null && props.purposeTitle}{\" \"}\r\n          </span>\r\n          {props.sharesCreated !== null && (\r\n            <>\r\n              <br />\r\n              {formatDate(props.sharesCreated, {\r\n                month: \"long\",\r\n                day: \"numeric\",\r\n                year: \"numeric\",\r\n              })}\r\n            </>\r\n          )}{\" \"}\r\n          {(props.businessOwnerFirstname !== null ||\r\n            props.businessOwnerLastname !== null) && <br />}\r\n          {props.businessOwnerFirstname !== null &&\r\n            props.businessOwnerFirstname}{\" \"}\r\n          {props.businessOwnerLastname !== null && props.businessOwnerLastname}{\" \"}\r\n        </Toast.Body>\r\n      </Toast>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Form, InputGroup, Button, Table, ListGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n// import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\nimport Shareholder from \"../shareholder\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    request: \"get shares\",\r\n    namespace: \"Shares\",\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    shares,\r\n    countShares,\r\n    activePageShares,\r\n    sharesPerPage,\r\n    // accountNumber,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  // const {  } = props.barrelSetters;\r\n  const {\r\n    // getReviser,\r\n    // getWorkplace,\r\n    // sendRequest,\r\n    getShares,\r\n    // format,\r\n    // formatPerCent,\r\n    // formatDate,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onPageSelect = (number) => {\r\n    console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageShares > 1 ? activePageShares - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageShares < Math.ceil(countShares / sharesPerPage)\r\n            ? activePageShares + 1\r\n            : Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getShares(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <>\r\n      {shares !== null &&\r\n        shares.map((share, keyShares) => {\r\n          cnt++;\r\n\r\n          const {\r\n            // business_description,\r\n            // business_id,\r\n            // business_image,\r\n            // business_link,\r\n            // business_status,\r\n            business_title,\r\n            owner_firstname,\r\n            owner_lastname,\r\n            // owner_status,\r\n            // owner_uid,\r\n            // purpose_description,\r\n            purpose_id,\r\n            // purpose_image,\r\n            // purpose_link,\r\n            // purpose_status,\r\n            purpose_title,\r\n            shareholder_id,\r\n            shares_created,\r\n            // shares_description,\r\n            share_per_cent,\r\n            shares_roles,\r\n            shares_share,\r\n            // shares_status,\r\n            // shares_title,\r\n          } = share;\r\n\r\n          const arrRoles = shares_roles !== null ? shares_roles.split(\",\") : [];\r\n          // const content = `${owner_firstname} ${owner_lastname} / ${formatDate(\r\n          //   shares_created\r\n          // )}`;\r\n\r\n          // console.log(\"keyShares:\", keyShares);\r\n\r\n          return (\r\n            <Shareholder\r\n              {...args}\r\n              key={keyShares}\r\n              id={keyShares}\r\n              shareholder={shareholder_id}\r\n              purpose={purpose_id}\r\n              firstname={userData.firstname}\r\n              lastname={userData.lastname}\r\n              share={shares_share}\r\n              roles={arrRoles}\r\n              closeButton={false}\r\n              rangeControl={false}\r\n              sharePerCent={share_per_cent}\r\n              businessOwnerFirstname={owner_firstname}\r\n              businessOwnerLastname={owner_lastname}\r\n              businessTitle={business_title}\r\n              purposeTitle={purpose_title}\r\n              sharesCreated={shares_created}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {cnt === 0 && <p className=\"text-center text-muted\">{t(\"No shares\")}</p>}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"md\"\r\n        countItems={countShares}\r\n        itemsPerPage={sharesPerPage}\r\n        active={activePageShares}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Badge, Accordion, Card } from \"react-bootstrap\";\r\n// import { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\n// import { Redirect } from \"react-router-dom\";\r\n// import Octicon, { ChevronRight } from \"@primer/octicons-react\";\r\n// import AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\n\r\n// import ZCard from \"../card\";\r\nimport Transactions from \"../transactions\";\r\nimport Shares from \"../shares\";\r\n\r\nexport default (args) => {\r\n  // let defaults = {};\r\n  // const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    accordionView,\r\n    // currencyAbbr,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setAccountType,\r\n    setRedirectTo,\r\n    setAccordionView,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    getAccountData,\r\n    getTransactions,\r\n    getShares,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userData = props.data.userData;\r\n  // let format = props.format;\r\n  const { t } = useTranslation(\"Balance\");\r\n  // const [redirect, setRedirect] = useState(false);\r\n\r\n  // console.log(\"BALANCE DATA:\", props);\r\n  // console.log(\"BALANCE userData\", userData);\r\n  // const userDataParsed = JSON.parse(userData);\r\n  const userDataParsed = userData;\r\n\r\n  // let footer = <small className=\"text-muted\">Last updated 3 mins ago</small>;\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  // const gotoNextView = () => {\r\n  //   // console.log(props);\r\n\r\n  //   // props.data.setView(\"transfer\");\r\n  //   setRedirect(true);\r\n  // };\r\n\r\n  const onAccountTypeSelected = (type) => {\r\n    // console.log(type);\r\n\r\n    setAccountType(type);\r\n    setRedirectTo(\"/transfer\");\r\n  };\r\n\r\n  // console.log(userData);\r\n  const available =\r\n    userDataParsed !== null\r\n      ? format(\r\n          userDataParsed.acc_curr +\r\n            userDataParsed.acc_cred +\r\n            userDataParsed.acc_save\r\n        )\r\n      : null;\r\n  let acc_curr =\r\n    userDataParsed !== null ? format(userDataParsed.acc_curr) : null;\r\n  let acc_cred =\r\n    userDataParsed !== null ? format(userDataParsed.acc_cred) : null;\r\n  let acc_save =\r\n    userDataParsed !== null ? format(userDataParsed.acc_save) : null;\r\n\r\n  // if (props.data.view === \"transfer\") {\r\n  //   return <Redirect push to=\"/transfer\" />;\r\n  // }\r\n\r\n  // if (redirect) {\r\n  //   // props.data.setView(\"transfer\");\r\n  //   return <Redirect push to=\"/transfer\" />;\r\n  // }\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  const toggleView = (view) => {\r\n    const newView = accordionView !== view ? view : null;\r\n\r\n    setAccordionView(newView);\r\n\r\n    if (newView !== null) {\r\n      switch (view) {\r\n        case \"balance\":\r\n          getAccountData();\r\n          break;\r\n\r\n        case \"transactions\":\r\n          getTransactions(1);\r\n          break;\r\n\r\n        case \"shares\":\r\n          getShares(1);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  // const ToggleAccountNumber = () => {\r\n  //   setAccordionView(\r\n  //     accordionView !== \"accountNumber\" ? \"accountNumber\" : null\r\n  //   );\r\n  // };\r\n\r\n  // const ToggleBalance = () => {\r\n  //   // console.log(\"decorate\");\r\n  //   setAccordionView(accordionView !== \"balance\" ? \"balance\" : null);\r\n  //   getAccountData();\r\n  // };\r\n\r\n  // const ToggleTransactions = () => {\r\n  //   // console.log(\"decorate\");\r\n  //   setAccordionView(\"transactions\");\r\n  //   getTransactions(1);\r\n  // };\r\n\r\n  // const ToggleShares = () => {\r\n  //   // console.log(\"decorate\");\r\n  //   setAccordionView(\"shares\");\r\n  //   getShares(1);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Accordion defaultActiveKey={accordionView}>\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"accountNumber\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"accountNumber\")}\r\n          >\r\n            {t(\"Account number\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"accountNumber\">\r\n            <Card.Body>\r\n              <Card.Text>{accountNumber}</Card.Text>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"balance\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n              // backgroundColor: \"#e8f6f3\",\r\n            }}\r\n            onClick={() => toggleView(\"balance\")}\r\n          >\r\n            {t(\"Balance\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"balance\">\r\n            <Card.Body>\r\n              <Form noValidate>\r\n                <Form.Group>\r\n                  <Form.Label>{t(\"Available\")}</Form.Label>\r\n\r\n                  <Form.Text>\r\n                    <div style={{ fontSize: \"3em\" }}>{available}</div>\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Current account\")}</div>\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_curr\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_curr}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Credit account\")}</div>\r\n\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_cred\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_cred}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Savings account\")}</div>\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_save\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_save}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"transactions\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"transactions\")}\r\n          >\r\n            {t(\"Transactions\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"transactions\">\r\n            <Card.Body>\r\n              <Transactions {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"shares\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"shares\")}\r\n          >\r\n            {t(\"Shares\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"shares\">\r\n            <Card.Body>\r\n              <Shares {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"transfer U2S\",\r\n    namespace: \"Transfer\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    accountType,\r\n    language,\r\n    currencyAbbr,\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userData = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setTransferAmount(refAmount.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [fromAccountSaved, setFromAccountSaved] = useStickyState(\r\n  //   \"\",\r\n  //   \"fromAccountSaved\"\r\n  // );\r\n  // const [toAccountSaved, setToAccountSaved] = useStickyState(\r\n  //   \"\",\r\n  //   \"toAccountSaved\"\r\n  // );\r\n  // const [amountSaved, setAmountSaved] = useStickyState(\"\", \"amountSaved\");\r\n\r\n  // useEffect(() => {\r\n  //   if (accountNumber === null) return;\r\n\r\n  //   setFromAccountSaved(\"\");\r\n  //   setToAccountSaved(\"\");\r\n  //   setAmountSaved(\"\");\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [accountNumber]);\r\n\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toAccount: yup.string().required(t(\"To Account is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} Form data\r\n   */\r\n  const transferToSelf = (data) => {\r\n    // console.log(\"TRANSFER U2S DATA:\", data);\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // console.log(\"BEFORE SEND\");\r\n\r\n    // onTransfer({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n\r\n    // setFromAccountSaved(\"\");\r\n    // setToAccountSaved(\"\");\r\n    // setAmountSaved(\"\");\r\n\r\n    setTransferAmount(\"\");\r\n\r\n    // console.log(\"AFTER SEND\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToSelf(data);\r\n  };\r\n\r\n  const TransferToSelfForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * To account\r\n         */}\r\n        <Form.Group controlId=\"validationToAccount\">\r\n          <Form.Label>{t(\"To account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"toAccount\"\r\n            value={values.toAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferToAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.toAccount && touched.toAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option value=\"acc_curr\" hidden={accountType === \"acc_curr\"}>\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option value=\"acc_cred\" hidden={accountType === \"acc_cred\"}>\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option value=\"acc_save\" hidden={accountType === \"acc_save\"}>\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.toAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setTransferAmount(e.target.value);\r\n              }}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"transfer U2S\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={TransferToSelfForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        fromAccount: transferFromAccount,\r\n        toAccount: transferToAccount,\r\n        amount: transferAmount,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\nimport ModalMessage from \"../modalMessage\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"TanInput\",\r\n    request: \"submit tan\",\r\n    show: false,\r\n    size: \"lg\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { tanRequired, userData, tanInputTAN } = props.barrelGetters;\r\n  const { setTanRequired, setTanInputTAN } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refTAN = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (refTAN.current !== null && tanInputTAN !== refTAN.current.value)\r\n        setTanInputTAN(refTAN.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    tan: yup.string().required(t(\"TAN is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    setTanRequired(false);\r\n    data.email = userData.email;\r\n    // console.log(data);\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div>\r\n        {t(\"A transaction number has been sent to your email account.\")}\r\n      </div>\r\n      <br />\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFormikTAN\">\r\n          <Form.Label>{t(\"TAN\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"tan\"\r\n              ref={refTAN}\r\n              value={values.tan}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.tan && touched.tan}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.tan}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  const message = (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        tan: tanInputTAN,\r\n      }}\r\n    />\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        message={message}\r\n        show={tanRequired}\r\n        size={props.size}\r\n        centered={true}\r\n        onHide={() => setTanRequired(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport TanInput from \"../tanInput\";\r\n\r\n/**\r\n * Component: TransferToPerson\r\n */\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2U\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const [transferDescriptionTemp, setTransferDescriptionTemp] = useStickyState(\r\n    \"\",\r\n    \"transferDescriptionTemp\"\r\n  );\r\n\r\n  const refPersonalID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setTransferToUID(refPersonalID.current.value);\r\n      setTransferDescription(refDescription.current.value);\r\n      setTransferAmount(refAmount.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toPersonalID: yup\r\n      .string()\r\n      .required(t(\"Recipients Personal ID is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Personal ID Regex\")),\r\n        t(\"Wrong Personal ID format\")\r\n      ),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToPerson = (data) => {\r\n    // console.log(\"TRANSFER U2U DATA:\", data);\r\n    data.transferType = props.request;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  // return <>test</>;\r\n\r\n  const onSubmit = (data) => {\r\n    transferToPerson(data);\r\n  };\r\n\r\n  const TransferToPersonForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Recipients Personal ID\r\n         */}\r\n        <Form.Group controlId=\"validationFormikToPersonalID\">\r\n          <Form.Label>{t(\"To Personal ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={t(\"XXXXXX-XXXXX\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"toPersonalID\"\r\n              ref={refPersonalID}\r\n              value={values.toPersonalID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.toPersonalID && touched.toPersonalID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.toPersonalID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Transfer Description\r\n         */}\r\n        <Form.Group controlId=\"validationFormikDescription\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Button: Next */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToPersonForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          toPersonalID: transferToUID,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport TanInput from \"../tanInput\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2B\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setTransferToPurpose(refPurposeID.current.value);\r\n      setTransferDescription(refDescription.current.value);\r\n      setTransferAmount(refAmount.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    // businessTitle: yup\r\n    //   .string()\r\n    //   .required(t(\"Recipients Business ID is required\")),\r\n    purposeID: yup.string().required(t(\"Purpose ID is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToBusiness = (data) => {\r\n    data.transferType = props.request;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.currency = currencyAbbr;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // data.amount = parseFloat(data.amount);\r\n    // data.amount = Number(data.amount.replace(/[^0-9.-]+/g, \"\"));\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToBusiness(data);\r\n  };\r\n\r\n  const TransferToBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      {/* From account */}\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Business ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"businessTitle\"\r\n              value={values.businessTitle}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.businessTitle}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n        */}\r\n\r\n        {/* To purpose */}\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Purpose ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"purposeID\"\r\n              ref={refPurposeID}\r\n              value={values.purposeID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.purposeID && touched.purposeID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.purposeID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Field: Description */}\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/* Amount */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"string\" // do NOT change to number!!\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          purposeID: transferToPurpose,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"BusinessRegistration\",\r\n    request: \"register business\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  const { onBusinessRegistration } = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refBusinessTitle = React.createRef();\r\n  const refBusinessDescription = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refBusinessTitle.current !== null &&\r\n        businessRegistrationAddTitle !== refBusinessTitle.current.value\r\n      )\r\n        setBusinessRegistrationAddTitle(refBusinessTitle.current.value);\r\n\r\n      if (\r\n        refBusinessDescription.current !== null &&\r\n        businessRegistrationAddDescription !==\r\n          refBusinessDescription.current.value\r\n      )\r\n        setBusinessRegistrationAddDescription(\r\n          refBusinessDescription.current.value\r\n        );\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [addOwnerAsShareholder, setAddOwnerAsShareholder] = useStickyState(\r\n  //   false,\r\n  //   \"addOwnerAsShareholder\"\r\n  // );\r\n\r\n  const schema = yup.object({\r\n    businessTitle: yup\r\n      .string()\r\n      .required(t(\"Business title is a required field\"))\r\n      .min(3, t(\"Business title too short\"))\r\n      .max(70, t(\"Business title too long\"))\r\n      .trim(),\r\n    businessDescription: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * On business registration\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n\r\n    // console.log(\"REGISTER BUSINESS DATA:\", data);\r\n\r\n    // onBusinessRegistration({ req: \"register business\", data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Business Title (Business ID) */}\r\n      <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n        <Form.Label>{t(\"Business Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"businessTitle\"\r\n            ref={refBusinessTitle}\r\n            value={values.businessTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.businessTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/* Business Description */}\r\n      <Form.Group controlId=\"businessDescription\">\r\n        <Form.Label>{t(\"Business Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"businessDescription\"\r\n          ref={refBusinessDescription}\r\n          value={values.businessDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={RegisterBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          businessTitle: businessRegistrationAddTitle,\r\n          businessDescription: businessRegistrationAddDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"PurposeRegistration\",\r\n    requestInsert: \"register purpose\",\r\n    requestUpdate: \"update purpose property\",\r\n    businessID: null,\r\n    purposeID: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    subcategory: \"\",\r\n    subcategory2: \"\",\r\n    keywords: \"\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"PURPOSE REGISTRATION PROPS:\", props);\r\n\r\n  const barrels = props;\r\n  const { businessID, purposeID, id } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    language,\r\n    businessPurposes,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    purposeRegistrationCategory,\r\n    purposeRegistrationSubcategory,\r\n    purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    setBusinessPurposes,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationCategory,\r\n    setPurposeRegistrationSubcategory,\r\n    setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n  } = barrels.barrelSetters;\r\n  const { getReviser, getWorkplace } = barrels.barrelFunctions;\r\n  const { onPurposeRegistration } = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeTitle = React.createRef();\r\n  const refPurposeDescription = React.createRef();\r\n  const refPurposeCategory = React.createRef();\r\n  const refPurposeSubcategory = React.createRef();\r\n  const refPurposeSubcategory2 = React.createRef();\r\n  const refPurposeKeywords = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refPurposeTitle.current !== null &&\r\n        purposeRegistrationTitle !== refPurposeTitle.current.value\r\n      )\r\n        setPurposeRegistrationTitle(refPurposeTitle.current.value);\r\n\r\n      if (\r\n        refPurposeDescription.current !== null &&\r\n        purposeRegistrationDescription !== refPurposeDescription.current.value\r\n      )\r\n        setPurposeRegistrationDescription(refPurposeDescription.current.value);\r\n\r\n      if (\r\n        refPurposeCategory.current !== null &&\r\n        purposeRegistrationCategory !== refPurposeCategory.current.value\r\n      )\r\n        setPurposeRegistrationCategory(refPurposeCategory.current.value);\r\n\r\n      if (\r\n        refPurposeSubcategory.current !== null &&\r\n        purposeRegistrationSubcategory !== refPurposeSubcategory.current.value\r\n      )\r\n        setPurposeRegistrationSubcategory(refPurposeSubcategory.current.value);\r\n\r\n      if (\r\n        refPurposeSubcategory2.current !== null &&\r\n        purposeRegistrationSubcategory2 !== refPurposeSubcategory2.current.value\r\n      )\r\n        setPurposeRegistrationSubcategory2(\r\n          refPurposeSubcategory2.current.value\r\n        );\r\n\r\n      if (\r\n        refPurposeKeywords.current !== null &&\r\n        purposeRegistrationKeywords !== refPurposeKeywords.current.value\r\n      )\r\n        setPurposeRegistrationKeywords(refPurposeKeywords.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const schema = yup.object({\r\n    purposeTitle: yup\r\n      .string()\r\n      .required(t(\"Purpose title is a required field\"))\r\n      .min(3, t(\"Purpose title too short\"))\r\n      .max(70, t(\"Purpose title too long\"))\r\n      .trim(),\r\n    purposeDescription: yup.string().optional(),\r\n    purposeCategory: yup\r\n      .string()\r\n      .required(t(\"Purpose category is a required field\"))\r\n      .max(70, t(\"Purpose category too long\"))\r\n      .trim(),\r\n    purposeSubcategory: yup.string().optional(),\r\n    purposeSubcategory2: yup.string().optional(),\r\n    purposeKeywords: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const RegisterPurpose = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.businessID = businessID;\r\n    data.id = id;\r\n    data.purposeID = purposeID;\r\n    data.uid = accountNumber;\r\n    data.language = language;\r\n\r\n    // console.log(\"REGISTER PURPOSE DATA:\", data);\r\n\r\n    onPurposeRegistration({\r\n      req: props.purposeID === null ? props.requestInsert : props.requestUpdate,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    RegisterPurpose(data);\r\n  };\r\n\r\n  const RegisterPurposeForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/*\r\n       * Purpose Title (Purpose ID)\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeID\">\r\n        <Form.Label>{t(\"Purpose Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"purposeTitle\"\r\n            ref={refPurposeTitle}\r\n            value={values.purposeTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeTitle && touched.purposeTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Description\r\n       */}\r\n      <Form.Group controlId=\"purposeDescription\">\r\n        <Form.Label>{t(\"Purpose Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"purposeDescription\"\r\n          ref={refPurposeDescription}\r\n          value={values.purposeDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Category\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeCategory\">\r\n        <Form.Label>{t(\"Purpose Category\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"purposeCategory\"\r\n            ref={refPurposeCategory}\r\n            value={values.purposeCategory}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeCategory && touched.purposeCategory}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeCategory}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Subcategory 1\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeSubcategory\">\r\n        <Form.Label>{t(\"Purpose Subcategory\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeSubcategory\"\r\n            ref={refPurposeSubcategory}\r\n            value={values.purposeSubcategory}\r\n            onChange={handleChange}\r\n            isInvalid={\r\n              !!errors.purposeSubcategory && touched.purposeSubcategory\r\n            }\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeSubcategory}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Subcategory 2\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeSubcategory2\">\r\n        <Form.Label>{t(\"Purpose Subcategory 2\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeSubcategory2\"\r\n            ref={refPurposeSubcategory2}\r\n            value={values.purposeSubcategory2}\r\n            onChange={handleChange}\r\n            isInvalid={\r\n              !!errors.purposeSubcategory2 && touched.purposeSubcategory2\r\n            }\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeSubcategory2}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Keywords\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeKeywords\">\r\n        <Form.Label>{t(\"Purpose Keywords\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeKeywords\"\r\n            ref={refPurposeKeywords}\r\n            value={values.purposeKeywords}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeKeywords && touched.purposeKeywords}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeKeywords}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Submit button\r\n       */}\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(props.purposeID === null ? \"Submit\" : \"Save\")}\r\n        request={\r\n          props.purposeID === null ? props.requestInsert : props.requestUpdate\r\n        }\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterPurposeForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        purposeTitle: purposeRegistrationTitle,\r\n        purposeDescription: purposeRegistrationDescription,\r\n        purposeCategory: purposeRegistrationCategory,\r\n        purposeSubcategory: purposeRegistrationSubcategory,\r\n        purposeSubcategory2: purposeRegistrationSubcategory2,\r\n        purposeKeywords: purposeRegistrationKeywords,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"register shareholder\",\r\n    namespace: \"ShareholderRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const barrels = props;\r\n  const { purposeID } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber } = barrels.barrelGetters;\r\n  // const {} = barrels.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n  } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const thisRef = createRef();\r\n\r\n  const schema = yup.object({\r\n    // personalID: yup\r\n    //   .string()\r\n    //   .required(t(\"Personal ID is required\"))\r\n    //   .matches(\r\n    //     new RegExp(t(\"Personal ID Regex\")),\r\n    //     t(\"Wrong Personal ID format\")\r\n    //   ),\r\n    shareholderRoles: yup.string().optional(),\r\n    shares: yup\r\n      .number()\r\n      .typeError(t(\"Shares must be a number\"))\r\n      .required(t(\"Shares is required\"))\r\n      .min(1, t(\"Shares too few\"))\r\n      .max(1000, t(\"Shares too many\")),\r\n  });\r\n\r\n  /**\r\n   * Send shareholder registration request\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.purposeID = purposeID;\r\n\r\n    // console.log(\"REGISTER SHAREHOLDER DATA:\", data);\r\n\r\n    // onShareholderRegistration({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterShareholderForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* id=\"shareholderRegistrationForm\" */}\r\n      <Toast style={{ minWidth: \"100%\" }}>\r\n        {/*\r\n        <Toast.Header closeButton={false}>\r\n          <strong className=\"mr-auto\">{t(\"Add Shareholder\")}</strong>\r\n        </Toast.Header>\r\n        */}\r\n        <Toast.Body>\r\n          <Form.Group controlId=\"validationFormikShareholderPersonalID\">\r\n            <Form.Label>{t(\"Shareholder Personal ID\")}</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={t(\"XXXXXX-XXXXX\")}\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"personalID\"\r\n                value={values.personalID}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.personalID && touched.personalID}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.personalID}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          {/* Shareholder Roles */}\r\n          <Form.Group controlId=\"validationFormikShareholderRoles\">\r\n            <Form.Label>{t(\"Shareholder Roles\")}</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"shareholderRoles\"\r\n                value={values.shareholderRoles}\r\n                onChange={handleChange}\r\n                isInvalid={\r\n                  !!errors.shareholderRoles && touched.shareholderRoles\r\n                }\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.shareholderRoles}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          {/* Shares */}\r\n          <Form.Group controlId=\"validationFormikShareholderRoles\">\r\n            <Form.Label>{t(\"Shares\")}</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type=\"number\"\r\n                min={1}\r\n                max={1000}\r\n                step={1}\r\n                placeholder=\"\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"shares\"\r\n                value={values.shares}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.shares && touched.shares}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.shares}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Toast.Body>\r\n      </Toast>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterShareholderForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        personalID: \"\",\r\n        shares: 1,\r\n        shareholderRoles: \"\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Card,\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  // Nav,\r\n  Form,\r\n  // Toast,\r\n  // Badge,\r\n  // Container,\r\n  // Button,\r\n} from \"react-bootstrap\";\r\n// import { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import Octicon, { Plus, PlusSmall, Gear } from \"@primer/octicons-react\";\r\nimport { Add, Extension, Store, Edit, Close } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Dropzone from \"../dropzone\";\r\nimport BusinessRegistration from \"../businessRegistration\";\r\nimport PurposeRegistration from \"../purposeRegistration\";\r\nimport PurposeProperty from \"../purposeProperty\";\r\nimport ShareholderRegistration from \"../shareholderRegistration\";\r\n// import shareholderRegistration from \"../shareholderRegistration\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"MyBusiness\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    userBusinesses,\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes,\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    purposeShareholders,\r\n    // purposeID,\r\n    activePurposeData,\r\n    language,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRedirectTo,\r\n    setBusinessPurposes,\r\n    setActiveBusiness,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePurposeData,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationCategory,\r\n    setPurposeRegistrationSubcategory,\r\n    setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    sendRequest,\r\n  } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // useEffect(() => {\r\n  //   // getBusinesses();\r\n  //   // getBusinesses();\r\n  //   // eslint-disable-next-line\r\n  // }, []);\r\n\r\n  /**\r\n   * Toggle business (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const ToggleBusiness = ({ eventKey, businessID }) => {\r\n    getBusinessPurposes(businessID, eventKey, 1);\r\n  };\r\n\r\n  /**\r\n   * Toggle purpose (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const TogglePurpose = ({ eventKey, purposeID }) => {\r\n    getPurposeShareholders(purposeID, eventKey);\r\n  };\r\n\r\n  /**\r\n   * Create:\r\n   * - business menu\r\n   * - business purposes menu\r\n   */\r\n  let menuItems = [];\r\n  let purposes = [];\r\n  let countShareholders = 0;\r\n  userBusinesses !== null &&\r\n    Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n      menuItems[keyBusiness] = [];\r\n      purposes[keyBusiness] = [];\r\n      businessPurposes !== null &&\r\n        Object.keys(businessPurposes).map((purpose, keyPurpose) => {\r\n          if (\r\n            businessPurposes[purpose].business_id ===\r\n            userBusinesses[business].business_id\r\n          ) {\r\n            menuItems[keyBusiness][keyPurpose] = (\r\n              <ListGroup.Item\r\n                action\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n                onClick={() =>\r\n                  TogglePurpose({\r\n                    eventKey: keyPurpose,\r\n                    purposeID: businessPurposes[purpose].purpose_id,\r\n                  })\r\n                }\r\n              >\r\n                <span style={{ whiteSpace: \"nowrap\" }}>\r\n                  {businessPurposes[purpose].title}\r\n                </span>\r\n\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={(e) => {\r\n                      // setPurposeID(businessPurposes[purpose].purpose_id);\r\n                      // console.log(\"edit:\", businessPurposes[purpose]);\r\n\r\n                      setPurposeRegistrationTitle(\r\n                        businessPurposes[purpose].title !== null\r\n                          ? businessPurposes[purpose].title\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationDescription(\r\n                        businessPurposes[purpose].description !== null\r\n                          ? businessPurposes[purpose].description\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationCategory(\r\n                        businessPurposes[purpose].category !== null\r\n                          ? businessPurposes[purpose].category\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationSubcategory(\r\n                        businessPurposes[purpose].subcategory !== null\r\n                          ? businessPurposes[purpose].subcategory\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationSubcategory2(\r\n                        businessPurposes[purpose].subcategory2 !== null\r\n                          ? businessPurposes[purpose].subcategory2\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationKeywords(\r\n                        businessPurposes[purpose].keywords !== null\r\n                          ? businessPurposes[purpose].keywords\r\n                          : \"\"\r\n                      );\r\n\r\n                      setActivePurposeData(\r\n                        JSON.stringify(businessPurposes[purpose])\r\n                      );\r\n                      setActiveBusinesPurpose(\"addPurpose\");\r\n                      e.stopPropagation();\r\n                    }}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </ListGroup.Item>\r\n            );\r\n\r\n            purposes[keyBusiness][keyPurpose] = (\r\n              <Tab.Pane\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n              >\r\n                <Accordion\r\n                  defaultActiveKey={\r\n                    activePurposeProperty !== null\r\n                      ? activePurposeProperty\r\n                      : \"shareholders\"\r\n                  }\r\n                >\r\n                  {/* Purpose shareholders */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"shareholders\"\r\n                      onClick={() => setActivePurposeProperty(\"shareholders\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Shareholders\")}\r\n                      </span>\r\n                      <span style={{ float: \"right\" }}>\r\n                        <Add\r\n                          onClick={(e) => {\r\n                            setActivePurposeProperty(\"addShareholder\");\r\n                            e.stopPropagation();\r\n                          }}\r\n                          fontSize=\"small\"\r\n                          style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                        />\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    {/* Toggle: Add shareholder */}\r\n                    <Accordion.Collapse eventKey=\"addShareholder\">\r\n                      <Card.Body>\r\n                        <ShareholderRegistration\r\n                          {...args}\r\n                          purposeID={businessPurposes[purpose].purpose_id}\r\n                        />\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n\r\n                    {/* Toggle: Shareholders list */}\r\n                    <Accordion.Collapse eventKey=\"shareholders\">\r\n                      <Card.Body>\r\n                        {typeof purposeShareholders !== \"undefined\" &&\r\n                          purposeShareholders !== null &&\r\n                          Object.keys(purposeShareholders).map(\r\n                            (shareholder, keyShareholder) => {\r\n                              if (\r\n                                purposeShareholders[shareholder].purpose_id ===\r\n                                businessPurposes[purpose].purpose_id\r\n                              ) {\r\n                                const { purpose_id } = purposeShareholders[\r\n                                  shareholder\r\n                                ];\r\n                                const {\r\n                                  shareholder_id,\r\n                                  firstname,\r\n                                  lastname,\r\n                                  // email,\r\n                                  roles,\r\n                                  share,\r\n                                } = purposeShareholders[shareholder];\r\n\r\n                                countShareholders++;\r\n\r\n                                const arrRoles =\r\n                                  roles !== null ? roles.split(\",\") : [];\r\n\r\n                                return (\r\n                                  <Shareholder\r\n                                    {...args}\r\n                                    key={keyShareholder}\r\n                                    id={keyShareholder}\r\n                                    shareholder={shareholder_id}\r\n                                    purpose={purpose_id}\r\n                                    firstname={firstname}\r\n                                    lastname={lastname}\r\n                                    share={share}\r\n                                    roles={arrRoles}\r\n                                  />\r\n                                );\r\n                              } else {\r\n                                return \"\"; // TODO: check if this works\r\n                              }\r\n                            }\r\n                          )}\r\n                        {countShareholders === 0 && (\r\n                          <Card.Text className=\"text-muted\">\r\n                            {t(\"No shareholders\")}\r\n                          </Card.Text>\r\n                        )}\r\n\r\n                        {/* End shareholders list */}\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Product status */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      eventKey=\"productStatus\"\r\n                      onClick={() => setActivePurposeProperty(\"productStatus\")}\r\n                    >\r\n                      {t(\"Product Status\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"productStatus\">\r\n                      <Card.Body\r\n                        onClick={(e) => {\r\n                          // console.log(\"Click\", e);\r\n\r\n                          const bp = businessPurposes;\r\n                          bp[purpose].status =\r\n                            businessPurposes[purpose].status === 0 ? 1 : 0;\r\n                          setBusinessPurposes(JSON.stringify(bp));\r\n\r\n                          let data = {};\r\n                          // data.business_id =\r\n                          //   businessPurposes[purpose].business_id;\r\n                          // data.language = language;\r\n                          data.purpose_id =\r\n                            businessPurposes[purpose].purpose_id;\r\n                          // data.purpose_title = businessPurposes[purpose].title;\r\n                          data.purpose_status =\r\n                            businessPurposes[purpose].status;\r\n                          return sendRequest({\r\n                            req: \"change purpose status\",\r\n                            data,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Form>\r\n                          {typeof purposeShareholders === \"undefined\" ||\r\n                            (purposeShareholders === null && (\r\n                              <Form.Text>\r\n                                {t(\r\n                                  \"To publish, please add at least one shareholder\"\r\n                                )}\r\n                                <br />\r\n                                <br />\r\n                              </Form.Text>\r\n                            ))}\r\n\r\n                          {typeof purposeShareholders !== \"undefined\" &&\r\n                            purposeShareholders !== null && (\r\n                              <Form.Check\r\n                                type=\"switch\"\r\n                                disabled={\r\n                                  typeof purposeShareholders === \"undefined\" ||\r\n                                  purposeShareholders === null\r\n                                }\r\n                                label={t(\r\n                                  businessPurposes[purpose].status === 0\r\n                                    ? \"Not published\"\r\n                                    : \"Published\"\r\n                                )}\r\n                                checked={businessPurposes[purpose].status === 1}\r\n                                onChange={(e) => {\r\n                                  console.log(e);\r\n                                }}\r\n                              />\r\n                            )}\r\n                        </Form>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose ID */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      eventKey=\"purpose_id\"\r\n                      onClick={() => setActivePurposeProperty(\"purpose_id\")}\r\n                    >\r\n                      {t(\"Purpose ID\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"purpose_id\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].purpose_id}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose title */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"title\"\r\n                      onClick={() => setActivePurposeProperty(\"title\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Title\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"title\">\r\n                      <Card.Body>\r\n                        <Card.Text>{businessPurposes[purpose].title}</Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose description\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"description\"\r\n                      onClick={() => setActivePurposeProperty(\"description\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Description\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"description\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].description}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose category\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"category\"\r\n                      onClick={() => setActivePurposeProperty(\"category\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Category\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"category\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].category}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose subcategory\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"subcategory\"\r\n                      onClick={() => setActivePurposeProperty(\"subcategory\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Subcategory\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"subcategory\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].subcategory}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose subcategory 2\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"subcategory2\"\r\n                      onClick={() => setActivePurposeProperty(\"subcategory2\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Subcategory 2\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"subcategory2\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].subcategory2}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Keywords\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"keywords\"\r\n                      onClick={() => setActivePurposeProperty(\"keywords\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Keywords\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"keywords\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].keywords}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* End of purpose properties */}\r\n                </Accordion>\r\n              </Tab.Pane>\r\n            );\r\n          }\r\n          countShareholders = 0;\r\n          return true;\r\n        });\r\n      return true;\r\n    });\r\n\r\n  const jsx = (\r\n    <>\r\n      <Accordion\r\n        defaultActiveKey={\r\n          activeBusiness !== null || !userBusinessesLoaded\r\n            ? activeBusiness\r\n            : \"myBusinesses\"\r\n        }\r\n      >\r\n        {/* Add business location top */}\r\n\r\n        {/* List user businesses */}\r\n        {userBusinesses !== null &&\r\n          Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n            const date = new Date(userBusinesses[business].created);\r\n            const businessSince = new Intl.DateTimeFormat(language).format(\r\n              date\r\n            );\r\n            // keyBusiness[3] = userBusinesses[business].business_id;\r\n            return (\r\n              <Card key={keyBusiness}>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey={keyBusiness}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    ToggleBusiness({\r\n                      eventKey: keyBusiness,\r\n                      businessID: userBusinesses[business].business_id,\r\n                    })\r\n                  }\r\n                >\r\n                  <Store style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                  {userBusinesses[business].title}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={keyBusiness}>\r\n                  <Card.Body>\r\n                    <Tab.Container\r\n                      id=\"left-tabs-example\"\r\n                      defaultActiveKey={\r\n                        activeBusinesPurpose !== null\r\n                          ? activeBusinesPurpose\r\n                          : \"aboutBusiness\"\r\n                      }\r\n                    >\r\n                      <Row>\r\n                        {/* Layout: Left side - Menu */}\r\n                        <Col sm={5}>\r\n                          <ListGroup variant=\"flush\">\r\n                            {/* Menu item: About business */}\r\n                            <ListGroup.Item action eventKey=\"aboutBusiness\">\r\n                              <span style={{ whiteSpace: \"nowrap\" }}>\r\n                                {t(\"About\")}\r\n                              </span>\r\n                              <span style={{ float: \"right\" }}>\r\n                                <Add\r\n                                  onClick={(e) => {\r\n                                    // setPurposeID(null);\r\n                                    setActivePurposeData(null);\r\n                                    setActiveBusinesPurpose(\"addPurpose\");\r\n                                    e.stopPropagation();\r\n                                  }}\r\n                                  fontSize=\"small\"\r\n                                  style={{\r\n                                    color: \"var(--dark)\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                />\r\n                              </span>\r\n                            </ListGroup.Item>\r\n\r\n                            {/* Menu item: Add purpose */}\r\n                            {false && (\r\n                              <ListGroup.Item action eventKey=\"addPurpose\">\r\n                                <span style={{ whiteSpace: \"nowrap\" }}>\r\n                                  <Add\r\n                                    fontSize=\"small\"\r\n                                    style={{ color: \"var(--dark)\" }}\r\n                                  />\r\n                                  &nbsp;{t(\"Add Purpose\")}\r\n                                </span>\r\n                              </ListGroup.Item>\r\n                            )}\r\n\r\n                            {/* Menu items: Registered purposes */}\r\n                            {menuItems[keyBusiness]}\r\n\r\n                            {/* old add purpose */}\r\n                          </ListGroup>\r\n                          {countBusinessPurposes !== null && (\r\n                            <>\r\n                              <br />\r\n                              <Pagination\r\n                                {...args}\r\n                                size=\"sm\"\r\n                                countItems={countBusinessPurposes}\r\n                                itemsPerPage={businessPurposesPerPage}\r\n                                active={activePageBusinessPurposes}\r\n                                onClick={(number) =>\r\n                                  getBusinessPurposes(\r\n                                    activeBusinessID,\r\n                                    0,\r\n                                    number\r\n                                  )\r\n                                }\r\n                              />\r\n                            </>\r\n                          )}\r\n                        </Col>\r\n\r\n                        {/* Layout: Right side - Content */}\r\n                        <Col sm={7}>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"aboutBusiness\">\r\n                              <Accordion defaultActiveKey=\"businessID\">\r\n                                {/* Business logo */}\r\n\r\n                                {/*\r\n                              <Card>\r\n                                <Accordion.Toggle\r\n                                  as={Card.Header}\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  eventKey=\"businessLogo\"\r\n                                >\r\n                                  [LOGO]\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"businessLogo\">\r\n                                  <Card border=\"light\">\r\n                                    <Card.Body>\r\n                                      <Dropzone data={args} />\r\n                                    </Card.Body>\r\n                                  </Card>\r\n                                </Accordion.Collapse>\r\n                              </Card>\r\n                              */}\r\n\r\n                                {/* Business ID */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessID\"\r\n                                  >\r\n                                    {t(\"Business ID\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessID\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          {userBusinesses[business].business_id}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business description */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessDescription\"\r\n                                  >\r\n                                    {t(\"Business Description\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessDescription\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          {userBusinesses[business].description}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business Creation Date */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessCreationDate\"\r\n                                  >\r\n                                    {t(\"Business Created\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessCreationDate\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>{businessSince}</Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n\r\n                            {/* Start Business purposes */}\r\n                            {purposes[keyBusiness]}\r\n                            {/* End Business purposes */}\r\n\r\n                            {/*\r\n                             * Add new purpose / update existing purpose\r\n                             */}\r\n                            <Tab.Pane eventKey=\"addPurpose\">\r\n                              <Accordion defaultActiveKey=\"newPurpose\">\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    eventKey=\"newPurpose\"\r\n                                  >\r\n                                    {t(\r\n                                      activePurposeData === null\r\n                                        ? \"New Purpose\"\r\n                                        : \"Edit Purpose\"\r\n                                    )}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"newPurpose\">\r\n                                    <Card.Body>\r\n                                      <PurposeRegistration\r\n                                        {...args}\r\n                                        businessID={\r\n                                          userBusinesses[business].business_id\r\n                                        }\r\n                                        id={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.id\r\n                                            : null\r\n                                        }\r\n                                        purposeID={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.purpose_id\r\n                                            : null\r\n                                        }\r\n                                        title={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.title\r\n                                            : \"\"\r\n                                        }\r\n                                        description={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.description\r\n                                            : \"\"\r\n                                        }\r\n                                        category={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.category\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory2={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory2\r\n                                            : \"\"\r\n                                        }\r\n                                        keywords={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.keywords\r\n                                            : \"\"\r\n                                        }\r\n                                      />\r\n                                    </Card.Body>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>\r\n                        </Col>\r\n                      </Row>\r\n                    </Tab.Container>\r\n                    {/* pagination prev */}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            );\r\n            // console.log(\"BUSINESS:\", userBusinesses[business]);\r\n          })}\r\n\r\n        {/* add business location bottom */}\r\n\r\n        {/* Add business */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"addBusiness\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() =>\r\n              setActiveBusiness(\r\n                activeBusiness !== \"addBusiness\" ? \"addBusiness\" : null\r\n              )\r\n            }\r\n          >\r\n            <span>\r\n              <Add fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              &nbsp;\r\n              {t(\"Add Business\")}\r\n            </span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"addBusiness\">\r\n            <Card.Body>\r\n              <BusinessRegistration {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      {userBusinesses !== null && (\r\n        <>\r\n          <br />\r\n\r\n          <Pagination\r\n            {...args}\r\n            size=\"md\"\r\n            countItems={countBusinesses}\r\n            itemsPerPage={businessesPerPage}\r\n            active={activePageBusinesses}\r\n            onClick={(number) => getBusinesses(number)}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","import \"./UserEditor.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup, Form, InputGroup } from \"react-bootstrap\";\r\nimport {\r\n  Visibility,\r\n  VisibilityOff,\r\n  Close,\r\n  Edit,\r\n  // Done,\r\n} from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"UserEditor\",\r\n    request: \"update user\",\r\n    mode: \"label\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"USER EDITOR PROPS:\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    // currencies,\r\n    // currencyAbbr,\r\n    // language,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getReviser, getWorkplace } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refFirstName.current !== null &&\r\n        userEditorFirstname !== refFirstName.current.value\r\n      )\r\n        setUserEditorFirstname(refFirstName.current.value);\r\n\r\n      if (\r\n        refLastName.current !== null &&\r\n        userEditorLastname !== refLastName.current.value\r\n      )\r\n        setUserEditorLastname(refLastName.current.value);\r\n\r\n      if (\r\n        refEmail.current !== null &&\r\n        userEditorEmail !== refEmail.current.value\r\n      )\r\n        setUserEditorEmail(refEmail.current.value);\r\n\r\n      if (\r\n        refPassword.current !== null &&\r\n        userEditorPassword !== refPassword.current.value\r\n      )\r\n        setUserEditorPassword(refPassword.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userEditorEditFirstname ||\r\n      userEditorEditLastname ||\r\n      userEditorEditEmail ||\r\n      userEditorEditPassword\r\n    ) {\r\n      setUserEditorSubmitButtonVisible(true);\r\n    } else {\r\n      setUserEditorSubmitButtonVisible(false);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [\r\n    userEditorEditFirstname,\r\n    userEditorEditLastname,\r\n    userEditorEditEmail,\r\n    userEditorEditPassword,\r\n  ]);\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  const togglePassword = () => {\r\n    setUserEditorPasswordVisible(!userEditorPasswordVisible);\r\n  };\r\n\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    // data.language = language;\r\n    // data.email = userData.email;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.personalID = accountNumber;\r\n    if (!userEditorEditFirstname) data.firstname = null;\r\n    if (!userEditorEditLastname) data.lastname = null;\r\n    if (!userEditorEditEmail) data.email = userData.email;\r\n    if (!userEditorEditPassword) data.password = null;\r\n\r\n    // console.log(\"onSubmit:\", data);\r\n\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const yupObject = {\r\n    firstName: userEditorEditFirstname\r\n      ? yup.string().required(t(\"First name is required\"))\r\n      : yup.string().optional(),\r\n    lastName: userEditorEditLastname\r\n      ? yup.string().required(t(\"Last name is required\"))\r\n      : yup.string().optional(),\r\n    email: userEditorEditEmail\r\n      ? yup\r\n          .string()\r\n          .email(t(\"Invalid email address\"))\r\n          .required(t(\"Email is required\"))\r\n      : yup.string().optional(),\r\n    password: userEditorEditPassword\r\n      ? yup\r\n          .string()\r\n          .required(t(\"No password provided\"))\r\n          .min(8, t(\"Password is too short\"))\r\n          // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n          .matches(\r\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n            t(\"Password is too weak\")\r\n          )\r\n      : yup.string().optional(),\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object(yupObject);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (userData === null) return <></>;\r\n\r\n  /**\r\n   * Destructuring\r\n   */\r\n  const { mode } = props;\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    email,\r\n    // language,\r\n    // currency_name,\r\n    // currency_abbr,\r\n  } = userData;\r\n  // const currency = `${currency_name} (${currency_abbr})`;\r\n\r\n  const UserEditorForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Card title={t(\"Profile\")}>\r\n        {/* First name */}\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"First name\")}</Form.Label>\r\n            {!userEditorEditFirstname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditFirstname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{firstname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditFirstname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditFirstname && (\r\n              <Form.Group controlId=\"validationFormikFirstName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter first name\")}\r\n                    name=\"firstName\"\r\n                    ref={refFirstName}\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.firstName && touched.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Last name */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Last name\")}</Form.Label>\r\n            {!userEditorEditLastname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditLastname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{lastname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditLastname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditLastname && (\r\n              <Form.Group controlId=\"validationFormikLastName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter last name\")}\r\n                    name=\"lastName\"\r\n                    ref={refLastName}\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.lastName && touched.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Email */}\r\n          {false && accountNumber !== null && (\r\n            <ListGroup.Item as=\"div\" action>\r\n              <Form.Label>{t(\"Email address\")}</Form.Label>\r\n              {!userEditorEditEmail ? (\r\n                <>\r\n                  <span style={{ float: \"right\" }}>\r\n                    <Edit\r\n                      onClick={() => setUserEditorEditEmail(true)}\r\n                      fontSize=\"small\"\r\n                      style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                    />\r\n                  </span>\r\n                  <br />\r\n                  <small>{email}</small>\r\n                </>\r\n              ) : (\r\n                <span style={{ float: \"right\" }}>\r\n                  <Close\r\n                    onClick={() => setUserEditorEditEmail(false)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              )}\r\n\r\n              {userEditorEditEmail && (\r\n                <Form.Group controlId=\"validationFormikEmail\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      placeholder={t(\"Enter email\")}\r\n                      name=\"email\"\r\n                      value={values.email}\r\n                      ref={refEmail}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.email && touched.email}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.email}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              )}\r\n            </ListGroup.Item>\r\n          )}\r\n\r\n          {/* Password */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Password\")}</Form.Label>\r\n            {!userEditorEditPassword ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditPassword(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditPassword(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditPassword && (\r\n              <>\r\n                {/* New password */}\r\n                <Form.Group controlId=\"validationFormikPassword\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      type={userEditorPasswordVisible ? \"text\" : \"password\"}\r\n                      placeholder={t(\"Enter new password\")}\r\n                      name=\"password\"\r\n                      ref={refPassword}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.password && touched.password}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <InputGroup.Text\r\n                        id=\"inputGroupAppend\"\r\n                        onClick={togglePassword}\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        {userEditorPasswordVisible ? (\r\n                          <VisibilityOff\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        ) : (\r\n                          <Visibility\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        )}\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.password}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              </>\r\n            )}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n\r\n        <Form.Group controlId=\"validationSubmitButton\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            visible={userEditorSubmitButtonVisible}\r\n            marginTop={20}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n      </Card>\r\n    </Form>\r\n  );\r\n\r\n  const jsx =\r\n    mode === \"label\" ? (\r\n      <span style={{ whiteSpace: \"nowrap\" }}>\r\n        {firstname} {lastname}\r\n      </span>\r\n    ) : (\r\n      <Formik\r\n        component={UserEditorForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          // firstName: userData.firstname,\r\n          // lastName: userData.lastname,\r\n          // email: userData.email,\r\n          // password: \"\",\r\n          firstName: userEditorFirstname,\r\n          lastName: userEditorLastname,\r\n          email: userEditorEmail,\r\n          password: userEditorPassword,\r\n        }}\r\n      />\r\n    );\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import settings from \"../../settings.json\";\r\n// import Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    request: \"register currency\",\r\n    namespace: \"Currencies\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencies,\r\n    settings,\r\n    countCurrencies,\r\n    activePageCurrencies,\r\n    currenciesPerPage,\r\n    currencyAbbr,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  const { setCurrencyAbbr } = props.barrelSetters;\r\n  const {\r\n    // getReviser,\r\n    // getWorkplace,\r\n    sendRequest,\r\n    getCurrencies,\r\n    formatExchangeRate,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onCurrencySelected = (e) => {\r\n    setCurrencyAbbr(e.target.id);\r\n    sendRequest({\r\n      req: \"register user currency\",\r\n      data: { email: userData.email, currency_id: e.target.id },\r\n    });\r\n  };\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageCurrencies > 1 ? activePageCurrencies - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageCurrencies < Math.ceil(countCurrencies / currenciesPerPage)\r\n            ? activePageCurrencies + 1\r\n            : Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getCurrencies(number);\r\n  };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrenciesForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Table responsive striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Select\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Abbr\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Name\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Region\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Rate\")}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currencies !== null &&\r\n            currencies.map((currency, keyCUrrency) => {\r\n              // console.log(\"CURRENCY\", currency);\r\n\r\n              const { name, abbr, rate, region } = currency;\r\n\r\n              if (\r\n                typeof settings[\"currencies\"] === \"undefined\" ||\r\n                settings[\"currencies\"] === null ||\r\n                settings[\"currencies\"].length === 0 ||\r\n                settings[\"currencies\"].includes(abbr)\r\n              ) {\r\n                // valid currency - continue\r\n              } else {\r\n                return \"\"; // invalid currency\r\n              }\r\n\r\n              return (\r\n                <tr key={keyCUrrency}>\r\n                  <td style={{ textAlign: \"center\" }}>\r\n                    <Form.Check\r\n                      type=\"radio\"\r\n                      checked={currencyAbbr === abbr}\r\n                      name=\"selected-currency\"\r\n                      id={abbr}\r\n                      aria-label=\"option 1\"\r\n                      onChange={onCurrencySelected}\r\n                    />\r\n                  </td>\r\n                  <td style={{ textAlign: \"center\" }}>{abbr}</td>\r\n                  <td style={{ textAlign: \"left\" }}>{name}</td>\r\n                  <td style={{ textAlign: \"left\" }}>{region}</td>\r\n                  <td style={{ textAlign: \"right\" }}>\r\n                    {formatExchangeRate(rate)}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n      <Pagination\r\n        {...args}\r\n        pages={Math.ceil(countCurrencies / currenciesPerPage)}\r\n        active={activePageCurrencies}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  // onSubmit={onSubmit}\r\n  return (\r\n    <Formik\r\n      component={CurrenciesForm}\r\n      initialValues={{\r\n        curr_abbr: \"\",\r\n        curr_title: \"\",\r\n        curr_region: \"\",\r\n        curr_rate: 1.0,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"CurrencyRegistration\",\r\n    request: \"register currency\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    // getCurrencies,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([\"CurrencyRegistration\"]);\r\n\r\n  const refAbbr = React.createRef();\r\n  const refTitle = React.createRef();\r\n  const refRegion = React.createRef();\r\n  const refRate = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (refAbbr.current !== null && currencyCode !== refAbbr.current.value)\r\n        setCurrencyCode(refAbbr.current.value);\r\n\r\n      if (refTitle.current !== null && currencyName !== refTitle.current.value)\r\n        setCurrencyName(refTitle.current.value);\r\n\r\n      if (\r\n        refRegion.current !== null &&\r\n        currencyRegion !== refRegion.current.value\r\n      )\r\n        setCurrencyRegion(refRegion.current.value);\r\n\r\n      if (refRate.current !== null && currencyNewRate !== refRate.current.value)\r\n        setCurrencyNewRate(refRate.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    curr_abbr: yup\r\n      .string()\r\n      .required(t(\"Currency abbreviation is required\"))\r\n      .min(3, t(\"Currency abbreviation is too short\"))\r\n      .max(5, t(\"Currency abbreviation is too long\")),\r\n    curr_title: yup\r\n      .string()\r\n      .required(t(\"Currency name is required\"))\r\n      .min(3, t(\"Currency name is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency name is too long\")), // must be at most 70 characters\r\n    curr_region: yup\r\n      .string()\r\n      .required(t(\"Currency region is required\"))\r\n      .min(3, t(\"Currency region is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency region is too long\")), // must be at most 70 characters\r\n    curr_rate: yup\r\n      .string()\r\n      .required(t(\"Exchange rate is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Exchange Rate Regex\")),\r\n        t(\"Wrong exchange rate format\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrencyRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/* Currency abbreviation */}\r\n        <Form.Group controlId=\"validationFormikCurrAbbr\">\r\n          <Form.Label>{t(\"Abbreviation\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_abbr\"\r\n              ref={refAbbr}\r\n              value={values.curr_abbr}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_abbr && touched.curr_abbr}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_abbr}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency name */}\r\n        <Form.Group controlId=\"validationFormikCurrName\">\r\n          <Form.Label>{t(\"Currency Name\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_title\"\r\n              ref={refTitle}\r\n              value={values.curr_title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_title && touched.curr_title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_title}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency region */}\r\n        <Form.Group controlId=\"validationFormikCurrRegion\">\r\n          <Form.Label>{t(\"Currency Region\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_region\"\r\n              ref={refRegion}\r\n              value={values.curr_region}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_region && touched.curr_region}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_region}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Initial exchange rate */}\r\n        <Form.Group controlId=\"validationFormikCurrRate\">\r\n          <Form.Label>{t(\"Initial Exchange Rate\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_rate\"\r\n              value={values.curr_rate}\r\n              ref={refRate}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_rate && touched.curr_rate}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_rate}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={CurrencyRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        curr_abbr: currencyCode,\r\n        curr_title: currencyName,\r\n        curr_region: currencyRegion,\r\n        curr_rate: currencyNewRate,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AvTimer } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n//  let time = new Date().toLocaleString();\r\nimport { useInterval } from \"../../utils/useInterval\";\r\nimport { useEventListener } from \"../../utils/useEventListener\";\r\n\r\nimport ModalMessage from \"../modalMessage\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Constants\r\n     ============================================================================ */\r\n  const minute = 60; // seconds, for testing purposes > 60\r\n\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"IdleTimer\",\r\n    timeout: 5 * minute,\r\n    timestamp: null,\r\n    stage2: 60, // show seconds (vs minutes) in stage 2\r\n    stage3: 20, // show modal message on stage 3\r\n    onTick: () => {},\r\n    onTimerReset: () => {},\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { session } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { formatDate } = props.barrelFunctions;\r\n  const { onSessionTimeout } = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const [seconds, setSeconds] = useState(props.timeout);\r\n  const [modalMessageShow, setModalMessageShow] = React.useState(false);\r\n\r\n  useInterval(() => {\r\n    // Your custom logic here\r\n\r\n    setSeconds(seconds - 1);\r\n    props.onTick(seconds);\r\n  }, 1000);\r\n\r\n  useEventListener(() => {\r\n    setSeconds(props.timeout);\r\n    props.onTimerReset();\r\n  }, [\"mousedown\", \"click\", \"scroll\", \"keypress\"]); // \"click\",\r\n\r\n  useEffect(() => {\r\n    if (seconds === props.timeout) setModalMessageShow(false);\r\n    if (seconds === props.stage3) setModalMessageShow(true);\r\n    if (seconds === 0) onSessionTimeout();\r\n\r\n    // eslint-disable-next-line\r\n  }, [seconds]);\r\n\r\n  // useEffect(() => {\r\n  //   setSeconds(props.timeout);\r\n  //   props.onTimerReset();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [session]);\r\n\r\n  const getJSX = () => {\r\n    let currTime;\r\n    if (seconds > props.stage2) currTime = Math.ceil(seconds / minute);\r\n    else currTime = seconds;\r\n\r\n    const timeFormatted = formatDate(new Date(1970, 1, 1, 0, 0, currTime), {\r\n      minute: \"numeric\",\r\n      second: \"numeric\",\r\n    });\r\n\r\n    const onSessionContinue = () => {\r\n      // console.log(\"onSessionContinue\");\r\n      setSeconds(props.timeout);\r\n      setModalMessageShow(false);\r\n    };\r\n\r\n    const modalMessage = (\r\n      <>\r\n        <Trans\r\n          i18nKey=\"IdleTimer:Automatic logout\"\r\n          timeFormatted={timeFormatted}\r\n        >\r\n          <div className=\"text-center\">Automatic logout in</div>\r\n          <div\r\n            className=\"text-center\"\r\n            style={{ fontSize: \"4em\", fontWeight: \"bold\", color: \"#A93226\" }}\r\n          >\r\n            {{ timeFormatted }}\r\n          </div>\r\n          <div className=\"text-center\">\r\n            Do you want to continue the session?\r\n          </div>\r\n        </Trans>\r\n        <br />\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Continue now\")}\r\n          request=\"continue session\"\r\n          onSubmit={onSessionContinue}\r\n          namespace={props.namespace}\r\n        />\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <ModalMessage\r\n          show={modalMessageShow}\r\n          message={modalMessage}\r\n          onHide={() => setModalMessageShow(false)}\r\n        />\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip>\r\n              {seconds > props.stage2 ? (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Minutes to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  minutes.\r\n                </Trans>\r\n              ) : (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Seconds to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  seconds.\r\n                </Trans>\r\n              )}\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <div style={{ whiteSpace: \"nowrap\", cursor: \"default\" }}>\r\n            <AvTimer style={{ color: \"var(--dark)\" }} />\r\n            &nbsp;\r\n            {seconds > props.stage2 ? (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:minutes\" currTime={currTime}>\r\n                    {{ currTime }} minutes\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:min\" currTime={currTime}>\r\n                    {{ currTime }} min\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:seconds\" currTime={currTime}>\r\n                    {{ currTime }} seconds\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:sec\" currTime={currTime}>\r\n                    <span>{{ currTime }}</span> sec\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </OverlayTrigger>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useEventListener = (callback, events) => {\r\n  let defaults = {\r\n    namespace: \"EventListener\",\r\n\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, { events: events });\r\n\r\n  useEffect(() => {\r\n    const eventHandler = (e) => {\r\n      callback(e);\r\n    };\r\n\r\n    for (let i in props.events) {\r\n      window.addEventListener(props.events[i], eventHandler);\r\n    }\r\n\r\n    return () => {\r\n      for (let i in props.events) {\r\n        window.removeEventListener(props.events[i], eventHandler);\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  // Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Spinner,\r\n} from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Alert from \"../alert\";\r\n// import LanguageSelector from \"../language-selector\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"ALERT DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { ip, logInEmail, logInPassword } = props.barrelGetters;\r\n  const {\r\n    setLoggingIn,\r\n    setUpdateInterval,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    getUri,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"LogIn\");\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (refEmail.current !== null && logInEmail !== refEmail.current.value)\r\n        setLogInEmail(refEmail.current.value);\r\n\r\n      if (\r\n        refPassword.current !== null &&\r\n        logInPassword !== refPassword.current.value\r\n      )\r\n        setLogInPassword(refPassword.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup.string().required(t(\"No password provided\")),\r\n  });\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserLogInRequest = (data) => {\r\n    // data.pw = data.password;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.ip = ip;\r\n    data.uri = getUri();\r\n    sendRequest({ req: \"sign in user\", data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    setUpdateInterval(-1);\r\n    setLoggingIn(true);\r\n    sendUserLogInRequest(data);\r\n  };\r\n\r\n  const UserLogInForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Sign In\")}</h3>\r\n\r\n      {/**\r\n       * Email\r\n       */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Password\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"Password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            ref={refPassword}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Submit button\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"sign in user\"\r\n          namespace=\"LogIn\"\r\n        />\r\n      </Form.Group>\r\n\r\n      <Container fluid=\"md\">\r\n        <Row>\r\n          {/**\r\n           * Register\r\n           */}\r\n          <Col>\r\n            <p className=\"other-options text-left\">\r\n              <Trans i18nKey=\"LogIn:Not yet registered\">\r\n                Not yet <a href=\"/sign-up\">registered?</a>\r\n              </Trans>\r\n            </p>\r\n          </Col>\r\n\r\n          {/**\r\n           * Forgot password\r\n           */}\r\n          <Col>\r\n            <p className=\"other-options text-right\">\r\n              <Trans i18nKey=\"LogIn:Forgot password\">\r\n                Forgot <a href=\"/reset\">password?</a>\r\n              </Trans>\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={UserLogInForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          email: logInEmail,\r\n          password: logInPassword,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Button,\r\n  // Breadcrumb,\r\n  // NavDropdown,\r\n  // Alert,\r\n} from \"react-bootstrap\";\r\n// import Octicon, { SignOut } from \"@primer/octicons-react\";\r\nimport { PowerSettingsNew } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../../settings.json\";\r\nimport AccountRegistration from \"../../accountRegistration\";\r\n// import BusinessRegistration from \"../../businessRegistration\";\r\nimport { Balance, Transfer } from \"../../transfer\";\r\nimport MyBusiness from \"../../myBusiness\";\r\nimport UserEditor from \"../../userEditor\";\r\nimport CurrencyContainer from \"../../currencyContainer\";\r\nimport IdleTimer from \"../../idleTimer\";\r\nimport Login from \"../../login\";\r\nimport Contact from \"../../contact\";\r\n\r\n/**\r\n * Component: Summary\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"Summary\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    settings,\r\n    signedIn,\r\n    accountNumber,\r\n    sessionTimeout,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getBusinesses, sendRequest } = props.barrelFunctions;\r\n  const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (signedIn === false) {\r\n    // setRedirectTo(\"/sign-out\");\r\n    return <>User not logged in</>;\r\n  }\r\n\r\n  const location = useLocation();\r\n\r\n  const navigation = (\r\n    <>\r\n      <Container\r\n        fluid\r\n        style={{\r\n          paddingRight: \"0\",\r\n          paddingLeft: \"0\",\r\n        }}\r\n      >\r\n        <Row>\r\n          {/*\r\n           * Top Menu\r\n           */}\r\n          <Col>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                // background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"var(--light)\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src={\r\n                    settings !== null && typeof settings[\"logo\"] !== \"undefined\"\r\n                      ? settings[\"logo\"]\r\n                      : \"gfx/zlogo_light.png\"\r\n                  }\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link eventKey=\"profile\" href=\"/profile\">\r\n                  <UserEditor {...args} />\r\n                </Nav.Link>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link eventKey=\"sign-out\" href=\"/sign-out\">\r\n                  <span style={{ whiteSpace: \"nowrap\" }}>\r\n                    <span>\r\n                      <PowerSettingsNew style={{ color: \"var(--dark)\" }} />\r\n                    </span>\r\n\r\n                    <span className=\"d-none d-sm-inline\">\r\n                      &nbsp;\r\n                      {t(\"Sign out\")}\r\n                    </span>\r\n                  </span>\r\n                </Nav.Link>\r\n              </Nav>\r\n              {true && (\r\n                <Nav>\r\n                  <Nav.Item>\r\n                    <IdleTimer timeout={sessionTimeout} {...args} />\r\n                  </Nav.Item>\r\n                </Nav>\r\n              )}\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <div style={{ height: \"7px\" }}></div>\r\n            <Navbar\r\n              collapseOnSelect\r\n              expand=\"sm\"\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"dark\"\r\n              variant=\"dark\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                backgroundColor: \"var(--dark)\",\r\n                boxShadow: \"none\",\r\n              }}\r\n            >\r\n              <Nav>\r\n                <Nav.Link\r\n                  className=\"nav-link-2\"\r\n                  eventKey=\"balance\"\r\n                  href=\"/balance\"\r\n                  style={{\r\n                    fontWeight:\r\n                      location.pathname === \"/balance\" ? \"bold\" : \"normal\",\r\n                  }}\r\n                >\r\n                  {t(\"Balance\")}\r\n                </Nav.Link>\r\n              </Nav>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                  {accountNumber !== null && (\r\n                    <>\r\n                      <Nav.Link\r\n                        className=\"nav-link-2\"\r\n                        eventKey=\"transfer\"\r\n                        href=\"/transfer\"\r\n                        style={{\r\n                          fontWeight:\r\n                            location.pathname === \"/transfer\"\r\n                              ? \"bold\"\r\n                              : \"normal\",\r\n                        }}\r\n                      >\r\n                        {t(\"Transfer\")}\r\n                      </Nav.Link>\r\n                      <Nav.Link\r\n                        className=\"nav-link-2\"\r\n                        eventKey=\"my-business\"\r\n                        onClick={() => getBusinesses(1)}\r\n                        href=\"#\"\r\n                        style={{\r\n                          fontWeight:\r\n                            location.pathname === \"/my-business\"\r\n                              ? \"bold\"\r\n                              : \"normal\",\r\n                        }}\r\n                      >\r\n                        {t(\"Business\")}\r\n                      </Nav.Link>\r\n\r\n                      {/**\r\n                       * Currency\r\n                       */}\r\n                      {settings !== null &&\r\n                        typeof settings[\"currencies\"] !== \"undefined\" &&\r\n                        (settings[\"currencies\"] === null ||\r\n                          settings[\"currencies\"].length === 0 ||\r\n                          settings[\"currencies\"].length > 1) && (\r\n                          <Nav.Link\r\n                            className=\"nav-link-2\"\r\n                            eventKey=\"currency\"\r\n                            href=\"/currency\"\r\n                            style={{\r\n                              fontWeight:\r\n                                location.pathname === \"/currency\"\r\n                                  ? \"bold\"\r\n                                  : \"normal\",\r\n                            }}\r\n                          >\r\n                            {t(\"Currency\")}\r\n                          </Nav.Link>\r\n                        )}\r\n                    </>\r\n                  )}\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n\r\n  const pageBody = (\r\n    <Router>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/summary\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/account-registration\"\r\n          component={() => {\r\n            return AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/profile\"\r\n          component={() => {\r\n            return UserEditor({ ...args, mode: \"profile\" });\r\n          }}\r\n        />\r\n        {settings !== null &&\r\n          typeof settings[\"currencies\"] !== \"undefined\" &&\r\n          (settings[\"currencies\"] === null ||\r\n            settings[\"currencies\"].length === 0 ||\r\n            settings[\"currencies\"].length > 1) && (\r\n            <Route\r\n              exact\r\n              path=\"/currency\"\r\n              component={() => {\r\n                return CurrencyContainer({ ...args });\r\n              }}\r\n            />\r\n          )}\r\n\r\n        <Route\r\n          exact\r\n          path=\"/my-business\"\r\n          component={() => {\r\n            return MyBusiness(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/balance\"\r\n          component={() => {\r\n            return Balance(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/transfer\"\r\n          component={() => {\r\n            return Transfer(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/contact\"\r\n          component={() => {\r\n            return Contact(args);\r\n          }}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n\r\n      {/* Content */}\r\n      {/*<h3>{t(\"Summary\")}</h3>*/}\r\n\r\n      <Container fluid=\"md\">\r\n        <Row>\r\n          <Col>\r\n            {navigation}\r\n            <div style={{ height: \"7px\" }}></div>\r\n          </Col>\r\n        </Row>\r\n        {/*\r\n        <Row>{viewAccountRegistration}</Row>\r\n        */}\r\n        <Row>\r\n          <Col>{pageBody}</Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../settings.json\";\r\n// import Card from \"../card\";\r\nimport Currencies from \"../currencies\";\r\nimport CurrencyRegistration from \"../currencyRegistration\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    accordionViewCurrency,\r\n    activePageCurrencies,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const { setAccordionViewCurrency, setRedirectTo } = props.barrelSetters;\r\n  const { getCurrencies } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const ToggleCurrencies = () => {\r\n    // console.log(\"decorate\");\r\n    setAccordionViewCurrency(\"currencies\");\r\n    getCurrencies(activePageCurrencies);\r\n  };\r\n\r\n  const ToggleCurrencyRegistration = () => {\r\n    // console.log(\"decorate\");\r\n    setAccordionViewCurrency(\"currencyRegistration\");\r\n    // getTransactions(1);\r\n  };\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  if (\r\n    typeof settings[\"currencies\"] !== \"undefined\" &&\r\n    settings[\"currencies\"] !== null &&\r\n    settings[\"currencies\"].length < 2\r\n  ) {\r\n    return <></>; // currency creation is disabled\r\n  } else {\r\n    return (\r\n      <>\r\n        <Accordion defaultActiveKey={accordionViewCurrency}>\r\n          <Card>\r\n            <Accordion.Toggle\r\n              as={Card.Header}\r\n              eventKey=\"currencies\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={ToggleCurrencies}\r\n            >\r\n              {t(\"Currencies\")}\r\n            </Accordion.Toggle>\r\n\r\n            <Accordion.Collapse eventKey=\"currencies\">\r\n              <Card.Body>\r\n                <Currencies {...args} />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n\r\n          {typeof settings[\"currencyCreationAllowed\"] !== \"undefined\" &&\r\n            settings[\"currencyCreationAllowed\"] && (\r\n              <Card>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey=\"currencyRegistration\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={ToggleCurrencyRegistration}\r\n                >\r\n                  {t(\"Currency Registration\")}\r\n                </Accordion.Toggle>\r\n\r\n                <Accordion.Collapse eventKey=\"currencyRegistration\">\r\n                  <Card.Body>\r\n                    <CurrencyRegistration {...args} />\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            )}\r\n        </Accordion>\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { TransferToSelf, TransferToPerson, TransferToBusiness } from \"./index\";\r\n// import { Alert } from \"react-bootstrap\";\r\n\r\n// const navigation = [\r\n//   {\r\n//     name: \"U2S\",\r\n//     link: \"#u2s\",\r\n//   },\r\n//   {\r\n//     name: \"U2U\",\r\n//     link: \"#u2u\",\r\n//   },\r\n//   {\r\n//     name: \"U2B\",\r\n//     link: \"#u2b\",\r\n//   },\r\n// ];\r\n\r\n/**\r\n * Component: Transfer\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber, transferType } = props.barrelGetters;\r\n  const { setRedirectTo } = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  const { onTransferTypeChange } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"Transfer\");\r\n\r\n  const data = props.data;\r\n  const type = transferType;\r\n  // const onTypeChange = args.onTypeChange;\r\n\r\n  // console.log(\"TRANSFER DATA TYPE:\", type);\r\n\r\n  const [transferCard, setTransferCard] = useState(null);\r\n\r\n  const onNavigationClick = (id) => {\r\n    onTransferTypeChange(id);\r\n  };\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"U2S\"),\r\n      link: \"#u2s\",\r\n    },\r\n    {\r\n      name: t(\"U2U\"),\r\n      link: \"#u2u\",\r\n    },\r\n    {\r\n      name: t(\"U2B\"),\r\n      link: \"#u2b\",\r\n    },\r\n  ];\r\n\r\n  // console.log(\"TRANSFER DATA\", data);\r\n  // const title = t(\"Transfer to account\");\r\n\r\n  useEffect(() => {\r\n    if (type === null) return;\r\n\r\n    // setTransferCard()\r\n    switch (type) {\r\n      case \"#u2s\": // User to self\r\n        setTransferCard(\r\n          <TransferToSelf\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      case \"#u2u\": // User to user\r\n        setTransferCard(\r\n          <TransferToPerson\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      case \"#u2b\": // User to business\r\n        setTransferCard(\r\n          <TransferToBusiness\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [data, format, type]);\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  // return (\r\n  //   <>\r\n  //     <Alert variant=\"warning\">\r\n  //       <Alert.Heading>{t(\"Account not yet registered\")}</Alert.Heading>\r\n  //       <p>\r\n  //         <Trans i18nKey=\"Balance:Please set up your account first.\">\r\n  //           Please set up your account first. Use this{\" \"}\r\n  //           <a href=\"/account-registration\">link</a>.\r\n  //         </Trans>\r\n  //       </p>\r\n  //     </Alert>\r\n  //   </>\r\n  // );\r\n\r\n  return <>{transferCard}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Contact\", request: \"send message\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    language,\r\n    accountNumber,\r\n    contactSubject,\r\n    contactMessage,\r\n  } = props.barrelGetters;\r\n  const { setContactSubject, setContactMessage } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refSubject = React.createRef();\r\n  const refMessage = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // console.log(\"ON UNMOUNT:\", refSubject.current.value);\r\n      if (\r\n        refSubject.current !== null &&\r\n        contactSubject !== refSubject.current.value\r\n      )\r\n        setContactSubject(refSubject.current.value);\r\n\r\n      if (\r\n        refMessage.current !== null &&\r\n        contactMessage !== refMessage.current.value\r\n      )\r\n        setContactMessage(refMessage.current.value);\r\n      // console.log(\"CONTACT UNMOUNTS\");\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    subject: yup.string().required(t(\"Subject is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.sender = accountNumber;\r\n    data.language = language;\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  // const navigation = [\r\n  //   {\r\n  //     name: t(\"U2S\"),\r\n  //     link: \"#u2s\",\r\n  //   },\r\n  // ];\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card header={false}>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * Subject\r\n         */}\r\n        <Form.Group controlId=\"validationFormikSubject\">\r\n          <Form.Label>{t(\"Subject\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={t(\"Enter message subject\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"subject\"\r\n              ref={refSubject}\r\n              value={values.subject}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setContactSubject(e.target.value);\r\n              }}\r\n              isInvalid={!!errors.subject && touched.subject}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.subject}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Message\r\n         */}\r\n        <Form.Group controlId=\"validationFormikMessage\">\r\n          <Form.Label>{t(\"Message\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter message\")}\r\n            name=\"message\"\r\n            value={values.message}\r\n            ref={refMessage}\r\n            onChange={handleChange}\r\n            as=\"textarea\"\r\n            rows=\"10\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        subject: contactSubject,\r\n        message: contactMessage,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport config from \"./config\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nlet socket = openSocket.connect(config.uri.ENDPOINT, {\r\n  secure: true,\r\n  reconnect: true,\r\n});\r\n\r\n/**\r\n * Send request to the server\r\n * @param {*} param0\r\n */\r\nexport const sendData = (data, debug = false) => {\r\n  if (debug) console.log(`request: ${data.req}`, data);\r\n\r\n  // No data - do not send\r\n  // if (req.length === 0) return false;\r\n\r\n  socket.emit(`onDataReceived`, data);\r\n  return true;\r\n};\r\n\r\n// Start a session\r\nexport const startSession = (data, session, debug = false) => {\r\n  // console.log(\"startSession\");\r\n  if (debug) console.log(`request: start session`, data, session);\r\n\r\n  socket.emit(`start session`, {\r\n    data: data,\r\n    session: session,\r\n    req: \"start session\",\r\n  });\r\n};\r\n\r\n// End the session\r\nexport const endSession = (data, session, debug = false) => {\r\n  if (debug) console.log(`request: end session`, data, session);\r\n  socket.emit(`end session`, {\r\n    // char: data,\r\n    data: data,\r\n    // uid: uid,\r\n    session: session,\r\n    req: \"end session\",\r\n  });\r\n};\r\n\r\n// Custom hook: useSocket\r\nexport const useSocket = (callback) => {\r\n  const [responseData, setResponseData] = useState(null);\r\n\r\n  socket.on(`onDataReceived`, (data) => {\r\n    setResponseData(data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (responseData === null) return;\r\n\r\n    callback(responseData);\r\n    // eslint-disable-next-line\r\n  }, [responseData]);\r\n};\r\n\r\nexport const useSystemSocket = (callback, instance) => {\r\n  useEffect(() => {\r\n    // socket.on(\"onDataReceived\", (data) => {\r\n    //   callback(data);\r\n    // });\r\n\r\n    /**\r\n     * System error listeners\r\n     */\r\n    socket.on(\"connect_error\", () => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_error\",\r\n          context: {},\r\n          error: { code: \"none\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"connect_timeout\", (timeout) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_timeout\",\r\n          context: {},\r\n          error: { code: \"connect_timeout\", timeout },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_error\",\r\n          context: {},\r\n          error: { code: error.type, error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_failed\", () => {\r\n      // This should never occur\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_failed\",\r\n          context: {},\r\n          error: { code: \"reconnect_failed\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"error\",\r\n          context: {},\r\n          error: { code: \"error\", error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    /**\r\n     * System status listeners\r\n     */\r\n    socket.on(\"ping\", () => {\r\n      // callback({ data: \"ping\" }, true);\r\n    });\r\n    socket.on(\"pong\", (latency) => {\r\n      // callback({ data: \"pong\", latency }, true);\r\n    });\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n      if (reason === \"io server disconnect\") {\r\n        // the disconnection was initiated by the server, you need to reconnect manually\r\n        socket.connect();\r\n      } else {\r\n        // else the socket will automatically try to reconnect\r\n      }\r\n      // Reasons:\r\n      // - \"transport close\": Server was stopped\r\n      callback({ req: \"disconnect\", status: \"success\", reason }, true);\r\n    });\r\n    socket.on(\"reconnect\", (attemptNumber) => {\r\n      // Successfully reconnected on attempt: attemptNumber\r\n      callback({ req: \"reconnect\", status: \"success\", attemptNumber }, true);\r\n    });\r\n    socket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnect attempt\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnecting\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnecting\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n  }, [instance]);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"register user\", namespace: \"SignUp\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    language,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n  } = props.barrelSetters;\r\n  const { getReviser, getWorkplace, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refFirstName.current !== null &&\r\n        signUpFirstName !== refFirstName.current.value\r\n      )\r\n        setSignUpFirstName(refFirstName.current.value);\r\n\r\n      if (\r\n        refLastName.current !== null &&\r\n        signUpLastName !== refLastName.current.value\r\n      )\r\n        setSignUpLastName(refLastName.current.value);\r\n\r\n      if (refEmail.current !== null && signUpEmail !== refEmail.current.value)\r\n        setSignUpEmail(refEmail.current.value);\r\n\r\n      if (\r\n        refPassword.current !== null &&\r\n        signUpPassword !== refPassword.current.value\r\n      )\r\n        setSignUpPassword(refPassword.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    firstName: yup.string().required(t(\"First name is required\")),\r\n    lastName: yup.string().required(t(\"Last name is required\")),\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.language = language;\r\n    data.validateEmail = true;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const UserRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Sign Up\")}</h3>\r\n\r\n      {/**\r\n       * First name\r\n       */}\r\n      <Form.Group controlId=\"validationFormikFirstName\">\r\n        <Form.Label>{t(\"First name\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter first name\")}\r\n            name=\"firstName\"\r\n            ref={refFirstName}\r\n            value={values.firstName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.firstName && touched.firstName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.firstName}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Last name\r\n       */}\r\n      <Form.Group controlId=\"validationFormikLastName\">\r\n        <Form.Label>{t(\"Last name\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter last name\")}\r\n            name=\"lastName\"\r\n            ref={refLastName}\r\n            value={values.lastName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.lastName && touched.lastName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.lastName}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Email\r\n       */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Password\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"Password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            ref={refPassword}\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Submit button\r\n       */}\r\n      <Form.Group controlId=\"validationSubmitButton\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Login link\r\n       */}\r\n      <p className=\"other-options text-right\">\r\n        <Trans i18nKey=\"SignUp:Already registered\">\r\n          Already registered <a href=\"/sign-in\">sign in?</a>\r\n        </Trans>\r\n      </p>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={UserRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        firstName: signUpFirstName,\r\n        lastName: signUpLastName,\r\n        email: signUpEmail,\r\n        password: signUpPassword,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args.data);\r\n\r\n  // console.log(\"ALERT DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onAlertClose: onClose } = props.barrelEventHandlers;\r\n\r\n  // const autoClose = () => {\r\n  //   window.setTimeout(() => {\r\n  //     onClose();\r\n  //   }, 5000);\r\n  // };\r\n\r\n  let t;\r\n  const errorStrings = useTranslation(\"Errors\").t;\r\n  const infoStrings = useTranslation(\"Infos\").t;\r\n  if (error !== null && info !== null) {\r\n    // ({ t } = useTranslation(\"Errors\"));\r\n    const msgError = errorStrings(error);\r\n    // const msgError = useTranslation(\"Errors\").t(error);\r\n    // ({ t } = useTranslation(\"Infos\"));\r\n    const msgInfo = infoStrings(info);\r\n    // const msgInfo = useTranslation(\"Errors\").t(info);\r\n    return (\r\n      <>\r\n        <Alert variant=\"danger\" onClose={() => onClose(\"error\")} dismissible>\r\n          {msgError}\r\n        </Alert>\r\n\r\n        <Alert variant=\"info\" onClose={() => onClose(\"info\")} dismissible>\r\n          {msgInfo}\r\n        </Alert>\r\n      </>\r\n    );\r\n  } else if (error !== null) {\r\n    // ({ t } = useTranslation(\"Errors\"));\r\n    return (\r\n      <Alert variant=\"danger\" onClose={() => onClose()} dismissible>\r\n        {errorStrings(error)}\r\n      </Alert>\r\n    );\r\n  } else if (info !== null) {\r\n    // ({ t } = useTranslation(\"Infos\"));\r\n    // autoClose();\r\n    return (\r\n      <Alert variant=\"info\" onClose={() => onClose()} dismissible>\r\n        {infoStrings(info)}\r\n      </Alert>\r\n    );\r\n  }\r\n  return <></>;\r\n\r\n  // let ret = \"\";\r\n  // if (error !== null) {\r\n  //   let { t } = useTranslation(\"Errors\");\r\n  //   ret += Alert({variant: \"danger\", onClose: () => onClose()})\r\n  //     <Alert variant=\"danger\" onClose={() => onClose()} dismissible>\r\n  //       {t(error)}\r\n  //     </Alert>\r\n  //   );\r\n  // }\r\n\r\n  // if (info !== null) {\r\n  //   let { t } = useTranslation(\"Infos\");\r\n  //   ret += (\r\n  //     <Alert variant=\"info\" onClose={() => onClose()} dismissible>\r\n  //       {t(info)}\r\n  //     </Alert>\r\n  //   );\r\n  // }\r\n\r\n  // if (ret !== \"\") return ret;\r\n  // else return <></>;\r\n};\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../../translations/i18n\";\r\n// import { withNamespaces } from \"react-i18next\";\r\nimport { Form, Badge } from \"react-bootstrap\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { userData } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"LanguageSelector\");\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n  const languages = [\r\n    { id: 1, language: \"Latviešu\", code: \"lv\" },\r\n    { id: 2, language: \"English\", code: \"en\" },\r\n  ];\r\n  const handleLanguageSelect = (e) => {\r\n    changeLanguage(e.target.value);\r\n  };\r\n  const selectLanguage = (language) => {\r\n    changeLanguage(language);\r\n\r\n    if (userData !== null) {\r\n      sendRequest({\r\n        req: \"register user language\",\r\n        data: { email: userData.email, language },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (1) {\r\n    return (\r\n      <>\r\n        <div style={{ height: \"7px\" }}></div>\r\n        <Badge\r\n          pill\r\n          variant=\"light\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            selectLanguage(\"en\");\r\n          }}\r\n        >\r\n          en\r\n        </Badge>{\" \"}\r\n        <Badge\r\n          pill\r\n          variant=\"light\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            selectLanguage(\"lv\");\r\n          }}\r\n        >\r\n          lv\r\n        </Badge>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <Form.Control\r\n        as=\"select\"\r\n        id=\"languageSelector\"\r\n        onChange={handleLanguageSelect}\r\n        custom\r\n      >\r\n        <option key=\"0\" value={props.language}>\r\n          {t(\"Language\")}\r\n        </option>\r\n        {languages.map((el) => (\r\n          <option key={el.id} value={el.code}>\r\n            {el.language}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    );\r\n  }\r\n};\r\n\r\n// function selectElement(id, valueToSelect) {\r\n//   let element = document.getElementById(id);\r\n//   if (!element) return;\r\n//   element.value = valueToSelect;\r\n// }\r\n\r\n// // catch the event and make changes accordingly\r\n// i18n.on(\"languageChanged\", function (lng) {\r\n//   selectElement(\"languageSelector\", lng);\r\n// });\r\n","/**\r\n * CSS\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n// import moment from \"moment\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Summary from \"../summary\";\r\nimport {\r\n  useSocket,\r\n  sendData,\r\n  startSession,\r\n  endSession,\r\n} from \"../../../utils/sockets\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\nimport { useInterval } from \"../../../utils/useInterval\";\r\nimport Login from \"../../login\";\r\nimport Logout from \"../../logout\";\r\nimport SignUp from \"../../signup\";\r\nimport PasswordReset from \"../../passwordReset\";\r\n\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport ValidateEmail from \"../../validateEmail\";\r\nimport ChangePassword from \"../../changePassword\";\r\nimport Auth from \"../../auth\";\r\n// import UnderConstruction from \"../../underConstruction\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n\r\n/**\r\n * Component: Main\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const {\r\n    session,\r\n    instance,\r\n    debug,\r\n    // secureSession,\r\n    signedIn,\r\n    userData,\r\n    dailyAllowanceDispatched,\r\n    accountNumber,\r\n    updateInterval,\r\n    externalRequest,\r\n    cartContent,\r\n    validateTokenEmail,\r\n    passwordResetTokenValidated,\r\n    validateTokenPasswordReset,\r\n    connected,\r\n    isExternalRequest,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUpdateInterval,\r\n    setDailyAllowanceDispatched,\r\n    // setSessionTimeoutApplied,\r\n    // setSecureSession,\r\n    setSignedIn,\r\n    setRedirectTo,\r\n    setIsExternalRequest,\r\n    setUserEditorFirstname,\r\n    setUserEditorLastname,\r\n    setUserEditorEmail,\r\n    setUserEditorPassword,\r\n  } = props.barrelSetters;\r\n  const {\r\n    processUserResponse,\r\n    getIP,\r\n    getCart,\r\n    getCartPurposes,\r\n    // updateLastSeenUser,\r\n    getAccountData,\r\n    sendRequest,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    getContainerClass,\r\n    getRedirect,\r\n  } = props.barrelFunctions;\r\n  const {\r\n    onRedirect,\r\n    onSessionStart,\r\n    onSessionEnd,\r\n  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  // useSocket((data) => {\r\n  //   processUserResponse({\r\n  //     args: data,\r\n  //     barrels: barrels,\r\n  //   });\r\n  // });\r\n\r\n  // useInterval(() => {\r\n  //   updateLastSeenUser();\r\n  //   setSessionTimeoutApplied(false);\r\n  //   // console.log(\"setSessionTimeoutApplied(false)\");\r\n  // }, updateInterval);\r\n\r\n  /** \r\n   * Effect hooks\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On mount / on unmount\r\n   */\r\n  useEffect(() => {\r\n    getIP();\r\n\r\n    getCart();\r\n\r\n    return () => {\r\n      // on unmount\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * On session ID change\r\n   */\r\n  useEffect(() => {\r\n    if (session === null) return;\r\n\r\n    // if (session.length > 40) {\r\n    //   // setSecureSession(true);\r\n    //   // } else {\r\n    //   //   setSecureSession(false);\r\n    // }\r\n\r\n    // start new session\r\n    // let data = {};\r\n    // data.request = \"hello\";\r\n    // data.instance = instance;\r\n    // startSession(data, session, debug);\r\n\r\n    onSessionStart();\r\n\r\n    // eslint-disable-next-line\r\n  }, [session]);\r\n\r\n  /**\r\n   * On connected\r\n   */\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n  }, [connected]);\r\n\r\n  useEffect(() => {\r\n    if (userData === null) return;\r\n    // console.log(\"USE EFFECT USER DATA:\", userData);\r\n\r\n    setUserEditorFirstname(userData.firstname);\r\n    setUserEditorLastname(userData.lastname);\r\n    setUserEditorEmail(userData.email);\r\n    setUserEditorPassword(\"\");\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(userData)]);\r\n\r\n  /**\r\n   * On signed in status change\r\n   */\r\n  useEffect(() => {\r\n    if (!signedIn) return;\r\n\r\n    setUpdateInterval(-1);\r\n\r\n    // Dispatch daily allowance\r\n    if (accountNumber !== null && !dailyAllowanceDispatched) {\r\n      getAccountData();\r\n      sendRequest({\r\n        req: \"dispatch daily allowance\",\r\n        data: { uid: accountNumber },\r\n      });\r\n      setDailyAllowanceDispatched(true);\r\n    }\r\n\r\n    /**\r\n     * Handle external request\r\n     */\r\n    // let redirectTarget;\r\n    if (accountNumber !== null) {\r\n      if (isExternalRequest) {\r\n        // redirectTarget = \"/auth\";\r\n        setIsExternalRequest(false);\r\n        onRedirect(\"/auth\");\r\n      } else {\r\n        // Dispatch daily allowance\r\n        // if (!dailyAllowanceDispatched) {\r\n        //   sendRequest({\r\n        //     req: \"dispatch daily allowance\",\r\n        //     data: { uid: accountNumber },\r\n        //   });\r\n        //   setDailyAllowanceDispatched(true);\r\n        // }\r\n        // redirectTarget = \"/summary\";\r\n        // onRedirect(\"/account-registration\");\r\n      }\r\n    } else {\r\n      // redirectTarget = \"/account-registration\";\r\n      onRedirect(\"/account-registration\");\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [signedIn]);\r\n\r\n  /**\r\n   * On account number change\r\n   */\r\n  useEffect(() => {\r\n    if (accountNumber === null) return;\r\n\r\n    // eslint-disable-next-line\r\n  }, [accountNumber]);\r\n\r\n  /**\r\n   * On external request\r\n   */\r\n  useEffect(() => {\r\n    if (externalRequest === null) return;\r\n\r\n    const data = {\r\n      customer: accountNumber,\r\n      cart: externalRequest.cart,\r\n    };\r\n\r\n    sendRequest({ req: \"get cart\", data: data });\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(externalRequest)]);\r\n\r\n  /**\r\n   * On cart content change\r\n   */\r\n  useEffect(() => {\r\n    if (cartContent === null) return;\r\n\r\n    getCartPurposes();\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(cartContent)]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenEmail === null) return;\r\n\r\n    sendEmailValidationRequest(JSON.parse(validateTokenEmail));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenEmail]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (passwordResetTokenValidated === null) return;\r\n\r\n    onRedirect(\"/password\");\r\n\r\n    // eslint-disable-next-line\r\n  }, [passwordResetTokenValidated]);\r\n\r\n  /**\r\n   * On password reset validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenPasswordReset === null) return;\r\n\r\n    sendPasswordResetRequest(JSON.parse(validateTokenPasswordReset));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenPasswordReset]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              <div>\r\n                <Alert data={barrels} />\r\n              </div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(barrels) : Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign in\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-in\"\r\n                  component={() => {\r\n                    return Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign up\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-up\"\r\n                  component={() => {\r\n                    return SignUp(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign up\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/auth\"\r\n                  component={() => (signedIn ? Auth(barrels) : Login(barrels))}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Validate mail\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/validate-email\"\r\n                  component={() => {\r\n                    return ValidateEmail(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Change password\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/password\"\r\n                  component={() => {\r\n                    return ChangePassword(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: User profile\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/profile\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(barrels) : Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Currency\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/currency\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(barrels) : Login(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign out\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-out\"\r\n                  component={() => {\r\n                    return Logout(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Password reset\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/reset\"\r\n                  component={() => {\r\n                    return PasswordReset(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Account registration\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/account-registration\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Business registration\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/business-registration\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: My business\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/my-business\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Balance\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/balance\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Transfer\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/transfer\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Contact\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/contact\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Summary\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/summary\"\r\n                  component={() => {\r\n                    return Summary(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span style={{ width: \"40%\" }}>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n\r\n                <span\r\n                  className=\"text-muted\"\r\n                  style={{\r\n                    float: \"left\",\r\n                    marginLeft: \"18px\",\r\n                    width: \"30%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                >\r\n                  {signedIn && window.location.pathname != \"/contact\" && (\r\n                    <small>&nbsp;</small>\r\n                  )}\r\n                </span>\r\n\r\n                <span\r\n                  className=\"text-muted\"\r\n                  style={{\r\n                    float: \"right\",\r\n                    marginRight: \"18px\",\r\n                    width: \"30%\",\r\n                    textAlign: \"right\",\r\n                    // backgroundColor: \"red\",\r\n                  }}\r\n                >\r\n                  {signedIn && window.location.pathname != \"/contact\" && (\r\n                    <small>\r\n                      <a href=\"/contact\">{t(\"Contact\")}</a>\r\n                    </small>\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Checkout\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    externalRequest,\r\n    accountNumber,\r\n    cartContent,\r\n    cartPurposes,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest, format } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const Cart = () => {\r\n    let priceTotal = 0;\r\n    let priceReal = 0;\r\n\r\n    return (\r\n      <>\r\n        {cartContent !== null &&\r\n          cartContent.map((element, key) => {\r\n            priceTotal += element.price * element.amount;\r\n            let product_found = \"N\";\r\n\r\n            if (cartPurposes !== null) {\r\n              let product = cartPurposes.find(\r\n                (products) => products.purpose_id === element.product\r\n              );\r\n\r\n              if (typeof product !== \"undefined\") {\r\n                product_found = \"Y\";\r\n                priceReal += element.price * element.amount;\r\n              }\r\n              // console.log(\"product:\", product);\r\n            }\r\n\r\n            //   if (typeof product !== \"undefined\") {\r\n            //     product_found = product.title;\r\n            //   }\r\n            // }\r\n            return (\r\n              <div key={key}>\r\n                <div>product: {element.product}</div>\r\n                <div>price: {element.price}</div>\r\n                <div>amount: {element.amount}</div>\r\n                <div>found: {product_found}</div>\r\n                <br />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        <div>Total: {format(priceTotal)}</div>\r\n        <div>Real: {format(priceReal)}</div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const cart = typeof externalRequest.cart ? externalRequest.cart : \"\";\r\n    // <div>External request: {JSON.stringify(externalRequest)}</div>\r\n    return (\r\n      <Card title={t(\"Checkout\")}>\r\n        <div>\r\n          <Cart />\r\n        </div>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Spinner, Form } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ValidateEmail\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    validateTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    language,\r\n  } = props.barrelGetters;\r\n  const { setValidateTokenEmail } = props.barrelSetters;\r\n  const { getUrlParam, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Hooks\r\n    ============================================================================ */\r\n\r\n  // setToken(getUrlParam(\"token\"));\r\n  // setEmail(getUrlParam(\"email\"));\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenEmail(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (data) => {\r\n    // const vte = JSON.parse(validateTokenEmail);\r\n    // if (vte === null) return;\r\n    // const { token, email } = vte;\r\n    // console.log(data, validationTokenEmail);\r\n    sendRequest({\r\n      req: \"resend validate email token\",\r\n      data: {\r\n        token: validationTokenEmail.token,\r\n        email: validationTokenEmail.email,\r\n        language,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const queryString = window.location.search;\r\n    // const urlParams = new URLSearchParams(queryString);\r\n\r\n    return token === null ? (\r\n      <>\r\n        <h4>{t(\"A verification link has been sent to your email account.\")}</h4>\r\n        <hr />\r\n        <p>\r\n          {t(\r\n            \"Please click on the link that has just been sent to your email account\"\r\n          )}\r\n        </p>\r\n        {validationTokenEmailResent < 5 && (\r\n          <>\r\n            <br />\r\n            <h5>{t(\"Didn't receive email?\")}</h5>\r\n\r\n            <SubmitButton\r\n              {...args}\r\n              caption={t(\"Submit\")}\r\n              visible={true}\r\n              marginTop={20}\r\n              request={\"resend validate email token\"}\r\n              namespace={props.namespace}\r\n              onSubmit={handleSubmit}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    ) : (\r\n      <div className=\"text-center\">\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"border\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={false}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ChangePassword\",\r\n    request: \"change password\",\r\n    email: null,\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([\r\n    passwordResetTokenValidated === true ? \"SignUp\" : \"ChangePassword\",\r\n  ]); // adjust namespace\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.email = passwordResetTokenEmail;\r\n    // console.log(data);\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ChangePasswordForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Password */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"New password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  if (passwordResetTokenValidated === true) {\r\n    // if (true) {\r\n    return (\r\n      <Formik\r\n        component={ChangePasswordForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          password: \"\",\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    // if (passwordResetTokenValidated === false)\r\n    return <>{t(\"Awaiting validation\")}</>;\r\n    // } else {\r\n    //   // null\r\n    //   return <>How did you land here???</>;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(\"Logout\");\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info, language } = props.barrelGetters;\r\n  const { setLanguage } = props.barrelSetters;\r\n  const { showMessage } = props.barrelFunctions;\r\n  const { onLogOut, onSessionStart } = props.barrelEventHandlers;\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Save vars\r\n     */\r\n    const tempError = error;\r\n    const tempInfo = info;\r\n    const tempLanguage = language;\r\n    // const tempSessionTimeoutApplied = sessionTimeoutApplied;\r\n\r\n    /**\r\n     * Log out\r\n     */\r\n    onLogOut();\r\n\r\n    /**\r\n     * Restore vars\r\n     */\r\n    setLanguage(tempLanguage);\r\n    // setSessionTimeoutApplied(tempSessionTimeoutApplied);\r\n    // onSessionStart();\r\n    // onSessionReset();\r\n\r\n    if (tempError !== null) {\r\n      showMessage(tempError, \"error\");\r\n    } else {\r\n      if (tempInfo !== null) {\r\n        showMessage(tempInfo, \"info\");\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, []); // logOut\r\n\r\n  return (\r\n    <>\r\n      <h4>{t(\"See you soon\")}</h4>\r\n      <hr />\r\n\r\n      <br />\r\n      <p className=\"text-center\">\r\n        <a href=\"/\">{t(\"Sign in\")}</a>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n  * Default export\r\n  ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ResetPassword\", request: \"reset password\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { language, passwordResetEmail } = props.barrelGetters;\r\n  const {\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetEmail,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getUrlParam } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  const refEmail = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (\r\n        refEmail.current !== null &&\r\n        passwordResetEmail !== refEmail.current.value\r\n      )\r\n        setPasswordResetEmail(refEmail.current.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenPasswordReset(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n    * Event listeners\r\n    ============================================================================ */\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    data.language = language;\r\n    sendRequest({\r\n      req: props.request,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n  });\r\n\r\n  const passwordResetForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Reset password\")}</h3>\r\n\r\n      {/* Email */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            ref={refEmail}\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n\r\n  // return (\r\n  //   <Formik\r\n  //     component={passwordResetForm}\r\n  //     validationSchema={schema}\r\n  //     onSubmit={onSubmit}\r\n  //     initialValues={{\r\n  //       email: \"\",\r\n  //     }}\r\n  //   />\r\n  // );\r\n\r\n  return token === null ? (\r\n    <Formik\r\n      component={passwordResetForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        email: passwordResetEmail,\r\n      }}\r\n    />\r\n  ) : (\r\n    <div className=\"text-center\">\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n        hidden={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport UnderConstruction from \"../../underConstruction\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n\r\n/**\r\n * Component: Main\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass, getRedirect } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const signedIn = false;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              <div>\r\n                <Alert data={barrels} />\r\n              </div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return UnderConstruction(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Build } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"UnderConstruction\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <Build style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"We are constructing\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport NotConnected from \"../../notConnected\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n\r\n/**\r\n * Component: Main\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass, getRedirect } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const signedIn = false;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              <div>\r\n                <Alert data={barrels} />\r\n              </div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return NotConnected(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { PowerOff } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"NotConnected\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <PowerOff style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"Not connected\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport i18n from \"./translations/i18n\";\r\nimport config from \"./utils/config\";\r\nimport { useStickyState } from \"./utils/state\";\r\nimport Main from \"./components/pages/main\";\r\nimport UnderConstruction from \"./components/pages/underConstruction\";\r\nimport NotConnected from \"./components/pages/notConnected\";\r\n\r\nimport {\r\n  useSocket,\r\n  useSystemSocket,\r\n  sendData,\r\n  startSession,\r\n  endSession,\r\n} from \"./utils/sockets\";\r\nimport { useInterval } from \"./utils/useInterval\";\r\nimport requestHandler from \"./utils/requestHandler\";\r\nimport userErrorHandler from \"./utils/userErrorHandler\";\r\nimport userResponseHandler from \"./utils/userResponseHandler\";\r\nimport systemErrorHandler from \"./utils/systemErrorHandler\";\r\nimport systemResponseHandler from \"./utils/systemResponseHandler\";\r\n// import {\r\n//   useSocket,\r\n//   sendData,\r\n//   startSession,\r\n//   endSession,\r\n// } from \"../../../utils/sockets\";\r\n// import functions from \"./barrelFunctions\";\r\n\r\n/**\r\n * Component: Dispatcher\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Dispatcher\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  // console.log(\"DISPATCHER PROPS:\", props);\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  // const userDataFetchInterval = 5000; // Test: 5000 | 30000;\r\n  const isLocalhost =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\";\r\n\r\n  /** \r\n * Hooks\r\n ============================================================================ */\r\n  const [debug, setDebug] = useState(isLocalhost);\r\n  const [loggingOut, setLoggingOut] = useState(false);\r\n  const [loggingIn, setLoggingIn] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(true);\r\n  const [request, setRequest] = useStickyState(null, \"request\");\r\n  const [instance, setInstance] = useState(Date.now());\r\n  const [session, setSession] = useStickyState(uuidv4(), \"session\");\r\n  const [settings, setSettings] = useStickyState(null, \"settings\");\r\n  const [sessionTimeout, setSessionTimeout] = useStickyState(\r\n    (!debug ? 5 : 120) * 60, // 30 | 5 * 60\r\n    \"sessionTimeout\"\r\n  );\r\n  const [connected, setConnected] = useStickyState(false, \"connected\");\r\n  const [reconnecting, setReconnecting] = useStickyState(false, \"reconnecting\");\r\n  const [ip, setIP] = useStickyState(\"\", \"ip\");\r\n  const [signedIn, setSignedIn] = useStickyState(false, \"signedIn\");\r\n  const [\r\n    dailyAllowanceDispatched,\r\n    setDailyAllowanceDispatched,\r\n  ] = useStickyState(false, \"dailyAllowanceDispatched\");\r\n  const [isExternalRequest, setIsExternalRequest] = useStickyState(\r\n    false,\r\n    \"isExternalRequest\"\r\n  );\r\n  const [externalRequest, setExternalRequest] = useStickyState(\r\n    null,\r\n    \"externalRequest\"\r\n  );\r\n  const [cartContent, setCartContent] = useStickyState(null, \"cartContent\");\r\n  const [updateInterval, setUpdateInterval] = useStickyState(\r\n    -1,\r\n    \"updateInterval\"\r\n  );\r\n  const [currencyAbbr, setCurrencyAbbr] = useStickyState(\"Z\", \"currencyAbbr\");\r\n  const [currencyRate, setCurrencyRate] = useState(1);\r\n  const [currencies, setCurrencies] = useStickyState(null, \"currencies\");\r\n  const [transactions, setTransactions] = useStickyState(null, \"transactions\");\r\n  const [shares, setShares] = useStickyState(null, \"shares\");\r\n  const [accordionView, setAccordionView] = useStickyState(\r\n    \"balance\",\r\n    \"accordionView\"\r\n  );\r\n  const [accordionViewCurrency, setAccordionViewCurrency] = useStickyState(\r\n    null,\r\n    \"accordionViewCurrency\"\r\n  );\r\n  const [countCurrencies, setCountCurrencies] = useStickyState(\r\n    null,\r\n    \"countCurrencies\"\r\n  );\r\n  const [countTransactions, setCountTransactions] = useStickyState(\r\n    null,\r\n    \"countTransactions\"\r\n  );\r\n  const [countShares, setCountShares] = useStickyState(null, \"countShares\");\r\n  const [activePageCurrencies, setActivePageCurrencies] = useStickyState(\r\n    1,\r\n    \"activePageCurrencies\"\r\n  );\r\n  const [activePageTransactions, setActivePageTransactions] = useStickyState(\r\n    1,\r\n    \"activePageTransactions\"\r\n  );\r\n  const [activePageShares, setActivePageShares] = useStickyState(\r\n    1,\r\n    \"activePageShares\"\r\n  );\r\n  const [currenciesPerPage, setCurrenciesPerPage] = useStickyState(\r\n    5,\r\n    \"currenciesPerPage\"\r\n  );\r\n  const [transactionsPerPage, setTransactionsPerPage] = useStickyState(\r\n    5,\r\n    \"transactionsPerPage\"\r\n  );\r\n  const [sharesPerPage, setSharesPerPage] = useStickyState(5, \"sharesPerPage\");\r\n  const [userData, setUserData] = useStickyState(null, \"userData\");\r\n  const [uid, setUID] = useStickyState(null, \"uid\");\r\n  const [accountNumber, setAccountNumber] = useStickyState(\r\n    null,\r\n    \"accountNumber\"\r\n  );\r\n  const [userSequence, setUserSequence] = useStickyState(null, \"userSequence\");\r\n  const [accountType, setAccountType] = useStickyState(null, \"accountType\");\r\n  const [userBusinesses, setUserBusinesses] = useStickyState(\r\n    null,\r\n    \"userBusinesses\"\r\n  );\r\n  const [countBusinesses, setCountBusinesses] = useStickyState(\r\n    null,\r\n    \"countBusinesses\"\r\n  );\r\n  const [businessesPerPage, setBusinessesPerPage] = useStickyState(\r\n    1,\r\n    \"businessesPerPage\"\r\n  );\r\n  const [activePageBusinesses, setActivePageBusinesses] = useStickyState(\r\n    1,\r\n    \"activePageBusinesses\"\r\n  );\r\n  const [userBusinessesLoaded, setUserBusinessesLoaded] = useStickyState(\r\n    false,\r\n    \"userBusinessesLoaded\"\r\n  );\r\n  const [activeBusiness, setActiveBusiness] = useStickyState(\r\n    null,\r\n    \"activeBusiness\"\r\n  );\r\n  const [activeBusinessID, setActiveBusinessID] = useStickyState(\r\n    null,\r\n    \"activeBusinessID\"\r\n  );\r\n\r\n  const [businessPurposes, setBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"businessPurposes\"\r\n  );\r\n\r\n  const [cartPurposes, setCartPurposes] = useStickyState(null, \"cartPurposes\");\r\n\r\n  const [countBusinessPurposes, setCountBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"countBusinessPurposes\"\r\n  );\r\n  const [businessPurposesPerPage, setBusinessPurposesPerPage] = useStickyState(\r\n    5,\r\n    \"businessPurposesPerPage\"\r\n  );\r\n  const [\r\n    activePageBusinessPurposes,\r\n    setActivePageBusinessPurposes,\r\n  ] = useStickyState(1, \"activePageBusinessPurposes\");\r\n\r\n  const [activeBusinesPurpose, setActiveBusinesPurpose] = useStickyState(\r\n    null,\r\n    \"activeBusinesPurpose\"\r\n  );\r\n\r\n  const [activePurposeData, setActivePurposeData] = useStickyState(\r\n    null,\r\n    \"activePurposeData\"\r\n  );\r\n\r\n  const [activePurposeProperty, setActivePurposeProperty] = useStickyState(\r\n    null,\r\n    \"activePurposeProperty\"\r\n  );\r\n\r\n  const [purposeShareholders, setPurposeShareholders] = useStickyState(\r\n    null,\r\n    \"purposeShareholders\"\r\n  );\r\n\r\n  /**\r\n   * Log in\r\n   */\r\n  const [logInEmail, setLogInEmail] = useStickyState(\"\", \"logInEmail\");\r\n  const [logInPassword, setLogInPassword] = useStickyState(\"\", \"logInPassword\");\r\n\r\n  /**\r\n   * Sign Up\r\n   */\r\n  const [signUpFirstName, setSignUpFirstName] = useStickyState(\r\n    \"\",\r\n    \"signUpFirstName\"\r\n  );\r\n  const [signUpLastName, setSignUpLastName] = useStickyState(\r\n    \"\",\r\n    \"signUpLastName\"\r\n  );\r\n  const [signUpEmail, setSignUpEmail] = useStickyState(\"\", \"signUpEmail\");\r\n  const [signUpPassword, setSignUpPassword] = useStickyState(\r\n    \"\",\r\n    \"signUpPassword\"\r\n  );\r\n\r\n  /**\r\n   * Business registration\r\n   */\r\n  const [\r\n    businessRegistrationAddTitle,\r\n    setBusinessRegistrationAddTitle,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddTitle\");\r\n  const [\r\n    businessRegistrationAddDescription,\r\n    setBusinessRegistrationAddDescription,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddDescription\");\r\n\r\n  /**\r\n   * Purpose registration\r\n   */\r\n  const [\r\n    purposeRegistrationTitle,\r\n    setPurposeRegistrationTitle,\r\n  ] = useStickyState(\"\", \"purposeRegistrationTitle\");\r\n  const [\r\n    purposeRegistrationDescription,\r\n    setPurposeRegistrationDescription,\r\n  ] = useStickyState(\"\", \"purposeRegistrationDescription\");\r\n  const [\r\n    purposeRegistrationCategory,\r\n    setPurposeRegistrationCategory,\r\n  ] = useStickyState(\"\", \"purposeRegistrationCategory\");\r\n  const [\r\n    purposeRegistrationSubcategory,\r\n    setPurposeRegistrationSubcategory,\r\n  ] = useStickyState(\"\", \"purposeRegistrationSubcategory\");\r\n  const [\r\n    purposeRegistrationSubcategory2,\r\n    setPurposeRegistrationSubcategory2,\r\n  ] = useStickyState(\"\", \"purposeRegistrationSubcategory2\");\r\n  const [\r\n    purposeRegistrationKeywords,\r\n    setPurposeRegistrationKeywords,\r\n  ] = useStickyState(\"\", \"purposeRegistrationKeywords\");\r\n\r\n  /**\r\n   * User editor\r\n   */\r\n  const [userEditorEditFirstname, setUserEditorEditFirstname] = useStickyState(\r\n    false,\r\n    \"userEditorEditFirstname\"\r\n  );\r\n  const [userEditorFirstname, setUserEditorFirstname] = useStickyState(\r\n    \"\",\r\n    \"userEditorFirstname\"\r\n  );\r\n  const [userEditorEditLastname, setUserEditorEditLastname] = useStickyState(\r\n    false,\r\n    \"userEditorEditLastname\"\r\n  );\r\n  const [userEditorLastname, setUserEditorLastname] = useStickyState(\r\n    \"\",\r\n    \"userEditorLastname\"\r\n  );\r\n  const [userEditorEditEmail, setUserEditorEditEmail] = useStickyState(\r\n    false,\r\n    \"userEditorEditEmail\"\r\n  );\r\n  const [userEditorEmail, setUserEditorEmail] = useStickyState(\r\n    \"\",\r\n    \"userEditorEmail\"\r\n  );\r\n  const [userEditorEditPassword, setUserEditorEditPassword] = useStickyState(\r\n    false,\r\n    \"userEditorEditPassword\"\r\n  );\r\n  const [userEditorPassword, setUserEditorPassword] = useStickyState(\r\n    \"\",\r\n    \"userEditorPassword\"\r\n  );\r\n  const [\r\n    userEditorPasswordVisible,\r\n    setUserEditorPasswordVisible,\r\n  ] = useStickyState(false, \"userEditorPasswordVisible\");\r\n  const [\r\n    userEditorSubmitButtonVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  ] = useStickyState(false, \"userEditorSubmitButtonVisible\");\r\n\r\n  /**\r\n   * Password reset\r\n   */\r\n  const [passwordResetEmail, setPasswordResetEmail] = useStickyState(\r\n    \"\",\r\n    \"passwordResetEmail\"\r\n  );\r\n\r\n  /**\r\n   * TAN input\r\n   */\r\n  const [tanInputTAN, setTanInputTAN] = useStickyState(\"\", \"tanInputTAN\");\r\n\r\n  /**\r\n   * Misc\r\n   */\r\n\r\n  // const [businessLoaded, setBusinessLoaded] = useState(null);\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [redirectTo, setRedirectTo] = useState(null);\r\n  const [lastInsertId, setLastInsertId] = useState(null);\r\n  // const [responseData, setResponseData] = useState(null);\r\n  const [validateTokenEmail, setValidateTokenEmail] = useState(null);\r\n  const [validateTokenPasswordReset, setValidateTokenPasswordReset] = useState(\r\n    null\r\n  );\r\n\r\n  // const [\r\n  //   passwordResetTokenValidated,\r\n  //   setPasswordResetTokenValidated,\r\n  // ] = useStickyState(\"none\", \"passwordResetTokenValidated\");\r\n\r\n  const [\r\n    passwordResetTokenValidated,\r\n    setPasswordResetTokenValidated,\r\n  ] = useState(null);\r\n  const [passwordResetTokenEmail, setPasswordResetTokenEmail] = useState(null);\r\n\r\n  const [tmrConnected] = useState(null);\r\n  const [validationTokenEmail, setValidationTokenEmail] = useStickyState(\r\n    null,\r\n    \"validationTokenEmail\"\r\n  ); //\r\n  const [\r\n    validationTokenEmailResent,\r\n    setValidationTokenEmailResent,\r\n  ] = useStickyState(0, \"validationTokenEmailResent\"); //\r\n  const [language, setLanguage] = useStickyState(\r\n    i18n.options.fallbackLng[0],\r\n    \"language\"\r\n  ); //\r\n  const [transferType, setTransferType] = useStickyState(\r\n    \"#u2s\",\r\n    \"transferType\"\r\n  );\r\n  const [transferRequest, setTransferRequest] = useStickyState(\r\n    null,\r\n    \"transferRequest\"\r\n  );\r\n  const [transferFromAccount, setTransferFromAccount] = useStickyState(\r\n    \"\",\r\n    \"transferFromAccount\"\r\n  );\r\n  const [transferToAccount, setTransferToAccount] = useStickyState(\r\n    \"\",\r\n    \"transferToAccount\"\r\n  );\r\n  const [transferAmount, setTransferAmount] = useStickyState(\r\n    \"\",\r\n    \"transferAmount\"\r\n  );\r\n  const [transferToUID, setTransferToUID] = useStickyState(\"\", \"transferToUID\");\r\n  const [transferToPurpose, setTransferToPurpose] = useStickyState(\r\n    \"\",\r\n    \"transferToPurpose\"\r\n  );\r\n  const [transferDescription, setTransferDescription] = useStickyState(\r\n    \"\",\r\n    \"transferDescription\"\r\n  );\r\n  const [contactSubject, setContactSubject] = useStickyState(\r\n    \"\",\r\n    \"contactSubject\"\r\n  );\r\n  const [contactMessage, setContactMessage] = useStickyState(\r\n    \"\",\r\n    \"contactMessage\"\r\n  );\r\n  const [userBirthYear, setUserBirthYear] = useStickyState(\"\", \"userBirthYear\");\r\n  const [userBirthMonth, setUserBirthMonth] = useStickyState(\r\n    \"\",\r\n    \"userBirthMonth\"\r\n  );\r\n  const [userBirthDay, setUserBirthDay] = useStickyState(\"\", \"userBirthDay\");\r\n  const [userBirthDateError, setUserBirthDateError] = useState(\r\n    \"\",\r\n    \"userBirthDateError\"\r\n  );\r\n  const [userTimezone, setUserTimezone] = useStickyState(\"\", \"userTimezone\");\r\n\r\n  const [currencyCode, setCurrencyCode] = useStickyState(\"\", \"currencyCode\");\r\n  const [currencyName, setCurrencyName] = useStickyState(\"\", \"currencyName\");\r\n  const [currencyRegion, setCurrencyRegion] = useStickyState(\r\n    \"\",\r\n    \"currencyRegion\"\r\n  );\r\n  const [currencyNewRate, setCurrencyNewRate] = useStickyState(\r\n    1.0,\r\n    \"currencyNewRate\"\r\n  );\r\n\r\n  const [tanRequired, setTanRequired] = useStickyState(false, \"tanRequired\");\r\n  // const [transferSuccess, setTransferSuccess] = useStickyState(\r\n  //   false,\r\n  //   \"transferSuccess\"\r\n  // );\r\n  const [accountPhotoPath, setAccountPhotoPath] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [info, setInfo] = useState(null);\r\n  // const [alertVisible, setAlertVisible] = useState(false);\r\n\r\n  // const gotEvent = useEventListener();\r\n  // console.log(gotEvent);\r\n\r\n  /**\r\n   * Barrel: Getters\r\n   */\r\n  const barrelGetters = {\r\n    debug,\r\n    // instance,\r\n    loggingOut,\r\n    loggingIn,\r\n    // timestamp,\r\n    // startTimestamp,\r\n    pageLoading,\r\n    request,\r\n    // requestTS,\r\n    instance,\r\n    // lastRequest,\r\n    session,\r\n    // secureSession,\r\n    sessionTimeout,\r\n    // sessionTimeoutApplied,\r\n    settings: JSON.parse(settings),\r\n    ip,\r\n    updateInterval,\r\n    currencies: JSON.parse(currencies),\r\n    transactions: JSON.parse(transactions),\r\n    shares: JSON.parse(shares),\r\n    accordionView,\r\n    accordionViewCurrency,\r\n    countCurrencies,\r\n    countTransactions,\r\n    countShares,\r\n    activePageCurrencies,\r\n    activePageTransactions,\r\n    activePageShares,\r\n    currenciesPerPage,\r\n    transactionsPerPage,\r\n    sharesPerPage,\r\n    userData: JSON.parse(userData),\r\n    // redirect,\r\n    redirectTo,\r\n    lastInsertId,\r\n    connected,\r\n    reconnecting,\r\n    signedIn,\r\n    dailyAllowanceDispatched,\r\n    isExternalRequest,\r\n    externalRequest: JSON.parse(externalRequest),\r\n    cartContent: JSON.parse(cartContent),\r\n    currencyAbbr,\r\n    currencyRate,\r\n    // currencyStatus,\r\n    accountNumber,\r\n    userSequence,\r\n    accountType,\r\n    uid,\r\n    userBusinesses: JSON.parse(userBusinesses),\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes: JSON.parse(businessPurposes),\r\n    cartPurposes: JSON.parse(cartPurposes),\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    // purposeID,\r\n    activePurposeData: JSON.parse(activePurposeData),\r\n    purposeShareholders: JSON.parse(purposeShareholders),\r\n    logInEmail,\r\n    logInPassword,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    purposeRegistrationCategory,\r\n    purposeRegistrationSubcategory,\r\n    purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n    passwordResetEmail,\r\n    tanInputTAN,\r\n    // businessLoaded,\r\n    tanRequired,\r\n    tmrConnected,\r\n    validateTokenEmail,\r\n    validateTokenPasswordReset,\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    transferRequest: JSON.parse(transferRequest),\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    contactSubject,\r\n    contactMessage,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n    language,\r\n    transferType,\r\n    // transferSuccess,\r\n    accountPhotoPath,\r\n    error,\r\n    info,\r\n    // alertVisible,\r\n  };\r\n\r\n  /**\r\n   * Barrel: Setters\r\n   */\r\n  const barrelSetters = {\r\n    setDebug,\r\n    // setInstance,\r\n    setLoggingOut,\r\n    setLoggingIn,\r\n    // setTimestamp,\r\n    // setStartTimestamp,\r\n    setPageLoading,\r\n    setRequest,\r\n    // setRequestTS,\r\n    setInstance,\r\n    // setLastRequest,\r\n    setSession,\r\n    // setSecureSession,\r\n    setSessionTimeout,\r\n    // setSessionTimeoutApplied,\r\n    setSettings,\r\n    setIP,\r\n    setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setAccordionView,\r\n    setAccordionViewCurrency,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setActivePageCurrencies,\r\n    setActivePageTransactions,\r\n    setActivePageShares,\r\n    setCurrenciesPerPage,\r\n    setTransactionsPerPage,\r\n    setSharesPerPage,\r\n    setConnected,\r\n    setReconnecting,\r\n    setLanguage,\r\n    setUserData,\r\n    // sendRequest,\r\n    setSignedIn,\r\n    setDailyAllowanceDispatched,\r\n    setIsExternalRequest,\r\n    setExternalRequest,\r\n    setCartContent,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setAccountType,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setBusinessesPerPage,\r\n    setActivePageBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setActiveBusiness,\r\n    setActiveBusinessID,\r\n    setBusinessPurposes,\r\n    setCartPurposes,\r\n    setCountBusinessPurposes,\r\n    setBusinessPurposesPerPage,\r\n    setActivePageBusinessPurposes,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePurposeData,\r\n    setPurposeShareholders,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationCategory,\r\n    setPurposeRegistrationSubcategory,\r\n    setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n    setPasswordResetEmail,\r\n    setTanInputTAN,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setValidateTokenEmail,\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setContactSubject,\r\n    setContactMessage,\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n    setTanRequired,\r\n    // setTransferSuccess,\r\n    // setRedirect,\r\n    // showMessage,\r\n  };\r\n\r\n  /** \r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Sends requests to the server\r\n   * @param {string} request Request name\r\n   * @param {object} data Request data\r\n   */\r\n  const sendRequest = ({ req, data = null }) => {\r\n    if (processRequest({ req, data, session, uid: \"STA\", barrels })) {\r\n      // request processed successfully\r\n      return true;\r\n    } else {\r\n      console.log(\"THIS SHOULD NEVER BE REACHED\");\r\n      return sendData({ req, uid: \"STA\", session, data }, debug);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Processes user request\r\n   * @param {*} param0\r\n   */\r\n  const processRequest = ({ req, data, session, uid, barrels }) => {\r\n    data.instance = instance;\r\n\r\n    // if (req !== \"update last seen user\") {\r\n    setRequest(req);\r\n    // }\r\n\r\n    return requestHandler({\r\n      req,\r\n      data,\r\n      session,\r\n      uid,\r\n      barrels,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Processes server response\r\n   *\r\n   * Chooses a handler depending on response status:\r\n   * Error or other (success | continue | finished | pending etc.)\r\n   *\r\n   * @param {*} param0\r\n   */\r\n  const processUserResponse = ({ args, barrels }) => {\r\n    return args.status === \"error\"\r\n      ? userErrorHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        })\r\n      : userResponseHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  const processSystemResponse = ({ args, barrels }) => {\r\n    // console.log(\"SYSTEM RESPONSE DATA:\", args);\r\n    return args.status === \"error\"\r\n      ? systemErrorHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        })\r\n      : systemResponseHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  /**\r\n   * Shows a messgae (error or info)\r\n   *\r\n   * @param {string} msg, Messgae text\r\n   * @param {string} type, Message type (\"error\" | \"info\")\r\n   */\r\n  const showMessage = (msg, type = \"error\") => {\r\n    type === \"error\" ? setError(msg) : setInfo(msg);\r\n  };\r\n\r\n  /**\r\n   * Hides the message\r\n   */\r\n  const hideMessage = (type = null) => {\r\n    if (type === \"error\") {\r\n      setError(null);\r\n    } else if (type === \"info\") {\r\n      setInfo(null);\r\n    } else {\r\n      setError(null);\r\n      setInfo(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Changes the website language\r\n   */\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n    setLanguage(lng);\r\n  };\r\n\r\n  /**\r\n   * Format number\r\n   * @param {number} number\r\n   */\r\n  const format = (number, currency = currencyAbbr, useGrouping = true) => {\r\n    return (\r\n      new Intl.NumberFormat(language, {\r\n        notation: \"standard\",\r\n        minimumFractionDigits: 2,\r\n        useGrouping: useGrouping,\r\n      }).format(number * currencyRate) +\r\n      \" \" +\r\n      currency\r\n    );\r\n  };\r\n  //\r\n\r\n  /**\r\n   * Format per cent\r\n   * @param {number} number\r\n   */\r\n  const formatPerCent = (number) => {\r\n    return (\r\n      new Intl.NumberFormat(language, {\r\n        notation: \"standard\",\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2,\r\n      }).format(number) + \"%\"\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   * @param {number} number\r\n   */\r\n  const formatExchangeRate = (number) => {\r\n    return new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 5,\r\n      maximumFractionDigits: 5,\r\n    }).format(number);\r\n  };\r\n\r\n  const parseLocaleNumber = (stringNumber, locale) => {\r\n    let num = 123456.789,\r\n      fmt_local = new Intl.NumberFormat(locale, {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n      }),\r\n      parts_local = fmt_local.formatToParts(num),\r\n      group = \"\",\r\n      decimal = \"\",\r\n      currency = \"\";\r\n\r\n    // separators\r\n    parts_local.forEach(function (i) {\r\n      switch (i.type) {\r\n        case \"group\":\r\n          group = i.value;\r\n          break;\r\n        case \"decimal\":\r\n          decimal = i.value;\r\n          break;\r\n        case \"currency\":\r\n          currency = i.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return parseFloat(\r\n      stringNumber\r\n        .replace(new RegExp(\"\\\\\" + group, \"g\"), \"\")\r\n        .replace(new RegExp(\"\\\\\" + decimal), \".\")\r\n        .replace(new RegExp(\"\\\\\" + currency, \"g\"), \"\")\r\n    );\r\n  };\r\n\r\n  const formatDate = (\r\n    ts,\r\n    options = {\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    },\r\n    isUTC = true,\r\n    locales = language\r\n  ) => {\r\n    let date = new Date(ts); // .toISOString()\r\n    if (isUTC) {\r\n      const diff = date.getTimezoneOffset();\r\n      date = moment(date).add(-diff, \"m\").toDate();\r\n    }\r\n    return new Intl.DateTimeFormat(locales, options).format(date);\r\n  };\r\n\r\n  /**\r\n   * Retrieves an URL parameter\r\n   */\r\n  const getUrlParam = (param) => {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    return urlParams.get(param);\r\n  };\r\n\r\n  // /**\r\n  //  * Clear local storage (URL param ?reset)\r\n  //  */\r\n  // if (getUrlParam(\"reset\") !== null) {\r\n  //   console.log(\"Reset\");\r\n\r\n  //   window.localStorage.clear();\r\n  //   console.log(\"Local storage cleared\");\r\n  // }\r\n\r\n  const sendEmailValidationRequest = ({ token, email }) => {\r\n    // console.log(\"sendEmailValidationRequest:\", token, email);\r\n\r\n    sendRequest({\r\n      req: \"validate email token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  const sendPasswordResetRequest = ({ token, email }) => {\r\n    // console.log(\"sendEmailValidationRequest:\", token, email);\r\n    setPasswordResetTokenEmail(email);\r\n    sendRequest({\r\n      req: \"validate password reset token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  const getUri = () => {\r\n    // return `${window.location.protocol}//${window.location.hostname}`;\r\n    return `${window.location.hostname}`;\r\n  };\r\n\r\n  const getIP = () => {\r\n    if (debug) return;\r\n    fetch(`${config.uri.ENDPOINT}/ip`, {\r\n      method: \"post\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((results) => results.json())\r\n      .then((data) => {\r\n        setIP(typeof data.ip === \"string\" ? data.ip : \"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  const getCart = () => {\r\n    const cart = getUrlParam(\"cart\");\r\n\r\n    // console.log(business, cart);\r\n\r\n    if (cart !== null) {\r\n      setExternalRequest(JSON.stringify({ cart }));\r\n      if (!signedIn) setIsExternalRequest(true);\r\n    }\r\n  };\r\n\r\n  const getCartPurposes = () => {\r\n    if (cartContent === null) return;\r\n\r\n    let cartPurposes = [];\r\n\r\n    barrelGetters.cartContent.map((element) => {\r\n      cartPurposes.push(element.product);\r\n    });\r\n\r\n    // purposes: '\"' + cartPurposes.join('\",\"') + '\"',\r\n\r\n    setCartPurposes(null);\r\n\r\n    sendRequest({\r\n      req: \"get cart purposes\",\r\n      data: {\r\n        purposes: JSON.stringify(cartPurposes),\r\n        language: language,\r\n        page: 1,\r\n        limit: 5,\r\n      },\r\n    });\r\n  };\r\n\r\n  const getCurrencies = (newPage) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: { page: newPage, limit: currenciesPerPage },\r\n    });\r\n    setActivePageCurrencies(newPage);\r\n  };\r\n\r\n  const getTransactions = (newPage) => {\r\n    setTransactions(null);\r\n    sendRequest({\r\n      req: \"get transactions\",\r\n      data: {\r\n        page: newPage,\r\n        limit: transactionsPerPage,\r\n        uid: accountNumber,\r\n        language: language,\r\n      },\r\n    });\r\n    setActivePageTransactions(newPage);\r\n  };\r\n\r\n  const getShares = (newPage) => {\r\n    setShares(null);\r\n    sendRequest({\r\n      req: \"get shares\",\r\n      data: {\r\n        page: newPage,\r\n        limit: sharesPerPage,\r\n        uid: accountNumber,\r\n        language: language,\r\n      },\r\n    });\r\n    setActivePageShares(newPage);\r\n  };\r\n\r\n  const getBusinesses = (newPage = 1) => {\r\n    setUserBusinesses(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(1);\r\n    setActiveBusinessID(null);\r\n    sendRequest({\r\n      req: \"get user businesses\",\r\n      data: { uid: accountNumber, page: newPage, limit: businessesPerPage },\r\n    });\r\n    setActivePageBusinesses(newPage);\r\n  };\r\n\r\n  const getBusinessPurposes = (business_id, selected = null, newPage = 1) => {\r\n    // console.log(\"BUSINESS PURPOSES FOR ID \" + business_id, businessPurposes);\r\n\r\n    if (selected !== null) {\r\n      setActiveBusiness(selected);\r\n      setActiveBusinesPurpose(null);\r\n      setActivePurposeProperty(null);\r\n    }\r\n    setBusinessPurposes(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(newPage);\r\n    setActiveBusinessID(business_id);\r\n    return sendRequest({\r\n      req: \"get business purposes\",\r\n      data: {\r\n        business_id: business_id,\r\n        language: language,\r\n        page: newPage,\r\n        limit: businessPurposesPerPage,\r\n      },\r\n    });\r\n  };\r\n\r\n  const getPurposeShareholders = (purpose_id, selected = null) => {\r\n    if (selected !== null) {\r\n      setActiveBusinesPurpose(purpose_id);\r\n    }\r\n    setPurposeShareholders(null);\r\n    return sendRequest({\r\n      req: \"get purpose shareholders\",\r\n      data: { purpose_id: purpose_id },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get account data\r\n   */\r\n  const getAccountData = () => {\r\n    if (accountNumber === null) return;\r\n    sendRequest({\r\n      req: \"get account data\",\r\n      data: {\r\n        uid: accountNumber,\r\n        // timeout: sessionTimeout,\r\n        // checkTimeout: !sessionTimeoutApplied,\r\n      },\r\n      // data: { email: barrelGetters.userData.email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get transaction by id\r\n   * @param {integer} id, The primary key\r\n   */\r\n  const getTransactionById = (id) => {\r\n    sendRequest({\r\n      req: \"get transaction by id\",\r\n      data: { id: id, language: language },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get conatainer class\r\n   *\r\n   * Returns object cantaining the classes for layout container appearance.\r\n   *\r\n   * @param {boolean} signedIn, True if user has signed in, otherwise false.\r\n   */\r\n  const getContainerClass = (signedIn) => {\r\n    return {\r\n      wrapperClass: signedIn\r\n        ? \"auth-wrapper auth-wrapper-summary\"\r\n        : \"auth-wrapper\",\r\n      innerClass: signedIn\r\n        ? \"auth-inner auth-inner-summary\"\r\n        : \"auth-inner autoWidth\",\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Get redirect\r\n   *\r\n   * Returns router redirect component.\r\n   */\r\n  const getRedirect = () => {\r\n    return redirectTo === null ? \"\" : <Redirect push to={redirectTo} />;\r\n  };\r\n\r\n  /**\r\n   * Update last seen user\r\n   *\r\n   * Sends a request to update the last-seen-user time\r\n   */\r\n  // const updateLastSeenUser = () => {\r\n  //   // let data = { email: barrelGetters.userData.email };\r\n  //   // return sendRequest({ req: \"update last seen user\", data });\r\n  // };\r\n\r\n  /**\r\n   * Sorts an object array by value of the property\r\n   * @param {array} array, the array\r\n   * @param {string} property, the property name\r\n   */\r\n  const sortObjectArray = (array, property) => {\r\n    return array.sort((a, b) =>\r\n      a[property] > b[property] ? 1 : b[property] > a[property] ? -1 : 0\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Returns an array index of the object\r\n   * containing the property with the certain value.\r\n   *\r\n   * @param {array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const getObjectArrayElementIndex = (array, property, value) => {\r\n    if (array === null) return -1;\r\n    return array\r\n      .map((properties) => {\r\n        return properties[property];\r\n      })\r\n      .indexOf(value);\r\n  };\r\n\r\n  const getReviser = () => {\r\n    return \"STA\";\r\n  };\r\n\r\n  const getWorkplace = () => {\r\n    return \"LAPSTA\";\r\n  };\r\n\r\n  const barrelFunctions = {\r\n    sendRequest,\r\n    processUserResponse,\r\n    showMessage,\r\n    hideMessage,\r\n    changeLanguage,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    format,\r\n    formatPerCent,\r\n    formatExchangeRate,\r\n    getContainerClass,\r\n    formatDate,\r\n    // updateLastSeenUser,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    getRedirect,\r\n    getUri,\r\n    getIP,\r\n    getCart,\r\n    getCartPurposes,\r\n    getUrlParam,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    getCurrencies,\r\n    getTransactions,\r\n    getShares,\r\n    parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n    // updateTimestamp,\r\n  };\r\n\r\n  /** \r\n   * Event handlers\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On language change\r\n   */\r\n  i18n.on(\"languageChanged\", function (lng) {\r\n    setLanguage(lng);\r\n  });\r\n\r\n  /**\r\n   * On redirect\r\n   * @param {string} to Redirect path (e.g. \"/sign-in\")\r\n   */\r\n  const onRedirect = (to) => {\r\n    setRedirectTo(to);\r\n  };\r\n\r\n  const onSessionStart = () => {\r\n    // start new session\r\n    let data = {};\r\n    data.request = \"hello\";\r\n    data.instance = instance;\r\n    startSession(data, session, debug);\r\n  };\r\n\r\n  const onSessionEnd = () => {\r\n    // end current session\r\n    sendRequest({ req: \"end session\", data: {} });\r\n\r\n    let data = {};\r\n    data.request = \"bye\";\r\n    data.instance = instance;\r\n    endSession(data, session, debug);\r\n  };\r\n\r\n  const onSessionReset = () => {\r\n    setSession(uuidv4());\r\n  };\r\n\r\n  /**\r\n   * On signup\r\n   * @param {object} data Signup data\r\n   */\r\n  const onSignUp = (data) => {\r\n    // console.log(\"SIGN UP (data):\", data);\r\n    /// setUserData(JSON.stringify(data));\r\n    return sendRequest({ req: \"register user\", data });\r\n  };\r\n\r\n  const onSessionTimeout = () => {\r\n    // if (debug) return;\r\n    console.log(\"Session timed out...\");\r\n    // endSession(\"bye\", session);\r\n    setLoggingOut(true);\r\n    setRedirectTo(\"/sign-out\");\r\n    // Logout();\r\n  };\r\n\r\n  /**\r\n   * On account registration\r\n   * @param {object} data The account registration data\r\n   */\r\n  // const onAccountRegistration = (data) => {\r\n  //   // console.log(\"ACCOUNT REGISTRATION (data):\", data);\r\n  //   // setAccountNumber(data.personalID);\r\n  //   return sendRequest({ req: \"register account\", data });\r\n  // };\r\n\r\n  /**\r\n   * On transfer type change\r\n   * @param {string} id The transfer type id (\"U2S\", \"U2U\", \"U2B\" etc.)\r\n   */\r\n  const onTransferTypeChange = (id) => {\r\n    // console.log(\"setTransferType: \" + id);\r\n    setTransferType(id);\r\n  };\r\n\r\n  const onTransferSuccess = () => {\r\n    // console.log(\"ON TRANSFER SUCCESS\", barrels);\r\n  };\r\n\r\n  /**\r\n   * On transfer\r\n   * @param {object} data Transfer data\r\n   */\r\n  const onTransfer = (data) => {\r\n    // console.log(\"ON TRANSFER (data):\", data);\r\n    // sendRequest({ req: \"register account\", data: data });\r\n    sendRequest(data);\r\n  };\r\n\r\n  // const onBusinessRegistration = (data) => {\r\n  //   // console.log(\"ON BUSINESS REGISTRATION (data):\", data);\r\n  //   // sendRequest({ req: \"register account\", data: data });\r\n  //   sendRequest(data);\r\n  // };\r\n\r\n  const onPurposeRegistration = (data) => {\r\n    sendRequest(data);\r\n  };\r\n\r\n  // const onShareholderRegistration = (data) => {\r\n  //   console.log(\"ON SHAREHOLDER REGISTRATION (data):\", data);\r\n  //   // sendRequest({ req: \"register account\", data: data });\r\n  //   sendRequest(data);\r\n  //   // getBusinesses();\r\n  // };\r\n\r\n  /**\r\n   * On logout\r\n   */\r\n  const onLogOut = () => {\r\n    // setSession(null);\r\n    setUpdateInterval(-1);\r\n\r\n    // TODO: refactor this to separate function (as well as the startSession)\r\n    // let data = {};\r\n    // data.request = \"bye\";\r\n    // data.instance = instance;\r\n    // endSession(data, session, debug);\r\n    onSessionEnd();\r\n    // setSession(uuidv4()); // DO NOT SET SESSION HERE - infinite loop!!\r\n    // setSecureSession(false);\r\n\r\n    setReconnecting(false);\r\n    setSignedIn(false);\r\n    setDailyAllowanceDispatched(false);\r\n    setSettings(null);\r\n    // setSessionTimeoutApplied(false);\r\n    setIsExternalRequest(false);\r\n    setCurrencies(null);\r\n    setTransactions(null);\r\n    setShares(null);\r\n    setAccordionView(\"balance\");\r\n    setAccordionViewCurrency(null);\r\n    setAccountNumber(null);\r\n    setAccountType(null);\r\n    setTransferType(\"#u2s\");\r\n    setTransferRequest(null);\r\n    setTransferFromAccount(\"\");\r\n    setTransferToAccount(\"\");\r\n    setTransferAmount(\"\");\r\n    setTransferToUID(\"\");\r\n    setTransferToPurpose(\"\");\r\n    setTransferDescription(\"\");\r\n    setContactSubject(\"\");\r\n    setContactMessage(\"\");\r\n    setUserBirthYear(\"\");\r\n    setUserBirthMonth(\"\");\r\n    setUserBirthDay(\"\");\r\n    setUserBirthDateError(\"\");\r\n    setUserTimezone(\"\");\r\n    setCurrencyCode(\"\");\r\n    setCurrencyName(\"\");\r\n    setCurrencyRegion(\"\");\r\n    setCurrencyNewRate(\"\");\r\n    setCountTransactions(null);\r\n    setUserData(null);\r\n    setUserBusinesses(null);\r\n    setUserBusinessesLoaded(false);\r\n    setActiveBusiness(null);\r\n    setBusinessPurposes(null);\r\n    setCartPurposes(null);\r\n    setActiveBusinesPurpose(null);\r\n    setActivePurposeProperty(null);\r\n    setPurposeShareholders(null);\r\n    setLogInEmail(\"\");\r\n    setLogInPassword(\"\");\r\n    setSignUpFirstName(\"\");\r\n    setSignUpLastName(\"\");\r\n    setSignUpEmail(\"\");\r\n    setSignUpPassword(\"\");\r\n    setBusinessRegistrationAddTitle(\"\");\r\n    setBusinessRegistrationAddDescription(\"\");\r\n    setPurposeRegistrationTitle(\"\");\r\n    setPurposeRegistrationDescription(\"\");\r\n    setPurposeRegistrationCategory(\"\");\r\n    setPurposeRegistrationSubcategory(\"\");\r\n    setPurposeRegistrationSubcategory2(\"\");\r\n    setPurposeRegistrationKeywords(\"\");\r\n    setUserEditorEditFirstname(\"\");\r\n    setUserEditorFirstname(\"\");\r\n    setUserEditorEditLastname(\"\");\r\n    setUserEditorLastname(\"\");\r\n    setUserEditorEditEmail(\"\");\r\n    setUserEditorEmail(\"\");\r\n    setUserEditorEditPassword(\"\");\r\n    setUserEditorPassword(\"\");\r\n    setUserEditorPasswordVisible(\"\");\r\n    setUserEditorSubmitButtonVisible(\"\");\r\n    setPasswordResetEmail(\"\");\r\n    setTanInputTAN(\"\");\r\n    setAccountPhotoPath(\"\");\r\n    setPasswordResetTokenValidated(null);\r\n    setPasswordResetTokenEmail(null);\r\n    setTanRequired(false);\r\n    setError(null);\r\n    setInfo(null);\r\n  };\r\n\r\n  const onAlertClose = (type = null) => {\r\n    hideMessage(type);\r\n  };\r\n\r\n  /**\r\n   * Barrel: Event handlers\r\n   */\r\n  const barrelEventHandlers = {\r\n    onRedirect,\r\n    onSignUp,\r\n    onSessionTimeout,\r\n    onTransferTypeChange,\r\n    onTransferSuccess,\r\n    onTransfer,\r\n    onSessionStart,\r\n    onSessionEnd,\r\n    onSessionReset,\r\n    onPurposeRegistration,\r\n    onLogOut,\r\n    onAlertClose,\r\n  };\r\n\r\n  /**\r\n   * Barrel of barrels\r\n   */\r\n  const barrels = {\r\n    barrelGetters,\r\n    barrelSetters,\r\n    barrelFunctions,\r\n    barrelEventHandlers,\r\n  };\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  useSocket((data) => {\r\n    processUserResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  });\r\n\r\n  useSystemSocket((data) => {\r\n    processSystemResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  }, instance);\r\n\r\n  // useInterval(() => {\r\n  //   // updateLastSeenUser();\r\n  //   // setSessionTimeoutApplied(false);\r\n  //   // // console.log(\"setSessionTimeoutApplied(false)\");\r\n  // }, updateInterval);\r\n\r\n  if (props.mode !== \"construction\") {\r\n    if (debug || !reconnecting) {\r\n      return <Main {...barrels} />;\r\n    } else {\r\n      return <NotConnected {...barrels} />;\r\n    }\r\n  } else {\r\n    return <UnderConstruction {...barrels} />;\r\n  }\r\n};\r\n","import { sendData } from \"../utils/sockets\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const { req, data, session, uid, barrels } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, userData, userSequence } = barrels.barrelGetters;\r\n  const {\r\n    setUserData,\r\n    setUID,\r\n    setAccountNumber,\r\n    // setRequest,\r\n    // setUserBusinesses,\r\n  } = barrels.barrelSetters;\r\n  const {} = barrels.barrelFunctions;\r\n  //   const {} = barrels.barrelEventHandlers;\r\n\r\n  let requestFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onRequest = (req, callback) => {\r\n    if (requestFound) return;\r\n    if (req === props.req || req === \"default\") {\r\n      callback();\r\n      requestFound = true;\r\n    }\r\n  };\r\n\r\n  /** \r\n   * Request handlers\r\n  ============================================================================ */\r\n\r\n  onRequest(\"sign in user\", () => {\r\n    setUserData(JSON.stringify(data));\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"get user sequence\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"register account\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const year = fullyear.slice(-2);\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n    const birthDate = `${day}${month}${year}`;\r\n    const timezone = data.timezone.slice(0, 2);\r\n    const initial = userData.lastname.slice(0, 1).toUpperCase();\r\n    const icode = initial.charCodeAt(0).toString().padStart(5, \"0\");\r\n\r\n    data.scode = `${timezone}${birthDate}${initial}`;\r\n    data.tcode = `${timezone}${birthDate}${icode}`;\r\n    data.timezone = data.timezone.slice(5);\r\n    data.sequence = userSequence.toString().padStart(5, \"0\");\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    setUID(data.personalID);\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"default\", () => {\r\n    sendData({ req, data, uid, session }, debug);\r\n\r\n    return true;\r\n  });\r\n\r\n  // onRequest(\"unknown\", () => {\r\n  //   showMessage(`UNKNOWN REQUEST ${req}`, \"info\");\r\n\r\n  //   return true;\r\n  // });\r\n\r\n  return requestFound;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setUID,\r\n    setAccountNumber,\r\n    setRedirectTo,\r\n  } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug) console.log(`ERROR: ${req}`, error, context, props, barrels);\r\n  // const { showMessage } = barrels.barrelFunctions;\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n    // console.log(res, status);\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onError([\"*\", \"INVALID_SESSION\"], () => {\r\n    showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n    setRedirectTo(\"/sign-out\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer errors\r\n   */\r\n  onError([\"transfer U2S\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2B\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_USER_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // user selected the same language again - just ignore\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate email token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate password reset token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"reset password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // showMessage(\"REQUEST_ALREADY_SENT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same language again - that's ok\r\n    return true;\r\n  });\r\n\r\n  onError([\"update user\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same password again - that's ok\r\n    return true;\r\n  });\r\n\r\n  // onError([\"update last seen user\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Same last seen time was submitted (shouldn't be possible) - ignore for now\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"sign in user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"change password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"SAME_PASSWORD_RESET\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"submit tan\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"INVALID_TAN\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"get cart\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User accessed the same cart again - it's fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer V2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Allowance already dispatched today - totally fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    // The same currency was selected again - no problem\r\n    return true;\r\n  });\r\n\r\n  onError([\"end session\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Session updated to the same data ??\r\n    return true;\r\n  });\r\n\r\n  onError([\"register currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_CURRENCY_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  // onError([\"get user sequence\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Session updated to the same data ??\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"register account\", \"ER_DUP_ENTRY\"], () => {\r\n    setUID(null);\r\n    setAccountNumber(null);\r\n    showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError(\r\n    [\"register account\", \"ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO\"],\r\n    () => {\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n      return true;\r\n    }\r\n  );\r\n\r\n  onError([\"register shareholder\", \"ER_NO_REFERENCED_ROW_2\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"*\", \"ER_CANT_CREATE_THREAD\"], () => {\r\n    showMessage(\"NO_RESPONSE_FROM_SERVER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"RESPONSE HANDLER: \", props, barrels);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    debug,\r\n    // requestTS,\r\n    session,\r\n    sessionTimeout,\r\n    settings,\r\n    loggingIn,\r\n    isExternalRequest,\r\n    instance,\r\n    currencies,\r\n    transactions,\r\n    transferRequest,\r\n    shares,\r\n    // transactionsPerPage,\r\n    // sharesPerPage,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    // uid,\r\n    userBusinesses,\r\n    cartPurposes,\r\n    businessPurposes,\r\n    purposeShareholders,\r\n    activeBusinesPurpose,\r\n    lastInsertId,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setSession,\r\n    // setSessionTimeoutApplied,\r\n    setSettings,\r\n    setLoggingIn,\r\n    setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setConnected,\r\n    // setLanguage,\r\n    setUserData,\r\n    setSignedIn,\r\n    setIsExternalRequest,\r\n    setCartContent,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    // setTransferSuccess,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setCartPurposes,\r\n    setBusinessPurposes,\r\n    setCountBusinessPurposes,\r\n    setPurposeShareholders,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidateTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setActivePurposeData,\r\n    setTanRequired,\r\n    // setRedirect,\r\n  } = barrels.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    // processUserResponse,\r\n    getBusinesses,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    showMessage,\r\n    changeLanguage,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    // endSession,\r\n    // updateLastSeenUser,\r\n    showTanInput,\r\n    // updateTimestamp,\r\n    // hideMessage,\r\n  } = barrels.barrelFunctions;\r\n  const {\r\n    // onTransferSuccess,\r\n    onRedirect,\r\n    onSessionTimeout,\r\n    onSessionEnd,\r\n    // onLogOut,\r\n  } = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n  // const { userData, accountNumber } = barrels.barrelGetters;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  // console.log(\"USER DATA PARSED:\", userDataParsed);\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug) console.log(`response: ${req} (${props.status})`, props, barrels);\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (instance === props.reqData.instance &&\r\n        res === \"*\" &&\r\n        status === props.status &&\r\n        name === name) ||\r\n      (instance === props.reqData.instance &&\r\n        res === props.req &&\r\n        status === props.status) ||\r\n      (instance === props.reqData.instance && res === \"unknown\")\r\n    ) {\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n    if (typeof props.token !== \"undefined\") {\r\n      console.log(\"Renewing session...\");\r\n\r\n      onSessionEnd();\r\n      setSession(props.token);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Start session (success)\r\n   */\r\n  onResponse([\"start session\", \"success\"], () => {\r\n    setConnected(true);\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * End session (success)\r\n   */\r\n  onResponse([\"end session\", \"success\"], () => {\r\n    // console.log(\"ON END SESSION\");\r\n\r\n    setConnected(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM users\") {\r\n      setUserSequence(props.results.sequence);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"success\"], () => {\r\n    // register user\r\n    sendRequest({ req: \"register account\", data: props.reqData });\r\n  });\r\n\r\n  onResponse([\"get tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n    setTanRequired(true);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get cart\", \"continue\"], () => {\r\n    if (props.name === \"SELECT carts\") {\r\n      setCartContent(props.results.content);\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"pending\"], () => {\r\n    // setTanRequired(false);\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"finished\"], () => {\r\n    if (props.name === \"UPDATE tans\") {\r\n      if (props.queryCnt > 0) {\r\n        // setTanRequired(true);\r\n        return false;\r\n      } else {\r\n        // setTanRequired(false);\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n\r\n    sendRequest({ req: transferRequest.transferType, data: transferRequest });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (pending)\r\n   */\r\n  onResponse([\"register user\", \"pending\"], () => {\r\n    // Might show some user feedback\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register user\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO users\") {\r\n      if (props.results.insertId > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    } else if (props.name === \"INSERT INTO validation_tokens\") {\r\n      // const { token, email } = props.tags;\r\n      // setValidateTokenEmail(\r\n      //   JSON.stringify({\r\n      //     token,\r\n      //     email,\r\n      //   })\r\n      // );\r\n      setValidationTokenEmail({\r\n        token: props.tags.token,\r\n        email: props.tags.email,\r\n      });\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (success)\r\n   */\r\n  onResponse([\"register user\", \"success\"], () => {\r\n    // console.log(\"REGISTER USER PROPS:\", props);\r\n    const noEmailValidation = false;\r\n\r\n    if (noEmailValidation) {\r\n      setSignedIn(true);\r\n      setSession(props.email); // TODO: Might restore\r\n      onRedirect(\"/account-registration\");\r\n      sendRequest({ req: \"get user\", data: { email: props.email } }); // to not require a log in\r\n      return false;\r\n    } else {\r\n      onRedirect(\"/validate-email\");\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"continue\"], () => {\r\n    if (props.name === \"SELECT validation_tokens\") {\r\n      setValidationTokenEmailResent(props.results.resent);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"continue\"], () => {\r\n    if (props.name === \"UPDATE validation tokens\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        // onRedirect(\"/sign-in\");\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (props.name === \"UPDATE users\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        onRedirect(\"/sign-in\");\r\n        return true;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"success\"], () => {\r\n    setValidateTokenEmail(null); // email validation token not needed any more + prevent the unnecessary resend\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"validate password reset token\", \"continue\"], () => {\r\n  //   if (props.name === \"UPDATE validation tokens\") {\r\n  //     if (props.results.affectedRows > 0) {\r\n  //       // onRedirect(\"/password\");\r\n  //       setPasswordResetTokenValidated(true);\r\n  //       return true;\r\n  //     } else {\r\n  //       // No row was inserted - an error was returned\r\n  //       return true;\r\n  //     }\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"validate password reset token\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(true);\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get URI settings (continue)\r\n   */\r\n  onResponse([\"get uri settings\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM uri_settings\") {\r\n      const results = JSON.parse(props.results.settings);\r\n\r\n      // console.log(\"results.settings\", results);\r\n\r\n      setSettings(JSON.stringify(results));\r\n\r\n      // Force single currency\r\n      if (\r\n        typeof results[\"currency\"] !== \"undefined\" &&\r\n        results[\"currency\"] !== null\r\n      ) {\r\n        const abbr = results[\"currency\"];\r\n        // setCurrencyAbbr(abbr);\r\n        sendRequest({\r\n          req: \"register user currency\",\r\n          data: { email: userData.email, currency_id: abbr },\r\n        });\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user currency (success)\r\n   */\r\n  onResponse([\"register user currency\", \"success\"], () => {\r\n    setCurrencyAbbr(props.reqData.currency_id);\r\n    // return false;\r\n  });\r\n\r\n  /**\r\n   * Sign in user (continue)\r\n   */\r\n  onResponse([\"sign in user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      /**\r\n       * Validated user\r\n       */\r\n      if (props.results.status === 1) {\r\n        setUserData(JSON.stringify(props.results));\r\n        setAccountNumber(props.results.uid);\r\n        // setSession(props.results.email); // TODO: Might restore\r\n        setCurrencyAbbr(props.results.currency_abbr);\r\n        setCurrencyRate(\r\n          isNaN(props.results.currency_rate) ? 1 : props.results.currency_rate\r\n        );\r\n\r\n        changeLanguage(props.results.language);\r\n\r\n        return false;\r\n\r\n        /**\r\n         * Not yet validated user\r\n         */\r\n      } else if (props.results.status === 0) {\r\n        onRedirect(\"/validate-email\");\r\n        return true;\r\n\r\n        /**\r\n         * Suspended user\r\n         */\r\n      } else if (props.results.status === 2) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_SUSPENDED\", \"error\");\r\n        return true;\r\n\r\n        /**\r\n         * Deleted user\r\n         */\r\n      } else if (props.results.status === 3) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_DELETED\", \"error\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Sign in user (finished)\r\n   */\r\n  onResponse([\"sign in user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt > 0) {\r\n        return false;\r\n      } else {\r\n        showMessage(\"INVALID_SIGN_IN\", \"error\");\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"sign in user\", \"success\"], () => {\r\n    setSignedIn(true);\r\n    setLoggingIn(false);\r\n    onSessionEnd();\r\n    setSession(props.token);\r\n\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"update last seen user\", \"success\"], () => {\r\n  //   // onSessionEnd();\r\n  //   // setSession(props.token); // TODO: Might restore\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Update user (success)\r\n   */\r\n  onResponse([\"update user\", \"success\"], () => {\r\n    sendRequest({ req: \"get user\", data: { email: userData.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user (continue)\r\n   */\r\n  onResponse([\"get user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUserData(JSON.stringify(props.results));\r\n      setUID(props.results.uid);\r\n      setAccountNumber(props.results.uid);\r\n      if (accountNumber === null && props.results.uid !== null) {\r\n        setRedirectTo(\"/summary\");\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user (finished)\r\n   */\r\n  onResponse([\"get user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 1) {\r\n        // exactly one user found - all is good\r\n        return false;\r\n      } else if (props.queryCnt === 0) {\r\n        // Something wrong with (accessing) the user data\r\n        // Probable causes:\r\n        // - user was deleted from the DB\r\n        // - user status was set to >= 2\r\n        // - multiple users with the same email address, most improbable (db constraint)\r\n        // - user changed the email address or password\r\n        setRedirectTo(\"/sign-out\");\r\n        // showMessage(\"INVALID_DATA\", \"error\");\r\n        return true;\r\n      }\r\n      return true;\r\n    }\r\n    // if (props.rowNum === 1) {\r\n    //   return true;\r\n    // } else {\r\n    //   // Something wrong with (accessing) the user data\r\n    //   // Probable causes:\r\n    //   // - user was deleted from the DB\r\n    //   // - user status was set to >= 2\r\n    //   // - multiple users with the same email address, most improbable (db constraint)\r\n    //   // - user changed the email address or password\r\n    //   // onLogOut();\r\n    //   setRedirectTo(\"/sign-out\");\r\n    //   // showMessage(\"INVALID_DATA\", \"error\");\r\n    //   return true;\r\n    // }\r\n  });\r\n\r\n  onResponse([\"get user\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (continue)\r\n   */\r\n  onResponse([\"get user businesses\", \"continue\"], () => {\r\n    if (props.name === \"SELECT businesses\") {\r\n      const business = props.results;\r\n      const { business_id } = business;\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([business]));\r\n        getBusinessPurposes(business_id, 0, 1);\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, business]));\r\n      }\r\n    } else if (props.name === \"COUNT businesses\") {\r\n      setCountBusinesses(props.results.count_businesses);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (finished)\r\n   */\r\n  onResponse([\"get user businesses\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    setUserBusinessesLoaded(true);\r\n    setRedirectTo(\"/my-business\");\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get user businesses\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (continue)\r\n   */\r\n  onResponse([\"get cart purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (cartPurposes === null) {\r\n        setCartPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setCartPurposes(JSON.stringify([...cartPurposes, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      // setCartPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (success)\r\n   */\r\n  onResponse([\"get cart purposes\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (continue)\r\n   */\r\n  onResponse([\"get business purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (businessPurposes === null) {\r\n        setBusinessPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setBusinessPurposes(\r\n          JSON.stringify([...businessPurposes, props.results])\r\n        );\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      setCountBusinessPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (finished)\r\n   */\r\n  onResponse([\"get business purposes\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (continue)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"continue\"], () => {\r\n    if (props.name === \"SELECT shares\") {\r\n      if (purposeShareholders === null) {\r\n        setPurposeShareholders(JSON.stringify([props.results]));\r\n      } else {\r\n        setPurposeShareholders(\r\n          JSON.stringify([...purposeShareholders, props.results])\r\n        );\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (finished)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user business by id (continue)\r\n   */\r\n  // onResponse([\"get business by id\", \"continue\"], () => {\r\n  //   if (userBusinesses === null) {\r\n  //     setUserBusinesses(JSON.stringify([props.results]));\r\n  //   } else {\r\n  //     setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"get business by id\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.name === \"SELECT businesses\") {\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([props.results]));\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business by id (finished)\r\n   */\r\n  onResponse([\"get business by id\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.queryCnt > 0) {\r\n      // getting business was successful - query returned results\r\n      return false;\r\n    } else {\r\n      console.log(\"Error getting business by id\");\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get business by id\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (continue)\r\n   */\r\n  onResponse([\"get purpose by id\", \"continue\"], () => {\r\n    /**\r\n     * Replace the purpose if it is already there\r\n     */\r\n    const index = getObjectArrayElementIndex(\r\n      businessPurposes,\r\n      \"purpose_id\",\r\n      props.results.purpose_id\r\n    );\r\n    if (index > -1) {\r\n      businessPurposes.splice(index, 1);\r\n      let temp = [...businessPurposes, props.results];\r\n      temp = sortObjectArray(temp, \"title\");\r\n      setBusinessPurposes(JSON.stringify(temp));\r\n      setActivePurposeData(JSON.stringify(props.results));\r\n\r\n      /**\r\n       * ... otherwise add the purpose\r\n       */\r\n    } else {\r\n      if (props.name === \"SELECT purposes\") {\r\n        if (businessPurposes === null) {\r\n          setBusinessPurposes(JSON.stringify([props.results]));\r\n        } else {\r\n          setBusinessPurposes(\r\n            JSON.stringify([...businessPurposes, props.results])\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (finished)\r\n   */\r\n  onResponse([\"get purpose by id\", \"finished\"], () => {\r\n    if (props.queryCnt < 1) {\r\n      // Something went wrong\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (success)\r\n   */\r\n  onResponse([\"get purpose by id\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (continue)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"continue\"], () => {\r\n    if (purposeShareholders === null) {\r\n      setPurposeShareholders(JSON.stringify([props.results]));\r\n    } else {\r\n      setPurposeShareholders(\r\n        JSON.stringify([...purposeShareholders, props.results])\r\n      );\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (finished)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Upload file (ready)\r\n   */\r\n  onResponse([\"upload file\", \"continue\"], () => {\r\n    // console.log(\"UPLOAD FILE =========== \");\r\n\r\n    // if (props.name === \"SELECT 1\") {\r\n    // setAccountPhotoPath(props + \"?r=\" + Math.random());\r\n    setAccountPhotoPath(Date.now()); // ok\r\n    return false;\r\n    // }\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"finished\"], () => {\r\n    if (props.name === \"SELECT 1\") {\r\n      if (props.queryCnt === 0) {\r\n        // something went wrong\r\n        // setAccountPhotoPath(\"ok\");\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"continue\"], () => {\r\n    if (props.results.affectedRows < 1) {\r\n      // error registering account\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"INVALID_DATA\", \"error\");\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"success\"], () => {\r\n    // getAccountData();\r\n    sendRequest({ req: \"get user\", data: { email: props.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (continue)\r\n   */\r\n  onResponse([\"get account data\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUID(props.results.uid);\r\n      setUserData(JSON.stringify(props.results));\r\n      // } else if (props.name === \"VALIDATE SESSION\") {\r\n      //   if (typeof props.token !== \"undefined\") {\r\n      //     console.log(\"RESET SESSION\");\r\n\r\n      //     onSessionEnd();\r\n      //     // setSession(props.newToken);\r\n      //     // setSession(props.newToken);\r\n      //     setSession(props.token);\r\n      //   }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (finished)\r\n   */\r\n  onResponse([\"get account data\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 0) {\r\n        // Account not reachable\r\n        // - user session timed out\r\n        showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get account data\", \"success\"], () => {\r\n    if (userData === null) return true;\r\n\r\n    // if (!loggingIn && userData.seconds_since_last_seen >= sessionTimeout) {\r\n    //   // setSessionTimeoutApplied(true);\r\n    //   // setUpdateInterval(-1);\r\n    //   // onSessionTimeout();\r\n    // } else {\r\n    //   // setUpdateInterval(10000); // 30000 | 60000 = 1 minute\r\n    // }\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2S\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (continue)\r\n   */\r\n  onResponse([\"transfer U2S\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (success)\r\n   */\r\n  onResponse([\"transfer U2S\", \"success\"], () => {\r\n    getTransactionById(lastInsertId);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2U\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (continue)\r\n   */\r\n  onResponse([\"transfer U2U\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (success)\r\n   */\r\n  onResponse([\"transfer U2U\", \"success\"], () => {\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2B\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (continue)\r\n   */\r\n  onResponse([\"transfer U2B\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (success)\r\n   */\r\n  onResponse([\"transfer U2B\", \"success\"], () => {\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register business\r\n   ============================================================================================*/\r\n  onResponse([\"register business\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    if (props.name === \"INSERT INTO businesses\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register business\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    // <ModalConfirm\r\n    //   title=\"Add Shareholders\"\r\n    //   message=\"Do you want to add yourself as a shareholder?\"\r\n    // />;\r\n\r\n    sendRequest({\r\n      req: \"get business by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    // getBusinesses();\r\n    return false;\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"register currency\", \"continue\"], () => {\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    if (props.results.insertId > 0) {\r\n      setLastInsertId(props.results.insertId);\r\n\r\n      return false;\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register currency\", \"success\"], () => {\r\n    sendRequest({\r\n      req: \"get currency by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (continue)\r\n   */\r\n  onResponse([\"get currencies\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT currencies\") {\r\n      setCountCurrencies(props.results.count_currencies);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (finished)\r\n   */\r\n  onResponse([\"get currencies\", \"finished\"], () => {\r\n    setRedirectTo(\"/currency\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (continue)\r\n   */\r\n  onResponse([\"get currency by id\", \"continue\"], () => {\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get currency by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transactions (continue)\r\n   */\r\n  onResponse([\"get transactions\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT transactions\") {\r\n      if (transactions === null) {\r\n        setTransactions(JSON.stringify([props.results]));\r\n      } else {\r\n        setTransactions(JSON.stringify([...transactions, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT transactions\") {\r\n      setCountTransactions(props.results.count_transaction_positions);\r\n      // } else if (props.name === \"VALIDATE SESSION\") {\r\n      //   if (typeof props.token !== \"undefined\") {\r\n      //     console.log(\"RESET SESSION\");\r\n      //     onSessionEnd();\r\n      //     // setSession(props.newToken);\r\n      //     setSession(props.token);\r\n      //   }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get transactions (finished)\r\n   */\r\n  onResponse([\"get transactions\", \"finished\"], () => {\r\n    setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get shares (continue)\r\n   */\r\n  onResponse([\"get shares\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT shares\") {\r\n      if (shares === null) {\r\n        setShares(JSON.stringify([props.results]));\r\n      } else {\r\n        setShares(JSON.stringify([...shares, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT shares\") {\r\n      setCountShares(props.results.count_shares);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shares (finished)\r\n   */\r\n  onResponse([\"get shares\", \"finished\"], () => {\r\n    // setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transaction by id (continue)\r\n   */\r\n  onResponse([\"get transaction by id\", \"continue\"], () => {\r\n    if (transactions === null) {\r\n      setTransactions(JSON.stringify([props.results]));\r\n    } else {\r\n      setTransactions(JSON.stringify([...transactions, props.results]));\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get transaction by id\", \"finished\"], () => {\r\n    getAccountData();\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"send message\", \"success\"], () => {\r\n    showMessage(\"SEND_MESSAGE_SUCCESS\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"continue\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get purpose by id\",\r\n    //   data: { id: props.results.insertId },\r\n    // });\r\n    if (props.name === \"INSERT INTO purposes\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"success\"], () => {\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: lastInsertId, language: language },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"update purpose property\", \"success\"], () => {\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: props.reqData.id, language: language },\r\n    });\r\n    // getBusinessPurposes(props.reqData.business_id, 0, 1);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"continue\"], () => {\r\n    if (props.results.insertId > 0) {\r\n      // showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\");\r\n\r\n      // return sendRequest({\r\n      //   req: \"get shareholder by id\",\r\n      //   data: { id: props.results.insertId },\r\n      // });\r\n      setLastInsertId(props.results.insertId);\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"change share\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    // getPurposeShareholders(activeBusinesPurpose);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"remove shareholder\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"reset password\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"change password\", \"success\"], () => {\r\n    // TOTO: If NO_ROWS_CHANGE - probably the currently saved password was submitted\r\n    setPasswordResetTokenValidated(null);\r\n    setPasswordResetTokenEmail(null);\r\n    onRedirect(\"/sign-in\");\r\n    showMessage(\"PASSWORD_CHANGE_SUCCESS\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"unknown\"], () => {\r\n  //   if (\r\n  //     status === \"pending\" ||\r\n  //     status === \"continue\" ||\r\n  //     status === \"finished\" ||\r\n  //     status === \"success\"\r\n  //   ) {\r\n  //     return false;\r\n  //   } else {\r\n  //     showMessage(`${req}: ${status}`, \"info\");\r\n  //     return true;\r\n  //   }\r\n  // });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug, error: msgError } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug)\r\n    console.log(`SYSTEM ERROR: ${req}`, error, context, props, barrels);\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onError([\"*\", \"INVALID_SESSION\"], () => {\r\n  //   showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n  //   setRedirectTo(\"/sign-out\");\r\n  //   return true;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_error\", \"none\"], () => {\r\n    if (msgError !== \"SERVER_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"reconnect_error\", \"TransportError\"], () => {\r\n    if (msgError !== \"SERVER_STILL_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_STILL_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, instance, info: msgInfo } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage, hideMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug)\r\n    console.log(`system response: ${req} (${props.status})`, props, barrels);\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (res === \"*\" && status === props.status && name === name) ||\r\n      (res === props.req && status === props.status) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n  //   if (typeof props.token !== \"undefined\") {\r\n  //     console.log(\"Renewing session...\");\r\n\r\n  //     onSessionEnd();\r\n  //     setSession(props.token);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect attempt\", \"continue\"], () => {\r\n    // if (msgInfo !== \"RECONNECT_ATTEMPT\")\r\n    //   showMessage(\"RECONNECT_ATTEMPT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnecting\", \"continue\"], () => {\r\n    if (msgInfo !== \"RECONNECTING\") {\r\n      setReconnecting(true);\r\n      showMessage(\"RECONNECTING\", \"info\");\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect\", \"success\"], () => {\r\n    setReconnecting(false);\r\n    hideMessage();\r\n    // hideMessage(\"error\");\r\n    // hideMessage(\"info\");\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Loading.css\";\r\nimport React from \"react\";\r\n// import MainSkeleton from \"../pages/main\";\r\n\r\nexport default () => {\r\n  //\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"lds-hourglass\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * User CSS\r\n */\r\nimport \"./normalize.css\";\r\nimport \"./index.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Loading from \"./components/loading\";\r\nimport UnderConstruction from \"./components/pages/underConstruction\";\r\n\r\n/**\r\n * Retrieves an URL parameter\r\n */\r\nconst getUrlParam = (param) => {\r\n  const queryString = window.location.search;\r\n  const urlParams = new URLSearchParams(queryString);\r\n  return urlParams.get(param);\r\n};\r\n\r\n/**\r\n * Clear local storage (URL param ?reset)\r\n */\r\nif (getUrlParam(\"reset\") !== null) {\r\n  window.localStorage.clear();\r\n  console.log(\"Local storage cleared\");\r\n}\r\n\r\n/**\r\n * Render (with suspense)\r\n * mode = default | construction\r\n */\r\nconst root = document.getElementById(\"root\");\r\nconst construction = document.getElementById(\"construction\");\r\nif (root) {\r\n  ReactDOM.render(\r\n    <Suspense fallback={<Loading />}>\r\n      <Dispatcher mode={!construction ? \"\" : \"construction\"} />\r\n    </Suspense>,\r\n    root\r\n  );\r\n}\r\n"],"sourceRoot":""}